window.__require = function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var b = o.split("/");
        b = b[b.length - 1];
        if (!t[b]) {
          var a = "function" == typeof __require && __require;
          if (!u && a) return a(b, !0);
          if (i) return i(b, !0);
          throw new Error("Cannot find module '" + o + "'");
        }
        o = b;
      }
      var f = n[o] = {
        exports: {}
      };
      t[o][0].call(f.exports, function(e) {
        var n = t[o][1][e];
        return s(n || e);
      }, f, f.exports, e, t, n, r);
    }
    return n[o].exports;
  }
  var i = "function" == typeof __require && __require;
  for (var o = 0; o < r.length; o++) s(r[o]);
  return s;
}({
  AddFavoriteButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d811cme+/hCJpyYQreI+QTx", "AddFavoriteButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let AddFavoriteButton = (() => {
      let AddFavoriteButton = class AddFavoriteButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.redPoint = null;
        }
        onLoad() {
          utils_1.utils.on("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        onDestroy() {
          utils_1.utils.off("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        start() {}
        onEventTaskboardDataUpdated() {
          this.refreshRedPoint();
        }
        refreshRedPoint() {
          let ds = global_data_1.global_data.taskboard_data.items.filter(v => v.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.AddFavorite);
          if (ds && ds.length > 0) {
            let data = ds[0];
            this.redPoint.active = lobby_framework_1.lobby_framework.check_task_board_item_available(data.webData.reward_type) && 0 != data.webData.last_times;
          } else this.redPoint.active = false;
        }
      };
      __decorate([ property(cc.Button) ], AddFavoriteButton.prototype, "button", void 0);
      __decorate([ property(cc.Node) ], AddFavoriteButton.prototype, "redPoint", void 0);
      AddFavoriteButton = __decorate([ ccclass ], AddFavoriteButton);
      return AddFavoriteButton;
    })();
    exports.default = AddFavoriteButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types"
  } ],
  AddFavoritePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "54effA7oYdKs40nFfGXvnh2", "AddFavoritePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let AddFavoritePanel = (() => {
      let AddFavoritePanel = class AddFavoritePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.rewardLabel = null;
          this.image = null;
        }
        onShow() {
          lobby_framework_1.lobby_framework.check_get_local_task_reward(lobby_types_1.lobby_types.RewardWebType.AddFavorite);
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "AddFavoritePanel", "OnCloseClicked");
          this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get("lr_add_favorite");
          this.rewardLabel.string = utils_1.utils.reward_label_text(global_define_1.CONST.ID_PROP_GOLD, global_data_1.global_data._int_invite_reward_gold);
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Button) ], AddFavoritePanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Label) ], AddFavoritePanel.prototype, "rewardLabel", void 0);
      __decorate([ property(cc.Sprite) ], AddFavoritePanel.prototype, "image", void 0);
      AddFavoritePanel = __decorate([ ccclass ], AddFavoritePanel);
      return AddFavoritePanel;
    })();
    exports.default = AddFavoritePanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  AppGlobalLoader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "91ffa6scstN46d5h3BTpzDc", "AppGlobalLoader");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let AppGlobalLoader = (() => {
      let AppGlobalLoader = class AppGlobalLoader extends cc.Component {
        constructor() {
          super(...arguments);
          this.waitingLabel = null;
          this.waitingSprite = null;
        }
        onLoad() {
          console.log("AppGlobalLoader.onLoad \u5982\u679c\u770b\u5230\u8fd9\u4e2a\uff0c\u8bf4\u660e\u65e7\u8d44\u6e90\u672a\u6e05\u7406\u5e72\u51c0");
        }
        onDestroy() {}
        onEventInitLoadingText(text) {
          this.waitingLabel.string = text;
        }
      };
      AppGlobalLoader = __decorate([ ccclass ], AppGlobalLoader);
      return AppGlobalLoader;
    })();
    exports.default = AppGlobalLoader;
    cc._RF.pop();
  }, {} ],
  AppGlobal: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7f47fDkv8dJeLW/SGlsxMSp", "AppGlobal");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.AppGlobal = void 0;
    const ChatPlay_1 = require("./Component/ChatPlay");
    const GameChat_1 = require("./Component/GameChat");
    const GameUserInfo_1 = require("./Component/GameUserInfo");
    const GiftPlay_1 = require("./Component/GiftPlay");
    const LoadingScreen_1 = require("./Component/LoadingScreen");
    const MessageBoxCommon_1 = require("./Component/MessageBoxCommon");
    const MessageHint_1 = require("./Component/MessageHint");
    const ReliefMessageBox_1 = require("./Component/ReliefMessageBox");
    const SettingBox_1 = require("./Component/SettingBox");
    const SimpleShop_1 = require("./Component/SimpleShop");
    const ItemDetail_1 = require("./Component/ItemDetail");
    const RuleLayout_1 = require("./Component/RuleLayout");
    const TaskLayout_1 = require("./Component/TaskLayout");
    const LobbyUserInfo_1 = require("./Component/LobbyUserInfo");
    const ShopLayout_1 = require("./Component/ShopLayout");
    const NoticePanel_1 = require("./Component/NoticePanel");
    const NoticeDetail_1 = require("./Component/NoticeDetail");
    const ExchangePanel_1 = require("./Component/ExchangePanel");
    const ExchangeSuccess_1 = require("./Component/ExchangeSuccess");
    const AddFavoritePanel_1 = require("./Component/AddFavoritePanel");
    const PrivatePanel_1 = require("./Component/PrivateRoom/PrivatePanel");
    const PrivateDetail_1 = require("./Component/PrivateRoom/PrivateDetail");
    const SafePanel_1 = require("./Component/SafePanel");
    const CompleteInfo_1 = require("./Component/CompleteInfo");
    const GetReward_1 = require("./Component/GetReward");
    const TaskBoard_1 = require("./Component/TaskBoard");
    const InviteReward_1 = require("./Component/InviteReward");
    const PrivateRoomResult_1 = require("./Component/PrivateRoomResult");
    const UserHead_1 = require("./Component/UserHead");
    const ConnectError_1 = require("./Component/ConnectError");
    const NoNetworkScreen_1 = require("./Component/NoNetworkScreen");
    const BindWechat_1 = require("./Component/BindWechat");
    const NeedGold_1 = require("./Component/NeedGold");
    const DailySign_1 = require("./Component/DailySign");
    const utils_1 = require("./Framework/common/utils");
    const global_data_1 = require("./Framework/lobby/global_data");
    const lobby_framework_1 = require("./Framework/lobby/lobby_framework");
    const GetRewardItem_1 = require("./Component/GetRewardItem");
    const MailPanel_1 = require("./Component/MailPanel");
    const DailyLuckyLotteryPanel_1 = require("./Component/DailyLuckyLotteryPanel");
    const DailyLuckyLotteryCodePanel_1 = require("./Component/DailyLuckyLotteryCodePanel");
    const TaskLayoutNew_1 = require("./Component/TaskLayoutNew");
    const TouchLayer_1 = require("./Component/LobbyYiFu/TouchLayer");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let AppGlobal = (() => {
      var AppGlobal_1;
      let AppGlobal = AppGlobal_1 = class AppGlobal extends cc.Component {
        constructor() {
          super(...arguments);
          this.loadingScreenPrefab = null;
          this.messageBoxPrefab = null;
          this.settingPrefab = null;
          this.simpleShopPrefab = null;
          this.shopLayoutPrefab = null;
          this.itemDetailPrefab = null;
          this.ruleLayoutPrefab = null;
          this.taskLayoutPrefab = null;
          this.taskLayoutPrefabNew = null;
          this.reliefMessageBoxPrefab = null;
          this.messageHintPrefab = null;
          this.chatPlayPrefab = null;
          this.gameChatPrefab = null;
          this.gameUserInfoPrefab = null;
          this.lobbyUserInfoPrefab = null;
          this.mailPanelPrefab = null;
          this.daliyLuckyLotteryPrefab = null;
          this.daliyLuckyLotteryCodePrefab = null;
          this.noticePanelPrefab = null;
          this.noticeDetailPrefab = null;
          this.exchangePanelPrefab = null;
          this.exchangeSuccessPrefab = null;
          this.addFavoritePanelPrefab = null;
          this.privatePanelPrefab = null;
          this.privateDetailPrefab = null;
          this.safePanelPrefab = null;
          this.giftPlayPrefab = null;
          this.userHeadPrefab = null;
          this.currentMessageHint = null;
          this.currentLoadingScreen = null;
          this.chatPlay = null;
          this.gameChat = null;
          this.gameUserInfo = null;
          this.giftPlay = null;
          this.gameRedPackage = null;
          this.settingBox = null;
          this.simpleShop = null;
          this.itemDetail = null;
          this.ruleLayout = null;
          this.taskLayout = null;
          this.taskLayoutNew = null;
          this.lobbyUserInfo = null;
          this.shopLayout = null;
          this.mailPanel = null;
          this.daliyLuckyLotteryPanel = null;
          this.daliyLuckyLotteryCodePanel = null;
          this.noticePanel = null;
          this.noticeDetail = null;
          this.exchangePanel = null;
          this.exchangeSuccess = null;
          this.addFavoritePanel = null;
          this.privatePanel = null;
          this.privateDetail = null;
          this.safePanel = null;
          this.lobbyMain = null;
          this.reliefMessageBox = null;
          this.touchLayer = null;
          this.commonClickEventHandler = null;
          this.noNetworkScreenPrefab = null;
          this.noNetworkScreen = null;
          this.completeInfoPrefab = null;
          this.completeInfo = null;
          this.connectErrorPrefab = null;
          this.connectError = null;
          this.getRewardPrefab = null;
          this.getReward = null;
          this.taskBoardPrefab = null;
          this.taskBoard = null;
          this.inviteRewardPrefab = null;
          this.inviteReward = null;
          this.bindWechatPrefab = null;
          this.bindWechat = null;
          this.needGoldPrefab = null;
          this.needGold = null;
          this.dailySignPrefab = null;
          this.dailySign = null;
          this.privateRoomResultPrefab = null;
          this.privateRoomResult = null;
          this.relogin_code = 0;
        }
        static getInstance() {
          return AppGlobal_1._instance;
        }
        onLoad() {
          window && (window.AppGlobal = this);
          AppGlobal_1._instance = this;
          console.log("AppGlobal.onLoad");
          utils_1.utils.on("NetworkStatusChange", this, this.onEventNetworkStatusChange);
          utils_1.utils.on("LogonErrorMsg", this, this.onEventLogonErrorMsg);
          utils_1.utils.on("RefreshDailySign", this, this.onEventRefreshDailySign);
          utils_1.utils.on("ShowPrivateRoomResult", this, this.onEventShowPrivateRoomResult);
          utils_1.utils.on("ShowUI", this, this.onEventShowUI);
          utils_1.utils.on("HideUI", this, this.onEventHideUI);
          utils_1.utils.on("ShowSimpleShopOrHint", this, this.onEventShowSimpleShopOrHint);
          utils_1.utils.on("ShowNoticeDetail", this, this.onEventShowNoticeDetail);
          utils_1.utils.on("BindCommonClickHandler", this, this.onEventBindCommonClickHandler);
        }
        onDestroy() {
          utils_1.utils.off("NetworkStatusChange", this, this.onEventNetworkStatusChange);
          utils_1.utils.off("LogonErrorMsg", this, this.onEventLogonErrorMsg);
          utils_1.utils.off("RefreshDailySign", this, this.onEventRefreshDailySign);
          utils_1.utils.off("ShowPrivateRoomResult", this, this.onEventShowPrivateRoomResult);
          utils_1.utils.off("ShowUI", this, this.onEventShowUI);
          utils_1.utils.off("HideUI", this, this.onEventHideUI);
          utils_1.utils.off("ShowSimpleShopOrHint", this, this.onEventShowSimpleShopOrHint);
          utils_1.utils.off("ShowNoticeDetail", this, this.onEventShowNoticeDetail);
          utils_1.utils.off("BindCommonClickHandler", this, this.onEventBindCommonClickHandler);
        }
        start() {
          cc.game.addPersistRootNode(this.node);
        }
        update(dt) {
          if (!cc.isValid(this.touchLayer)) {
            this.touchLayer = new cc.Node("TouchLayer").addComponent(TouchLayer_1.default);
            this.touchLayer.node.width = cc.Canvas.instance.node.width;
            this.touchLayer.node.height = cc.Canvas.instance.node.height;
            this.touchLayer.node.setParent(cc.Canvas.instance.node);
          }
        }
        onEventBindCommonClickHandler(button) {
          cc.isValid(button) && -1 == button.clickEvents.indexOf(AppGlobal_1.getInstance().getCommonClickHandler()) && button.clickEvents.push(AppGlobal_1.getInstance().getCommonClickHandler());
        }
        getCommonClickHandler() {
          if (!AppGlobal_1.getInstance().commonClickEventHandler) {
            AppGlobal_1.getInstance().commonClickEventHandler = new cc.Component.EventHandler();
            AppGlobal_1.getInstance().commonClickEventHandler.target = AppGlobal_1.getInstance().node;
            AppGlobal_1.getInstance().commonClickEventHandler.component = "AppGlobal";
            AppGlobal_1.getInstance().commonClickEventHandler.handler = "AnyButtonClicked";
          }
          return AppGlobal_1.getInstance().commonClickEventHandler;
        }
        onEventNetworkStatusChange(res) {
          let old = global_data_1.global_data.connected;
          global_data_1.global_data.connected = res.isConnected;
          true == old && false == global_data_1.global_data.connected || false == old && true == global_data_1.global_data.connected && utils_1.utils.show_hint("\u7f51\u7edc\u5df2\u8fde\u63a5\uff0c\u795d\u60a8\u6e38\u620f\u6109\u5feb\uff01");
        }
        onEventLogonErrorMsg(res) {
          AppGlobal_1.getInstance().showConnectError(res);
        }
        onEventRefreshDailySign() {
          cc.isValid(DailySign_1.default.inst) && DailySign_1.default.inst.node.active ? DailySign_1.default.inst.fetchSignData() : AppGlobal_1.getInstance().showDailySign();
        }
        onEventShowPrivateRoomResult(data, str_share) {
          AppGlobal_1.getInstance().showPrivateRoomResult(data, str_share);
        }
        onEventShowUI(name, param) {
          if ("DailySign" == name) {
            let auto = param;
            AppGlobal_1.getInstance().showDailySign(auto);
          } else if ("Task" == name) AppGlobal_1.getInstance().showTasks(); else if ("TaskBoard" == name) {
            let auto = param;
            AppGlobal_1.getInstance().showTaskBoard(auto);
          } else if ("NoticePanel" == name) {
            let auto = param;
            AppGlobal_1.getInstance().showNoticePanel(auto);
          } else if ("ShopLayout" == name) {
            let target = param;
            AppGlobal_1.getInstance().showShopLayout(target);
          } else if ("ExchangePanel" == name) AppGlobal_1.getInstance().showExchangePanel(); else if ("ExchangeSuccess" == name) {
            let data = new ExchangeSuccess_1.ExchangeSuccessData(param.is_red_package, param.quan, param.content, param.hint, param.code);
            AppGlobal_1.getInstance().showExchangeSuccess(data);
          } else if ("LobbyUserInfo" == name) AppGlobal_1.getInstance().showLobbyUserInfo(); else if ("ReliefMessageBox" == name) AppGlobal_1.getInstance().showReliefMessageBox(); else if ("ItemDetail" == name) AppGlobal_1.getInstance().showItemDetail(param.prop_id, param.type, param.data); else if ("MessageBox" == name) {
            let msgboxConfig = new MessageBoxCommon_1.MessageBoxCommonData();
            msgboxConfig.content = param.content;
            msgboxConfig.button_count = param.button_count;
            let msgbox = AppGlobal_1.getInstance().showMessageBox(msgboxConfig);
            msgbox.onButtonClicked = id => {
              AppGlobal_1.getInstance().hideMessageBox(msgbox);
              param.onClick && param.onClick(id);
            };
          } else if ("LoadingScreen" == name) AppGlobal_1.getInstance().showLoadingScreen(param.text, param.hideBack, param.hideSprite); else if ("LoadingScreenCancel" == name) AppGlobal_1.getInstance().showLoadingScreenCancel(param); else if ("LoadingScreenText" == name) AppGlobal_1.getInstance().updateLoadingScreenText(param); else if ("MessageHint" == name) AppGlobal_1.getInstance().showMessageHint(param); else if ("GetReward" == name) {
            let reward = new GetReward_1.GetRewardData();
            reward.itemList = [];
            param.forEach(r => {
              reward.itemList.push(new GetRewardItem_1.GetRewardItemData(r.fund_id, r.fund_count, r.status));
            });
            AppGlobal_1.getInstance().showGetReward(reward);
          } else if ("SimpleShop" == name) AppGlobal_1.getInstance().showSimpleShopWithData(param); else if ("NeedGold" == name) {
            AppGlobal_1.getInstance().showNeedGold();
            AppGlobal_1.getInstance().needGold.setData(param);
          } else if ("InviteReward" == name) AppGlobal_1.getInstance().showInviteReward(); else if ("AddFavoritePanel" == name) AppGlobal_1.getInstance().showAddFavoritePanel(); else if ("BindWechat" == name) AppGlobal_1.getInstance().showBindWechat(); else if ("Mail" == name) {
            let auto = param;
            AppGlobal_1.getInstance().showMailPanel(auto);
          } else if ("Lottery" == name) {
            let auto = param;
            AppGlobal_1.getInstance().showDaliyLuckyLotteryPanel(auto);
          } else "GetLotteryCode" == name ? AppGlobal_1.getInstance().showDaliyLuckyLotteryCode(param.award_code) : console.warn("Unhandled ShowUI event", name);
        }
        onEventHideUI(name, param) {
          "DailySign" == name ? AppGlobal_1.getInstance().hideDailySign() : "Task" == name ? AppGlobal_1.getInstance().hideTasks() : "TaskBoard" == name ? AppGlobal_1.getInstance().hideTaskBoard() : "NoticePanel" == name ? AppGlobal_1.getInstance().hideNoticePanel() : "ShopLayout" == name ? AppGlobal_1.getInstance().hideShopLayout() : "ExchangePanel" == name ? AppGlobal_1.getInstance().hideExchangePanel() : "ExchangeSuccess" == name ? AppGlobal_1.getInstance().hideExchangeSuccess() : "LobbyUserInfo" == name ? AppGlobal_1.getInstance().hideLobbyUserInfo() : "ReliefMessageBox" == name ? AppGlobal_1.getInstance().hideReliefMessageBox() : "ItemDetail" == name ? AppGlobal_1.getInstance().hideItemDetail() : "MessageBox" == name || ("LoadingScreen" == name ? AppGlobal_1.getInstance().hideLoadingScreen() : "LoadingScreenCancel" == name || "LoadingScreenText" == name || "MessageHint" == name || "GetReward" == name || ("SimpleShop" == name ? AppGlobal_1.getInstance().hideSimpleShop() : "NeedGold" == name ? AppGlobal_1.getInstance().hideNeedGold() : "InviteReward" == name ? AppGlobal_1.getInstance().hideInviteReward() : "AddFavoritePanel" == name ? AppGlobal_1.getInstance().hideAddFavoritePanel() : "BindWechat" == name ? AppGlobal_1.getInstance().hideBindWechat() : "Mail" == name ? AppGlobal_1.getInstance().hideMailPanel() : "Lottery" == name ? AppGlobal_1.getInstance().hideDaliyLuckyLotteryPanel() : "GetLotteryCode" == name ? AppGlobal_1.getInstance().hideDaliyLuckyLotteryCode() : console.warn("Unhandled HideUI event", name)));
        }
        onEventShowSimpleShopOrHint(gameid) {
          let data = lobby_framework_1.lobby_framework.find_good_data_by_gameid(gameid);
          data ? lobby_framework_1.lobby_framework.show_simple_shop(data) : utils_1.utils.show_hint("\u91d1\u5e01\u4e0d\u8db3\uff0c\u65e0\u6cd5\u52a0\u5165\u6e38\u620f");
        }
        onEventShowNoticeDetail(id, auto) {
          let data = global_data_1.global_data.notice_data.filter(x => x.id == id);
          data.length > 0 && AppGlobal_1.getInstance().showNoticeDetail(data[0], auto);
        }
        showMessageBox(data) {
          let msgbox = utils_1.utils.add_instance_to_root(this.messageBoxPrefab, cc.Canvas.instance.node, MessageBoxCommon_1.default);
          if (msgbox) {
            msgbox.node.setPosition(0, 0);
            msgbox.setMessageBoxData(data);
            this.setTopSiblingIndex(msgbox.node);
          }
          return msgbox;
        }
        hideMessageBox(msgbox) {
          msgbox.node.destroy();
        }
        showLoadingScreen(text, hideBack, hideSprite) {
          cc.isValid(this.currentLoadingScreen) || (this.currentLoadingScreen = utils_1.utils.add_instance_to_root(this.loadingScreenPrefab, cc.Canvas.instance.node, LoadingScreen_1.LoadingScreen));
          if (cc.isValid(this.currentLoadingScreen)) {
            this.setTopSiblingIndex(this.currentLoadingScreen.node);
            text = text || "";
            this.currentLoadingScreen.show();
            this.currentLoadingScreen.setText(text);
            this.currentLoadingScreen.showCancel(false);
            this.currentLoadingScreen.showSprite(!hideSprite);
            this.currentLoadingScreen.showBg(!hideBack);
          }
        }
        showLoadingScreenCancel(text) {
          if (cc.isValid(this.currentLoadingScreen)) {
            this.currentLoadingScreen.showCancel(true);
            this.currentLoadingScreen.setText(text);
          }
        }
        updateLoadingScreenText(text) {
          if (cc.isValid(this.currentLoadingScreen)) {
            text = text || "";
            this.currentLoadingScreen.setText(text);
          }
        }
        hideLoadingScreen() {
          cc.isValid(this.currentLoadingScreen) && this.currentLoadingScreen.hide();
        }
        showMessageHint(text) {
          if (!text) return;
          null == this.currentMessageHint && (this.currentMessageHint = utils_1.utils.add_instance_to_root(this.messageHintPrefab, cc.Canvas.instance.node, MessageHint_1.default));
          if (this.currentMessageHint) {
            this.setTopSiblingIndex(this.currentMessageHint.node);
            this.currentMessageHint.play(text);
          }
        }
        hideSimpleShop() {
          cc.isValid(this.simpleShop) && this.simpleShop.hide();
        }
        showSimpleShopWithData(goodData) {
          if (!goodData) return;
          let cz = 1e4 * goodData.price;
          let zs = goodData.gold - cz;
          let pay = goodData.price.toFixed(0) + "\u5143";
          let gold = (cz / 1e4).toFixed(0) + "\u4e07\u91d1\u5e01";
          let giftgold = (zs / 1e4).toFixed(0) + "\u4e07\u91d1\u5e01";
          cc.isValid(this.simpleShop) || (this.simpleShop = utils_1.utils.add_instance_to_root(this.simpleShopPrefab, cc.Canvas.instance.node, SimpleShop_1.default));
          if (cc.isValid(this.simpleShop)) {
            this.setTopSiblingIndex(this.simpleShop.node);
            this.simpleShop.setData("\u91d1\u5e01\u4e0d\u8db3", pay, gold, giftgold, goodData);
            this.simpleShop.show();
          }
        }
        showExchangeSuccess(data) {
          if (global_data_1.global_data.have_module_wechat_share()) {
            cc.isValid(this.exchangeSuccess) || (this.exchangeSuccess = utils_1.utils.add_instance_to_root(this.exchangeSuccessPrefab, cc.Canvas.instance.node, ExchangeSuccess_1.default));
            if (cc.isValid(this.exchangeSuccess)) {
              this.setTopSiblingIndex(this.exchangeSuccess.node);
              this.exchangeSuccess.setData(data);
              this.exchangeSuccess.show();
            }
          } else utils_1.utils.show_hint("\u5151\u6362\u6210\u529f\uff01");
        }
        hideExchangeSuccess() {
          cc.isValid(this.exchangeSuccess) && this.exchangeSuccess.hide();
        }
        showItemDetail(prop_id, type, data) {
          cc.isValid(this.itemDetail) || (this.itemDetail = utils_1.utils.add_instance_to_root(this.itemDetailPrefab, cc.Canvas.instance.node, ItemDetail_1.default));
          if (cc.isValid(this.itemDetail)) {
            this.setTopSiblingIndex(this.itemDetail.node);
            this.itemDetail.setData(prop_id, type, data);
            this.itemDetail.show();
          }
        }
        hideItemDetail() {
          cc.isValid(this.itemDetail) && this.itemDetail.hide();
        }
        showRules() {
          cc.isValid(this.ruleLayout) || (this.ruleLayout = utils_1.utils.add_instance_to_root(this.ruleLayoutPrefab, cc.Canvas.instance.node, RuleLayout_1.default));
          if (cc.isValid(this.ruleLayout)) {
            this.setTopSiblingIndex(this.ruleLayout.node);
            this.ruleLayout.clearAll();
            this.ruleLayout.show();
            let rl = this.ruleLayout;
            this.ruleLayout.show_callback = function() {
              rl.fetchData();
            };
          }
        }
        hideRules() {
          cc.isValid(this.ruleLayout) && this.ruleLayout.hide();
        }
        showTasks() {
          cc.isValid(this.taskLayout) || (this.taskLayout = utils_1.utils.add_instance_to_root(this.taskLayoutPrefab, cc.Canvas.instance.node, TaskLayout_1.default));
          if (cc.isValid(this.taskLayout)) {
            this.setTopSiblingIndex(this.taskLayout.node);
            this.taskLayout.show();
            let layout = this.taskLayout;
            this.taskLayout.show_callback = function() {
              layout.fetchData();
            };
          }
        }
        showTasksNew() {
          cc.isValid(this.taskLayoutNew) || (this.taskLayoutNew = utils_1.utils.add_instance_to_root(this.taskLayoutPrefabNew, cc.Canvas.instance.node, TaskLayoutNew_1.default));
          if (cc.isValid(this.taskLayoutNew)) {
            this.setTopSiblingIndex(this.taskLayoutNew.node);
            this.taskLayoutNew.show();
            let layout = this.taskLayoutNew;
            this.taskLayoutNew.show_callback = function() {
              layout.fetchData();
            };
          }
        }
        hideTasks() {
          cc.isValid(this.taskLayout) && this.taskLayout.hide();
        }
        showPrivatePanel(gameid) {
          cc.isValid(this.privatePanel) || (this.privatePanel = utils_1.utils.add_instance_to_root(this.privatePanelPrefab, cc.Canvas.instance.node, PrivatePanel_1.default));
          if (cc.isValid(this.privatePanel)) {
            this.setTopSiblingIndex(this.privatePanel.node);
            this.privatePanel.setData(gameid);
            this.privatePanel.show();
          }
        }
        hidePrivatePanel() {
          cc.isValid(this.privatePanel) && this.privatePanel.hide();
        }
        showPrivateDetail() {
          cc.isValid(this.privateDetail) || (this.privateDetail = utils_1.utils.add_instance_to_root(this.privateDetailPrefab, cc.Canvas.instance.node, PrivateDetail_1.default));
          if (cc.isValid(this.privateDetail)) {
            this.setTopSiblingIndex(this.privateDetail.node);
            this.privateDetail.show();
          }
        }
        hidePrivateDetail() {
          cc.isValid(this.privateDetail) && this.privateDetail.hide();
        }
        setTopSiblingIndex(node) {
          node.setSiblingIndex(node.getParent().childrenCount + 1);
          node.zIndex = cc.macro.MAX_ZINDEX;
        }
        showReliefMessageBox() {
          cc.isValid(this.completeInfo) || (this.reliefMessageBox = utils_1.utils.add_instance_to_root(this.reliefMessageBoxPrefab, cc.Canvas.instance.node, ReliefMessageBox_1.default));
          if (cc.isValid(this.reliefMessageBox)) {
            this.reliefMessageBox.node.setPosition(0, 0);
            this.setTopSiblingIndex(this.reliefMessageBox.node);
          }
          return this.reliefMessageBox;
        }
        hideReliefMessageBox() {
          cc.isValid(this.reliefMessageBox) && this.reliefMessageBox.node.destroy();
        }
        generateUserHead(node) {
          return utils_1.utils.add_instance_to_root(this.userHeadPrefab, node, UserHead_1.UserHead);
        }
        setUserChatNode(index, node, param) {
          cc.isValid(node) || (node = cc.Canvas.instance.node);
          cc.isValid(this.chatPlay) || (this.chatPlay = utils_1.utils.add_instance_to_root(this.chatPlayPrefab, cc.Canvas.instance.node, ChatPlay_1.default));
          cc.isValid(this.chatPlay) && this.chatPlay.addUserChat(index, node, param);
        }
        playGift(from, to, giftId, count) {
          if (!cc.isValid(this.giftPlay)) {
            console.error("setGiftPlayNode is not called, default set to top layer");
            this.giftPlay = utils_1.utils.add_instance_to_root(this.giftPlayPrefab, cc.Canvas.instance.node, GiftPlay_1.default);
            this.setTopSiblingIndex(this.giftPlay.node);
          }
          cc.isValid(this.giftPlay) && this.giftPlay.playMulti(from, to, giftId, count);
        }
        setGiftPlayNode(node) {
          cc.isValid(node) || (node = cc.Canvas.instance.node);
          cc.isValid(this.giftPlay) ? this.giftPlay.node.setParent(node) : this.giftPlay = utils_1.utils.add_instance_to_root(this.giftPlayPrefab, node, GiftPlay_1.default);
        }
        showGameUserInfo(bool_report, int_user_id, callback_obj, callback_close, any_param) {
          cc.isValid(this.gameUserInfo) || (this.gameUserInfo = utils_1.utils.add_instance_to_root(this.gameUserInfoPrefab, cc.Canvas.instance.node, GameUserInfo_1.default));
          if (cc.isValid(this.gameUserInfo)) {
            this.setTopSiblingIndex(this.gameUserInfo.node);
            this.gameUserInfo.show();
            this.gameUserInfo.setData(bool_report, int_user_id, callback_obj, callback_close, any_param);
          }
        }
        hideGameUserInfo() {
          cc.isValid(this.gameUserInfo) && this.gameUserInfo.hide();
        }
        showLobbyUserInfo() {
          cc.isValid(this.lobbyUserInfo) || (this.lobbyUserInfo = utils_1.utils.add_instance_to_root(this.lobbyUserInfoPrefab, cc.Canvas.instance.node, LobbyUserInfo_1.default));
          if (cc.isValid(this.lobbyUserInfo)) {
            this.setTopSiblingIndex(this.lobbyUserInfo.node);
            this.lobbyUserInfo.show();
            let that = this;
            this.lobbyUserInfo.show_callback = function() {
              that.lobbyUserInfo.onItemPage = true;
              that.lobbyUserInfo.refresh();
            };
          }
        }
        hideLobbyUserInfo() {
          cc.isValid(this.lobbyUserInfo) && this.lobbyUserInfo.hide();
        }
        showGameChat() {
          cc.isValid(this.gameChat) || (this.gameChat = utils_1.utils.add_instance_to_root(this.gameChatPrefab, cc.Canvas.instance.node, GameChat_1.default));
          if (cc.isValid(this.gameChat)) {
            this.setTopSiblingIndex(this.gameChat.node);
            this.gameChat.show();
          }
        }
        hideGameChat() {
          cc.isValid(this.gameChat) && this.gameChat.hide();
        }
        spawnGameChat() {
          cc.isValid(this.gameChat) || (this.gameChat = utils_1.utils.add_instance_to_root(this.gameChatPrefab, cc.Canvas.instance.node, GameChat_1.default));
          cc.isValid(this.gameChat) && (this.gameChat.node.active = false);
        }
        showShopLayout(target) {
          cc.isValid(this.shopLayout) || (this.shopLayout = utils_1.utils.add_instance_to_root(this.shopLayoutPrefab, cc.Canvas.instance.node, ShopLayout_1.default));
          if (cc.isValid(this.shopLayout)) {
            this.setTopSiblingIndex(this.shopLayout.node);
            let that = this;
            this.shopLayout.show();
            this.shopLayout.show_callback = function() {
              that.shopLayout.fetchData();
              null != target && "" != target || (target = "Gold");
              if ("Gold" == target) {
                let node = that.shopLayout.tabButtonRoot.children[0];
                node.getComponent(cc.Toggle).check();
                node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
              } else if ("Ingot" == target) {
                let node = that.shopLayout.tabButtonRoot.children[1];
                node.getComponent(cc.Toggle).check();
                node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
              } else if ("Item" == target) {
                let node = that.shopLayout.tabButtonRoot.children[2];
                node.getComponent(cc.Toggle).check();
                node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
              }
            };
          }
        }
        hideShopLayout() {
          cc.isValid(this.shopLayout) && this.shopLayout.hide();
        }
        showSettingBox() {
          cc.isValid(this.settingBox) || (this.settingBox = utils_1.utils.add_instance_to_root(this.settingPrefab, cc.Canvas.instance.node, SettingBox_1.default));
          if (cc.isValid(this.settingBox)) {
            this.setTopSiblingIndex(this.settingBox.node);
            this.settingBox.show();
          }
        }
        hideSettingBox() {
          cc.isValid(this.settingBox) && this.settingBox.hide();
        }
        showNoNetworkScreen() {
          cc.isValid(this.noNetworkScreen) || (this.noNetworkScreen = utils_1.utils.add_instance_to_root(this.noNetworkScreenPrefab, cc.Canvas.instance.node, NoNetworkScreen_1.NoNetworkScreen));
          if (cc.isValid(this.noNetworkScreen)) {
            this.setTopSiblingIndex(this.noNetworkScreen.node);
            this.noNetworkScreen.show();
          }
        }
        hideNoNetworkScreen() {
          cc.isValid(this.noNetworkScreen) && this.noNetworkScreen.hide();
        }
        showMailPanel(auto = false) {
          cc.isValid(this.mailPanel) || (this.mailPanel = utils_1.utils.add_instance_to_root(this.mailPanelPrefab, cc.Canvas.instance.node, MailPanel_1.default));
          if (cc.isValid(this.mailPanel)) {
            this.setTopSiblingIndex(this.mailPanel.node);
            this.mailPanel.show();
            let n = this.mailPanel;
            this.mailPanel.show_callback = function() {
              n.fetchData();
            };
            this.mailPanel.hide_callback = auto ? () => {
              lobby_framework_1.lobby_framework.pop_next_if_have();
            } : null;
          }
        }
        hideMailPanel() {
          cc.isValid(this.mailPanel) && this.mailPanel.hide();
        }
        showDaliyLuckyLotteryCode(code) {
          cc.isValid(this.daliyLuckyLotteryCodePanel) || (this.daliyLuckyLotteryCodePanel = utils_1.utils.add_instance_to_root(this.daliyLuckyLotteryCodePrefab, cc.Canvas.instance.node, DailyLuckyLotteryCodePanel_1.DailyLuckyLotteryCodePanel));
          if (cc.isValid(this.daliyLuckyLotteryCodePanel)) {
            this.setTopSiblingIndex(this.daliyLuckyLotteryCodePanel.node);
            this.daliyLuckyLotteryCodePanel.show();
            let n = this.daliyLuckyLotteryCodePanel;
            this.daliyLuckyLotteryCodePanel.show_callback = function() {
              n.setData(code);
            };
          }
        }
        hideDaliyLuckyLotteryCode() {
          cc.isValid(this.daliyLuckyLotteryCodePanel) && this.daliyLuckyLotteryCodePanel.hide();
        }
        showDaliyLuckyLotteryPanel(auto = false) {
          cc.isValid(this.daliyLuckyLotteryPanel) || (this.daliyLuckyLotteryPanel = utils_1.utils.add_instance_to_root(this.daliyLuckyLotteryPrefab, cc.Canvas.instance.node, DailyLuckyLotteryPanel_1.DailyLuckyLotteryPanel));
          if (cc.isValid(this.daliyLuckyLotteryPanel)) {
            this.setTopSiblingIndex(this.daliyLuckyLotteryPanel.node);
            this.daliyLuckyLotteryPanel.show();
            let n = this.daliyLuckyLotteryPanel;
            this.daliyLuckyLotteryPanel.show_callback = function() {
              n.fetchData();
            };
            this.daliyLuckyLotteryPanel.hide_callback = auto ? () => {
              lobby_framework_1.lobby_framework.pop_next_if_have();
            } : null;
          }
        }
        hideDaliyLuckyLotteryPanel() {
          cc.isValid(this.daliyLuckyLotteryPanel) && this.daliyLuckyLotteryPanel.hide();
        }
        showNoticePanel(auto = false) {
          cc.isValid(this.noticePanel) || (this.noticePanel = utils_1.utils.add_instance_to_root(this.noticePanelPrefab, cc.Canvas.instance.node, NoticePanel_1.default));
          if (cc.isValid(this.noticePanel)) {
            this.setTopSiblingIndex(this.noticePanel.node);
            this.noticePanel.show();
            let n = this.noticePanel;
            this.noticePanel.show_callback = function() {
              n.fetchData();
            };
            this.noticePanel.hide_callback = auto ? () => {
              lobby_framework_1.lobby_framework.pop_next_if_have();
            } : null;
          }
        }
        hideNoticePanel() {
          cc.isValid(this.noticePanel) && this.noticePanel.hide();
        }
        showAddFavoritePanel() {
          cc.isValid(this.addFavoritePanel) || (this.addFavoritePanel = utils_1.utils.add_instance_to_root(this.addFavoritePanelPrefab, cc.Canvas.instance.node, AddFavoritePanel_1.default));
          if (cc.isValid(this.addFavoritePanel)) {
            this.setTopSiblingIndex(this.addFavoritePanel.node);
            this.addFavoritePanel.show();
          }
        }
        hideAddFavoritePanel() {
          cc.isValid(this.addFavoritePanel) && this.addFavoritePanel.hide();
        }
        showNoticeDetail(data, auto) {
          cc.isValid(this.noticeDetail) || (this.noticeDetail = utils_1.utils.add_instance_to_root(this.noticeDetailPrefab, cc.Canvas.instance.node, NoticeDetail_1.default));
          if (cc.isValid(this.noticeDetail)) {
            this.setTopSiblingIndex(this.noticeDetail.node);
            this.noticeDetail.show();
            this.noticeDetail.setData(data, auto);
          }
        }
        hideNoticeDetail() {
          cc.isValid(this.noticeDetail) && this.noticeDetail.hide();
        }
        showExchangePanel() {
          cc.isValid(this.exchangePanel) || (this.exchangePanel = utils_1.utils.add_instance_to_root(this.exchangePanelPrefab, cc.Canvas.instance.node, ExchangePanel_1.default));
          if (cc.isValid(this.exchangePanel)) {
            this.setTopSiblingIndex(this.exchangePanel.node);
            this.exchangePanel.show();
          }
        }
        hideExchangePanel() {
          cc.isValid(this.exchangePanel) && this.exchangePanel.hide();
        }
        showSafePanel() {
          cc.isValid(this.safePanel) || (this.safePanel = utils_1.utils.add_instance_to_root(this.safePanelPrefab, cc.Canvas.instance.node, SafePanel_1.default));
          if (cc.isValid(this.safePanel)) {
            this.setTopSiblingIndex(this.safePanel.node);
            this.safePanel.show();
            this.safePanel.show_bank();
          }
        }
        hideSafePanel() {
          cc.isValid(this.safePanel) && this.safePanel.hide();
        }
        showCompleteInfo() {
          cc.isValid(this.completeInfo) || (this.completeInfo = utils_1.utils.add_instance_to_root(this.completeInfoPrefab, cc.Canvas.instance.node, CompleteInfo_1.default));
          if (cc.isValid(this.completeInfo)) {
            this.setTopSiblingIndex(this.completeInfo.node);
            this.completeInfo.show();
          }
        }
        hideCompleteInfo() {
          cc.isValid(this.completeInfo) && this.completeInfo.hide();
        }
        showConnectError(text) {
          cc.isValid(this.connectError) || (this.connectError = utils_1.utils.add_instance_to_root(this.connectErrorPrefab, cc.Canvas.instance.node, ConnectError_1.default));
          if (cc.isValid(this.connectError)) {
            this.setTopSiblingIndex(this.connectError.node);
            this.connectError.show();
            this.connectError.label.string = text;
          }
        }
        hideConnectError() {
          cc.isValid(this.connectError) && this.connectError.hide();
        }
        showGetReward(data) {
          cc.isValid(this.getReward) || (this.getReward = utils_1.utils.add_instance_to_root(this.getRewardPrefab, cc.Canvas.instance.node, GetReward_1.default));
          if (cc.isValid(this.getReward)) {
            this.setTopSiblingIndex(this.getReward.node);
            this.getReward.show();
            this.getReward.setData(data);
          }
        }
        hideGetReward() {
          cc.isValid(this.getReward) && this.getReward.hide();
        }
        showTaskBoard(auto = false) {
          cc.isValid(this.taskBoard) || (this.taskBoard = utils_1.utils.add_instance_to_root(this.taskBoardPrefab, cc.Canvas.instance.node, TaskBoard_1.default));
          if (cc.isValid(this.taskBoard)) {
            this.setTopSiblingIndex(this.taskBoard.node);
            this.taskBoard.show();
            this.taskBoard.hide_callback = auto ? () => {
              lobby_framework_1.lobby_framework.pop_next_if_have();
            } : null;
          }
        }
        hideTaskBoard() {
          cc.isValid(this.taskBoard) && this.taskBoard.hide();
        }
        showInviteReward() {
          cc.isValid(this.inviteReward) || (this.inviteReward = utils_1.utils.add_instance_to_root(this.inviteRewardPrefab, cc.Canvas.instance.node, InviteReward_1.default));
          if (cc.isValid(this.inviteReward)) {
            this.setTopSiblingIndex(this.inviteReward.node);
            this.inviteReward.show();
          }
        }
        hideInviteReward() {
          cc.isValid(this.inviteReward) && this.inviteReward.hide();
        }
        showBindWechat() {
          cc.isValid(this.bindWechat) || (this.bindWechat = utils_1.utils.add_instance_to_root(this.bindWechatPrefab, cc.Canvas.instance.node, BindWechat_1.default));
          if (cc.isValid(this.bindWechat)) {
            this.setTopSiblingIndex(this.bindWechat.node);
            this.bindWechat.show();
          }
        }
        hideBindWechat() {
          cc.isValid(this.bindWechat) && this.bindWechat.hide();
        }
        showNeedGold() {
          cc.isValid(this.needGold) || (this.needGold = utils_1.utils.add_instance_to_root(this.needGoldPrefab, cc.Canvas.instance.node, NeedGold_1.default));
          if (cc.isValid(this.needGold)) {
            this.setTopSiblingIndex(this.needGold.node);
            this.needGold.show();
          }
        }
        hideNeedGold() {
          cc.isValid(this.needGold) && this.needGold.hide();
        }
        showDailySign(auto = false) {
          cc.isValid(this.dailySign) || (this.dailySign = utils_1.utils.add_instance_to_root(this.dailySignPrefab, cc.Canvas.instance.node, DailySign_1.default));
          if (cc.isValid(this.dailySign)) {
            console.log("showDailySign enter");
            this.setTopSiblingIndex(this.dailySign.node);
            this.dailySign.show();
            this.dailySign.hide_callback = auto ? function() {
              lobby_framework_1.lobby_framework.pop_next_if_have();
            } : null;
          }
        }
        hideDailySign() {
          cc.isValid(this.dailySign) && this.dailySign.hide();
        }
        showPrivateRoomResult(data, str_share) {
          cc.isValid(this.privateRoomResult) || (this.privateRoomResult = utils_1.utils.add_instance_to_root(this.privateRoomResultPrefab, cc.Canvas.instance.node, PrivateRoomResult_1.default));
          if (cc.isValid(this.privateRoomResult)) {
            this.setTopSiblingIndex(this.privateRoomResult.node);
            this.privateRoomResult.show();
            this.privateRoomResult.setData(data, str_share);
          }
        }
        hidePrivateRoomResult() {
          cc.isValid(this.privateRoomResult) && this.privateRoomResult.hide();
        }
        AnyButtonClicked(event, customEventData) {
          utils_1.utils.send("AnyButtonClicked", event, customEventData);
        }
        _RL_LeftTopClicked() {
          this.relogin_code > 30001 && (this.relogin_code = 0);
          this.relogin_code *= 100;
          console.log("relogin_code " + this.relogin_code);
        }
        _RL_LeftClicked() {
          this.relogin_code = 0;
          console.log("relogin_code " + this.relogin_code);
        }
        _RL_MiddleClicked() {
          this.relogin_code > 30001 && (this.relogin_code = 0);
          this.relogin_code += 1;
          console.log("relogin_code " + this.relogin_code);
          30001 == this.relogin_code && cc.director.loadScene("relogon", () => {});
        }
      };
      AppGlobal._instance = null;
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "loadingScreenPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "messageBoxPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "settingPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "simpleShopPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "shopLayoutPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "itemDetailPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "ruleLayoutPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "taskLayoutPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "taskLayoutPrefabNew", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "reliefMessageBoxPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "messageHintPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "chatPlayPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "gameChatPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "gameUserInfoPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "lobbyUserInfoPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "mailPanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "daliyLuckyLotteryPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "daliyLuckyLotteryCodePrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "noticePanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "noticeDetailPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "exchangePanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "exchangeSuccessPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "addFavoritePanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "privatePanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "privateDetailPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "safePanelPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "giftPlayPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "userHeadPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "noNetworkScreenPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "completeInfoPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "connectErrorPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "getRewardPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "taskBoardPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "inviteRewardPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "bindWechatPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "needGoldPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "dailySignPrefab", void 0);
      __decorate([ property(cc.Prefab) ], AppGlobal.prototype, "privateRoomResultPrefab", void 0);
      AppGlobal = AppGlobal_1 = __decorate([ ccclass ], AppGlobal);
      return AppGlobal;
    })();
    exports.AppGlobal = AppGlobal;
    cc._RF.pop();
  }, {
    "./Component/AddFavoritePanel": "AddFavoritePanel",
    "./Component/BindWechat": "BindWechat",
    "./Component/ChatPlay": "ChatPlay",
    "./Component/CompleteInfo": "CompleteInfo",
    "./Component/ConnectError": "ConnectError",
    "./Component/DailyLuckyLotteryCodePanel": "DailyLuckyLotteryCodePanel",
    "./Component/DailyLuckyLotteryPanel": "DailyLuckyLotteryPanel",
    "./Component/DailySign": "DailySign",
    "./Component/ExchangePanel": "ExchangePanel",
    "./Component/ExchangeSuccess": "ExchangeSuccess",
    "./Component/GameChat": "GameChat",
    "./Component/GameUserInfo": "GameUserInfo",
    "./Component/GetReward": "GetReward",
    "./Component/GetRewardItem": "GetRewardItem",
    "./Component/GiftPlay": "GiftPlay",
    "./Component/InviteReward": "InviteReward",
    "./Component/ItemDetail": "ItemDetail",
    "./Component/LoadingScreen": "LoadingScreen",
    "./Component/LobbyUserInfo": "LobbyUserInfo",
    "./Component/LobbyYiFu/TouchLayer": "TouchLayer",
    "./Component/MailPanel": "MailPanel",
    "./Component/MessageBoxCommon": "MessageBoxCommon",
    "./Component/MessageHint": "MessageHint",
    "./Component/NeedGold": "NeedGold",
    "./Component/NoNetworkScreen": "NoNetworkScreen",
    "./Component/NoticeDetail": "NoticeDetail",
    "./Component/NoticePanel": "NoticePanel",
    "./Component/PrivateRoom/PrivateDetail": "PrivateDetail",
    "./Component/PrivateRoom/PrivatePanel": "PrivatePanel",
    "./Component/PrivateRoomResult": "PrivateRoomResult",
    "./Component/ReliefMessageBox": "ReliefMessageBox",
    "./Component/RuleLayout": "RuleLayout",
    "./Component/SafePanel": "SafePanel",
    "./Component/SettingBox": "SettingBox",
    "./Component/ShopLayout": "ShopLayout",
    "./Component/SimpleShop": "SimpleShop",
    "./Component/TaskBoard": "TaskBoard",
    "./Component/TaskLayout": "TaskLayout",
    "./Component/TaskLayoutNew": "TaskLayoutNew",
    "./Component/UserHead": "UserHead",
    "./Framework/common/utils": "utils",
    "./Framework/lobby/global_data": "global_data",
    "./Framework/lobby/lobby_framework": "lobby_framework"
  } ],
  BackButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "767cbyNFpJJHqh4ioyP5lr4", "BackButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let BackButton = (() => {
      let BackButton = class BackButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.sprite = null;
          this.button = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "BackButton", "onButtonClicked");
          let extra_btn = this.sprite.getComponent(cc.Button);
          if (!extra_btn) {
            let btn = this.sprite.addComponent(cc.Button);
            btn.transition = cc.Button.Transition.NONE;
            utils_1.utils.bind_button_event(btn, this.node, "BackButton", "onButtonClicked");
          }
        }
        onButtonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("backButtonClicked", true));
        }
        start() {}
        setBack(gameid) {
          this.sprite.spriteFrame = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(gameid, "lr_label_0"));
        }
      };
      __decorate([ property(cc.Sprite) ], BackButton.prototype, "sprite", void 0);
      __decorate([ property(cc.Button) ], BackButton.prototype, "button", void 0);
      BackButton = __decorate([ ccclass ], BackButton);
      return BackButton;
    })();
    exports.default = BackButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  BeanDisplay: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fd972BoxadCvLl8/HgdqesB", "BeanDisplay");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const AppGlobal_1 = require("../AppGlobal");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let BeanDisplay = (() => {
      let BeanDisplay = class BeanDisplay extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.label = null;
          this.plusNode = null;
        }
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "BeanDisplay";
          clickEventHandler.handler = "onBtnClick";
          this.button.clickEvents.push(clickEventHandler);
          this.label.verticalAlign = cc.Label.VerticalAlign.TOP;
          this.button.node.active = global_data_1.global_data.have_module_shop();
          this.plusNode.active = global_data_1.global_data.have_module_shop();
        }
        onBtnClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showShopLayout("Ingot");
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        refresh() {
          this.label.string = global_data_1.global_data.get_the_user_data()._long_ingot.toString();
        }
        start() {
          this.refresh();
        }
      };
      __decorate([ property(cc.Button) ], BeanDisplay.prototype, "button", void 0);
      __decorate([ property(cc.Label) ], BeanDisplay.prototype, "label", void 0);
      __decorate([ property(cc.Node) ], BeanDisplay.prototype, "plusNode", void 0);
      BeanDisplay = __decorate([ ccclass ], BeanDisplay);
      return BeanDisplay;
    })();
    exports.default = BeanDisplay;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  BigRedPacket: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "abe6bgoKNxD8qUU2PI0JpCA", "BigRedPacket");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let BigResPacket = (() => {
      let BigResPacket = class BigResPacket extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_bg_light = null;
          this.ptr_paper = null;
          this.ptr_bottom = null;
          this.ptr_top = null;
          this.ptr_circle_1 = null;
          this.ptr_circle_2 = null;
          this.m_money_label = null;
          this._delegate = null;
        }
        showBigRedPacket() {
          this.node.setScale(0);
          this.node.active = true;
          this.node.runAction(cc.scaleTo(.5, 1.3));
          this.schedule(this.openRedPacketEvent, 3);
        }
        setDelegate(delegate) {
          this._delegate = delegate;
        }
        setMoney(money) {
          utils_1.utils.run_action_rotate_forever(this.ptr_bg_light.node, 6, true);
          this.m_money_label.string = money / 100 + "\u5143";
        }
        hideBigRedpacket() {
          this.node.active = false;
          this._delegate.hideMoneyRainLayer();
          this.destroy();
          this._delegate.m_big_redpacket = null;
          this.unschedule(this.hideBigRedpacket);
        }
        openRedPacketEvent() {
          this.unschedule(this.openRedPacketEvent);
          this.schedule(this.hideBigRedpacket, 3);
          this.ptr_top.getComponent(cc.Button).interactable = false;
          let l_float_frame = .04;
          this.ptr_top.node.runAction(cc.spawn(cc.jumpTo(8 * l_float_frame, -200, 100, 100, 1), cc.rotateTo(8 * l_float_frame, -45), cc.fadeOut(8 * l_float_frame)));
          this.ptr_paper.node.runAction(cc.sequence(cc.delayTime(8 * l_float_frame), cc.moveTo(8 * l_float_frame, cc.v2(0, 30))));
          this.ptr_circle_1.node.runAction(cc.sequence(cc.delayTime(8 * l_float_frame), cc.fadeIn(0), cc.scaleTo(8 * l_float_frame, 1.2), cc.spawn(cc.fadeOut(8 * l_float_frame), cc.scaleTo(8 * l_float_frame, 1.5))));
          this.ptr_circle_2.node.runAction(cc.sequence(cc.delayTime(8 * l_float_frame + .4), cc.fadeIn(0), cc.scaleTo(8 * l_float_frame, 1.2), cc.spawn(cc.fadeOut(8 * l_float_frame), cc.scaleTo(8 * l_float_frame, 1.5)), cc.callFunc(function() {
            this.node.getComponent(cc.Button).interactable = true;
          }, this)));
        }
      };
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_bg_light", void 0);
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_paper", void 0);
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_bottom", void 0);
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_top", void 0);
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_circle_1", void 0);
      __decorate([ property(cc.Sprite) ], BigResPacket.prototype, "ptr_circle_2", void 0);
      __decorate([ property(cc.Label) ], BigResPacket.prototype, "m_money_label", void 0);
      BigResPacket = __decorate([ ccclass ], BigResPacket);
      return BigResPacket;
    })();
    exports.default = BigResPacket;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils"
  } ],
  BindWechat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "15059K3BLpCD4YJEKqmCm4k", "BindWechat");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const AppGlobal_1 = require("../AppGlobal");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const utils_1 = require("../Framework/common/utils");
    const protocols_1 = require("../Framework/lobby/protocols");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let BindWechat = (() => {
      var BindWechat_1;
      let BindWechat = BindWechat_1 = class BindWechat extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.bindBtn = null;
          this.userinfo_button = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "BindWechat", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.bindBtn, this.node, "BindWechat", "onBindBtnClicked");
        }
        CreateButton() {
          let info = wx.getSystemInfoSync();
          let l_scale = info.screenHeight / 750;
          this.userinfo_button = wx.createUserInfoButton({
            type: "text",
            text: "",
            withCredentials: true,
            style: {
              left: (cc.Canvas.instance.node.width / 2 - 135) * l_scale,
              top: (cc.Canvas.instance.node.height / 2 - 47 + 180) * l_scale,
              width: 350 * l_scale,
              height: 120 * l_scale,
              lineHeight: 10,
              backgroundColor: "#00000000",
              color: "#ffffff",
              textAlign: "center",
              fontSize: 16,
              borderRadius: 4
            }
          });
          this.userinfo_button.show();
          this.userinfo_button.onTap(this.onUserInfoButtonTapped);
        }
        onShow() {
          BindWechat_1.inst = this;
          wx.login({
            success: res => {
              console.log("wx.login " + res.code);
              platform_1.platform.inst.code = res.code;
              BindWechat_1.inst.CreateButton();
            }
          });
        }
        sendRequest() {
          console.log(`\u7ed1\u5b9a\u5fae\u4fe1...id: ${global_data_1.global_data.appid}, code: ${platform_1.platform.inst.code}`);
          utils_1.utils.show_loading("\u6b63\u5728\u7ed1\u5b9a\u5fae\u4fe1...");
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_BINDWECHAT);
          url = utils_1.utils.string_replace_any(url, "{WECHATID}", global_data_1.global_data.appid);
          url = utils_1.utils.string_replace_any(url, "{WECHATCODE}", platform_1.platform.inst.code);
          url = utils_1.utils.string_replace_any(url, "{WECHATDATA}", platform_1.platform.inst.encryptedData);
          url = utils_1.utils.string_replace_any(url, "{WECHATIV}", platform_1.platform.inst.iv);
          utils_1.utils.send_http_request({
            url: url,
            method: "POST",
            success: function(data, message) {
              console.log(`\u7ed1\u5b9a\u5fae\u4fe1\u8fd4\u56de ${data} ${message}`);
              global_data_1.global_data.request_user_data();
              utils_1.utils.show_hint("\u7ed1\u5b9a\u5fae\u4fe1\u6210\u529f");
              utils_1.utils.show_get_reward([ {
                fund_id: global_define_1.CONST.ID_PROP_GOLD,
                fund_count: 1e3
              } ]);
              global_data_1.global_data.get_the_user_data() && (global_data_1.global_data.get_the_user_data()._int_user_right = global_data_1.global_data.get_the_user_data()._int_user_right | protocols_1.protocols.UR_MASK_CHECK_WECHAT);
              cc.isValid(AppGlobal_1.AppGlobal.getInstance().lobbyMain) && cc.isValid(AppGlobal_1.AppGlobal.getInstance().lobbyMain.bindWechatBtn) && (AppGlobal_1.AppGlobal.getInstance().lobbyMain.bindWechatBtn.node.active = false);
            },
            fail: function(err) {
              console.log(err);
              utils_1.utils.show_hint("\u7ed1\u5b9a\u5fae\u4fe1\u5931\u8d25(1)");
            },
            complete: function() {
              utils_1.utils.hide_loading();
              BindWechat_1.inst && BindWechat_1.inst.hide();
            },
            progress: function(timeLeft) {
              utils_1.utils.show_loading_text(`\u6b63\u5728\u7ed1\u5b9a\u5fae\u4fe1...(${timeLeft}s)`);
            }
          });
        }
        onUserInfoButtonTapped(res) {
          sound_manager_1.sound_manager.play_click();
          if (res && "getUserInfo:ok" == res.errMsg) {
            platform_1.platform.inst.userInfo = res.userInfo;
            platform_1.platform.inst.encryptedData = encodeURIComponent(res.encryptedData);
            platform_1.platform.inst.iv = res.iv;
            platform_1.platform.inst.signature = res.signature;
            console.log("encryptedData", platform_1.platform.inst.encryptedData);
            console.log("iv", platform_1.platform.inst.iv);
            console.log("code", platform_1.platform.inst.code);
            BindWechat_1.inst && BindWechat_1.inst.sendRequest();
          }
        }
        onHide() {
          this.userinfo_button.offTap(this.onUserInfoButtonTapped);
          this.userinfo_button.hide();
          this.userinfo_button.destroy();
          BindWechat_1.inst = null;
        }
        onCloseBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      BindWechat.inst = null;
      __decorate([ property(cc.Button) ], BindWechat.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], BindWechat.prototype, "bindBtn", void 0);
      BindWechat = BindWechat_1 = __decorate([ ccclass ], BindWechat);
      return BindWechat;
    })();
    exports.default = BindWechat;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/protocols": "protocols",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  1: [ function(require, module, exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = "undefined" !== typeof Uint8Array ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len = b64.length;
      if (len % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var validLen = b64.indexOf("=");
      -1 === validLen && (validLen = len);
      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
      return [ validLen, placeHoldersLen ];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i;
      for (i = 0; i < len; i += 4) {
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      if (2 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = 255 & tmp;
      }
      if (1 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[63 & num];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i = start; i < end; i += 3) {
        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (255 & uint8[i + 2]);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len = uint8.length;
      var extraBytes = len % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
      if (1 === extraBytes) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
      } else if (2 === extraBytes) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
      }
      return parts.join("");
    }
  }, {} ],
  2: [ function(require, module, exports) {
    (function(global) {
      "use strict";
      var base64 = require("base64-js");
      var ieee754 = require("ieee754");
      var isArray = require("isarray");
      exports.Buffer = Buffer;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      Buffer.TYPED_ARRAY_SUPPORT = void 0 !== global.TYPED_ARRAY_SUPPORT ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
      exports.kMaxLength = kMaxLength();
      function typedArraySupport() {
        try {
          var arr = new Uint8Array(1);
          arr.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function() {
              return 42;
            }
          };
          return 42 === arr.foo() && "function" === typeof arr.subarray && 0 === arr.subarray(1, 1).byteLength;
        } catch (e) {
          return false;
        }
      }
      function kMaxLength() {
        return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function createBuffer(that, length) {
        if (kMaxLength() < length) throw new RangeError("Invalid typed array length");
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = new Uint8Array(length);
          that.__proto__ = Buffer.prototype;
        } else {
          null === that && (that = new Buffer(length));
          that.length = length;
        }
        return that;
      }
      function Buffer(arg, encodingOrOffset, length) {
        if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) return new Buffer(arg, encodingOrOffset, length);
        if ("number" === typeof arg) {
          if ("string" === typeof encodingOrOffset) throw new Error("If encoding is specified then the first argument must be a string");
          return allocUnsafe(this, arg);
        }
        return from(this, arg, encodingOrOffset, length);
      }
      Buffer.poolSize = 8192;
      Buffer._augment = function(arr) {
        arr.__proto__ = Buffer.prototype;
        return arr;
      };
      function from(that, value, encodingOrOffset, length) {
        if ("number" === typeof value) throw new TypeError('"value" argument must not be a number');
        if ("undefined" !== typeof ArrayBuffer && value instanceof ArrayBuffer) return fromArrayBuffer(that, value, encodingOrOffset, length);
        if ("string" === typeof value) return fromString(that, value, encodingOrOffset);
        return fromObject(that, value);
      }
      Buffer.from = function(value, encodingOrOffset, length) {
        return from(null, value, encodingOrOffset, length);
      };
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        Buffer.prototype.__proto__ = Uint8Array.prototype;
        Buffer.__proto__ = Uint8Array;
        "undefined" !== typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
          value: null,
          configurable: true
        });
      }
      function assertSize(size) {
        if ("number" !== typeof size) throw new TypeError('"size" argument must be a number');
        if (size < 0) throw new RangeError('"size" argument must not be negative');
      }
      function alloc(that, size, fill, encoding) {
        assertSize(size);
        if (size <= 0) return createBuffer(that, size);
        if (void 0 !== fill) return "string" === typeof encoding ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
        return createBuffer(that, size);
      }
      Buffer.alloc = function(size, fill, encoding) {
        return alloc(null, size, fill, encoding);
      };
      function allocUnsafe(that, size) {
        assertSize(size);
        that = createBuffer(that, size < 0 ? 0 : 0 | checked(size));
        if (!Buffer.TYPED_ARRAY_SUPPORT) for (var i = 0; i < size; ++i) that[i] = 0;
        return that;
      }
      Buffer.allocUnsafe = function(size) {
        return allocUnsafe(null, size);
      };
      Buffer.allocUnsafeSlow = function(size) {
        return allocUnsafe(null, size);
      };
      function fromString(that, string, encoding) {
        "string" === typeof encoding && "" !== encoding || (encoding = "utf8");
        if (!Buffer.isEncoding(encoding)) throw new TypeError('"encoding" must be a valid string encoding');
        var length = 0 | byteLength(string, encoding);
        that = createBuffer(that, length);
        var actual = that.write(string, encoding);
        actual !== length && (that = that.slice(0, actual));
        return that;
      }
      function fromArrayLike(that, array) {
        var length = array.length < 0 ? 0 : 0 | checked(array.length);
        that = createBuffer(that, length);
        for (var i = 0; i < length; i += 1) that[i] = 255 & array[i];
        return that;
      }
      function fromArrayBuffer(that, array, byteOffset, length) {
        array.byteLength;
        if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError("'offset' is out of bounds");
        if (array.byteLength < byteOffset + (length || 0)) throw new RangeError("'length' is out of bounds");
        array = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = array;
          that.__proto__ = Buffer.prototype;
        } else that = fromArrayLike(that, array);
        return that;
      }
      function fromObject(that, obj) {
        if (Buffer.isBuffer(obj)) {
          var len = 0 | checked(obj.length);
          that = createBuffer(that, len);
          if (0 === that.length) return that;
          obj.copy(that, 0, 0, len);
          return that;
        }
        if (obj) {
          if ("undefined" !== typeof ArrayBuffer && obj.buffer instanceof ArrayBuffer || "length" in obj) {
            if ("number" !== typeof obj.length || isnan(obj.length)) return createBuffer(that, 0);
            return fromArrayLike(that, obj);
          }
          if ("Buffer" === obj.type && isArray(obj.data)) return fromArrayLike(that, obj.data);
        }
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
      }
      function checked(length) {
        if (length >= kMaxLength()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
        return 0 | length;
      }
      function SlowBuffer(length) {
        +length != length && (length = 0);
        return Buffer.alloc(+length);
      }
      Buffer.isBuffer = function isBuffer(b) {
        return !!(null != b && b._isBuffer);
      };
      Buffer.compare = function compare(a, b) {
        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
        if (a === b) return 0;
        var x = a.length;
        var y = b.length;
        for (var i = 0, len = Math.min(x, y); i < len; ++i) if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      Buffer.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
         case "hex":
         case "utf8":
         case "utf-8":
         case "ascii":
         case "latin1":
         case "binary":
         case "base64":
         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return true;

         default:
          return false;
        }
      };
      Buffer.concat = function concat(list, length) {
        if (!isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === list.length) return Buffer.alloc(0);
        var i;
        if (void 0 === length) {
          length = 0;
          for (i = 0; i < list.length; ++i) length += list[i].length;
        }
        var buffer = Buffer.allocUnsafe(length);
        var pos = 0;
        for (i = 0; i < list.length; ++i) {
          var buf = list[i];
          if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
          buf.copy(buffer, pos);
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding) {
        if (Buffer.isBuffer(string)) return string.length;
        if ("undefined" !== typeof ArrayBuffer && "function" === typeof ArrayBuffer.isView && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) return string.byteLength;
        "string" !== typeof string && (string = "" + string);
        var len = string.length;
        if (0 === len) return 0;
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "ascii":
         case "latin1":
         case "binary":
          return len;

         case "utf8":
         case "utf-8":
         case void 0:
          return utf8ToBytes(string).length;

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return 2 * len;

         case "hex":
          return len >>> 1;

         case "base64":
          return base64ToBytes(string).length;

         default:
          if (loweredCase) return utf8ToBytes(string).length;
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.byteLength = byteLength;
      function slowToString(encoding, start, end) {
        var loweredCase = false;
        (void 0 === start || start < 0) && (start = 0);
        if (start > this.length) return "";
        (void 0 === end || end > this.length) && (end = this.length);
        if (end <= 0) return "";
        end >>>= 0;
        start >>>= 0;
        if (end <= start) return "";
        encoding || (encoding = "utf8");
        while (true) switch (encoding) {
         case "hex":
          return hexSlice(this, start, end);

         case "utf8":
         case "utf-8":
          return utf8Slice(this, start, end);

         case "ascii":
          return asciiSlice(this, start, end);

         case "latin1":
         case "binary":
          return latin1Slice(this, start, end);

         case "base64":
          return base64Slice(this, start, end);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return utf16leSlice(this, start, end);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.prototype._isBuffer = true;
      function swap(b, n, m) {
        var i = b[n];
        b[n] = b[m];
        b[m] = i;
      }
      Buffer.prototype.swap16 = function swap16() {
        var len = this.length;
        if (len % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var i = 0; i < len; i += 2) swap(this, i, i + 1);
        return this;
      };
      Buffer.prototype.swap32 = function swap32() {
        var len = this.length;
        if (len % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer.prototype.swap64 = function swap64() {
        var len = this.length;
        if (len % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer.prototype.toString = function toString() {
        var length = 0 | this.length;
        if (0 === length) return "";
        if (0 === arguments.length) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer.prototype.equals = function equals(b) {
        if (!Buffer.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
        if (this === b) return true;
        return 0 === Buffer.compare(this, b);
      };
      Buffer.prototype.inspect = function inspect() {
        var str = "";
        var max = exports.INSPECT_MAX_BYTES;
        if (this.length > 0) {
          str = this.toString("hex", 0, max).match(/.{2}/g).join(" ");
          this.length > max && (str += " ... ");
        }
        return "<Buffer " + str + ">";
      };
      Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (!Buffer.isBuffer(target)) throw new TypeError("Argument must be a Buffer");
        void 0 === start && (start = 0);
        void 0 === end && (end = target ? target.length : 0);
        void 0 === thisStart && (thisStart = 0);
        void 0 === thisEnd && (thisEnd = this.length);
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError("out of range index");
        if (thisStart >= thisEnd && start >= end) return 0;
        if (thisStart >= thisEnd) return -1;
        if (start >= end) return 1;
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);
        for (var i = 0; i < len; ++i) if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (0 === buffer.length) return -1;
        if ("string" === typeof byteOffset) {
          encoding = byteOffset;
          byteOffset = 0;
        } else byteOffset > 2147483647 ? byteOffset = 2147483647 : byteOffset < -2147483648 && (byteOffset = -2147483648);
        byteOffset = +byteOffset;
        isNaN(byteOffset) && (byteOffset = dir ? 0 : buffer.length - 1);
        byteOffset < 0 && (byteOffset = buffer.length + byteOffset);
        if (byteOffset >= buffer.length) {
          if (dir) return -1;
          byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (!dir) return -1;
          byteOffset = 0;
        }
        "string" === typeof val && (val = Buffer.from(val, encoding));
        if (Buffer.isBuffer(val)) {
          if (0 === val.length) return -1;
          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        }
        if ("number" === typeof val) {
          val &= 255;
          if (Buffer.TYPED_ARRAY_SUPPORT && "function" === typeof Uint8Array.prototype.indexOf) return dir ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset) : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        var indexSize = 1;
        var arrLength = arr.length;
        var valLength = val.length;
        if (void 0 !== encoding) {
          encoding = String(encoding).toLowerCase();
          if ("ucs2" === encoding || "ucs-2" === encoding || "utf16le" === encoding || "utf-16le" === encoding) {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read(buf, i) {
          return 1 === indexSize ? buf[i] : buf.readUInt16BE(i * indexSize);
        }
        var i;
        if (dir) {
          var foundIndex = -1;
          for (i = byteOffset; i < arrLength; i++) if (read(arr, i) === read(val, -1 === foundIndex ? 0 : i - foundIndex)) {
            -1 === foundIndex && (foundIndex = i);
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            -1 !== foundIndex && (i -= i - foundIndex);
            foundIndex = -1;
          }
        } else {
          byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength);
          for (i = byteOffset; i >= 0; i--) {
            var found = true;
            for (var j = 0; j < valLength; j++) if (read(arr, i + j) !== read(val, j)) {
              found = false;
              break;
            }
            if (found) return i;
          }
        }
        return -1;
      }
      Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
        return -1 !== this.indexOf(val, byteOffset, encoding);
      };
      Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        var remaining = buf.length - offset;
        if (length) {
          length = Number(length);
          length > remaining && (length = remaining);
        } else length = remaining;
        var strLen = string.length;
        if (strLen % 2 !== 0) throw new TypeError("Invalid hex string");
        length > strLen / 2 && (length = strLen / 2);
        for (var i = 0; i < length; ++i) {
          var parsed = parseInt(string.substr(2 * i, 2), 16);
          if (isNaN(parsed)) return i;
          buf[offset + i] = parsed;
        }
        return i;
      }
      function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
      }
      function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
      }
      function latin1Write(buf, string, offset, length) {
        return asciiWrite(buf, string, offset, length);
      }
      function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
      }
      function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
      }
      Buffer.prototype.write = function write(string, offset, length, encoding) {
        if (void 0 === offset) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (void 0 === length && "string" === typeof offset) {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else {
          if (!isFinite(offset)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          offset |= 0;
          if (isFinite(length)) {
            length |= 0;
            void 0 === encoding && (encoding = "utf8");
          } else {
            encoding = length;
            length = void 0;
          }
        }
        var remaining = this.length - offset;
        (void 0 === length || length > remaining) && (length = remaining);
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        encoding || (encoding = "utf8");
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "hex":
          return hexWrite(this, string, offset, length);

         case "utf8":
         case "utf-8":
          return utf8Write(this, string, offset, length);

         case "ascii":
          return asciiWrite(this, string, offset, length);

         case "latin1":
         case "binary":
          return latin1Write(this, string, offset, length);

         case "base64":
          return base64Write(this, string, offset, length);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return ucs2Write(this, string, offset, length);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      };
      Buffer.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start, end) {
        return 0 === start && end === buf.length ? base64.fromByteArray(buf) : base64.fromByteArray(buf.slice(start, end));
      }
      function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        var res = [];
        var i = start;
        while (i < end) {
          var firstByte = buf[i];
          var codePoint = null;
          var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
             case 1:
              firstByte < 128 && (codePoint = firstByte);
              break;

             case 2:
              secondByte = buf[i + 1];
              if (128 === (192 & secondByte)) {
                tempCodePoint = (31 & firstByte) << 6 | 63 & secondByte;
                tempCodePoint > 127 && (codePoint = tempCodePoint);
              }
              break;

             case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte)) {
                tempCodePoint = (15 & firstByte) << 12 | (63 & secondByte) << 6 | 63 & thirdByte;
                tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343) && (codePoint = tempCodePoint);
              }
              break;

             case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte) && 128 === (192 & fourthByte)) {
                tempCodePoint = (15 & firstByte) << 18 | (63 & secondByte) << 12 | (63 & thirdByte) << 6 | 63 & fourthByte;
                tempCodePoint > 65535 && tempCodePoint < 1114112 && (codePoint = tempCodePoint);
              }
            }
          }
          if (null === codePoint) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | 1023 & codePoint;
          }
          res.push(codePoint);
          i += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        var len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints);
        var res = "";
        var i = 0;
        while (i < len) res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
        return res;
      }
      function asciiSlice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(127 & buf[i]);
        return ret;
      }
      function latin1Slice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(buf[i]);
        return ret;
      }
      function hexSlice(buf, start, end) {
        var len = buf.length;
        (!start || start < 0) && (start = 0);
        (!end || end < 0 || end > len) && (end = len);
        var out = "";
        for (var i = start; i < end; ++i) out += toHex(buf[i]);
        return out;
      }
      function utf16leSlice(buf, start, end) {
        var bytes = buf.slice(start, end);
        var res = "";
        for (var i = 0; i < bytes.length; i += 2) res += String.fromCharCode(bytes[i] + 256 * bytes[i + 1]);
        return res;
      }
      Buffer.prototype.slice = function slice(start, end) {
        var len = this.length;
        start = ~~start;
        end = void 0 === end ? len : ~~end;
        if (start < 0) {
          start += len;
          start < 0 && (start = 0);
        } else start > len && (start = len);
        if (end < 0) {
          end += len;
          end < 0 && (end = 0);
        } else end > len && (end = len);
        end < start && (end = start);
        var newBuf;
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          newBuf = this.subarray(start, end);
          newBuf.__proto__ = Buffer.prototype;
        } else {
          var sliceLen = end - start;
          newBuf = new Buffer(sliceLen, void 0);
          for (var i = 0; i < sliceLen; ++i) newBuf[i] = this[i + start];
        }
        return newBuf;
      };
      function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
        if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        return val;
      };
      Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset + --byteLength];
        var mul = 1;
        while (byteLength > 0 && (mul *= 256)) val += this[offset + --byteLength] * mul;
        return val;
      };
      Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + 16777216 * this[offset + 3];
      };
      Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return 16777216 * this[offset] + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var i = byteLength;
        var mul = 1;
        var val = this[offset + --i];
        while (i > 0 && (mul *= 256)) val += this[offset + --i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        if (!(128 & this[offset])) return this[offset];
        return -1 * (255 - this[offset] + 1);
      };
      Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
      }
      Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var mul = 1;
        var i = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var i = byteLength - 1;
        var mul = 1;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 255, 0);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        this[offset] = 255 & value;
        return offset + 1;
      };
      function objectWriteUInt16(buf, value, offset, littleEndian) {
        value < 0 && (value = 65535 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> 8 * (littleEndian ? i : 1 - i);
      }
      Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      function objectWriteUInt32(buf, value, offset, littleEndian) {
        value < 0 && (value = 4294967295 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) buf[offset + i] = value >>> 8 * (littleEndian ? i : 3 - i) & 255;
      }
      Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset + 3] = value >>> 24;
          this[offset + 2] = value >>> 16;
          this[offset + 1] = value >>> 8;
          this[offset] = 255 & value;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i - 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = byteLength - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i + 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 127, -128);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        value < 0 && (value = 255 + value + 1);
        this[offset] = 255 & value;
        return offset + 1;
      };
      Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
          this[offset + 2] = value >>> 16;
          this[offset + 3] = value >>> 24;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        value < 0 && (value = 4294967295 + value + 1);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
        if (offset < 0) throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      function writeDouble(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer.prototype.copy = function copy(target, targetStart, start, end) {
        start || (start = 0);
        end || 0 === end || (end = this.length);
        targetStart >= target.length && (targetStart = target.length);
        targetStart || (targetStart = 0);
        end > 0 && end < start && (end = start);
        if (end === start) return 0;
        if (0 === target.length || 0 === this.length) return 0;
        if (targetStart < 0) throw new RangeError("targetStart out of bounds");
        if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        end > this.length && (end = this.length);
        target.length - targetStart < end - start && (end = target.length - targetStart + start);
        var len = end - start;
        var i;
        if (this === target && start < targetStart && targetStart < end) for (i = len - 1; i >= 0; --i) target[i + targetStart] = this[i + start]; else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) for (i = 0; i < len; ++i) target[i + targetStart] = this[i + start]; else Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
        return len;
      };
      Buffer.prototype.fill = function fill(val, start, end, encoding) {
        if ("string" === typeof val) {
          if ("string" === typeof start) {
            encoding = start;
            start = 0;
            end = this.length;
          } else if ("string" === typeof end) {
            encoding = end;
            end = this.length;
          }
          if (1 === val.length) {
            var code = val.charCodeAt(0);
            code < 256 && (val = code);
          }
          if (void 0 !== encoding && "string" !== typeof encoding) throw new TypeError("encoding must be a string");
          if ("string" === typeof encoding && !Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
        } else "number" === typeof val && (val &= 255);
        if (start < 0 || this.length < start || this.length < end) throw new RangeError("Out of range index");
        if (end <= start) return this;
        start >>>= 0;
        end = void 0 === end ? this.length : end >>> 0;
        val || (val = 0);
        var i;
        if ("number" === typeof val) for (i = start; i < end; ++i) this[i] = val; else {
          var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
          var len = bytes.length;
          for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
        }
        return this;
      };
      var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = stringtrim(str).replace(INVALID_BASE64_RE, "");
        if (str.length < 2) return "";
        while (str.length % 4 !== 0) str += "=";
        return str;
      }
      function stringtrim(str) {
        if (str.trim) return str.trim();
        return str.replace(/^\s+|\s+$/g, "");
      }
      function toHex(n) {
        if (n < 16) return "0" + n.toString(16);
        return n.toString(16);
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        var codePoint;
        var length = string.length;
        var leadSurrogate = null;
        var bytes = [];
        for (var i = 0; i < length; ++i) {
          codePoint = string.charCodeAt(i);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              if (i + 1 === length) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              (units -= 3) > -1 && bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = 65536 + (leadSurrogate - 55296 << 10 | codePoint - 56320);
          } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 6 | 192, 63 & codePoint | 128);
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          } else {
            if (!(codePoint < 1114112)) throw new Error("Invalid code point");
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) byteArray.push(255 & str.charCodeAt(i));
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        var c, hi, lo;
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) {
          if ((units -= 2) < 0) break;
          c = str.charCodeAt(i);
          hi = c >> 8;
          lo = c % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src, dst, offset, length) {
        for (var i = 0; i < length; ++i) {
          if (i + offset >= dst.length || i >= src.length) break;
          dst[i + offset] = src[i];
        }
        return i;
      }
      function isnan(val) {
        return val !== val;
      }
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "base64-js": 1,
    ieee754: 4,
    isarray: 3
  } ],
  3: [ function(require, module, exports) {
    var toString = {}.toString;
    module.exports = Array.isArray || function(arr) {
      return "[object Array]" == toString.call(arr);
    };
  }, {} ],
  4: [ function(require, module, exports) {
    exports.read = function(buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (;nBits > 0; e = 256 * e + buffer[offset + i], i += d, nBits -= 8) ;
      m = e & (1 << -nBits) - 1;
      e >>= -nBits;
      nBits += mLen;
      for (;nBits > 0; m = 256 * m + buffer[offset + i], i += d, nBits -= 8) ;
      if (0 === e) e = 1 - eBias; else {
        if (e === eMax) return m ? NaN : Infinity * (s ? -1 : 1);
        m += Math.pow(2, mLen);
        e -= eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };
    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = 23 === mLen ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || 0 === value && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || Infinity === value) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }
        value += e + eBias >= 1 ? rt / c : rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
          e++;
          c /= 2;
        }
        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e += eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }
      for (;mLen >= 8; buffer[offset + i] = 255 & m, i += d, m /= 256, mLen -= 8) ;
      e = e << mLen | m;
      eLen += mLen;
      for (;eLen > 0; buffer[offset + i] = 255 & e, i += d, e /= 256, eLen -= 8) ;
      buffer[offset + i - d] |= 128 * s;
    };
  }, {} ],
  CCardPoint3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "dfdedInWoVGbZvB74Qgm4LO", "CCardPoint3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const table_3d_layout_1 = require("../table_3d_layout");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CCardPoint3D = (() => {
      let CCardPoint3D = class CCardPoint3D extends cc.Component {
        constructor() {
          super(...arguments);
          this.animation = null;
          this.clip = null;
          this._show_ani = null;
        }
        onLoad() {
          this._show_ani = null;
          if (null == this.animation) {
            this.animation = this.addComponent(cc.Animation);
            let sps = new Array();
            for (let i = 1; i <= 6; ++i) sps.push(table_3d_layout_1.Layout3DResources.GetSpriteFrame("other-card_point-card_point_" + i));
            this.clip = cc.AnimationClip.createWithSpriteFrames(sps, 10);
            this.clip.name = "main";
            this.clip.wrapMode = cc.WrapMode.Loop;
            this.animation.addClip(this.clip);
          }
          if (null == this.getComponent(cc.Sprite)) {
            let c = this.addComponent(cc.Sprite);
            c.sizeMode = cc.Sprite.SizeMode.RAW;
            c.trim = false;
          }
        }
        init() {
          this.node.setAnchorPoint(cc.v2(.5, 0));
        }
        showPoint() {
          this.animation.stop();
          this.animation.play("main");
          this.node.active = true;
        }
        hidePoint() {
          this.node.active = false;
          this.animation.stop();
        }
        onDestroy() {}
      };
      CCardPoint3D = __decorate([ ccclass ], CCardPoint3D);
      return CCardPoint3D;
    })();
    exports.default = CCardPoint3D;
    cc._RF.pop();
  }, {
    "../table_3d_layout": "table_3d_layout"
  } ],
  CHandCard3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7afdalBHyZFTKBXSZzsXr0W", "CHandCard3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const game_tools_1 = require("../game_tools");
    const table_3d_layout_1 = require("../table_3d_layout");
    const cards_3d_layout_1 = require("../cards_3d_layout");
    const bind_function_1 = require("../../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CHandCard3D = (() => {
      let CHandCard3D = class CHandCard3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this._card_img = null;
          this._corner_img = null;
          this._card_mask = null;
          this._ground_path = null;
          this._card_path = null;
          this.corner_x = 0;
          this.corner_y = 0;
          this.corner_scale = 0;
          this._corner_path = null;
        }
        init(card_info, base_x, base_y, base_zorder) {
          if (null == this.getComponent(cc.Sprite)) {
            let c = this.addComponent(cc.Sprite);
            c.sizeMode = cc.Sprite.SizeMode.RAW;
            c.trim = false;
          }
          if (!this._card_img) {
            this._card_img = game_tools_1.default.newImg({
              name: "_card_img"
            });
            this.node.addChild(this._card_img);
          }
          if (!this._corner_img) {
            this._corner_img = game_tools_1.default.newImg({
              name: "_corner_img"
            });
            this.node.addChild(this._corner_img);
          }
          if (!this._card_mask) {
            this._card_mask = game_tools_1.default.newImg({
              name: "_card_mask"
            });
            this.node.addChild(this._card_mask);
          }
          if (null != card_info) {
            this._ground_path = card_info.ground.file;
            this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
            this.node.setPosition(cc.v2(base_x + card_info.ground.x, base_y + card_info.ground.y));
            this.node.setScale(card_info.ground.scale);
            this.node.zIndex = base_zorder + card_info.zorder;
            if (null != card_info.card) {
              let card_x = this.node.getContentSize().width / 2 + card_info.card.x;
              let card_y = this.node.getContentSize().height / 2 + card_info.card.y;
              this._card_img.setPosition(cc.v2(card_x, card_y));
              this._card_img.setScale(card_info.card.scale);
              this._card_path = card_info.card.file;
            }
            if (card_info.corner) {
              this.corner_x = this.node.getContentSize().width / 2 + card_info.corner.x;
              this.corner_y = this.node.getContentSize().height / 2 + card_info.corner.y;
              this.corner_scale = card_info.corner.scale;
              this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
              this._corner_img.setScale(card_info.corner.scale);
              this._corner_path = card_info.corner.file;
            }
            this._card_mask.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
            this._card_mask.setPosition(cc.v2(0, 0));
            this._card_mask.setScale(1);
            this._card_mask.color = cc.Color.BLACK;
            this._card_mask.opacity = 150;
            this._card_mask.zIndex = base_zorder + card_info.zorder;
            this._card_mask.active = false;
          }
          this.node.active = false;
        }
        setCardValue(param_value, param_corner_id, param_show_mask) {
          this._card_value = param_value;
          if (param_value == cards_3d_config_1.InvalidValue) {
            this._visual_value = cards_3d_config_1.InvalidValue;
            this._card_img.active = false;
            this.hideCorner();
            this.hideMask();
          } else {
            null != cards_3d_layout_1.default.get().CardExchangeTable[param_value] && (param_value = cards_3d_layout_1.default.get().CardExchangeTable[param_value]);
            this._visual_value = param_value;
            if (this._card_path && (this._visual_value >= 10 && this._visual_value <= 47 || this._visual_value >= 50 && this._visual_value <= 58)) {
              let img_path = bind_function_1.bf.string_replace_any(this._card_path, "{NUM}", this._visual_value);
              this._card_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
              this._card_img.active = true;
            }
            param_corner_id && 0 != param_corner_id ? this.showCorner(param_corner_id) : this.hideCorner();
            param_show_mask && true == param_show_mask ? this.showMask() : this.hideMask();
          }
        }
        showMask() {
          this._card_mask.active = true;
        }
        hideMask() {
          this._card_mask.active = false;
        }
        showCorner(param_corner_id) {
          if (param_corner_id >= 1 && param_corner_id <= 7) {
            let img_path = bind_function_1.bf.string_replace_any(this._corner_path, "{NUM}", param_corner_id);
            this._corner_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
            this._corner_img.active = true;
            this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
            this._corner_img.setScale(this.corner_scale);
          }
        }
        hideCorner() {
          this._corner_img.active = false;
        }
        getCardValue() {
          return this._card_value ? this._card_value : cards_3d_config_1.InvalidValue;
        }
        showCard(param_value, param_corner_id, param_show_mask) {
          null == param_value && (param_value = this.getCardValue());
          this.setCardValue(param_value, param_corner_id, param_show_mask);
          this.node.active = true;
        }
        hideCard() {
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this.node.opacity = 255;
          this.node.active = false;
        }
        onDestroy() {}
      };
      CHandCard3D = __decorate([ ccclass ], CHandCard3D);
      return CHandCard3D;
    })();
    exports.default = CHandCard3D;
    cc._RF.pop();
  }, {
    "../../../Script/Framework/lobby/bind_function": "bind_function",
    "../cards_3d_config": "cards_3d_config",
    "../cards_3d_layout": "cards_3d_layout",
    "../game_tools": "game_tools",
    "../table_3d_layout": "table_3d_layout"
  } ],
  CHandleButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1f637O6h6pM3p9Z5fmnyOCc", "CHandleButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CHandleButton = (() => {
      let CHandleButton = class CHandleButton extends cc.Component {};
      CHandleButton = __decorate([ ccclass ], CHandleButton);
      return CHandleButton;
    })();
    exports.default = CHandleButton;
    cc._RF.pop();
  }, {} ],
  CHandleHint3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6a64av20EhPeYG5mmcHGnRH", "CHandleHint3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const CSelfHandCard3D_1 = require("./CSelfHandCard3D");
    const table_3d_layout_1 = require("../table_3d_layout");
    const game_tools_1 = require("../game_tools");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let HandleHintDir = {
      left: 1,
      right: 2
    };
    let CHandleHint3D = (() => {
      let CHandleHint3D = class CHandleHint3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._items_gang_wait = {};
          this._items_gang_show = {};
          this._type = "";
          this._cards = Array();
          this._lines = Array();
          this._hint_count = 0;
          this._call_func = null;
          this._dir = HandleHintDir.left;
        }
        init() {
          this._scale = .7;
          this.setDir(HandleHintDir.left);
          this.node.active = false;
          this.node.setScale(1.2);
          this._cards = new Array();
          let c = this.addComponent(cc.Sprite);
          c.type = cc.Sprite.Type.SLICED;
          c.sizeMode = cc.Sprite.SizeMode.RAW;
          c.trim = false;
          this._lines = new Array();
          this._view_size = game_tools_1.default.getLayoutViewSize();
          this._base_x = .5 * this._view_size.width;
          this._base_y = .5 * this._view_size.height;
        }
        setType(param_type) {
          this._type = param_type;
        }
        setDirLeft() {
          this.setDir(HandleHintDir.left);
        }
        setDirRight() {
          this.setDir(HandleHintDir.right);
        }
        setDir(dir) {
          this._dir = dir;
        }
        getHintCount() {
          return this._hint_count;
        }
        setController(controller) {
          this._controller = controller;
        }
        touchEvent(event, customEventData, card) {
          this._controller && this._controller.touchEvent(event, customEventData, card);
        }
        addHintData(param_type, param_value, cai_shen_value) {
          this._hint_count = this._hint_count + 1;
          if (param_type == cards_3d_config_1.HandleType.b_gang || param_type == cards_3d_config_1.HandleType.d_gang || param_type == cards_3d_config_1.HandleType.a_gang) {
            if (this._cards.length < this._hint_count) {
              let card = new cc.Node("HintCard" + (this._hint_count - 1)).addComponent(CSelfHandCard3D_1.default).node;
              card.getComponent(CSelfHandCard3D_1.default).init();
              card.getComponent(CSelfHandCard3D_1.default).setController(this);
              card.setScale(this._scale);
              this._cards.push(card);
              this.node.addChild(card);
              let sprite = this.getSpriteNode();
              this._lines.push(sprite);
            }
            this._cards[this._hint_count - 1].getComponent(CSelfHandCard3D_1.default).setType(param_type);
            this._cards[this._hint_count - 1].getComponent(CSelfHandCard3D_1.default).setCardValue(param_value);
            this._cards[this._hint_count - 1].getComponent(CSelfHandCard3D_1.default).setMessageValue(param_value);
          } else if (param_type == cards_3d_config_1.HandleType.b_chi_left || param_type == cards_3d_config_1.HandleType.b_chi_mid || param_type == cards_3d_config_1.HandleType.b_chi_right) {
            if (!this._cards[3 * (this._hint_count - 1)]) for (let i = 3 * this._hint_count - 3; i <= 3 * this._hint_count - 1; ++i) {
              let card = new cc.Node("HintCard" + (this._hint_count - 1)).addComponent(CSelfHandCard3D_1.default).node;
              card.getComponent(CSelfHandCard3D_1.default).init();
              card.getComponent(CSelfHandCard3D_1.default).setController(this);
              card.setScale(this._scale);
              this._cards.push(card);
              this.node.addChild(card);
              if (i > 0 && i % 3 == 0) {
                let sprite = this.getSpriteNode();
                this._lines.push(sprite);
              }
            }
            let show_value = param_value;
            param_type == cards_3d_config_1.HandleType.b_chi_mid ? show_value += 1 : param_type == cards_3d_config_1.HandleType.b_chi_left && (show_value += 2);
            cai_shen_value && cai_shen_value == param_value && (param_value = 47);
            for (let i = 3 * this._hint_count - 3; i <= 3 * this._hint_count - 1; ++i) {
              this._cards[i].getComponent(CSelfHandCard3D_1.default).setType(param_type);
              cai_shen_value && show_value - (i - 3 * this._hint_count + 2) - 1 == cai_shen_value ? this._cards[i].getComponent(CSelfHandCard3D_1.default).setCardValue(47) : this._cards[i].getComponent(CSelfHandCard3D_1.default).setCardValue(show_value - (i - 3 * this._hint_count + 2) - 1);
              this._cards[i].getComponent(CSelfHandCard3D_1.default).setMessageValue(param_value);
            }
          }
        }
        setBasePosition(pt) {
          this._base_x = pt.x;
          this._base_y = pt.y;
        }
        showHint() {
          this.node.active = true;
          let card_width = 80;
          let card_height = 100;
          if (this._cards[0]) {
            card_width = this._cards[0].getContentSize().width;
            card_height = this._cards[0].getContentSize().height;
          }
          let str = "";
          str = this._dir == HandleHintDir.left ? "left" : "right";
          let c = this.getComponent(cc.Sprite);
          c.type = cc.Sprite.Type.SLICED;
          c.sizeMode = cc.Sprite.SizeMode.RAW;
          c.trim = false;
          c.spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame("other-btn_handle-btn_handle_bg_hint_" + str);
          c.spriteFrame.insetTop = 0;
          c.spriteFrame.insetBottom = 0;
          c.spriteFrame.insetLeft = 45;
          c.spriteFrame.insetRight = 45;
          if ("gang" == this._type) {
            game_tools_1.default.log("gang");
            this.node.width = (card_width + 20) * this._scale * this._hint_count + 10;
            this.node.height = card_height * this._scale + 30;
          } else if ("chi" == this._type) {
            game_tools_1.default.log("chi", card_width, this._scale, this._hint_count, card_height);
            this.node.width = (3 * card_width + 20) * this._scale * this._hint_count + 10;
            this.node.height = card_height * this._scale + 30;
          }
          if ("gang" == this._type) for (let i = 1; i <= this._hint_count; ++i) {
            let posx = -(2 * i - 1) * (card_width + 20) * this._scale * .5 - 5;
            posx += .5 * this.node.getContentSize().width;
            let posy = -3;
            this._cards[i - 1].setPosition(cc.v2(posx, posy));
            if (i >= 2) {
              let line_x = posx - 3;
              let line_y = 3;
              this._lines[i - 2].setPosition(cc.v2(line_x, line_y));
              this._lines[i - 2].active = true;
            }
          } else if ("chi" == this._type) for (let index = 1; index <= this._hint_count; ++index) {
            let posx = -(2 * index - 1) * (3 * card_width + 20) * this._scale * .5 - 5;
            for (let i = 3 * index - 2; i <= 3 * index; ++i) {
              let posy = -3;
              let temp_x = posx + (3 * index - 1 - i) * (card_width - 8) * this._scale;
              temp_x += .5 * this.node.getContentSize().width;
              this._cards[i - 1].setPosition(cc.v2(temp_x, posy));
              if (index >= 2 && i % 3 == 0) {
                let line_x = temp_x + (card_width - 8) * this._scale * 2 + 2;
                let line_y = 3;
                this._lines[index - 2].setPosition(cc.v2(line_x, line_y));
                this._lines[index - 2].active = true;
              }
            }
          }
          this.setCanTouch(true);
          this._dir == HandleHintDir.left ? this.node.setPosition(cc.v2(this._base_x + .5 * this.node.getContentSize().width - 30, this._base_y + .5 * this.node.getContentSize().height + 5)) : this.node.setPosition(cc.v2(this._base_x - .5 * this.node.getContentSize().width + 30, this._base_y + .5 * this.node.getContentSize().height + 5));
        }
        hideHint(param_clear) {
          param_clear && true == param_clear && this.clearData();
          this.node.active = false;
        }
        clearData() {
          for (let i = 0; i < this._hint_count; ++i) this._cards[i].getComponent(CSelfHandCard3D_1.default).hideCard();
          for (let i = 0; i < this._hint_count - 1; ++i) this._lines[i].active = false;
          this._hint_count = 0;
        }
        setCanTouch(param_touch) {
          if ("gang" == this._type) {
            for (let i = 0; i < this._hint_count; ++i) {
              this._cards[i].getComponent(CSelfHandCard3D_1.default).setCanTouch(param_touch);
              this._cards[i].getComponent(CSelfHandCard3D_1.default).showCard();
            }
            for (let i = this._hint_count; i < this._cards.length; ++i) this._cards[i].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if ("chi" == this._type) {
            for (let i = 0; i < 3 * this._hint_count; ++i) {
              this._cards[i].getComponent(CSelfHandCard3D_1.default).setCanTouch(param_touch);
              this._cards[i].getComponent(CSelfHandCard3D_1.default).showCard();
            }
            for (let i = 3 * this._hint_count; i < this._cards.length; ++i) this._cards[i].getComponent(CSelfHandCard3D_1.default).hideCard();
          }
        }
        getSpriteNode() {
          let node_line = new cc.Node("line");
          this.node.addChild(node_line);
          let d = node_line.addComponent(cc.Sprite);
          d.type = cc.Sprite.Type.SIMPLE;
          d.spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame("other-btn_handle-btn_handle_bg_hint_line");
          d.sizeMode = cc.Sprite.SizeMode.RAW;
          d.trim = false;
          return node_line;
        }
      };
      CHandleHint3D = __decorate([ ccclass ], CHandleHint3D);
      return CHandleHint3D;
    })();
    exports.default = CHandleHint3D;
    cc._RF.pop();
  }, {
    "../cards_3d_config": "cards_3d_config",
    "../game_tools": "game_tools",
    "../table_3d_layout": "table_3d_layout",
    "./CSelfHandCard3D": "CSelfHandCard3D"
  } ],
  CHandleSelect3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3d2e2sWjSpOwKHlv7uao1sJ", "CHandleSelect3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const game_tools_1 = require("../game_tools");
    const cards_3d_config_1 = require("../cards_3d_config");
    const CHandleButton_1 = require("./CHandleButton");
    const CHandleHint3D_1 = require("./CHandleHint3D");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CHandleSelect3D = (() => {
      let CHandleSelect3D = class CHandleSelect3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._btn_handle_bg = null;
          this._gang_handle_hint = null;
          this._chi_handle_hint = null;
          this._on_result_func = null;
          this._view_size = null;
          this._canTouch = true;
        }
        init(view_size) {
          this._view_size = view_size;
          this._canTouch = true;
          if (!this._btn_handle_bg) {
            this._btn_handle_bg = game_tools_1.default.newImg({
              path: "other-btn_handle-btn_handle_handle_bg",
              name: "_btn_handle_bg"
            });
            this.node.addChild(this._btn_handle_bg);
            this._btn_handle_bg.getComponent(cc.Sprite).enabled = false;
          }
          this._btn_handle = new Array();
          for (let i = 0; i < 6; ++i) {
            let handle = null;
            handle = 4 == i ? game_tools_1.default.newBtn({
              normal: "other-btn_handle-btn_handle_btn_5_1",
              name: "handle"
            }) : game_tools_1.default.newBtn({
              normal: "other-btn_handle-btn_handle_btn_" + (i + 1),
              name: "handle"
            });
            handle.getComponent(CHandleButton_1.default)._index = i;
            handle.getComponent(CHandleButton_1.default)._type = cards_3d_config_1.HandleType.null;
            handle.getComponent(CHandleButton_1.default)._value = cards_3d_config_1.InvalidValue;
            var eventHandler = new cc.Component.EventHandler();
            eventHandler.target = this.node;
            eventHandler.component = "CHandleSelect3D";
            eventHandler.handler = "handleBtnEvent";
            handle.active = false;
            handle.getComponent(cc.Button).clickEvents.push(eventHandler);
            handle.getComponent(cc.Button).interactable = false;
            this._btn_handle.push(handle);
            this._btn_handle_bg.addChild(this._btn_handle[i]);
          }
          if (!this._gang_handle_hint) {
            this._gang_handle_hint = new cc.Node("_gang_handle_hint").addComponent(CHandleHint3D_1.default).node;
            this._gang_handle_hint.getComponent(CHandleHint3D_1.default).init();
            this._gang_handle_hint.getComponent(CHandleHint3D_1.default).setController(this);
            this._gang_handle_hint.getComponent(CHandleHint3D_1.default).setType("gang");
            this._btn_handle_bg.addChild(this._gang_handle_hint);
          }
          if (!this._chi_handle_hint) {
            this._chi_handle_hint = new cc.Node("_chi_handle_hint").addComponent(CHandleHint3D_1.default).node;
            this._chi_handle_hint.getComponent(CHandleHint3D_1.default).init();
            this._chi_handle_hint.getComponent(CHandleHint3D_1.default).setController(this);
            this._chi_handle_hint.getComponent(CHandleHint3D_1.default).setType("chi");
            this._btn_handle_bg.addChild(this._chi_handle_hint);
          }
          this.node.active = false;
        }
        setOnResultFunc(func_onResult) {
          func_onResult && (this._on_result_func = func_onResult);
        }
        push_if_not_exist(list, element) {
          for (let i = 0; i < list.length; ++i) if (list[i] == element) return;
          list.push(element);
        }
        setHandleData(list_handle, cai_shen_value) {
          let gang_data = new Array();
          let chi_data = new Array();
          let handle_order = new Array();
          this._gang_handle_hint.getComponent(CHandleHint3D_1.default).hideHint(true);
          this._chi_handle_hint.getComponent(CHandleHint3D_1.default).hideHint(true);
          for (let i = 0; i < this._btn_handle.length; ++i) {
            this._btn_handle[i].active = false;
            this._btn_handle[i].getComponent(cc.Button).interactable = false;
          }
          for (let i = 0; i < list_handle.length; ++i) {
            let handle_type = list_handle[i].type;
            let card_value = list_handle[i].value;
            if (handle_type == cards_3d_config_1.HandleType.b_peng) {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Peng].getComponent(CHandleButton_1.default)._type = handle_type;
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Peng].getComponent(CHandleButton_1.default)._value = card_value;
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Peng);
            } else if (handle_type == cards_3d_config_1.HandleType.b_chi_left || handle_type == cards_3d_config_1.HandleType.b_chi_mid || handle_type == cards_3d_config_1.HandleType.b_chi_right) {
              chi_data.push({
                type: handle_type,
                value: card_value
              });
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Chi);
            } else if (handle_type == cards_3d_config_1.HandleType.b_gang || handle_type == cards_3d_config_1.HandleType.d_gang || handle_type == cards_3d_config_1.HandleType.a_gang) {
              gang_data.push({
                type: handle_type,
                value: card_value
              });
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Gang);
            } else if (handle_type == cards_3d_config_1.HandleType.hu) {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Hu].getComponent(CHandleButton_1.default)._type = handle_type;
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Hu].getComponent(CHandleButton_1.default)._value = cards_3d_config_1.InvalidValue;
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Hu);
            } else if (handle_type == cards_3d_config_1.HandleType.pass) {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Pass].getComponent(CHandleButton_1.default)._type = handle_type;
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Pass].getComponent(CHandleButton_1.default)._value = cards_3d_config_1.InvalidValue;
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Pass);
            } else if (handle_type == cards_3d_config_1.HandleType.ting) {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Ting].getComponent(CHandleButton_1.default)._type = handle_type;
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Ting].getComponent(CHandleButton_1.default)._value = cards_3d_config_1.InvalidValue;
              this.push_if_not_exist(handle_order, cards_3d_config_1.HandleButtonIndex.Ting);
            }
          }
          let btn_count = handle_order.length;
          if (btn_count > 0) {
            let btn_width = this._btn_handle[0].getContentSize().width;
            let btn_height = this._btn_handle[0].getContentSize().height;
            let btn_start_x = -(btn_count - 1) * btn_width * .5;
            for (let i = 0; i < btn_count; ++i) {
              let handle_type = handle_order[i];
              this._btn_handle[handle_type].setPosition(cc.v2(btn_start_x + i * btn_width, -7));
              this._btn_handle[handle_type].active = true;
              this._btn_handle[handle_type].getComponent(cc.Button).interactable = true;
            }
            this._btn_handle_bg.active = true;
            if (1 == btn_count) {
              let comp = this._btn_handle_bg.getComponent(cc.Sprite);
              comp.type = cc.Sprite.Type.SLICED;
              comp.spriteFrame.insetTop = 30;
              comp.spriteFrame.insetBottom = 0;
              comp.spriteFrame.insetLeft = 480;
              comp.spriteFrame.insetRight = 138;
            } else {
              let comp = this._btn_handle_bg.getComponent(cc.Sprite);
              comp.type = cc.Sprite.Type.SLICED;
              comp.spriteFrame.insetTop = 135;
              comp.spriteFrame.insetBottom = 0;
              comp.spriteFrame.insetLeft = 270;
              comp.spriteFrame.insetRight = 138;
            }
            this._btn_handle_bg.setContentSize(cc.size(144 * (btn_count + 1) - 70, 138));
            this._btn_handle_bg.setPosition(cc.v2(this._view_size.width - .5 * this._btn_handle_bg.getContentSize().width - 110, 2 * this._btn_handle_bg.getContentSize().height));
            if (gang_data.length > 0) if (gang_data.length > 1) {
              for (let i = 0; i < gang_data.length; ++i) this._gang_handle_hint.getComponent(CHandleHint3D_1.default).addHintData(gang_data[i].type, gang_data[i].value);
              let x = this._btn_handle[cards_3d_config_1.HandleButtonIndex.Gang].position.x;
              let y = this._btn_handle[cards_3d_config_1.HandleButtonIndex.Gang].position.y;
              y += .5 * btn_height;
              this._gang_handle_hint.getComponent(CHandleHint3D_1.default).setBasePosition(cc.v2(x, y));
              x = this._btn_handle_bg.convertToWorldSpaceAR(cc.v2(x, y)).x;
              x > .5 * this._view_size.width ? this._gang_handle_hint.getComponent(CHandleHint3D_1.default).setDirRight() : this._gang_handle_hint.getComponent(CHandleHint3D_1.default).setDirLeft();
            } else {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Gang].getComponent(CHandleButton_1.default)._type = gang_data[0].type;
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Gang].getComponent(CHandleButton_1.default)._value = gang_data[0].value;
            }
            if (chi_data.length > 0) if (chi_data.length > 1) {
              for (let i = chi_data.length - 1; i >= 0; i--) this._chi_handle_hint.getComponent(CHandleHint3D_1.default).addHintData(chi_data[i].type, chi_data[i].value, cai_shen_value);
              let x = this._btn_handle[cards_3d_config_1.HandleButtonIndex.Chi].position.x;
              let y = this._btn_handle[cards_3d_config_1.HandleButtonIndex.Chi].position.y;
              y += .5 * btn_height;
              this._chi_handle_hint.getComponent(CHandleHint3D_1.default).setBasePosition(cc.v2(x, y));
              x = this._btn_handle_bg.convertToWorldSpaceAR(cc.v2(x, y)).x;
              x > .5 * this._view_size.width ? this._chi_handle_hint.getComponent(CHandleHint3D_1.default).setDirRight() : this._chi_handle_hint.getComponent(CHandleHint3D_1.default).setDirLeft();
            } else {
              this._btn_handle[cards_3d_config_1.HandleButtonIndex.Chi].getComponent(CHandleButton_1.default)._type = chi_data[0].type;
              cai_shen_value && chi_data[0].value == cai_shen_value ? this._btn_handle[cards_3d_config_1.HandleButtonIndex.Chi].getComponent(CHandleButton_1.default)._value = 47 : this._btn_handle[cards_3d_config_1.HandleButtonIndex.Chi].getComponent(CHandleButton_1.default)._value = chi_data[0].value;
            }
          } else this.node.active = false;
        }
        handleBtnEvent(event, customEventData) {
          if (!this._canTouch) return;
          let send_message = true;
          let sender = event.target.getComponent(CHandleButton_1.default);
          let index = sender._index;
          if (index == cards_3d_config_1.HandleButtonIndex.Gang && this._gang_handle_hint.getComponent(CHandleHint3D_1.default).getHintCount() > 0) {
            if (false == this._gang_handle_hint.active) {
              this._gang_handle_hint.getComponent(CHandleHint3D_1.default).showHint();
              this._chi_handle_hint.getComponent(CHandleHint3D_1.default).hideHint();
            } else this._gang_handle_hint.getComponent(CHandleHint3D_1.default).hideHint();
            send_message = false;
          }
          if (index == cards_3d_config_1.HandleButtonIndex.Chi && this._chi_handle_hint.getComponent(CHandleHint3D_1.default).getHintCount() > 0) {
            if (false == this._chi_handle_hint.active) {
              this._chi_handle_hint.getComponent(CHandleHint3D_1.default).showHint();
              this._gang_handle_hint.getComponent(CHandleHint3D_1.default).hideHint();
            } else this._chi_handle_hint.getComponent(CHandleHint3D_1.default).hideHint();
            send_message = false;
          }
          if (true == send_message) {
            this._on_result_func && this._on_result_func({
              handle_type: sender._type,
              card_value: sender._value
            });
            true == cards_3d_config_1.LayoutConfig.auto_hide_handle_select && this.hide();
          }
        }
        touchEvent(event, customEventData, card) {
          game_tools_1.default.log(event, customEventData, card);
          this._on_result_func && this._on_result_func({
            handle_type: card._type,
            card_value: card._message_value
          });
          true == cards_3d_config_1.LayoutConfig.auto_hide_handle_select && this.hide();
        }
        show() {
          this.node.active = true;
        }
        hide() {
          this._chi_handle_hint.getComponent(CHandleHint3D_1.default).hideHint(true);
          this._gang_handle_hint.getComponent(CHandleHint3D_1.default).hideHint(true);
          this.node.active = false;
        }
        canTouch(can) {
          if (can) {
            this.node.opacity = 255;
            this._canTouch = true;
          } else {
            this.node.opacity = 127.5;
            this._canTouch = false;
          }
        }
        onDestroy() {}
      };
      CHandleSelect3D = __decorate([ ccclass ], CHandleSelect3D);
      return CHandleSelect3D;
    })();
    exports.default = CHandleSelect3D;
    cc._RF.pop();
  }, {
    "../cards_3d_config": "cards_3d_config",
    "../game_tools": "game_tools",
    "./CHandleButton": "CHandleButton",
    "./CHandleHint3D": "CHandleHint3D"
  } ],
  CHandledCards3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1d0fdCAF5xEELz5CUj4kGyI", "CHandledCards3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const CTiledCard3D_1 = require("./CTiledCard3D");
    const game_tools_1 = require("../game_tools");
    const cards_3d_layout_1 = require("../cards_3d_layout");
    const table_3d_layout_1 = require("../table_3d_layout");
    const bind_function_1 = require("../../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CHandledCards3D = (() => {
      let CHandledCards3D = class CHandledCards3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._scale = 1;
          this._type = cards_3d_config_1.HandleType.null;
          this._value = cards_3d_config_1.InvalidValue;
          this._arrow = null;
          this._arrow_path = "";
        }
        onLoad() {}
        onDestroy() {}
        init(cards_info, base_x, base_y, base_zorder) {
          if (!cards_info) return;
          this._handled_card = [];
          for (let i = 0; i < 4; ++i) {
            this._handled_card[i] || (this._handled_card[i] = new cc.Node("card" + i).addComponent(CTiledCard3D_1.default).node);
            this._handled_card[i].getComponent(CTiledCard3D_1.default).init(cards_info.items[i], base_x, base_y, base_zorder);
          }
          if (!this._arrow) {
            this._arrow_path = cards_info.direct.file;
            this._arrow = game_tools_1.default.newImg({
              name: "_arrow"
            });
            this._arrow.setPosition(cc.v2(base_x + cards_info.direct.x, base_y + cards_info.direct.y));
            this._arrow.setScale(cards_info.direct.scale);
            this._arrow.zIndex = base_zorder + cards_info.direct.zorder;
          }
        }
        setHandledData(e_fromIndex, param_type, param_value, cai_shen_value) {
          this._type = param_type;
          this._value = param_value;
          this._from = e_fromIndex;
          this._handled_card[3].getComponent(CTiledCard3D_1.default).setCardValue(cards_3d_config_1.InvalidValue);
          if (param_type == cards_3d_config_1.HandleType.b_peng) for (let i = 0; i < 3; ++i) this._handled_card[i].getComponent(CTiledCard3D_1.default).setCardValue(param_value); else if (param_type == cards_3d_config_1.HandleType.b_chi_left) {
            cai_shen_value && param_value == cai_shen_value ? this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(param_value);
            cai_shen_value && param_value + 1 == cai_shen_value ? this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(param_value + 1);
            cai_shen_value && param_value + 2 == cai_shen_value ? this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(param_value + 2);
          } else if (param_type == cards_3d_config_1.HandleType.b_chi_mid) {
            cai_shen_value && param_value - 1 == cai_shen_value ? this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(param_value - 1);
            cai_shen_value && param_value == cai_shen_value ? this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(param_value);
            cai_shen_value && param_value + 1 == cai_shen_value ? this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(param_value + 1);
          } else if (param_type == cards_3d_config_1.HandleType.b_chi_right) {
            cai_shen_value && param_value - 2 == cai_shen_value ? this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[0].getComponent(CTiledCard3D_1.default).setCardValue(param_value - 2);
            cai_shen_value && param_value - 1 == cai_shen_value ? this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[1].getComponent(CTiledCard3D_1.default).setCardValue(param_value - 1);
            cai_shen_value && param_value == cai_shen_value ? this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(47) : this._handled_card[2].getComponent(CTiledCard3D_1.default).setCardValue(param_value);
          } else if (param_type == cards_3d_config_1.HandleType.d_gang) {
            let config = null;
            cards_3d_layout_1.default.get()._on_config_dark_gang_func && (config = cards_3d_layout_1.default.get()._on_config_dark_gang_func(param_value));
            if (config) for (let i = 0; i < 4; ++i) config[i] == cards_3d_config_1.DarkGangConfig.Value ? this._handled_card[i].getComponent(CTiledCard3D_1.default).setCardValue(param_value) : this._handled_card[i].getComponent(CTiledCard3D_1.default).showBack(); else {
              for (let i = 0; i < 3; ++i) this._handled_card[i].getComponent(CTiledCard3D_1.default).showBack();
              cards_3d_config_1.LayoutConfig.show_card_value_on_dark_gang ? this._handled_card[3].getComponent(CTiledCard3D_1.default).setCardValue(param_value) : this._handled_card[3].getComponent(CTiledCard3D_1.default).showBack();
            }
          } else if (param_type == cards_3d_config_1.HandleType.a_gang || param_type == cards_3d_config_1.HandleType.b_gang) for (let i = 0; i < 4; ++i) this._handled_card[i].getComponent(CTiledCard3D_1.default).setCardValue(param_value);
          if (cards_3d_config_1.LayoutConfig.show_heap_arrow && this._from >= 0 && this._from <= 3) {
            let img_path = bind_function_1.bf.string_replace_any(this._arrow_path, "{NUM}", this._from + 1);
            this._arrow.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
          }
        }
        showCards(corner_config, dark_card_value) {
          for (let i = 0; i < 3; ++i) this._handled_card[i].getComponent(CTiledCard3D_1.default).showCard(null, corner_config[this._handled_card[i].getComponent(CTiledCard3D_1.default).getCardValue()], this._handled_card[i].getComponent(CTiledCard3D_1.default).getCardValue() == dark_card_value);
          this._type == cards_3d_config_1.HandleType.b_gang || this._type == cards_3d_config_1.HandleType.a_gang || this._type == cards_3d_config_1.HandleType.d_gang ? this._handled_card[3].getComponent(CTiledCard3D_1.default).showCard(null, corner_config[this._handled_card[3].getComponent(CTiledCard3D_1.default).getCardValue()], this._handled_card[3].getComponent(CTiledCard3D_1.default).getCardValue() == dark_card_value) : this._handled_card[3].getComponent(CTiledCard3D_1.default).hideCard();
          cards_3d_config_1.LayoutConfig.show_heap_arrow && this._arrow && (null != this._from && -1 != this._from ? this._arrow.active = true : this._arrow.active = false);
        }
        hideCards() {
          for (let i = 0; i < 4; ++i) this._handled_card[i].getComponent(CTiledCard3D_1.default).hideCard();
          null != this._arrow && (this._arrow.active = false);
        }
        showMask(param_value) {}
        showHuMask(param_value) {
          for (let i = 0; i < 4; ++i) {
            let card_value = this._handled_card[i].getComponent(CTiledCard3D_1.default).getCardValue();
            card_value == param_value && card_value != cards_3d_config_1.InvalidValue && this._handled_card[i].getComponent(CTiledCard3D_1.default).showHuMask();
          }
        }
        hideMask() {}
      };
      CHandledCards3D = __decorate([ ccclass ], CHandledCards3D);
      return CHandledCards3D;
    })();
    exports.default = CHandledCards3D;
    cc._RF.pop();
  }, {
    "../../../Script/Framework/lobby/bind_function": "bind_function",
    "../cards_3d_config": "cards_3d_config",
    "../cards_3d_layout": "cards_3d_layout",
    "../game_tools": "game_tools",
    "../table_3d_layout": "table_3d_layout",
    "./CTiledCard3D": "CTiledCard3D"
  } ],
  CSelfCardsController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fbea75IpqBKNYAgz8MSP/zm", "CSelfCardsController");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const CSelfHandCard3D_1 = require("./CSelfHandCard3D");
    const cards_3d_logic_1 = require("../cards_3d_logic");
    const game_tools_1 = require("../game_tools");
    const CHandledCards3D_1 = require("./CHandledCards3D");
    const CTiledCard3D_1 = require("./CTiledCard3D");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CSelfCardsController = (() => {
      let CSelfCardsController = class CSelfCardsController extends cc.Component {
        constructor() {
          super(...arguments);
          this._view_size = null;
          this._view_root = null;
          this._dark_card_value = cards_3d_config_1.InvalidValue;
          this._corner_config = {};
          this._lay = false;
          this._selected_index = -1;
          this._lock_hand_cards = false;
          this._drag_began = false;
          this._onSelectedIndexFunc = null;
          this._findCardInHandPosition = null;
          this._onInsertHandCardFinish = null;
          this._onAnyTouchEventFunc = null;
          this._onMoveCardOut = null;
          this._onClickCardOut = null;
          this._onClickCard = null;
        }
        init(view_root, view_size, int_max_handcard_count, hand_cards, heap_cards) {
          this.reset();
          this._view_root = view_root;
          this._view_size = view_size;
          this._hand_cards = hand_cards;
          this._heap_cards = heap_cards;
          this._CARD_RESOURCE_WIDTH = 72;
          this._CARD_RESOURCE_HEIGHT = 108;
          this._CARD_RESOURCE_EDGE = 8;
          let wide_screen_mode = cc.Canvas.instance.node.width / cc.Canvas.instance.node.height > 1.7787;
          if (14 == int_max_handcard_count) {
            this._HAND_CARD_SCALE = view_size.width / 1334 * 1.28;
            wide_screen_mode && (this._HAND_CARD_SCALE *= 1.09375);
          } else if (17 == int_max_handcard_count) {
            this._HAND_CARD_SCALE = view_size.width / 1334 * 1.05;
            wide_screen_mode && (this._HAND_CARD_SCALE *= 1.142857);
          } else this._HAND_CARD_SCALE = view_size.width / 1334 * 1.15;
          this._HAND_CARD_SCALE = this._HAND_CARD_SCALE * cards_3d_config_1.LayoutConfig.custom_self_handcard_scale;
          this._HAND_CARD_WIDTH = this._CARD_RESOURCE_WIDTH * this._HAND_CARD_SCALE;
          this._HAND_CARD_HEIGHT = this._CARD_RESOURCE_HEIGHT * this._HAND_CARD_SCALE;
          this._HAND_CARD_BASE_X = (wide_screen_mode ? 17 == int_max_handcard_count ? 40 : 50 : 90) * this._HAND_CARD_SCALE + .5 * this._HAND_CARD_WIDTH;
          this._HAND_CARD_BASE_Y = 46 * this._HAND_CARD_SCALE;
          this._HAND_CARD_EDGE = this._CARD_RESOURCE_EDGE * this._HAND_CARD_SCALE;
          this._CATCH_HAND_CARD_SPACE = 20 * this._HAND_CARD_SCALE;
          this._SELECTED_HAND_CARD_SCALE = 1.2 * this._HAND_CARD_SCALE;
          this._HEAP_HAND_SPACE = 10 * this._HAND_CARD_SCALE;
          this._HEAP_CARD_SCALE = .8 * this._HAND_CARD_SCALE;
          this._HEAP_CARD_WIDTH = this._CARD_RESOURCE_WIDTH * this._HEAP_CARD_SCALE;
          this._HEAP_CARD_HEIGHT = this._CARD_RESOURCE_HEIGHT * this._HEAP_CARD_SCALE;
          this._HEAP_SPACE = 10 * this._HAND_CARD_SCALE;
          this._HEAP_BASE_X = (17 == int_max_handcard_count && wide_screen_mode ? 50 : 100) * this._HEAP_CARD_SCALE + .5 * this._HEAP_CARD_WIDTH;
          this._HEAP_BASE_Y = 0 + .5 * this._HEAP_CARD_HEIGHT;
          this._HEAP_ARROW_Y = 60 * this._HEAP_CARD_SCALE;
          this._HEAP_ARROW_SCALE = .7 * this._HEAP_CARD_SCALE;
          this._HEAP_CARD_EDGE = this._CARD_RESOURCE_EDGE * this._HEAP_CARD_SCALE;
          this._heap_card_pos = [ cc.v2(0, 0), cc.v2(this._HEAP_CARD_WIDTH - this._HEAP_CARD_EDGE, 0), cc.v2(2 * (this._HEAP_CARD_WIDTH - this._HEAP_CARD_EDGE), 0), cc.v2(this._HEAP_CARD_WIDTH - this._HEAP_CARD_EDGE, 22 * this._HAND_CARD_SCALE) ];
          this._heap_pos = new Array();
          for (let i = 0; i < 5; ++i) this._heap_pos.push(cc.v2(this._HEAP_BASE_X + i * (3 * (this._HEAP_CARD_WIDTH - this._HEAP_CARD_EDGE) + this._HEAP_SPACE), this._HEAP_BASE_Y));
          this._hand_cards_start_x = this._HAND_CARD_BASE_X;
        }
        reset() {
          this._touch_start_pos = null;
          this._dark_card_value = cards_3d_config_1.InvalidValue;
          this._corner_config = {};
          this._lay = false;
          this._selected_index = -1;
          this._lock_hand_cards = false;
          this._drag_began = false;
          this._ting_list = new Array();
          this._ting_da_list = new Array();
          this._ting_duo_list = new Array();
          this.setHandCardsCanTouch(false);
          this.setHandCardsCanOut(false);
          this.setHandCardsDark(false);
          this.setHandCardsTing(null);
        }
        setSelectedIndex(int_index) {
          this._onSelectedIndexFunc && this._onSelectedIndexFunc(int_index);
          this._selected_index = int_index;
        }
        newHandCard() {
          let card = new cc.Node("newHandCard").addComponent(CSelfHandCard3D_1.default);
          return card.node;
        }
        layHandCards(bool_lay) {
          this._lay = bool_lay;
          this.refreshHandCards();
        }
        setDarkCardValue(byte_card) {
          this._dark_card_value = byte_card;
        }
        setCornerCardValue(config) {
          this._corner_config = config;
        }
        setHandCards(cards, int_show_count) {
          if (this._lock_hand_cards) return;
          this.refreshHandCardStartPosition();
          null == int_show_count && (int_show_count = cards.length);
          for (let i = 0; i < int_show_count; ++i) this.addHandCard(cards[i], i);
          for (let i = this._hand_cards.length - 1; i >= int_show_count; --i) this.removeHandCard(i);
        }
        setHeapCards(heaps) {
          if (this._lock_hand_cards) return;
          for (let i = 0; i < heaps.length; ++i) this.addHeapCard(heaps[i].from, heaps[i].type, heaps[i].value, i, heaps[i].cai_value);
          for (let i = this._heap_cards.length - 1; i >= heaps.length; --i) this.removeHeapCard(i);
          this.refreshHandCardStartPosition();
          this.refreshHandCards();
        }
        refreshHandCardStartPosition() {
          let heaps = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.heap);
          if (heaps && heaps.length > 0) {
            let heap = this.getHeapCard(heaps.length - 1);
            game_tools_1.default.log(heap.getComponent(CHandledCards3D_1.default)._handled_card[3].position.x, .5 * this._HEAP_CARD_WIDTH, this._HEAP_HAND_SPACE, .5 * this._HAND_CARD_WIDTH);
            this._hand_cards_start_x = heap.getComponent(CHandledCards3D_1.default)._handled_card[2].position.x + .5 * this._HEAP_CARD_WIDTH + this._HEAP_HAND_SPACE + .5 * this._HAND_CARD_WIDTH;
          } else this._hand_cards_start_x = this._HAND_CARD_BASE_X;
        }
        refreshHandCards() {
          if (this._lock_hand_cards) return;
          let cards = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
          if (cards.length > 0) for (let i = 0; i < cards.length; ++i) this.addHandCard(cards[i], i);
          for (let i = this._hand_cards.length - 1; i >= cards.length; --i) this.removeHandCard(i);
          for (let i = 0; i < this._hand_cards.length; ++i) this._hand_cards[i].getComponent(CSelfHandCard3D_1.default).hideTing();
          if (this._ting_list) for (let i = 0; i < this._ting_list.length; ++i) this._hand_cards[this._ting_list[i]] && this._hand_cards[this._ting_list[i]].getComponent(CSelfHandCard3D_1.default).showTing(1);
          if (this._ting_da_list) for (let i = 0; i < this._ting_da_list.length; ++i) this._hand_cards[this._ting_da_list[i]] && this._hand_cards[this._ting_da_list[i]].getComponent(CSelfHandCard3D_1.default).showTing(2);
          if (this._ting_duo_list) for (let i = 0; i < this._ting_duo_list.length; ++i) this._hand_cards[this._ting_duo_list[i]] && this._hand_cards[this._ting_duo_list[i]].getComponent(CSelfHandCard3D_1.default).showTing(3);
        }
        unlockHandCards() {
          this._lock_hand_cards = false;
          for (let i = 0; i < this._hand_cards.length; ++i) this._hand_cards[i] && (this._hand_cards[i].getComponent(CSelfHandCard3D_1.default)._touch_paused = false);
        }
        lockHandCards() {
          this._lock_hand_cards = true;
          for (let i = 0; i < this._hand_cards.length; ++i) this._hand_cards[i] && (this._hand_cards[i].getComponent(CSelfHandCard3D_1.default)._touch_paused = true);
        }
        insertLastCardInHandCards(int_pos) {
          let cards = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
          if (!cards || 0 == cards.length) return;
          let last_index = cards.length;
          if (int_pos == last_index - 1) return;
          this.lockHandCards();
          let card = this._hand_cards[cards.length - 1];
          let card_value = cards[cards.length - 1];
          let other_cards = game_tools_1.default.clone(cards);
          other_cards.splice(int_pos, 1);
          other_cards.splice(other_cards.length - 1, 1);
          let index = other_cards.length;
          if (this._findCardInHandPosition) index = this._findCardInHandPosition(other_cards, card_value); else for (let i = 0; i < other_cards.length; ++i) if (other_cards[i] > card_value) {
            index = i;
            break;
          }
          let that = this;
          let move_end_func = function() {
            cards_3d_logic_1.default.get().sortHandCards(cards_3d_config_1.UserIndex.down);
            that.unlockHandCards();
            that.refreshHandCards();
            that._onInsertHandCardFinish && that._onInsertHandCardFinish();
          };
          let timeMove = .5;
          if (int_pos < index) for (let i = int_pos + 1; i <= index; ++i) {
            let pos = this.getHandCardPosition(i - 1);
            this._hand_cards[i].stopAllActions();
            this._hand_cards[i].runAction(cc.moveTo(.15 * timeMove, pos));
          } else if (int_pos > index) for (let i = index; i <= int_pos - 1; ++i) {
            let pos = this.getHandCardPosition(i + 1);
            this._hand_cards[i].stopAllActions();
            this._hand_cards[i].runAction(cc.moveTo(.15 * timeMove, pos));
          }
          if (index == other_cards.length) {
            let pt = this.getHandCardPosition(index);
            let move_action = cc.sequence(cc.moveTo(.35 * timeMove, pt), cc.callFunc(move_end_func));
            card.stopAllActions();
            card.runAction(move_action);
          } else {
            let pt = this.getHandCardPosition(index);
            let pos_x = pt.x;
            let pos_y = pt.y + 20;
            let move_action = cc.sequence(cc.moveTo(.15 * timeMove, cc.v2(card.position.x, pos_y + 100)), cc.moveTo(.075 * timeMove * (other_cards.length - index - 1), cc.v2(pos_x, pos_y + 100)), cc.moveTo(.15 * timeMove, cc.v2(pos_x, pos_y)), cc.callFunc(move_end_func));
            card.stopAllActions();
            card.runAction(move_action);
          }
        }
        addHeapCard(e_fromIndex, e_kind, byte_card, int_pos, cai_shen_value) {
          null == int_pos && (int_pos = this._heap_cards.length);
          let heap = this.getHeapCard(int_pos).getComponent(CHandledCards3D_1.default);
          if (heap) {
            heap.setHandledData(e_fromIndex, e_kind, byte_card, cai_shen_value);
            e_kind == cards_3d_config_1.HandleType.d_gang && cards_3d_config_1.LayoutConfig.show_self_dark_gang_card_value && heap._handled_card[3].getComponent(CTiledCard3D_1.default).setCardValue(byte_card);
            heap.showCards(this._corner_config, this._dark_card_value);
            let c = null;
            c = e_kind == cards_3d_config_1.HandleType.d_gang || e_kind == cards_3d_config_1.HandleType.b_gang || e_kind == cards_3d_config_1.HandleType.a_gang ? heap._handled_card[3] : heap._handled_card[1];
            let pos = cc.v2(c.position.x, c.position.y + this._HEAP_ARROW_Y);
            let z = c.zIndex;
            heap._arrow.setPosition(pos);
            heap._arrow.setScale(this._HEAP_ARROW_SCALE);
            heap._arrow.zIndex = z + 1;
          }
        }
        removeHeapCard(int_pos) {
          if (this._heap_cards && this._heap_cards.length > 0) {
            null == int_pos && (int_pos = this._heap_cards.length - 1);
            this._heap_cards[int_pos].getComponent(CHandledCards3D_1.default).hideCards();
          }
        }
        getHeapCard(int_pos) {
          if (!this._heap_cards[int_pos]) {
            let info = this.makeHeapCardLayoutInfo(int_pos);
            this._heap_cards[int_pos] = new cc.Node("heap" + int_pos).addComponent(CHandledCards3D_1.default).node;
            this._heap_cards[int_pos].getComponent(CHandledCards3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
            for (let i = 0; i < 4; ++i) this._view_root.addChild(this._heap_cards[int_pos].getComponent(CHandledCards3D_1.default)._handled_card[i]);
            this._view_root.addChild(this._heap_cards[int_pos]);
            this._view_root.addChild(this._heap_cards[int_pos].getComponent(CHandledCards3D_1.default)._arrow);
          }
          return this._heap_cards[int_pos];
        }
        addHandCard(byte_card, int_pos) {
          null == int_pos && (int_pos = this._hand_cards.length);
          let hand_card = this.getHandCard(int_pos);
          if (hand_card) {
            let info = this.makeHandCardLayoutInfo(int_pos, this._lay);
            hand_card.getComponent(CSelfHandCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
            hand_card.getComponent(CSelfHandCard3D_1.default).showCard(byte_card, this._corner_config[byte_card]);
          }
        }
        removeHandCard(int_pos) {
          if (this._hand_cards && this._hand_cards.length > 0) {
            null == int_pos && (int_pos = this._hand_cards.length - 1);
            this._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).hideCard();
          }
        }
        getHandCard(int_pos) {
          if (!this._hand_cards[int_pos]) {
            this._hand_cards[int_pos] = this.newHandCard();
            this._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).init();
            this._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).setController(this);
            this._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).setCanTouch(true);
            this._view_root.addChild(this._hand_cards[int_pos]);
          }
          return this._hand_cards[int_pos];
        }
        setHandCardsCanTouch(bool_can_touch, list_index) {
          if (!this._hand_cards) return;
          if (list_index) for (let i = 0; i < list_index.length; ++i) this._hand_cards[list_index[i]] && this._hand_cards[list_index[i]].getComponent(CSelfHandCard3D_1.default).setCanTouch(bool_can_touch); else this._hand_cards.forEach(c => {
            c.getComponent(CSelfHandCard3D_1.default).setCanTouch(bool_can_touch);
          });
        }
        setHandCardsCanTouchByValue(bool_can_touch, list_value) {
          if (!this._hand_cards) return;
          let list = this.getHandCardsIndexByValue(list_value);
          list && list.length > 0 && this.setHandCardsCanTouch(bool_can_touch, list);
        }
        setHandCardsCanOut(bool_can_out, list_index) {
          if (!this._hand_cards) return;
          if (list_index) for (let i = 0; i < list_index.length; ++i) this._hand_cards[list_index[i]] && this._hand_cards[list_index[i]].getComponent(CSelfHandCard3D_1.default).setCanOut(bool_can_out); else this._hand_cards.forEach(c => {
            c.getComponent(CSelfHandCard3D_1.default).setCanOut(bool_can_out);
          });
        }
        setHandCardsCanOutByValue(bool_can_out, list_value) {
          if (!this._hand_cards) return;
          let list = this.getHandCardsIndexByValue(list_value);
          list && list.length > 0 && this.setHandCardsCanOut(bool_can_out, list);
        }
        setHandCardsDark(bool_set_dark, list_index) {
          if (!this._hand_cards) return;
          if (list_index) for (let i = 0; i < list_index.length; ++i) this._hand_cards[list_index[i]] && (bool_set_dark ? this._hand_cards[list_index[i]].getComponent(CSelfHandCard3D_1.default).showMask() : this._hand_cards[list_index[i]].getComponent(CSelfHandCard3D_1.default).hideMask()); else this._hand_cards.forEach(c => {
            bool_set_dark ? c.getComponent(CSelfHandCard3D_1.default).showMask() : c.getComponent(CSelfHandCard3D_1.default).hideMask();
          });
        }
        setHandCardsDarkByValue(bool_set_dark, list_value) {
          if (!this._hand_cards) return;
          let list = this.getHandCardsIndexByValue(list_value);
          list && list.length > 0 && this.setHandCardsDark(bool_set_dark, list);
        }
        setHandCardsTing(list_index) {
          if (!this._hand_cards) return;
          if (list_index) this._ting_list = list_index; else {
            this._ting_list = [];
            this._ting_da_list = [];
            this._ting_duo_list = [];
          }
          this.refreshHandCards();
        }
        setHandCardsTingByValue(list_value) {
          if (!this._hand_cards) return;
          this._ting_list = this.getHandCardsIndexByValueTing(list_value);
          this.refreshHandCards();
        }
        setHandCardsTingDaByValue(list_value) {
          if (!this._hand_cards) return;
          this._ting_da_list = this.getHandCardsIndexByValueTing(list_value);
          this.refreshHandCards();
        }
        setHandCardsTingDuoByValue(list_value) {
          if (!this._hand_cards) return;
          this._ting_duo_list = this.getHandCardsIndexByValueTing(list_value);
          this.refreshHandCards();
        }
        getHandCardsIndexByValue(list_value) {
          let list = [];
          list_value && this._hand_cards.forEach((v, index) => {
            if (v) {
              let found = false;
              for (let i = 0; i < list_value.length; ++i) if (list_value[i] == v.getComponent(CSelfHandCard3D_1.default)._card_value) {
                found = true;
                break;
              }
              found && list.push(index);
            }
          });
          return list;
        }
        getHandCardsIndexByValueTing(list_value) {
          let list = [];
          let _list_value = [];
          if (list_value) for (let i = this._hand_cards.length - 1; i >= 0; i--) {
            let v = this._hand_cards[i];
            if (v) {
              let found = false;
              for (let i = 0; i < list_value.length; ++i) if (list_value[i] == v.getComponent(CSelfHandCard3D_1.default)._card_value && !_list_value.find((v, k) => v == list_value[i])) {
                _list_value.push(list_value[i]);
                found = true;
                break;
              }
              found && list.push(i);
            }
          }
          return list;
        }
        getHandCardPosition(int_pos) {
          let info = this.makeHandCardLayoutInfo(int_pos, false);
          return cc.v2(info.base_x + info.card_info.ground.x, info.base_y + info.card_info.ground.y);
        }
        makeHandCardLayoutInfo(int_pos, bool_lay) {
          let base_zorder = 1e3;
          let base_x = 0;
          let base_y = 0;
          let card_info = {
            id: 0,
            ground: {
              file: "",
              x: 0,
              y: 0,
              scale: 0
            },
            card: {
              file: "",
              x: 0,
              y: 0,
              scale: 0
            },
            corner: {
              file: "",
              x: 0,
              y: 0,
              scale: 0
            },
            zorder: 0
          };
          card_info.id = int_pos;
          card_info.ground.file = bool_lay ? "bottom_extra_bg" : "bottom_hand_1";
          let card_x_offset = 0;
          let card_y_offset = 0;
          let card_scale = this._HAND_CARD_SCALE;
          if (-1 != this._selected_index) {
            let w = this._HAND_CARD_WIDTH;
            let h = this._HAND_CARD_HEIGHT;
            let s_c = this._SELECTED_HAND_CARD_SCALE;
            let c = this._HAND_CARD_SCALE;
            if (int_pos == this._selected_index) {
              card_x_offset = w * (s_c - c) / c * .5;
              card_scale = this._SELECTED_HAND_CARD_SCALE;
              card_y_offset = h * (s_c - c) / c * .5;
            } else int_pos > this._selected_index && (card_x_offset = w * (s_c - c) / c);
          }
          card_info.ground.x = this._hand_cards_start_x + int_pos * (this._HAND_CARD_WIDTH - this._HAND_CARD_EDGE) + card_x_offset;
          let cards_count = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand).length;
          int_pos == cards_count - 1 && cards_count % 3 == 2 && (card_info.ground.x = card_info.ground.x + this._CATCH_HAND_CARD_SPACE);
          card_info.ground.y = this._HAND_CARD_BASE_Y + card_y_offset;
          card_info.ground.scale = card_scale;
          card_info.card.file = "hand_card_{NUM}";
          card_info.card.x = -36;
          card_info.card.y = bool_lay ? -38 : -55;
          card_info.card.scale = .7;
          card_info.corner.file = "corner_{NUM}_7";
          card_info.corner.x = -21;
          card_info.corner.y = bool_lay ? -16 : -28;
          card_info.corner.scale = 1;
          card_info.zorder = 16;
          return {
            card_info: card_info,
            base_x: base_x,
            base_y: base_y,
            base_zorder: base_zorder
          };
        }
        getCatchCardPosition() {
          let cards_count = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand).length;
          let int_pos = cards_count;
          let card_x_offset = 0;
          let card_y_offset = 0;
          let card_scale = this._HAND_CARD_SCALE;
          if (-1 != this._selected_index) {
            let w = this._HAND_CARD_WIDTH;
            let h = this._HAND_CARD_HEIGHT;
            let s_c = this._SELECTED_HAND_CARD_SCALE;
            let c = this._HAND_CARD_SCALE;
            if (int_pos == this._selected_index) {
              card_x_offset = w * (s_c - c) / c * .5;
              card_scale = this._SELECTED_HAND_CARD_SCALE;
              card_y_offset = h * (s_c - c) / c * .5;
            } else int_pos > this._selected_index && (card_x_offset = w * (s_c - c) / c);
          }
          let x = this._hand_cards_start_x + int_pos * (this._HAND_CARD_WIDTH - this._HAND_CARD_EDGE) + card_x_offset;
          x += this._CATCH_HAND_CARD_SPACE;
          let y = this._HAND_CARD_BASE_Y + card_y_offset;
          return {
            x: x,
            y: y,
            scale: card_scale
          };
        }
        makeHeapCardLayoutInfo(int_pos) {
          let base_zorder = 1e3;
          let base_x = 0;
          let base_y = 0;
          let card_info = {
            id: 0,
            direct: {
              file: "",
              x: 0,
              y: 0,
              scale: 0,
              zorder: 0
            },
            items: []
          };
          card_info.id = int_pos;
          card_info.direct.file = "direct_bottom_{NUM}";
          card_info.direct.x = 0;
          card_info.direct.y = 0;
          card_info.direct.scale = 1;
          card_info.direct.zorder = 4;
          let heap_count = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.heap).length;
          for (let i = 0; i < 4; ++i) card_info.items.push(this.makeSingleHeapCardLayoutInfo(heap_count, int_pos, i));
          return {
            card_info: card_info,
            base_x: base_x,
            base_y: base_y,
            base_zorder: base_zorder
          };
        }
        makeSingleHeapCardLayoutInfo(int_heap_count, int_heap_index, int_index) {
          let single_card = {
            id: 0,
            ground: {
              file: "",
              back: "",
              x: 0,
              y: 0,
              scale: 0
            },
            card: {
              file: "",
              x: 0,
              y: 0,
              scale: 0
            },
            corner: {
              file: "",
              x: 0,
              y: 0,
              scale: 0
            },
            zorder: 0
          };
          single_card.id = int_index;
          single_card.ground.file = "bottom_extra_bg";
          single_card.ground.back = "bottom_extra_an";
          single_card.ground.x = this._heap_pos[int_heap_index].x + this._heap_card_pos[int_index].x;
          single_card.ground.y = this._heap_pos[int_heap_index].y + this._heap_card_pos[int_index].y;
          single_card.ground.scale = this._HEAP_CARD_SCALE;
          single_card.card.file = "hand_card_{NUM}";
          single_card.card.x = -36;
          single_card.card.y = -37;
          single_card.card.scale = .7;
          single_card.corner.file = "corner_{NUM}_7";
          single_card.corner.x = -21;
          single_card.corner.y = -16;
          single_card.corner.scale = .7;
          single_card.zorder = 4 * (int_heap_index - 1) + (int_index - 1);
          return single_card;
        }
        touchEvent(event, customEventData, card) {
          this._onAnyTouchEventFunc && this._onAnyTouchEventFunc(card, event);
          if (event.getType() == cc.Node.EventType.TOUCH_START) {
            card._touch_pos = this.node.convertToNodeSpaceAR(event.touch.getLocation());
            this._touch_start_pos = event.getLocation();
          } else if (event.getType() == cc.Node.EventType.TOUCH_MOVE) {
            if (false == this._drag_began) {
              let currentPos = event.getLocation();
              let diff = Math.abs(currentPos.x - this._touch_start_pos.x) + Math.abs(currentPos.y - this._touch_start_pos.y);
              if (diff > 20) {
                this._drag_began = true;
                this.setSelectedIndex(-1);
                this.refreshHandCards();
                card.node.zIndex = 2e3;
                card.hideTing();
              }
            }
            if (this._drag_began) {
              card._touch_pos = this.node.convertToNodeSpaceAR(event.touch.getLocation());
              card.node.setPosition(card._touch_pos);
            }
          } else if (event.getType() == cc.Node.EventType.TOUCH_END) if (false == this._drag_began) {
            this.OnCardClicked(card);
            card.hideTing();
          } else {
            this._touch_start_pos = null;
            this._drag_began = false;
            card.node.position.y > 200 && card._bool_can_out ? this._onMoveCardOut && this._onMoveCardOut(card) : this.refreshHandCards();
          } else if (event.getType() == cc.Node.EventType.TOUCH_CANCEL) {
            this._touch_start_pos = null;
            this._drag_began = false;
            this.refreshHandCards();
          }
        }
        OnCardClicked(card) {
          let index = this.FindCardIndex(card);
          if (this._selected_index == index && card._bool_can_out) {
            this.setSelectedIndex(-1);
            this.refreshHandCards();
            this._onClickCardOut && this._onClickCardOut(card);
          } else {
            this.setSelectedIndex(index);
            this.refreshHandCards();
            this._onClickCard && this._onClickCard(card);
          }
        }
        FindCardIndex(card) {
          return this._hand_cards.indexOf(card.node);
        }
        setSelectedIndexFunc(func_onSelectedIndex) {
          func_onSelectedIndex && "function" == typeof func_onSelectedIndex && (this._onSelectedIndexFunc = func_onSelectedIndex);
        }
        setOnAnyTouchEventFunc(func_onAnyTouchEvent) {
          func_onAnyTouchEvent && "function" == typeof func_onAnyTouchEvent && (this._onAnyTouchEventFunc = func_onAnyTouchEvent);
        }
        setOnMoveCardOutFunc(func_onMoveCardOut) {
          func_onMoveCardOut && "function" == typeof func_onMoveCardOut && (this._onMoveCardOut = func_onMoveCardOut);
        }
        setOnClickCardOutFunc(func_onClickCardOut) {
          func_onClickCardOut && "function" == typeof func_onClickCardOut && (this._onClickCardOut = func_onClickCardOut);
        }
        setOnClickCardFunc(func_onClickCard) {
          func_onClickCard && "function" == typeof func_onClickCard && (this._onClickCard = func_onClickCard);
        }
        setFindCardInHandPositionFunc(func_findCardInHandPosition) {
          func_findCardInHandPosition && "function" == typeof func_findCardInHandPosition && (this._findCardInHandPosition = func_findCardInHandPosition);
        }
        setOnInsertHandCardFinishFunc(func_onInsertHandCardFinish) {
          func_onInsertHandCardFinish && "function" == typeof func_onInsertHandCardFinish && (this._onInsertHandCardFinish = func_onInsertHandCardFinish);
        }
      };
      CSelfCardsController = __decorate([ ccclass ], CSelfCardsController);
      return CSelfCardsController;
    })();
    exports.default = CSelfCardsController;
    cc._RF.pop();
  }, {
    "../cards_3d_config": "cards_3d_config",
    "../cards_3d_logic": "cards_3d_logic",
    "../game_tools": "game_tools",
    "./CHandledCards3D": "CHandledCards3D",
    "./CSelfHandCard3D": "CSelfHandCard3D",
    "./CTiledCard3D": "CTiledCard3D"
  } ],
  CSelfHandCard3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c8c718dr1NGIrTvD70MuqwZ", "CSelfHandCard3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const game_tools_1 = require("../game_tools");
    const table_3d_layout_1 = require("../table_3d_layout");
    const cards_3d_layout_1 = require("../cards_3d_layout");
    const bind_function_1 = require("../../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CSelfHandCard3D = (() => {
      let CSelfHandCard3D = class CSelfHandCard3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._controller = null;
          this._scale = 1;
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this._message_value = cards_3d_config_1.InvalidValue;
          this._type = cards_3d_config_1.HandleType.null;
          this._card_img = null;
          this._ground_path = null;
          this._touch_paused = false;
          this._can_touch = true;
          this._back_path = "bottom_extra_an";
          this._is_dark = false;
        }
        onLoad() {
          this.safe_on(cc.Node.EventType.TOUCH_START, function(event) {
            game_tools_1.default.log("CSelfHandCard3D TOUCH_START");
            var card = event.target;
            this.touchEvent(event, "");
          }, this);
          this.safe_on(cc.Node.EventType.TOUCH_MOVE, function(event) {
            game_tools_1.default.log("CSelfHandCard3D TOUCH_MOVE");
            var card = event.target;
            this.touchEvent(event, "");
          }, this);
          this.safe_on(cc.Node.EventType.TOUCH_CANCEL, function(event) {
            game_tools_1.default.log("CSelfHandCard3D TOUCH_CANCEL");
            var card = event.target;
            this.touchEvent(event, "");
          }, this);
          this.safe_on(cc.Node.EventType.TOUCH_END, function(event) {
            game_tools_1.default.log("CSelfHandCard3D TOUCH_END");
            var card = event.target;
            this.touchEvent(event, "");
          }, this);
        }
        init(card_info, base_x, base_y, base_zorder) {
          if (!card_info) {
            let info = this.makeDummyHandCardLayoutInfo();
            card_info = info.card_info;
            base_x = info.base_x;
            base_y = info.base_y;
            base_zorder = info.base_zorder;
          }
          if (null == this.getComponent(cc.Sprite)) {
            let c = this.addComponent(cc.Sprite);
            c.sizeMode = cc.Sprite.SizeMode.RAW;
            c.trim = false;
          }
          if (null == this.getComponent(cc.Button)) {
            let c = this.addComponent(cc.Button);
          }
          if (!this._card_img) {
            this._card_img = game_tools_1.default.newImg({
              name: "_card_img"
            });
            this.node.addChild(this._card_img);
          }
          if (!this._corner_img) {
            this._corner_img = game_tools_1.default.newImg({
              name: "_corner_img"
            });
            this.node.addChild(this._corner_img);
          }
          if (!this._card_mask) {
            this._card_mask = game_tools_1.default.newImg({
              name: "_card_mask"
            });
            this.node.addChild(this._card_mask);
          }
          if (!this._ting) {
            this._ting = game_tools_1.default.newImg({
              path: "ting",
              name: "_ting"
            });
            this.node.addChild(this._ting);
          }
          if (null != card_info) {
            this._ground_path = card_info.ground.file;
            this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
            this.node.setPosition(cc.v2(base_x + card_info.ground.x, base_y + card_info.ground.y));
            this.node.setScale(card_info.ground.scale);
            this.node.zIndex = base_zorder + card_info.zorder;
            if (null != card_info.card) {
              let card_x = this.node.getContentSize().width / 2 + card_info.card.x;
              let card_y = this.node.getContentSize().height / 2 + card_info.card.y;
              this._card_img.setPosition(cc.v2(card_x, card_y));
              this._card_img.setScale(card_info.card.scale);
              this._card_path = card_info.card.file;
            }
            if (card_info.corner) {
              this.corner_x = this.node.getContentSize().width / 2 + card_info.corner.x;
              this.corner_y = this.node.getContentSize().height / 2 + card_info.corner.y;
              this.corner_scale = card_info.corner.scale;
              this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
              this._corner_img.setScale(card_info.corner.scale);
              this._corner_path = card_info.corner.file;
            }
            this._card_mask.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
            this._card_mask.setPosition(cc.v2(0, 0));
            this._card_mask.setScale(1);
            this._card_mask.color = cc.Color.BLACK;
            this._card_mask.opacity = 150;
            this._card_mask.zIndex = base_zorder + card_info.zorder;
            this._card_mask.active = false;
            this._ting.setPosition(cc.v2(0, .5 * this.node.getContentSize().height + .5 * this._ting.getContentSize().height));
            this._ting.zIndex = base_zorder + card_info.zorder;
            this._ting.active = false;
          }
          this._is_dark ? this.showMask() : this.hideMask();
          this.node.active = false;
        }
        makeDummyHandCardLayoutInfo() {
          let base_zorder = 300;
          let base_x = 0;
          let base_y = 0;
          let card_info = {
            id: 0,
            ground: {
              file: "bottom_extra_bg",
              x: 0,
              y: 0,
              scale: 1
            },
            card: {
              file: "hand_card_{NUM}",
              x: -36,
              y: -38,
              scale: .7
            },
            corner: {
              file: "corner_{NUM}_7",
              x: -21,
              y: -16,
              scale: 1
            },
            zorder: 16
          };
          return {
            card_info: card_info,
            base_x: base_x,
            base_y: base_y,
            base_zorder: base_zorder
          };
        }
        setController(controller) {
          this._controller = controller;
        }
        setCardValue(param_value, param_corner_id, param_show_mask) {
          this._card_value = param_value;
          if (param_value == cards_3d_config_1.InvalidValue) {
            this._visual_value = cards_3d_config_1.InvalidValue;
            this._card_img.active = false;
            this.hideCorner();
            this.hideMask();
          } else {
            null != cards_3d_layout_1.default.get().CardExchangeTable[param_value] && (param_value = cards_3d_layout_1.default.get().CardExchangeTable[param_value]);
            this._visual_value = param_value;
            if (this._card_path && (this._visual_value >= 10 && this._visual_value <= 47 || this._visual_value >= 50 && this._visual_value <= 60)) {
              let img_path = bind_function_1.bf.string_replace_any(this._card_path, "{NUM}", this._visual_value);
              this._card_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
              this._card_img.active = true;
              this._card_img.opacity = 255;
            }
            this.node.opacity = 255;
            this._corner_img && (this._corner_img.opacity = 255);
            param_corner_id && 0 != param_corner_id ? this.showCorner(param_corner_id) : this.hideCorner();
            param_show_mask && (true == param_show_mask ? this.showMask() : this.hideMask());
          }
        }
        getCardValue() {
          return this._card_value;
        }
        setCanTouch(bool_touch) {
          this._can_touch = bool_touch && true == bool_touch;
        }
        setCanOut(bool_can_out) {
          this._bool_can_out = bool_can_out;
        }
        showTing(index) {
          if (this._ting) {
            1 == index ? this._ting.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame("ting") : 2 == index ? this._ting.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame("ting_da") : 3 == index && (this._ting.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame("ting_duo"));
            this._ting.active = true;
          }
        }
        hideTing() {
          this._ting && (this._ting.active = false);
        }
        setMessageValue(param_value) {
          this._message_value = param_value;
        }
        setType(param_type) {
          this._type = param_type;
        }
        touchEvent(event, customEventData) {
          if (!this._can_touch) return;
          if (this._touch_paused) return;
          this._controller && this._controller.touchEvent(event, customEventData, this);
        }
        showMask() {
          this._is_dark = true;
          this._card_mask.active = true;
        }
        hideMask() {
          this._is_dark = false;
          this._card_mask.active = false;
        }
        showCorner(corner_id) {
          if (corner_id >= 1 && corner_id <= 7) {
            let img_path = bind_function_1.bf.string_replace_any(this._corner_path, "{NUM}", corner_id);
            this._corner_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
            this._corner_img.active = true;
            this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
            this._corner_img.setScale(this.corner_scale);
          }
        }
        hideCorner() {
          this._corner_img.active = false;
        }
        setCardOpacity(int_opacity) {
          this.node.opacity = int_opacity;
          this._card_img.opacity = int_opacity;
          this._corner_img.opacity = int_opacity;
        }
        fadeIn(float_time) {
          this.node.stopAllActions();
          this.node.runAction(cc.fadeIn(float_time));
          this._card_img.stopAllActions();
          this._card_img.runAction(cc.fadeIn(float_time));
          this._corner_img.stopAllActions();
          this._corner_img.runAction(cc.fadeIn(float_time));
        }
        fadeOut(float_time) {
          this.node.stopAllActions();
          this.node.runAction(cc.fadeOut(float_time));
          this._card_img.stopAllActions();
          this._card_img.runAction(cc.fadeOut(float_time));
          this._corner_img.stopAllActions();
          this._corner_img.runAction(cc.fadeOut(float_time));
        }
        showBack() {
          this.setCardValue(cards_3d_config_1.InvalidValue);
          this.hideCorner();
          this.hideMask();
          this.hideTing();
          this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._back_path);
        }
        showCard(param_value, param_corner_id, param_show_mask) {
          null == param_value && (param_value = this._card_value);
          this.setCardValue(param_value, param_corner_id, param_show_mask);
          this.node.active = true;
        }
        hideCard() {
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this.node.opacity = 255;
          this.node.active = false;
        }
        onDestroy() {}
      };
      CSelfHandCard3D = __decorate([ ccclass ], CSelfHandCard3D);
      return CSelfHandCard3D;
    })();
    exports.default = CSelfHandCard3D;
    cc._RF.pop();
  }, {
    "../../../Script/Framework/lobby/bind_function": "bind_function",
    "../cards_3d_config": "cards_3d_config",
    "../cards_3d_layout": "cards_3d_layout",
    "../game_tools": "game_tools",
    "../table_3d_layout": "table_3d_layout"
  } ],
  CTiledCard3D: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2f0ed9FlxJOSp3paOSFywVz", "CTiledCard3D");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../cards_3d_config");
    const table_3d_layout_1 = require("../table_3d_layout");
    const game_tools_1 = require("../game_tools");
    const cards_3d_layout_1 = require("../cards_3d_layout");
    const bind_function_1 = require("../../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CTiledCard3D = (() => {
      let CTiledCard3D = class CTiledCard3D extends cc.Component {
        constructor() {
          super(...arguments);
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this.card_x = null;
          this.card_y = null;
          this.card_scale = null;
          this._card_path = null;
          this._back_up_path = null;
          this._back_down_path = null;
          this._ground_path = null;
          this.back_x = null;
          this._card_mask = null;
        }
        init(card_info, base_x, base_y, base_zorder) {
          if (!card_info) return;
          if (null == this.getComponent(cc.Sprite)) {
            let c = this.addComponent(cc.Sprite);
            c.sizeMode = cc.Sprite.SizeMode.RAW;
            c.trim = false;
          }
          card_info.ground.back && (this._back_down_path = card_info.ground.back);
          this._ground_path = card_info.ground.file;
          this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
          this.back_x = base_x + card_info.ground.x;
          this.back_y = base_y + card_info.ground.y;
          this.back_scale = card_info.ground.scale;
          this.node.setPosition(cc.v2(this.back_x, this.back_y));
          this.node.setScale(this.back_scale);
          this.node.zIndex = base_zorder + card_info.zorder;
          this.card_x = this.node.getContentSize().width / 2 + card_info.card.x;
          this.card_y = this.node.getContentSize().height / 2 + card_info.card.y;
          this.card_scale = card_info.card.scale;
          this._card_img = game_tools_1.default.newImg({
            name: "_card_img"
          });
          this._card_img.setPosition(cc.v2(this.card_x, this.card_y));
          this._card_img.setScale(card_info.card.scale);
          this.node.addChild(this._card_img);
          this._card_path = card_info.card.file;
          this.corner_x = this.node.getContentSize().width / 2 + card_info.corner.x;
          this.corner_y = this.node.getContentSize().height / 2 + card_info.corner.y;
          this.corner_scale = card_info.corner.scale;
          this._corner_img = game_tools_1.default.newImg({
            name: "_corner_img"
          });
          this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
          this._corner_img.setScale(card_info.corner.scale);
          this.node.addChild(this._corner_img);
          this._corner_path = card_info.corner.file;
          this._card_mask = new cc.Node("_card_mask");
          let c = this._card_mask.addComponent(cc.Sprite);
          c.sizeMode = cc.Sprite.SizeMode.RAW;
          c.trim = false;
          this._card_mask.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
          this._card_mask.setPosition(cc.v2(0, 0));
          this._card_mask.setScale(1);
          this._card_mask.color = cc.Color.BLACK;
          this._card_mask.opacity = 50;
          this._card_mask.zIndex = base_zorder + card_info.zorder;
          this._card_mask.active = false;
          this.node.addChild(this._card_mask);
          this.node.active = false;
        }
        setCardValue(param_value, param_corner_id, param_show_mask, param_opacity) {
          this._card_value = param_value;
          if (param_value == cards_3d_config_1.InvalidValue) this._card_img.active = false; else {
            null != cards_3d_layout_1.default.get().CardExchangeTable[param_value] && (param_value = cards_3d_layout_1.default.get().CardExchangeTable[param_value]);
            this._visual_value = param_value;
            if (this._visual_value >= 10 && this._visual_value <= 47 || this._visual_value >= 50 && this._visual_value <= 58) {
              let img_path = bind_function_1.bf.string_replace_any(this._card_path, "{NUM}", this._visual_value);
              this._card_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
            }
            this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._ground_path);
            this._card_img.active = true;
            this._card_img.setPosition(cc.v2(this.card_x, this.card_y));
            this._card_img.setScale(this.card_scale);
            param_corner_id && 0 != param_corner_id ? this.showCorner(param_corner_id) : this.hideCorner();
            param_show_mask && true == param_show_mask ? this.showMask() : this.hideMask();
            if (param_opacity) {
              this.hideMask();
              this.node.opacity = 150;
            }
          }
        }
        getCardValue() {
          return this._card_value ? this._card_value : cards_3d_config_1.InvalidValue;
        }
        getCardVisualValue() {
          return this._visual_value ? this._visual_value : cards_3d_config_1.InvalidValue;
        }
        showCard(param_value, param_corner_id, param_show_mask, param_show_opacity = false) {
          null == param_value && (param_value = this.getCardValue());
          this.setCardValue(param_value, param_corner_id, param_show_mask, param_show_opacity);
          this.node.active = true;
        }
        hideCard() {
          this.node.active = false;
          this._card_value = cards_3d_config_1.InvalidValue;
          this._visual_value = cards_3d_config_1.InvalidValue;
          this.hideMask();
          this.hideHuMask();
          this.hideCorner();
          this.node.opacity = 255;
        }
        showBack() {
          if (this._back_down_path) {
            this.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(this._back_down_path);
            this.node.setScale(this.back_scale);
            this.setCardValue(cards_3d_config_1.InvalidValue);
            this._visual_value = cards_3d_config_1.InvalidValue;
          }
        }
        showMask() {
          this._card_mask.active = true;
          this._card_mask.opacity = 127.5;
        }
        hideMask() {
          this._card_mask.active = false;
        }
        showHuMask() {}
        hideHuMask() {}
        showCorner(param_corner_id) {
          if (param_corner_id >= 1 && param_corner_id <= 7) {
            let img_path = bind_function_1.bf.string_replace_any(this._corner_path, "{NUM}", param_corner_id);
            this._corner_img.getComponent(cc.Sprite).spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(img_path);
            this._corner_img.active = true;
            this._corner_img.setPosition(cc.v2(this.corner_x, this.corner_y));
            this._corner_img.setScale(this.corner_scale);
          }
        }
        hideCorner() {
          this._corner_img.active = false;
        }
        onDestroy() {}
      };
      CTiledCard3D = __decorate([ ccclass ], CTiledCard3D);
      return CTiledCard3D;
    })();
    exports.default = CTiledCard3D;
    cc._RF.pop();
  }, {
    "../../../Script/Framework/lobby/bind_function": "bind_function",
    "../cards_3d_config": "cards_3d_config",
    "../cards_3d_layout": "cards_3d_layout",
    "../game_tools": "game_tools",
    "../table_3d_layout": "table_3d_layout"
  } ],
  CaiShenCardEditor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d9311vaHFJDYpwJlWlfKvfq", "CaiShenCardEditor");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const CaiShenSelectCount_1 = require("./CaiShenSelectCount");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CaiShenCardEditor = (() => {
      let CaiShenCardEditor = class CaiShenCardEditor extends cc.Component {
        constructor() {
          super(...arguments);
          this.cptCaiShenSelectCount = null;
          this.class_name = "CaiShenCardEditor";
          this.gray_color = cc.color(120, 120, 120);
          this.white_color = cc.color(255, 255, 255);
          this.brown_color = cc.color(225, 139, 52);
          this.node_cancel = null;
          this.node_count = null;
          this.node_wan = null;
          this.node_tiao = null;
          this.node_tong = null;
          this.node_dnxb = null;
          this.node_zfb = null;
          this.node_hua = null;
          this._selected_node = null;
        }
        get selected_node() {
          return this._selected_node;
        }
        set selected_node(value) {
          this._selected_node = value;
          if (null == value) {
            this.node_count.color = this.gray_color;
            this.node_count.getComponent(cc.Button).interactable = false;
          } else {
            this.node_count.color = this.white_color;
            this.node_count.getComponent(cc.Button).interactable = true;
          }
        }
        onLoad() {
          this.fetchNode();
        }
        start() {}
        hide() {
          this.node.active = false;
        }
        show(remove = []) {
          this.setData(remove);
          this.node.active = true;
        }
        fetchNode() {
          if (!this.node_cancel) {
            let root = this.node.getChildByName("root");
            this.node_cancel = root.getChildByName("btn_cancel");
            this.node_count = root.getChildByName("btn_count");
            this.node_wan = root.getChildByName("wan");
            this.node_tiao = root.getChildByName("tiao");
            this.node_tong = root.getChildByName("tong");
            this.node_dnxb = root.getChildByName("dnxb");
            this.node_zfb = root.getChildByName("zfb");
            this.node_hua = root.getChildByName("hua");
            utils_1.utils.bind_button_event(this.node_cancel.addComponent(cc.Button), this.node, this.class_name, "onCancelClick");
            utils_1.utils.bind_button_event(this.node_count.addComponent(cc.Button), this.node, this.class_name, "onCountClick");
            [ this.node_wan, this.node_tiao, this.node_tong, this.node_dnxb, this.node_zfb, this.node_hua ].forEach(node => {
              let childs = node.getChildByName("item").children;
              childs.forEach(child => {
                utils_1.utils.bind_button_event(child.addComponent(cc.Button), this.node, this.class_name, "onCardClick");
              });
            });
          }
        }
        setData(remove) {
          this.fetchNode();
          let wan = this.node_wan.getChildByName("item").children;
          let tiao = this.node_tiao.getChildByName("item").children;
          let tong = this.node_tong.getChildByName("item").children;
          let dnxb = this.node_dnxb.getChildByName("item").children;
          let zfb = this.node_zfb.getChildByName("item").children;
          let hua = this.node_hua.getChildByName("item").children;
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              v2.getChildByName("check").active = false;
              v2.getComponent(cc.Button).interactable = true;
              v2.color = this.white_color;
            });
          });
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              if (remove.some(ele => ele == Number(v2.name))) {
                v2.getChildByName("check").active = false;
                v2.color = this.gray_color;
                v2.getComponent(cc.Button).interactable = false;
              }
            });
          });
          this.selected_node = null;
        }
        onCancelClick(event, customEventData) {
          this.hide();
        }
        onCountClick(event, customEventData) {
          this.cptCaiShenSelectCount.show(Number(this.selected_node.name));
        }
        onCardClick(event, customEventData) {
          let node = event.target;
          if (node == this.selected_node) return;
          let check = node.getChildByName("check");
          check.active = !check.active;
          if (check.active) {
            this.selected_node && (this.selected_node.getChildByName("check").active = false);
            this.selected_node = node;
          }
        }
      };
      __decorate([ property(CaiShenSelectCount_1.default) ], CaiShenCardEditor.prototype, "cptCaiShenSelectCount", void 0);
      CaiShenCardEditor = __decorate([ ccclass ], CaiShenCardEditor);
      return CaiShenCardEditor;
    })();
    exports.default = CaiShenCardEditor;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "./CaiShenSelectCount": "CaiShenSelectCount"
  } ],
  CaiShenSelectCount: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07d18jAx9JKjrdW2X2hQ9du", "CaiShenSelectCount");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CaiShenSelectCount = (() => {
      let CaiShenSelectCount = class CaiShenSelectCount extends cc.Component {
        constructor() {
          super(...arguments);
          this.altas = null;
          this.class_name = "CaiShenSelectCount";
          this.node_cancel = null;
          this.node_ok = null;
          this.node_sub = null;
          this.node_add = null;
          this.sprite_card = null;
          this.label_count = null;
          this._card_value = 0;
          this._card_count = 0;
          this.max_count = 0;
        }
        get card_value() {
          return this._card_value;
        }
        set card_value(value) {
          this._card_value = value;
          0 != value && (this.sprite_card.spriteFrame = this.altas.getSpriteFrame(value.toString()));
        }
        get card_count() {
          return this._card_count;
        }
        set card_count(value) {
          this._card_count = value;
          this.label_count.string = value.toString();
        }
        onLoad() {
          this.fetchNode();
        }
        start() {}
        hide() {
          this.node.active = false;
        }
        show(card) {
          this.setData(card);
          this.node.active = true;
        }
        fetchNode() {
          if (!this.node_cancel) {
            let root = this.node.getChildByName("root");
            let border = root.getChildByName("border");
            this.node_cancel = root.getChildByName("btn_cancel");
            this.node_ok = root.getChildByName("btn_ok");
            this.node_sub = border.getChildByName("btn_sub");
            this.node_add = border.getChildByName("btn_add");
            this.sprite_card = root.getChildByName("card").getComponent(cc.Sprite);
            this.label_count = border.getChildByName("label").getComponent(cc.Label);
            utils_1.utils.bind_button_event(this.node_cancel.addComponent(cc.Button), this.node, this.class_name, "onCancelClick");
            utils_1.utils.bind_button_event(this.node_ok.addComponent(cc.Button), this.node, this.class_name, "onOkClick");
            utils_1.utils.bind_button_event(this.node_sub.addComponent(cc.Button), this.node, this.class_name, "onSubClick");
            utils_1.utils.bind_button_event(this.node_add.addComponent(cc.Button), this.node, this.class_name, "onAddClick");
          }
        }
        setData(card) {
          this.fetchNode();
          this.card_value = card;
          this.max_count = card >= 51 ? 1 : 4;
          this.card_count = this.max_count;
        }
        onCancelClick(event, customEventData) {
          this.hide();
        }
        onOkClick(event, customEventData) {
          utils_1.utils.send("CaiShenCardEditor", [ this.card_value, this.card_count ]);
          this.hide();
        }
        onSubClick(event, customEventData) {
          if (1 == this.max_count) return;
          --this.card_count;
          this.card_count < 1 && (this.card_count = this.max_count);
        }
        onAddClick(event, customEventData) {
          if (1 == this.max_count) return;
          ++this.card_count;
          this.card_count > this.max_count && (this.card_count = 1);
        }
      };
      __decorate([ property(cc.SpriteAtlas) ], CaiShenSelectCount.prototype, "altas", void 0);
      CaiShenSelectCount = __decorate([ ccclass ], CaiShenSelectCount);
      return CaiShenSelectCount;
    })();
    exports.default = CaiShenSelectCount;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils"
  } ],
  CardPoolEditor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "79159fl5qVGRZlnNlr/mV3/", "CardPoolEditor");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CardPoolEditor = (() => {
      let CardPoolEditor = class CardPoolEditor extends cc.Component {
        constructor() {
          super(...arguments);
          this.class_name = "CardPoolEditor";
          this.node_cancel = null;
          this.node_ok = null;
          this.node_wan = null;
          this.node_tiao = null;
          this.node_tong = null;
          this.node_dnxb = null;
          this.node_zfb = null;
          this.node_hua = null;
        }
        onLoad() {
          this.fetchNode();
        }
        start() {}
        hide() {
          this.node.active = false;
        }
        show(arr = []) {
          this.setData(arr);
          this.node.active = true;
        }
        fetchNode() {
          if (!this.node_cancel) {
            let root = this.node.getChildByName("root");
            this.node_cancel = root.getChildByName("btn_cancel");
            this.node_ok = root.getChildByName("btn_ok");
            this.node_wan = root.getChildByName("wan");
            this.node_tiao = root.getChildByName("tiao");
            this.node_tong = root.getChildByName("tong");
            this.node_dnxb = root.getChildByName("dnxb");
            this.node_zfb = root.getChildByName("zfb");
            this.node_hua = root.getChildByName("hua");
            utils_1.utils.bind_button_event(this.node_cancel.addComponent(cc.Button), this.node, this.class_name, "onCancelClick");
            utils_1.utils.bind_button_event(this.node_ok.addComponent(cc.Button), this.node, this.class_name, "onOkClick");
            utils_1.utils.bind_button_event(this.node_wan.addComponent(cc.Button), this.node, this.class_name, "onTypeClick");
            utils_1.utils.bind_button_event(this.node_tong.addComponent(cc.Button), this.node, this.class_name, "onTypeClick");
            utils_1.utils.bind_button_event(this.node_tiao.addComponent(cc.Button), this.node, this.class_name, "onTypeClick");
            utils_1.utils.bind_button_event(this.node_dnxb.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_zfb.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_hua.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            [ this.node_dnxb, this.node_zfb, this.node_hua ].forEach(node => {
              let childs = node.getChildByName("item").children;
              childs.forEach(child => {
                utils_1.utils.bind_button_event(child.addComponent(cc.Button), this.node, this.class_name, "onCardClick");
              });
            });
          }
        }
        updateAllSelected(node) {
          let all_selected = true;
          let childs = node.getChildByName("item").children;
          for (let i = 0; i < childs.length; ++i) if (false == childs[i].getChildByName("check").active) {
            all_selected = false;
            break;
          }
          node.getChildByName("btn").getChildByName("check").active = all_selected;
        }
        setData(arr) {
          this.fetchNode();
          let have_wan = false;
          let have_tong = false;
          let have_tiao = false;
          let dnxb = this.node_dnxb.getChildByName("item").children;
          let zfb = this.node_zfb.getChildByName("item").children;
          let hua = this.node_hua.getChildByName("item").children;
          [ this.node_wan, this.node_tong, this.node_tiao ].forEach(item => {
            item.getChildByName("check").active = true;
          });
          dnxb.forEach(item => {
            item.getChildByName("check").active = true;
          });
          zfb.forEach(item => {
            item.getChildByName("check").active = true;
          });
          hua.forEach(item => {
            item.getChildByName("check").active = true;
          });
          arr.forEach(value => {
            if (value >= 11 && value <= 19) have_wan = true; else if (value >= 21 && value <= 29) have_tong = true; else if (value >= 31 && value <= 39) have_tiao = true; else if (value >= 41 && value <= 44) {
              for (let i = 0; i < dnxb.length; ++i) if (Number(dnxb[i].name) == value) {
                dnxb[i].getChildByName("check").active = false;
                break;
              }
            } else if (value >= 45 && value <= 49) {
              for (let i = 0; i < zfb.length; ++i) if (Number(zfb[i].name) == value) {
                zfb[i].getChildByName("check").active = false;
                break;
              }
            } else if (value >= 51 && value <= 58) for (let i = 0; i < hua.length; ++i) if (Number(hua[i].name) == value) {
              hua[i].getChildByName("check").active = false;
              break;
            }
          });
          this.node_wan.getChildByName("check").active = !have_wan;
          this.node_tong.getChildByName("check").active = !have_tong;
          this.node_tiao.getChildByName("check").active = !have_tiao;
          this.updateAllSelected(this.node_dnxb);
          this.updateAllSelected(this.node_zfb);
          this.updateAllSelected(this.node_hua);
        }
        onCancelClick(event, customEventData) {
          this.hide();
        }
        onOkClick(event, customEventData) {
          let remove = [];
          false == this.node_wan.getChildByName("check").active && (remove = remove.concat([ 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19 ]));
          false == this.node_tong.getChildByName("check").active && (remove = remove.concat([ 21, 22, 23, 24, 25, 26, 27, 28, 29, 21, 22, 23, 24, 25, 26, 27, 28, 29, 21, 22, 23, 24, 25, 26, 27, 28, 29, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]));
          false == this.node_tiao.getChildByName("check").active && (remove = remove.concat([ 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39 ]));
          [ this.node_dnxb, this.node_zfb ].forEach(node => {
            let childs = node.getChildByName("item").children;
            childs.forEach(child => {
              false == child.getChildByName("check").active && (remove = remove.concat([ Number(child.name), Number(child.name), Number(child.name), Number(child.name) ]));
            });
          });
          let childs = this.node_hua.getChildByName("item").children;
          childs.forEach(child => {
            false == child.getChildByName("check").active && remove.push(Number(child.name));
          });
          utils_1.utils.send("CardPoolEditor", remove);
          this.hide();
        }
        onAllClick(event, customEventData) {
          let node = event.target;
          let check = node.getChildByName("check");
          check.active = !check.active;
          let childs = node.parent.getChildByName("item").children;
          childs.forEach(child => {
            child.getChildByName("check").active = check.active;
          });
        }
        onTypeClick(event, customEventData) {
          let node = event.target;
          let check = node.getChildByName("check");
          if (check.active) {
            let selected_count = 0;
            [ this.node_wan, this.node_tong, this.node_tiao ].forEach(item => {
              item.getChildByName("check").active && ++selected_count;
            });
            if (selected_count <= 2) {
              utils_1.utils.show_hint("\u4e07\u3001\u7b52\u3001\u6761\u81f3\u5c11\u9009\u62e9\u4e24\u79cd");
              return;
            }
          }
          check.active = !check.active;
        }
        onCardClick(event, customEventData) {
          let node = event.target;
          let check = node.getChildByName("check");
          check.active = !check.active;
          this.updateAllSelected(node.parent.parent);
        }
      };
      CardPoolEditor = __decorate([ ccclass ], CardPoolEditor);
      return CardPoolEditor;
    })();
    exports.default = CardPoolEditor;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils"
  } ],
  ChatPlay: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ab247G2oWNKsowwFtqD8tWQ", "ChatPlay");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.UserChatDirection = void 0;
    const UserChat_1 = require("./UserChat");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var UserChatDirection;
    (function(UserChatDirection) {
      UserChatDirection[UserChatDirection["TopLeft"] = 0] = "TopLeft";
      UserChatDirection[UserChatDirection["TopRight"] = 1] = "TopRight";
      UserChatDirection[UserChatDirection["BottomLeft"] = 2] = "BottomLeft";
      UserChatDirection[UserChatDirection["BottomRight"] = 3] = "BottomRight";
    })(UserChatDirection = exports.UserChatDirection || (exports.UserChatDirection = {}));
    let ChatPlay = (() => {
      let ChatPlay = class ChatPlay extends cc.Component {
        constructor() {
          super(...arguments);
          this.userChatBottomLeft = null;
          this.userChatBottomRight = null;
          this.userChatTopLeft = null;
          this.userChatTopRight = null;
          this.userChat = [];
        }
        addUserChat(index, root, any_param) {
          let config = any_param;
          null == this.userChat && (this.userChat = new Array());
          if (null != this.userChat[index]) {
            this.userChat[index].node.destroy();
            this.userChat[index] = null;
          }
          let userChat = null;
          let rootNode = root || this.node;
          any_param.direction == UserChatDirection.TopLeft ? userChat = utils_1.utils.add_instance_to_root(this.userChatTopLeft, rootNode, UserChat_1.default) : any_param.direction == UserChatDirection.TopRight ? userChat = utils_1.utils.add_instance_to_root(this.userChatTopRight, rootNode, UserChat_1.default) : any_param.direction == UserChatDirection.BottomLeft ? userChat = utils_1.utils.add_instance_to_root(this.userChatBottomLeft, rootNode, UserChat_1.default) : any_param.direction == UserChatDirection.BottomRight && (userChat = utils_1.utils.add_instance_to_root(this.userChatBottomRight, rootNode, UserChat_1.default));
          userChat.init(any_param);
          this.userChat[index] = userChat;
        }
        getUserChatByIndex(index) {
          if (index < this.userChat.length) return this.userChat[index];
          return null;
        }
      };
      __decorate([ property(cc.Prefab) ], ChatPlay.prototype, "userChatBottomLeft", void 0);
      __decorate([ property(cc.Prefab) ], ChatPlay.prototype, "userChatBottomRight", void 0);
      __decorate([ property(cc.Prefab) ], ChatPlay.prototype, "userChatTopLeft", void 0);
      __decorate([ property(cc.Prefab) ], ChatPlay.prototype, "userChatTopRight", void 0);
      __decorate([ property([ UserChat_1.default ]) ], ChatPlay.prototype, "userChat", void 0);
      ChatPlay = __decorate([ ccclass ], ChatPlay);
      return ChatPlay;
    })();
    exports.default = ChatPlay;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "./UserChat": "UserChat"
  } ],
  ChatRecordNode: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d74937uF8RFW5CCQYkK03Og", "ChatRecordNode");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ChatRecordNode = (() => {
      let ChatRecordNode = class ChatRecordNode extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelText = null;
          this.nodeTextEm = null;
          this.labelEm = null;
          this.spriteEm = null;
        }
        onLoad() {}
        setText(username, text) {
          if (0 == text.indexOf("[EM]")) {
            let str = text.substr(4, 2);
            let index = parseInt(str);
            this.setEm(username, index);
          } else this.setNormalText(username, text);
        }
        setNormalText(username, text) {
          this.labelText.node.active = true;
          this.nodeTextEm.active = false;
          this.labelText.string = username + ":" + text;
        }
        setEm(username, index) {
          this.labelText.node.active = false;
          this.nodeTextEm.active = true;
          this.labelEm.string = username + ":";
          global_data_1.global_data.spriteFrameMap.has(`Emotion-${index}_se`) && (this.spriteEm.spriteFrame = global_data_1.global_data.spriteFrameMap.get(`Emotion-${index}_se`));
        }
      };
      __decorate([ property(cc.Label) ], ChatRecordNode.prototype, "labelText", void 0);
      __decorate([ property(cc.Node) ], ChatRecordNode.prototype, "nodeTextEm", void 0);
      __decorate([ property(cc.Label) ], ChatRecordNode.prototype, "labelEm", void 0);
      __decorate([ property(cc.Sprite) ], ChatRecordNode.prototype, "spriteEm", void 0);
      ChatRecordNode = __decorate([ ccclass ], ChatRecordNode);
      return ChatRecordNode;
    })();
    exports.default = ChatRecordNode;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data"
  } ],
  CommonTextButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d97a7BE4yBFF4cmy0Xu6HMv", "CommonTextButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CommonTextButton = (() => {
      let CommonTextButton = class CommonTextButton extends cc.Component {
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "CommonTextButton";
          clickEventHandler.handler = "onBtnClicked";
          var button = this.getComponent(cc.Button);
          button.clickEvents.push(clickEventHandler);
        }
        onBtnClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let e = new cc.Event.EventCustom("textClicked", true);
          let t = this.getComponent(cc.Label);
          e.setUserData(t.string);
          this.node.dispatchEvent(e);
        }
      };
      CommonTextButton = __decorate([ ccclass ], CommonTextButton);
      return CommonTextButton;
    })();
    exports.default = CommonTextButton;
    cc._RF.pop();
  }, {
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  CompleteInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c7873k0lL5CrJ3fDg/L+NYB", "CompleteInfo");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CompleteInfo = (() => {
      let CompleteInfo = class CompleteInfo extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.nameInput = null;
          this.phoneInput = null;
          this.addressInput = null;
          this.saveBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "CompleteInfo", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.saveBtn, this.node, "CompleteInfo", "onSaveBtnClicked");
        }
        onShow() {
          this.getAddress();
        }
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onSaveBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.saveAddress();
        }
        saveAddress() {
          if ("" == this.nameInput.string) {
            utils_1.utils.show_hint("\u8bf7\u8f93\u5165\u6536\u8d27\u4eba\u59d3\u540d");
            return;
          }
          if ("" == this.phoneInput.string) {
            utils_1.utils.show_hint("\u8bf7\u8f93\u5165\u624b\u673a\u53f7\u7801");
            return;
          }
          if ("" == this.addressInput.string) {
            utils_1.utils.show_hint("\u8bf7\u8f93\u5165\u6536\u8d27\u4eba\u7684\u6b63\u786e\u5730\u5740");
            return;
          }
          let name_str = this.nameInput.string;
          let phone_str = this.phoneInput.string;
          let address_str = this.addressInput.string;
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_USER_ADDRESS_INSERT);
          url = utils_1.utils.string_replace_any(url, "{PHONE}", encodeURIComponent(phone_str));
          url = utils_1.utils.string_replace_any(url, "{NICKNAME}", encodeURIComponent(name_str));
          url = utils_1.utils.string_replace_any(url, "{ADDRESS}", encodeURIComponent(address_str));
          utils_1.utils.show_loading("", true);
          utils_1.utils.send_http_request({
            url: url,
            success: () => {
              utils_1.utils.show_hint("\u4fdd\u5b58\u6210\u529f");
            },
            fail: errMsg => {
              utils_1.utils.show_hint(errMsg);
            },
            complete: () => {
              utils_1.utils.hide_loading();
            }
          });
        }
        getAddress() {
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_USER_ADDRESS_SEARCH);
          utils_1.utils.show_loading("", true);
          utils_1.utils.send_http_request({
            url: url,
            success: data => {
              this.nameInput.string = data.nickname ? decodeURIComponent(data.nickname) : "";
              this.phoneInput.string = data.phone ? decodeURIComponent(data.phone) : "";
              this.addressInput.string = data.address ? decodeURIComponent(data.address) : "";
            },
            fail: errMsg => {
              utils_1.utils.show_hint(errMsg);
              this.nameInput.string = "";
              this.phoneInput.string = "";
              this.addressInput.string = "";
            },
            complete: () => {
              utils_1.utils.hide_loading();
            }
          });
        }
      };
      __decorate([ property(cc.Button) ], CompleteInfo.prototype, "closeBtn", void 0);
      __decorate([ property(cc.EditBox) ], CompleteInfo.prototype, "nameInput", void 0);
      __decorate([ property(cc.EditBox) ], CompleteInfo.prototype, "phoneInput", void 0);
      __decorate([ property(cc.EditBox) ], CompleteInfo.prototype, "addressInput", void 0);
      __decorate([ property(cc.Button) ], CompleteInfo.prototype, "saveBtn", void 0);
      CompleteInfo = __decorate([ ccclass ], CompleteInfo);
      return CompleteInfo;
    })();
    exports.default = CompleteInfo;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  ConnectError: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "df1ff9ECQNPqYmiox11J3jc", "ConnectError");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ConnectError = (() => {
      let ConnectError = class ConnectError extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.label = null;
          this.closeBtn = null;
          this.serviceBtn = null;
          this.relogonBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "ConnectError", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.serviceBtn, this.node, "ConnectError", "onServiceBtnClicked");
          utils_1.utils.bind_button_event(this.relogonBtn, this.node, "ConnectError", "onRelogonBtnClicked");
        }
        onShow() {}
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onServiceBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          platform_1.platform.inst.openCustomerServiceConversation({});
        }
        onRelogonBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          this.hide_callback = () => {
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Logon);
          };
        }
      };
      __decorate([ property(cc.Label) ], ConnectError.prototype, "label", void 0);
      __decorate([ property(cc.Button) ], ConnectError.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], ConnectError.prototype, "serviceBtn", void 0);
      __decorate([ property(cc.Button) ], ConnectError.prototype, "relogonBtn", void 0);
      ConnectError = __decorate([ ccclass ], ConnectError);
      return ConnectError;
    })();
    exports.default = ConnectError;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  CreateAndEditor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7a4069gNktDD7yAZdPNLor9", "CreateAndEditor");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const LobbyYiFuRoomButton_1 = require("./LobbyYiFuRoomButton");
    const LobbyRuleLayout_1 = require("./LobbyRuleLayout");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CreateAndEditor = (() => {
      let CreateAndEditor = class CreateAndEditor extends cc.Component {
        constructor() {
          super(...arguments);
          this.createPanelNew = null;
          this.editorPanelNew = null;
          this.createPanelNewMask = null;
          this.createButtonNew1 = null;
          this.createButtonNew2 = null;
          this.moreButton = null;
          this.backButton = null;
          this.bgButton = null;
          this.pipeiButton = null;
          this.createNewTip1 = null;
          this.createNewTip2 = null;
          this.moreNewTip1 = null;
          this.oneRootNode = null;
          this.twoRootNode = null;
          this.ruleLayout = null;
          this.roomPrefab = null;
          this.moreNode = null;
          this.ruleLayoutTwo = null;
          this._timer_mathch = null;
          this._can_refresh_time = false;
          this.GAME_FAKE_MATCH = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.createButtonNew1, this.node, "CreateAndEditor", "onCreateButtonClicked");
          utils_1.utils.bind_button_event(this.createButtonNew2, this.node, "CreateAndEditor", "onCreateButtonClicked");
          utils_1.utils.bind_button_event(this.moreButton, this.node, "CreateAndEditor", "onMoreButtonClicked");
          utils_1.utils.bind_button_event(this.backButton, this.node, "CreateAndEditor", "onbackButtonClicked");
          utils_1.utils.bind_button_event(this.bgButton, this.node, "CreateAndEditor", "onBGButtonClicked");
          utils_1.utils.bind_button_event(this.pipeiButton, this.node, "CreateAndEditor", "onPiPeiButtonClicked");
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_1_3, cc.find("CreateNewPanel/OneRootNode/create_more_node/create1", cc.find("Canvas/LobbyYiFuMain")));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_2_1, cc.find("EditorPanelNew/ruleRoot/ruleLayoutScrollView/ruleLayout/100", cc.find("Canvas/LobbyYiFuMain")));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_3_1, cc.find("EditorPanelNew/preViewRoot/gameDetailScrollView", cc.find("Canvas/LobbyYiFuMain")));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_3_2, cc.find("EditorPanelNew/preViewRoot/EditBox", cc.find("Canvas/LobbyYiFuMain")));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_3_3, cc.find("EditorPanelNew/preViewRoot/City", cc.find("Canvas/LobbyYiFuMain")));
          utils_1.utils.on("refreshCreateNewRuleTips", this, this.refreshCreateNewRuleTips);
          utils_1.utils.on("refreshMoreNewRuleTips", this, this.refreshMoreNewRuleTips);
          utils_1.utils.on("show_fake_match", this, this.refreshFakeAni);
          this._timer_mathch || (this._timer_mathch = this.schedule(this.refreshFakeMatch, .1));
        }
        start() {
          this.createPanelNewMask.active = false;
          this.createButtonNew1.node.active = false;
          this.pipeiButton.node.active = false;
          this.createNewTip1.active = false;
          this.createNewTip2.active = false;
          this.moreNewTip1.active = false;
        }
        onDestroy() {
          utils_1.utils.off("refreshCreateNewRuleTips", this, this.refreshCreateNewRuleTips);
          utils_1.utils.off("refreshMoreNewRuleTips", this, this.refreshMoreNewRuleTips);
          utils_1.utils.off("show_fake_match", this, this.refreshFakeAni);
          if (this._timer_mathch) {
            this.unschedule(this._timer_mathch);
            this._timer_mathch = null;
          }
        }
        showCreatePanel() {
          this.editorPanelNew.active = false;
          this.createPanelNew.active = true;
          this.createPanelNewMask.active = true;
          setTimeout(() => {
            this.createPanelNewMask.active = false;
          }, 200);
          this.oneRootNode.active = true;
          this.twoRootNode.active = false;
          this.ruleLayout.removeAllChildren();
          this.moreNode.active = false;
          this.createButtonNew1.node.active = false;
          custom_lobby_1.custom_lobby.fetch_player_rules_local({
            success: () => {
              let datas = custom_lobby_1.custom_lobby.player_rules;
              let count = datas.length;
              for (let i = 0; i < count; i++) if (i < 2 - this.GAME_FAKE_MATCH) {
                let rp = cc.instantiate(this.roomPrefab);
                this.ruleLayout.addChild(rp);
                let data = datas[i];
                rp.getComponent(LobbyYiFuRoomButton_1.LobbyYiFuRoomButton).setData(data);
                let node = this.ruleLayout.children[i];
                node.active = true;
                this.bindClickEvent(node, data);
              }
              if (count < 3 - this.GAME_FAKE_MATCH) {
                this.createButtonNew1.node.active = true;
                this.pipeiButton.node.active = true;
              } else {
                this.moreNode.active = true;
                this.pipeiButton.node.active = true;
              }
              0 == count;
              let that = this;
              utils_1.utils.send("refreshTeachAndFeedbackVisable", 1);
              this.showRootAction(this.oneRootNode, function() {
                that.tutorial_editor(count);
              });
            }
          });
          this.refreshCreateNewRuleTips();
          this.refreshMoreNewRuleTips();
          this.refreshFakeAni();
        }
        refreshFakeMatch() {}
        refreshFakeAni() {}
        showRootAction(rootNode, callBack) {
          let more_node = rootNode.getChildByName("create_more_node");
          let rulesLayout = rootNode.getChildByName("RulesLayout");
          more_node.active = true;
          rulesLayout.active = true;
          let timer = .5;
          let distance = -30;
          let posx_1 = more_node.getPosition().x - distance;
          let posx_2 = rulesLayout.getPosition().x - distance;
          more_node.setPosition(posx_1, more_node.getPosition().y);
          rulesLayout.setPosition(posx_2, rulesLayout.getPosition().y);
          more_node.opacity = 0;
          rulesLayout.opacity = 0;
          more_node.runAction(cc.sequence(cc.delayTime(0), cc.spawn(cc.fadeIn(timer), cc.moveBy(timer, cc.v2(distance, 0))), cc.callFunc(function() {
            callBack && callBack();
          })));
          rulesLayout.runAction(cc.spawn(cc.fadeIn(timer), cc.moveBy(timer, cc.v2(distance, 0))));
        }
        hideRootAction(rootNode, callBack) {
          let more_node = rootNode.getChildByName("create_more_node");
          let rulesLayout = rootNode.getChildByName("RulesLayout");
          let timer = .2;
          let distance = 20;
          more_node.opacity = 255;
          rulesLayout.opacity = 255;
          more_node.runAction(cc.sequence(cc.spawn(cc.fadeOut(timer), cc.moveBy(timer, cc.v2(distance, 0))), cc.callFunc(function() {
            let posx_1 = more_node.getPosition().x - distance;
            more_node.setPosition(posx_1, more_node.getPosition().y);
            callBack && callBack();
          })));
          rulesLayout.runAction(cc.sequence(cc.spawn(cc.fadeOut(timer), cc.moveBy(timer, cc.v2(distance, 0))), cc.callFunc(function() {
            let posx_2 = rulesLayout.getPosition().x - distance;
            rulesLayout.setPosition(posx_2, rulesLayout.getPosition().y);
          })));
        }
        tutorial_editor(l_count) {
          if (l_count > 0) {
            if (this.checkLobby_4()) {
              tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_4_2, this.ruleLayout.children[0]);
              tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_4_2, .2);
              return;
            }
            if (1 == l_count) {
              tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_4_1, this.ruleLayout.children[0]);
              tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_4_1, .2);
            } else if (2 == l_count) {
              tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_4_3, this.ruleLayout.children[1]);
              tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_4_3, .2);
            } else if (l_count > 2) {
              tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_4_4, this.moreNode);
              tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_4_4, .2);
            }
          }
        }
        checkLobby_4() {
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          } catch (e) {
            return false;
          }
          if (mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_4_1 || mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_4_3 || mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_4_4) return true;
          return false;
        }
        bindClickEvent(node, data) {
          console.log("bindClickEvent", data);
          node.getChildByName("RoomButton").getChildByName("name").getComponent(cc.Label).string = utils_1.utils.clamp_nickname(data.name, 5);
          let btn = node.getChildByName("RoomEditor").getComponent(cc.Button);
          utils_1.utils.set_button_handler(btn, this.node, "CreateAndEditor", "onEditButtonClicked", data);
          btn = node.getChildByName("RoomDelete").getComponent(cc.Button);
          utils_1.utils.set_button_handler(btn, this.node, "CreateAndEditor", "onDeleteButtonClicked", data);
        }
        onEditButtonClicked(_, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.onBGButtonClicked();
          let obj = JSON.parse(JSON.stringify(customEventData));
          console.log("customEventData : ", customEventData);
          custom_lobby_1.custom_lobby.current_player_rule = obj;
          console.log("current_player_rule : ", custom_lobby_1.custom_lobby.current_player_rule);
          this.editorPanelNew.active = true;
          this.editorPanelNew.getChildByName("ruleRoot").getComponent(LobbyRuleLayout_1.default).showEditorLayout();
        }
        onDeleteButtonClicked(_, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let that = this;
          utils_1.utils.show_message_box({
            content: "\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u73a9\u6cd5\u5417\uff1f",
            button_count: 2,
            onClick: n => {
              if (0 == n) {
                custom_lobby_1.custom_lobby.delete_player_rule(customEventData.id);
                custom_lobby_1.custom_lobby.save_player_rules_local({
                  success: () => {
                    that.showCreatePanel();
                  }
                });
              }
            }
          });
        }
        onCreateButtonClicked() {
          tutorial_1.tutorial.close_tutorial();
          sound_manager_1.sound_manager.play_click();
          this.markCreateNewRuleTips();
          if (10 == custom_lobby_1.custom_lobby.player_rules.length) {
            utils_1.utils.show_hint("\u73a9\u6cd5\u521b\u5efa\u8f83\u591a,\u8bf7\u5148\u5220\u9664\u518d\u521b\u5efa");
            return;
          }
          this.editorPanelNew.active = true;
          this.editorPanelNew.getChildByName("ruleRoot").getComponent(LobbyRuleLayout_1.default).showCreateLayout();
        }
        onMoreButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.markMoreNewRuleTips();
          let that = this;
          this.hideRootAction(this.oneRootNode, function() {
            that.oneRootNode.active = false;
            that.showMore();
          });
          utils_1.utils.send("refreshTeachAndFeedbackVisable", 0);
          this.twoRootNode.active = true;
          tutorial_1.tutorial.close_tutorial();
        }
        onPiPeiButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.launchGameTest();
        }
        onMatchButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          let target_room_data = new global_data_1.global_data.struct_room_data();
          let gameId = 152;
          console.log("global_data._vector_room_data. : ", global_data_1.global_data._vector_room_data);
          let rooms = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == gameId && -1 != x._str_rule.indexOf("match_start"));
          rooms && rooms.length > 0 && (target_room_data = rooms[0]);
          console.log("target_room_data : ", target_room_data);
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Game, {
            room: target_room_data
          });
        }
        markCreateNewRuleTips() {
          let date = new Date();
          utils_1.utils.setLocalStorage("ShowCreateNewRuleTips", `${100 * (date.getMonth() + 1) + date.getDate()}`);
          utils_1.utils.send("refreshCreateNewRuleTips");
        }
        markMoreNewRuleTips() {
          let date = new Date();
          utils_1.utils.setLocalStorage("ShowMoreNewRuleTips", `${100 * (date.getMonth() + 1) + date.getDate()}`);
          utils_1.utils.send("refreshMoreNewRuleTips");
        }
        refreshCreateNewRuleTips() {
          let date = new Date();
          let str = utils_1.utils.getLocalStorage("ShowCreateNewRuleTips");
          let show = false;
          str && Math.floor(Number(str) / 100) == date.getMonth() + 1 && Number(str) % 100 == date.getDate() && (show = false);
          this.createNewTip1.active = show;
          this.createNewTip2.active = show;
          this.createNewTip1.stopAllActions();
          this.createNewTip2.stopAllActions();
          if (show) {
            this.playNewRuleTipsAnimation(this.createNewTip1);
            this.playNewRuleTipsAnimation(this.createNewTip2);
          }
        }
        refreshMoreNewRuleTips() {
          let date = new Date();
          let str = utils_1.utils.getLocalStorage("ShowMoreNewRuleTips");
          let show = false;
          str && Math.floor(Number(str) / 100) == date.getMonth() + 1 && Number(str) % 100 == date.getDate() && (show = false);
          this.moreNewTip1.active = show;
          this.moreNewTip1.stopAllActions();
          show && this.playNewRuleTipsAnimation(this.moreNewTip1);
        }
        playNewRuleTipsAnimation(tipNode) {
          let timer = 1;
          let dis = 6;
          tipNode.setPosition(cc.v2(83, 150));
          let vec_1 = cc.v2(tipNode.getPosition().x, tipNode.getPosition().y + dis);
          let vec_2 = cc.v2(tipNode.getPosition().x, tipNode.getPosition().y - dis);
          tipNode.runAction(cc.sequence(cc.moveTo(timer, vec_1), cc.moveTo(timer, vec_2)).repeatForever());
        }
        playFakeMatchTipAniamtion(tipNode) {
          let timer = 1;
          let dis = 6;
          tipNode.setPosition(cc.v2(0, 220));
          let vec_1 = cc.v2(tipNode.getPosition().x, tipNode.getPosition().y + dis);
          let vec_2 = cc.v2(tipNode.getPosition().x, tipNode.getPosition().y - dis);
          tipNode.stopAllActions();
          tipNode.runAction(cc.sequence(cc.moveTo(timer, vec_1), cc.moveTo(timer, vec_2)).repeatForever());
        }
        launchGameTest() {
          let target_room_data = new global_data_1.global_data.struct_room_data();
          false;
          true;
          {
            let gameId = 152;
            console.log("global_data._vector_room_data. : ", global_data_1.global_data._vector_room_data);
            let rooms = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == gameId && -1 == x._str_rule.indexOf("match_start"));
            rooms && rooms.length > 0 && (target_room_data = rooms[0]);
          }
          false;
          console.log("target_room_data : ", target_room_data);
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Game, {
            room: target_room_data
          });
        }
        ontestButtonClicked() {}
        showMore() {
          this.ruleLayoutTwo.removeAllChildren();
          let datas = custom_lobby_1.custom_lobby.player_rules;
          let count = datas.length;
          for (let i = 2 - this.GAME_FAKE_MATCH; i < count; i++) {
            let data = datas[i];
            let rp = cc.instantiate(this.roomPrefab);
            this.ruleLayoutTwo.addChild(rp);
            rp.getComponent(LobbyYiFuRoomButton_1.LobbyYiFuRoomButton).setData(data);
            let node = this.ruleLayoutTwo.children[i - (2 - this.GAME_FAKE_MATCH)];
            node.active = true;
            this.bindClickEvent(node, data);
          }
          this.showRootAction(this.twoRootNode, null);
        }
        onbackButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.oneRootNode.active = true;
          let that = this;
          this.hideRootAction(this.twoRootNode, function() {
            that.twoRootNode.active = false;
            that.showRootAction(that.oneRootNode, null);
            utils_1.utils.send("refreshTeachAndFeedbackVisable", 1);
          });
        }
        onBGButtonClicked() {
          let rule_1_count = this.ruleLayout.childrenCount;
          if (rule_1_count > 0) for (let i = 0; i < rule_1_count; i++) this.ruleLayout.children[i].getComponent(LobbyYiFuRoomButton_1.LobbyYiFuRoomButton).updateButton(false);
          let rule_2_count = this.ruleLayoutTwo.childrenCount;
          if (rule_2_count > 0) for (let i = 0; i < rule_2_count; i++) this.ruleLayoutTwo.children[i].getComponent(LobbyYiFuRoomButton_1.LobbyYiFuRoomButton).updateButton(false);
        }
      };
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "createPanelNew", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "editorPanelNew", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "createPanelNewMask", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "createButtonNew1", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "createButtonNew2", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "moreButton", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "backButton", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "bgButton", void 0);
      __decorate([ property(cc.Button) ], CreateAndEditor.prototype, "pipeiButton", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "createNewTip1", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "createNewTip2", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "moreNewTip1", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "oneRootNode", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "twoRootNode", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "ruleLayout", void 0);
      __decorate([ property(cc.Prefab) ], CreateAndEditor.prototype, "roomPrefab", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "moreNode", void 0);
      __decorate([ property(cc.Node) ], CreateAndEditor.prototype, "ruleLayoutTwo", void 0);
      CreateAndEditor = __decorate([ ccclass ], CreateAndEditor);
      return CreateAndEditor;
    })();
    exports.default = CreateAndEditor;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./LobbyRuleLayout": "LobbyRuleLayout",
    "./LobbyYiFuRoomButton": "LobbyYiFuRoomButton"
  } ],
  CreatePrivate: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "57e7d4qFRROU5HgV250XkCS", "CreatePrivate");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PrivatePanel_1 = require("./PrivatePanel");
    const PrivateToggleItem_1 = require("./PrivateToggleItem");
    const AppGlobal_1 = require("../../AppGlobal");
    const game_auxi_1 = require("../../Framework/lobby/game/game_auxi");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const global_define_1 = require("../../Framework/lobby/global_define");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let CreatePrivate = (() => {
      let CreatePrivate = class CreatePrivate extends cc.Component {
        constructor() {
          super(...arguments);
          this.confirmBtn = null;
          this.privateToggleItemPrefab = null;
          this.typeLayoutRoot = null;
          this.roundLayoutRoot = null;
          this.description = null;
          this.gameid = 0;
          this.data = null;
          this.item = null;
          this.type = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.confirmBtn, this.node, "CreatePrivate", "onComfirmClicked");
        }
        setData(gameid) {
          this.gameid = gameid;
          let friend = global_data_1.global_data.gamelist_json_data.friend;
          for (let i = 0; i < friend.length; ++i) if (friend[i].id == this.gameid) {
            let data = new PrivatePanel_1.CreatePrivateData();
            data._str_name = friend[i].name;
            data._int_game_id = friend[i].id;
            data._int_expire = friend[i].expire;
            data._vector_main_item = [];
            friend[i].items.forEach(item => {
              let main = new PrivatePanel_1.CreateMainPrivateData();
              main._str_des = item.desc;
              main._str_name = item.name;
              main.int_room_type = item.kind;
              main._vector_sub_items = [];
              item.items.forEach(element => {
                let sub = new PrivatePanel_1.CreatePrivateItemData();
                sub._int_count = element.count;
                sub._int_id = element.id;
                sub._int_kind = element.kind;
                sub._int_prop = element.prop;
                sub._kindcount = element.kindcount;
                sub._str_desc = element.desc;
                main._vector_sub_items.push(sub);
              });
              data._vector_main_item.push(main);
            });
            this.fillData(data);
            break;
          }
        }
        fillData(data) {
          this.data = data;
          this.typeLayoutRoot.node.removeAllChildren();
          data._vector_main_item.forEach(type => {
            this.addType(type);
          });
          if (data._vector_main_item.length > 0) {
            this.checkType(0);
            this.switchType(data._vector_main_item[0]);
          }
        }
        checkType(n) {
          for (let i = 0; i < this.typeLayoutRoot.node.childrenCount; ++i) if (i == n) {
            this.typeLayoutRoot.node.children[i].getComponent(cc.Toggle).check();
            this.typeLayoutRoot.node.children[i].getComponentInChildren(cc.Label).node.color = new cc.Color().fromHEX("#c72b16");
          } else {
            this.typeLayoutRoot.node.children[i].getComponent(cc.Toggle).uncheck();
            this.typeLayoutRoot.node.children[i].getComponentInChildren(cc.Label).node.color = new cc.Color().fromHEX("#663112");
          }
        }
        addType(type) {
          let toggle = utils_1.utils.add_instance_to_root(this.privateToggleItemPrefab, this.typeLayoutRoot.node, PrivateToggleItem_1.default);
          utils_1.utils.bind_toggle_event(toggle.getComponent(cc.Toggle), this.node, "CreatePrivate", "onTypeToggle");
          toggle.setData(type);
        }
        checkRound(n) {
          for (let i = 0; i < this.roundLayoutRoot.node.childrenCount; ++i) if (i == n) {
            this.roundLayoutRoot.node.children[i].getComponent(cc.Toggle).check();
            this.roundLayoutRoot.node.children[i].getComponentInChildren(cc.Label).node.color = new cc.Color().fromHEX("#c72b16");
          } else {
            this.roundLayoutRoot.node.children[i].getComponent(cc.Toggle).uncheck();
            this.roundLayoutRoot.node.children[i].getComponentInChildren(cc.Label).node.color = new cc.Color().fromHEX("#663112");
          }
        }
        addRound(item) {
          let toggle = utils_1.utils.add_instance_to_root(this.privateToggleItemPrefab, this.roundLayoutRoot.node, PrivateToggleItem_1.default);
          utils_1.utils.bind_toggle_event(toggle.getComponent(cc.Toggle), this.node, "CreatePrivate", "onRoundToggle");
          toggle.setData(item);
        }
        switchType(type) {
          console.log("switchType", type);
          this.type = type;
          this.roundLayoutRoot.node.removeAllChildren();
          type._vector_sub_items.forEach(item => {
            this.addRound(item);
          });
          type._vector_sub_items.length > 0 && this.switchRound(type._vector_sub_items[0]);
          this.description.string = type._str_des;
        }
        switchRound(item) {
          console.log("switchRound", item);
          this.checkRound(0);
          this.item = item;
        }
        onComfirmClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let the_item = this.item;
          if (global_data_1.global_data.get_prop_count_by_id(the_item._int_prop) < the_item._int_count) {
            if (the_item._int_prop == global_define_1.CONST.ID_PROP_GOLD) {
              let good = lobby_framework_1.lobby_framework.find_good_data_by_gameid(the_item._int_id);
              good && lobby_framework_1.lobby_framework.show_simple_shop(good);
              return;
            }
            if (the_item._int_prop == global_define_1.CONST.ID_PROP_INGOT) {
              utils_1.utils.show_hint("\u5143\u5b9d\u4e0d\u8db3,\u8bf7\u5145\u503c");
              global_data_1.global_data.have_module_shop() && AppGlobal_1.AppGlobal.getInstance().showShopLayout("Ingot");
              return;
            }
            utils_1.utils.show_message_box({
              content: "\u9053\u5177\u4e0d\u8db3\uff0c\u662f\u5426\u9700\u8981\u8d2d\u4e70\uff1f",
              button_count: 2,
              onClick: index => {
                0 == index && AppGlobal_1.AppGlobal.getInstance().showShopLayout("Item");
              }
            });
            return;
          }
          console.log("before create", this.item);
          utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
          game_auxi_1.game_auxi.create_private_room(this.gameid, this.type.int_room_type, this.item._int_id);
        }
        onTypeToggle(event) {
          sound_manager_1.sound_manager.play_click();
          let data = event.target.getComponent(PrivateToggleItem_1.default).data;
          this.switchType(data);
          let i = this.typeLayoutRoot.node.children.indexOf(event.target);
          i >= 0 && this.checkType(i);
        }
        onRoundToggle(event) {
          sound_manager_1.sound_manager.play_click();
          let data = event.target.getComponent(PrivateToggleItem_1.default).data;
          this.switchRound(data);
          let i = this.roundLayoutRoot.node.children.indexOf(event.target);
          i >= 0 && this.checkRound(i);
        }
        on_enter_auxi_result(param) {
          let int_code = param.int_code;
          let str_result = param.str_result;
          if (int_code == game_auxi_1.game_auxi.SUB_AUXI_CREATE_TABLE_SUCCESS_V20) {
            global_data_1.global_data.request_user_data();
            let cmd = "enter_private_room:";
            cmd += 1e3 * game_auxi_1.game_auxi._int_enter_game_id + game_auxi_1.game_auxi._int_enter_room_id;
            cmd += "|";
            cmd += game_auxi_1.game_auxi._enter_private_code;
            lobby_framework_1.lobby_framework.do_command(cmd, "");
          } else utils_1.utils.show_hint(str_result);
        }
      };
      __decorate([ property(cc.Button) ], CreatePrivate.prototype, "confirmBtn", void 0);
      __decorate([ property(cc.Prefab) ], CreatePrivate.prototype, "privateToggleItemPrefab", void 0);
      __decorate([ property(cc.ToggleContainer) ], CreatePrivate.prototype, "typeLayoutRoot", void 0);
      __decorate([ property(cc.ToggleContainer) ], CreatePrivate.prototype, "roundLayoutRoot", void 0);
      __decorate([ property(cc.Label) ], CreatePrivate.prototype, "description", void 0);
      CreatePrivate = __decorate([ ccclass ], CreatePrivate);
      return CreatePrivate;
    })();
    exports.default = CreatePrivate;
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/game/game_auxi": "game_auxi",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/global_define": "global_define",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./PrivatePanel": "PrivatePanel",
    "./PrivateToggleItem": "PrivateToggleItem"
  } ],
  DailyLuckyLoterryCodeItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c1a2aXZrixEQoslGsGrk1eH", "DailyLuckyLoterryCodeItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DailyLuckyLoterryCodeItem = (() => {
      let DailyLuckyLoterryCodeItem = class DailyLuckyLoterryCodeItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
        }
        start() {}
        setData(code, isMine = false, popup = false) {
          if (popup) {
            this.label.fontSize = 26.4;
            this.label.string = code + "";
          } else {
            this.label.fontSize = 18;
            this.label.string = code + " ";
          }
          this.label.node.color = isMine ? new cc.Color().fromHEX("#BF1010") : new cc.Color().fromHEX("#85643B");
        }
      };
      __decorate([ property(cc.Label) ], DailyLuckyLoterryCodeItem.prototype, "label", void 0);
      DailyLuckyLoterryCodeItem = __decorate([ ccclass ], DailyLuckyLoterryCodeItem);
      return DailyLuckyLoterryCodeItem;
    })();
    exports.default = DailyLuckyLoterryCodeItem;
    cc._RF.pop();
  }, {} ],
  DailyLuckyLotteryCodePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "60839knTDBM95siV0jGbjuF", "DailyLuckyLotteryCodePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DailyLuckyLotteryCodePanel = void 0;
    const utils_1 = require("../Framework/common/utils");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DailyLuckyLotteryCodePanel = (() => {
      let DailyLuckyLotteryCodePanel = class DailyLuckyLotteryCodePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.label = null;
          this.sprite = null;
          this.closeBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "DailyLuckyLotteryCodePanel", "OnCloseClicked");
        }
        start() {
          utils_1.utils.run_action_rotate_forever(this.sprite.node, 2, true);
        }
        setData(num) {
          this.label.string = num + "";
          lobby_framework_1.lobby_framework.fetch_lottery_data();
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Label) ], DailyLuckyLotteryCodePanel.prototype, "label", void 0);
      __decorate([ property(cc.Sprite) ], DailyLuckyLotteryCodePanel.prototype, "sprite", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryCodePanel.prototype, "closeBtn", void 0);
      DailyLuckyLotteryCodePanel = __decorate([ ccclass ], DailyLuckyLotteryCodePanel);
      return DailyLuckyLotteryCodePanel;
    })();
    exports.DailyLuckyLotteryCodePanel = DailyLuckyLotteryCodePanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  DailyLuckyLotteryPanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6af4aImRUZNhLIRxKHXlONE", "DailyLuckyLotteryPanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DailyLuckyLotteryPanel = void 0;
    const PopWindow_1 = require("./PopWindow");
    const utils_1 = require("../Framework/common/utils");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DailyLuckyLotteryPanel = (() => {
      let DailyLuckyLotteryPanel = class DailyLuckyLotteryPanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.inviteBtn_small = null;
          this.doTaskBtn = null;
          this.openNoticeBtn = null;
          this.mineLotteryBtn = null;
          this.inviteBtn_big = null;
          this.moreBtn = null;
          this.ruleBtn = null;
          this.rewardNode = null;
          this.rewardsprite = null;
          this.inviteLable = null;
          this.taskLable = null;
          this.rewardname = null;
          this.rewardcount = null;
          this.rewardOpenTime = null;
          this.rewardother = null;
          this.openNoticeNode = null;
          this.haveLotteryNode = null;
          this.noLotteryNode = null;
          this.yesterdayReward = null;
          this.winRichText = null;
          this.winMoreRichText = null;
          this.todayRichText = null;
          this.yestertodayRichText = null;
          this.yesterdayMyReward = null;
          this.lotteryRoot = null;
          this.lotteryListPanel = null;
          this.winListPanel = null;
          this.rulePanel = null;
          this.todayAndYesterdayListPanel = null;
          this.myLotteryCodeList = [];
          this.closeBtnList = null;
          this.winCodeNode = null;
          this.todayCodeNode = null;
          this.ruleRoot = null;
          this.data = new lobby_types_1.lobby_types.LotteryPanelData();
        }
        onLoad() {
          utils_1.utils.on("RefreshSubscribeState", this, this.onRefreshSubscribeState);
          utils_1.utils.on("RefreshLotteryData", this, this.onRefreshLotteryData);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "DailyLuckyLotteryPanel", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.inviteBtn_small, this.node, "DailyLuckyLotteryPanel", "OnInviteBtn_SmallClicked");
          utils_1.utils.bind_button_event(this.doTaskBtn, this.node, "DailyLuckyLotteryPanel", "OnDoTaskClicked");
          utils_1.utils.bind_button_event(this.openNoticeBtn, this.node, "DailyLuckyLotteryPanel", "OnOpenNoticeClicked");
          utils_1.utils.bind_button_event(this.mineLotteryBtn, this.node, "DailyLuckyLotteryPanel", "OnMineLotteryClicked");
          utils_1.utils.bind_button_event(this.inviteBtn_big, this.node, "DailyLuckyLotteryPanel", "OnInviteBtn_BigClicked");
          utils_1.utils.bind_button_event(this.moreBtn, this.node, "DailyLuckyLotteryPanel", "OnMoreClicked");
          utils_1.utils.bind_button_event(this.ruleBtn, this.node, "DailyLuckyLotteryPanel", "OnRuleClicked");
          utils_1.utils.bind_button_event(this.closeBtnList, this.node, "DailyLuckyLotteryPanel", "OnCloseCodeListClicked");
        }
        fetchData() {
          lobby_framework_1.lobby_framework.fetch_lottery_data();
        }
        fillData() {
          this.lotteryRoot.removeAllChildren();
          this.data = global_data_1.global_data.lottery_data;
          if (null != this.data.prop_id) {
            this.rewardNode.active = true;
            utils_1.utils.load_web_spriteframe_by_id(this.rewardsprite, this.data.prop_id);
            this.rewardname.string = this.data.prop_name;
            this.rewardcount.string = this.data.prop_count + "";
          } else this.rewardNode.active = false;
          this.inviteLable.string = "1.\u6bcf\u9080\u8bf7\u4e00\u540d\u597d\u53cb,  \u83b7\u5f97\u4e00\u4e2a\u62bd\u5956\u7801(\u6bcf\u5929\u6700\u591a\u53ef\u9886" + String(this.data.task_1_total) + "\u4e2a,  \u4eca\u65e5\u5269" + String(this.data.task_1_left) + "\u4e2a)";
          this.taskLable.string = "2.\u5b8c\u62101/2/4/8\u4e2a\u6e38\u620f\u4efb\u52a1,  \u5404\u7684\u4e00\u4e2a\u62bd\u5956\u7801(\u6bcf\u5929\u6700\u591a\u53ef\u9886" + String(this.data.task_2_total) + "\u4e2a,  \u4eca\u65e5\u5269" + String(this.data.task_2_left) + "\u4e2a)";
          this.rewardOpenTime.string = "\u6bcf\u592924:00\u5f00\u5956";
          this.rewardother.string = "\u53c2\u4e0e\u5956: \u4e00\u4e2a\u62bd\u5956\u7801=1\u5956\u5238";
          if (null != this.data.lotterys_win && this.data.lotterys_win.length > 0) {
            this.haveLotteryNode.active = true;
            this.noLotteryNode.active = false;
            let count = this.data.lotterys_win.length;
            this.winRichText.node.setPosition(2, this.winRichText.node.position.y);
            let win_str = "";
            if (count > 17) for (let i = 0; i < 17; i++) win_str += this.appendStrCode(i, this.data.lotterys_win[i], 3); else {
              for (let i = 0; i < count; i++) win_str += this.appendStrCode(i, this.data.lotterys_win[i], 3);
              1 == count ? this.winRichText.node.setPosition(-78, this.winRichText.node.position.y) : 2 == count && this.winRichText.node.setPosition(-38, this.winRichText.node.position.y);
            }
            this.winRichText.fontSize = 18;
            this.winRichText.string = win_str;
            this.moreBtn.node.active = count > 17;
            null != this.data.prop_id_yesterday && (this.yesterdayReward.string = this.data.prop_name_yesterday + "(\u6570\u91cf" + this.data.prop_count_yesterday + ")");
            let str = "";
            if (this.data.awards_yesterday.length > 0) for (let v = 0; v < this.data.awards_yesterday.length; v++) {
              let d = this.data.awards_yesterday[v];
              str += d.name;
              str += "x";
              str += d.count;
              str += v != this.data.awards_yesterday.length - 1 ? "\n" : "";
            }
            this.yesterdayMyReward.string = "" != str ? str : "\u65e0";
          } else {
            this.haveLotteryNode.active = false;
            this.noLotteryNode.active = true;
          }
        }
        appendStrCode(index, code_data, space) {
          let win_str = "";
          code_data.win ? win_str += "<color=#BF1010>" + code_data.num + "</color> " : win_str += "<color=#85643B>" + code_data.num + "</color> ";
          (index + 1) % space == 0 && (win_str += "\n");
          return win_str;
        }
        start() {
          this.openNoticeNode.active = lobby_framework_1.lobby_framework.has_subscribe();
          lobby_framework_1.lobby_framework.check_subscribe();
        }
        onRefreshLotteryData() {
          this.fillData();
        }
        onRefreshSubscribeState(res) {
          console.log("onRefreshSubscribeState : ", res);
          this.openNoticeBtn.node.active = false;
          "AlreadyGot" == res || ("CanGet" == res ? lobby_framework_1.lobby_framework.request_subscribe_reward() : "CanRequest" == res && (this.openNoticeBtn.node.active = true));
        }
        fillCodeListdData() {
          if (this.winCodeNode.active) {
            let win_str = "";
            this.winMoreRichText.node.setPosition(0, this.winMoreRichText.node.position.y);
            let count = this.data.lotterys_win.length;
            for (let i = 0; i < count; i++) win_str += this.appendStrCode(i, this.data.lotterys_win[i], 5);
            this.winMoreRichText.fontSize = 26.4;
            this.winMoreRichText.string = win_str;
          } else if (this.todayCodeNode.active) {
            let todayLength = this.data.lotterys_today.length;
            let win_str_1 = "";
            for (let k = 0; k < todayLength; k++) win_str_1 += this.appendStrCode(k, this.data.lotterys_today[k], 5);
            this.todayRichText.string = win_str_1;
            todayLength < 5 && this.todayRichText.node.setPosition(55 * (todayLength - 1) - 220 - 4.5 * (5 - todayLength), this.todayRichText.node.position.y);
            let yesterdayLength = this.data.lotterys_yesterday.length;
            let win_str_2 = "";
            for (let j = 0; j < yesterdayLength; j++) win_str_2 += this.appendStrCode(j, this.data.lotterys_yesterday[j], 5);
            this.yestertodayRichText.string = win_str_2;
            yesterdayLength < 5 && this.yestertodayRichText.node.setPosition(55 * (yesterdayLength - 1) - 220 - 4.5 * (5 - yesterdayLength), this.yestertodayRichText.node.position.y);
          }
        }
        randomLotteryShareText() {
          let share_1 = "\u9001\u4f60\u4e00\u6b21" + this.data.prop_name + "\u62bd\u5956\u673a\u4f1a\uff0c\u70b9\u51fb\u514d\u8d39\u9886\u53d6";
          let share_2 = "\u8fd9\u91cc\u53ef\u4ee5\u514d\u8d39\u62bd" + this.data.prop_name + "\uff0c\u5feb\u6765\u5feb\u6765~";
          let share_text = [ share_1, share_2 ];
          let index = Math.floor(2 * Math.random());
          global_data_1.global_data._str_lottery_share_img_text = share_text[index];
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        OnCloseCodeListClicked() {
          sound_manager_1.sound_manager.play_click();
          this.lotteryListPanel.active = false;
        }
        OnInviteBtn_SmallClicked() {
          this.randomLotteryShareText();
          lobby_framework_1.lobby_framework.share_to_lottery();
          sound_manager_1.sound_manager.play_click();
        }
        OnInviteBtn_BigClicked() {
          this.randomLotteryShareText();
          lobby_framework_1.lobby_framework.share_to_lottery();
          sound_manager_1.sound_manager.play_click();
        }
        OnDoTaskClicked() {
          lobby_framework_1.lobby_framework.do_command("open:5", "");
          sound_manager_1.sound_manager.play_click();
        }
        OnOpenNoticeClicked() {
          lobby_framework_1.lobby_framework.request_subscribe();
          sound_manager_1.sound_manager.play_click();
        }
        OnGetRewardClicked() {
          lobby_framework_1.lobby_framework.request_subscribe_reward();
          sound_manager_1.sound_manager.play_click();
        }
        OnMineLotteryClicked() {
          this.lotteryListPanel.active = true;
          this.winListPanel.active = false;
          this.rulePanel.active = false;
          this.todayAndYesterdayListPanel.active = true;
          this.fillCodeListdData();
          sound_manager_1.sound_manager.play_click();
        }
        OnMoreClicked() {
          this.lotteryListPanel.active = true;
          this.winListPanel.active = true;
          this.rulePanel.active = false;
          this.todayAndYesterdayListPanel.active = false;
          this.fillCodeListdData();
          sound_manager_1.sound_manager.play_click();
        }
        OnRuleClicked() {
          this.lotteryListPanel.active = true;
          this.winListPanel.active = false;
          this.rulePanel.active = true;
          this.todayAndYesterdayListPanel.active = false;
          this.fillCodeListdData();
          sound_manager_1.sound_manager.play_click();
        }
        onDestroy() {
          utils_1.utils.off("RefreshSubscribeState", this, this.onRefreshSubscribeState);
          utils_1.utils.off("RefreshLotteryData", this, this.onRefreshLotteryData);
        }
      };
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "inviteBtn_small", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "doTaskBtn", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "openNoticeBtn", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "mineLotteryBtn", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "inviteBtn_big", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "moreBtn", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "ruleBtn", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "rewardNode", void 0);
      __decorate([ property(cc.Sprite) ], DailyLuckyLotteryPanel.prototype, "rewardsprite", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "inviteLable", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "taskLable", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "rewardname", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "rewardcount", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "rewardOpenTime", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "rewardother", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "openNoticeNode", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "haveLotteryNode", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "noLotteryNode", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "yesterdayReward", void 0);
      __decorate([ property(cc.RichText) ], DailyLuckyLotteryPanel.prototype, "winRichText", void 0);
      __decorate([ property(cc.RichText) ], DailyLuckyLotteryPanel.prototype, "winMoreRichText", void 0);
      __decorate([ property(cc.RichText) ], DailyLuckyLotteryPanel.prototype, "todayRichText", void 0);
      __decorate([ property(cc.RichText) ], DailyLuckyLotteryPanel.prototype, "yestertodayRichText", void 0);
      __decorate([ property(cc.Label) ], DailyLuckyLotteryPanel.prototype, "yesterdayMyReward", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "lotteryRoot", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "lotteryListPanel", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "winListPanel", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "rulePanel", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "todayAndYesterdayListPanel", void 0);
      __decorate([ property(cc.Button) ], DailyLuckyLotteryPanel.prototype, "closeBtnList", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "winCodeNode", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "todayCodeNode", void 0);
      __decorate([ property(cc.Node) ], DailyLuckyLotteryPanel.prototype, "ruleRoot", void 0);
      DailyLuckyLotteryPanel = __decorate([ ccclass ], DailyLuckyLotteryPanel);
      return DailyLuckyLotteryPanel;
    })();
    exports.DailyLuckyLotteryPanel = DailyLuckyLotteryPanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  DailySignItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "419bdEWLQJIRoPXRf/qZF5V", "DailySignItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DailySignItemData = void 0;
    const DailySign_1 = require("./DailySign");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class DailySignItemData {}
    exports.DailySignItemData = DailySignItemData;
    let DailySignItem = (() => {
      let DailySignItem = class DailySignItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.dayLabel = null;
          this.goldLabel = null;
          this.multiLabel = null;
          this.frame = null;
          this.mask = null;
          this.sprite = null;
        }
        setData(data) {
          if (data) {
            this.dayLabel.string = data.day;
            this.goldLabel.string = data.gold;
            this.multiLabel.string = data.multi;
            this.multiLabel.node.parent.active = "" != data.multi;
            this.frame.active = data.show_frame;
            this.mask.active = data.show_mask;
            this.sprite.spriteFrame = DailySign_1.default.inst.picList.length > data.pic_index ? DailySign_1.default.inst.picList[data.pic_index] : null;
          }
        }
      };
      __decorate([ property(cc.Label) ], DailySignItem.prototype, "dayLabel", void 0);
      __decorate([ property(cc.Label) ], DailySignItem.prototype, "goldLabel", void 0);
      __decorate([ property(cc.Label) ], DailySignItem.prototype, "multiLabel", void 0);
      __decorate([ property(cc.Node) ], DailySignItem.prototype, "frame", void 0);
      __decorate([ property(cc.Node) ], DailySignItem.prototype, "mask", void 0);
      __decorate([ property(cc.Sprite) ], DailySignItem.prototype, "sprite", void 0);
      DailySignItem = __decorate([ ccclass ], DailySignItem);
      return DailySignItem;
    })();
    exports.default = DailySignItem;
    cc._RF.pop();
  }, {
    "./DailySign": "DailySign"
  } ],
  DailySign: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b172bSP7Y5GvYekwB2vC6JG", "DailySign");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DailySignData = void 0;
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const AppGlobal_1 = require("../AppGlobal");
    const DailySignItem_1 = require("./DailySignItem");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class DailySignData {
      constructor() {
        this.show_text_sign_button = false;
        this.show_normal_sign_button = false;
        this.show_reward_sign_button = false;
        this.show_invite_button = false;
        this.show_video_button = false;
        this.show_already_sign_button = false;
        this.show_multi_hint = false;
        this.reward_item_list = [];
      }
    }
    exports.DailySignData = DailySignData;
    let DailySign = (() => {
      var DailySign_1;
      let DailySign = DailySign_1 = class DailySign extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.textSignBtn = null;
          this.normalSignBtn = null;
          this.shareSignBtn = null;
          this.videoSignBtn = null;
          this.inviteBtn = null;
          this.alreadySignBtn = null;
          this.multiHint = null;
          this.rootNode = null;
          this.day7Reward = null;
          this.picList = [];
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "DailySign", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.textSignBtn, this.node, "DailySign", "onTextSignBtnClicked");
          utils_1.utils.bind_button_event(this.normalSignBtn, this.node, "DailySign", "onNormalSignBtnClicked");
          utils_1.utils.bind_button_event(this.shareSignBtn, this.node, "DailySign", "onShareSignBtnClicked");
          utils_1.utils.bind_button_event(this.videoSignBtn, this.node, "DailySign", "onVideoSignBtnClicked");
          utils_1.utils.bind_button_event(this.inviteBtn, this.node, "DailySign", "onInviteBtnClicked");
          utils_1.utils.bind_button_event(this.alreadySignBtn, this.node, "DailySign", "onAlreadySignBtnClicked");
          this.alreadySignBtn.interactable = false;
        }
        onShow() {
          DailySign_1.inst = this;
          this.fetchSignData();
        }
        fetchSignData() {
          utils_1.utils.show_loading("", true);
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_SIGN_REWARD_STATUS);
          utils_1.utils.send_http_request({
            url: url,
            success: function(data, message) {
              console.log("\u83b7\u53d6\u6bcf\u65e5\u7b7e\u5230\u6570\u636e\u8fd4\u56de", data, message);
              let show_multi = utils_1.utils.is_wechat() || utils_1.utils.is_oppo();
              let daily_sign_data = new DailySignData();
              if (data && data.rewards && 7 == data.rewards.length) for (let i = 0; i < 7; ++i) {
                let r_data = new DailySignItem_1.DailySignItemData();
                r_data.day = "\u7b2c" + String(i + 1) + "\u5929";
                r_data.gold = String(data.rewards[i].base) + "\u91d1\u5e01";
                r_data.multi = show_multi ? String(data.rewards[i].multiple) : "";
                r_data.pic_index = i;
                r_data.show_mask = i < data.checkin_days;
                r_data.show_frame = i == data.checkin_days && 0 == data.get_today;
                daily_sign_data.reward_item_list.push(r_data);
              } else for (let i = 0; i < 7; ++i) {
                let r_data = new DailySignItem_1.DailySignItemData();
                r_data.day = "\u7b2c" + String(i + 1) + "\u5929";
                r_data.gold = "500\u91d1\u5e01";
                r_data.multi = [ "2", "3", "4", "5", "6", "8", "10" ][i];
                r_data.pic_index = i;
                r_data.show_mask = i < data.checkin_days;
                r_data.show_frame = i == data.checkin_days && 0 == data.get_today;
                daily_sign_data.reward_item_list.push(r_data);
              }
              if (utils_1.utils.is_wechat()) {
                daily_sign_data.show_multi_hint = true;
                daily_sign_data.show_normal_sign_button = false;
                daily_sign_data.show_reward_sign_button = true;
                daily_sign_data.show_video_button = false;
                daily_sign_data.show_text_sign_button = true;
              } else if (utils_1.utils.is_oppo() || utils_1.utils.is_mi()) {
                daily_sign_data.show_multi_hint = false;
                daily_sign_data.show_normal_sign_button = false;
                daily_sign_data.show_reward_sign_button = false;
                daily_sign_data.show_video_button = true;
                daily_sign_data.show_text_sign_button = false;
              } else {
                daily_sign_data.show_multi_hint = false;
                daily_sign_data.show_normal_sign_button = true;
                daily_sign_data.show_reward_sign_button = false;
                daily_sign_data.show_video_button = false;
                daily_sign_data.show_text_sign_button = false;
              }
              if (data.get_today) {
                daily_sign_data.show_normal_sign_button = false;
                daily_sign_data.show_reward_sign_button = false;
                daily_sign_data.show_video_button = false;
                daily_sign_data.show_text_sign_button = false;
                global_data_1.global_data.have_module_wechat_share() ? daily_sign_data.show_invite_button = true : daily_sign_data.show_already_sign_button = true;
              }
              DailySign_1.inst && DailySign_1.inst.setData(daily_sign_data);
            },
            fail: function(err) {
              console.log(err);
              utils_1.utils.show_hint("\u83b7\u53d6\u6bcf\u65e5\u7b7e\u5230\u6570\u636e\u5931\u8d25(1)");
            },
            complete: function() {
              utils_1.utils.hide_loading();
            }
          });
        }
        setData(data) {
          while (this.rootNode.childrenCount < 6) {
            let node = cc.instantiate(this.rootNode.children[0]);
            node.setParent(this.rootNode);
          }
          for (let i = 0; i < this.rootNode.childrenCount; ++i) this.rootNode.children[i].getComponent(DailySignItem_1.default).setData(data.reward_item_list[i]);
          this.day7Reward.setData(data.reward_item_list[data.reward_item_list.length - 1]);
          this.textSignBtn.node.active = data.show_text_sign_button;
          this.normalSignBtn.node.active = data.show_normal_sign_button;
          this.shareSignBtn.node.active = data.show_reward_sign_button;
          this.videoSignBtn.node.active = data.show_video_button;
          this.inviteBtn.node.active = data.show_invite_button;
          this.alreadySignBtn.node.active = data.show_already_sign_button;
          this.multiHint.active = data.show_multi_hint;
        }
        onHide() {}
        onTextSignBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.send_daily_sign_reward(false);
        }
        onCloseBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onNormalSignBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.send_daily_sign_reward(false);
        }
        onShareSignBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_sign();
        }
        onVideoSignBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.video_to_sign();
        }
        onInviteBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          AppGlobal_1.AppGlobal.getInstance().showInviteReward();
        }
        onAlreadySignBtnClicked() {
          sound_manager_1.sound_manager.play_click();
        }
      };
      DailySign.inst = null;
      __decorate([ property(cc.Button) ], DailySign.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "textSignBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "normalSignBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "shareSignBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "videoSignBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "inviteBtn", void 0);
      __decorate([ property(cc.Button) ], DailySign.prototype, "alreadySignBtn", void 0);
      __decorate([ property(cc.Node) ], DailySign.prototype, "multiHint", void 0);
      __decorate([ property(cc.Node) ], DailySign.prototype, "rootNode", void 0);
      __decorate([ property(DailySignItem_1.default) ], DailySign.prototype, "day7Reward", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], DailySign.prototype, "picList", void 0);
      DailySign = DailySign_1 = __decorate([ ccclass ], DailySign);
      return DailySign;
    })();
    exports.default = DailySign;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./DailySignItem": "DailySignItem",
    "./PopWindow": "PopWindow"
  } ],
  DropDownItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0e0c1OzYPVOfpEPKQp433tu", "DropDownItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DropDownItem = (() => {
      let DropDownItem = class DropDownItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelName = null;
          this.labelDes = null;
          this.toggle = null;
          this.toggleID = null;
        }
      };
      __decorate([ property(cc.Label) ], DropDownItem.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], DropDownItem.prototype, "labelDes", void 0);
      __decorate([ property(cc.Toggle) ], DropDownItem.prototype, "toggle", void 0);
      DropDownItem = __decorate([ ccclass() ], DropDownItem);
      return DropDownItem;
    })();
    exports.default = DropDownItem;
    cc._RF.pop();
  }, {} ],
  DropDownLocation: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9f58bbq0K9H3LVpbs3peGQu", "DropDownLocation");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const DropDownItem_1 = require("./DropDownItem");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DropDownLocation = (() => {
      let DropDownLocation = class DropDownLocation extends cc.Component {
        constructor() {
          super(...arguments);
          this.template = null;
          this.labelName = null;
          this.labelDes = null;
          this.spriteArrow = null;
          this.spriteFramesArrow = [];
          this.items = [];
          this.isShow = false;
          this.data = null;
          this._selectedIndex = -1;
        }
        get selectedIndex() {
          return this._selectedIndex;
        }
        set selectedIndex(value) {
          this._selectedIndex = value;
          this.refreshShownValue();
        }
        init() {
          this._dropDown = this.createDropDownList(this.template);
          this._dropDown.name = "DropDownList";
          this._dropDown.active = false;
          this._dropDown.setParent(this.template.parent);
          let itemTemplate = this._dropDown.getComponentInChildren(DropDownItem_1.default);
          this._dropDown.getComponent(cc.ScrollView).vertical = true;
          itemTemplate.node.active = true;
          this.items = [];
          for (let i = 0, len = this.data.list.length; i < len; i++) {
            let data = this.data.list[i];
            let item = this.addItem(data, i == this.selectedIndex, itemTemplate, this.items);
            if (!item) continue;
            item.toggle.isChecked = i == this.selectedIndex;
            utils_1.utils.set_toggle_handler(item.toggle, this.node, "DropDownLocation", "onSelectedItem");
          }
          itemTemplate.node.active = false;
        }
        addItem(data, selected, itemTemplate, dropDownItems) {
          let item = this.createItem(itemTemplate);
          item.node.setParent(itemTemplate.node.parent);
          item.node.active = true;
          item.node.name = `item_${data.id}`;
          item.toggle && (item.toggle.isChecked = false);
          item.labelName.string = data.name;
          item.toggleID = data.id;
          this.items.push(item);
          return item;
        }
        setData(data, index = 0) {
          index < 0 && (index = 0);
          this.data = data;
          this.selectedIndex = index;
          this.delayedDestroyDropdownList();
          this.refreshShownValue();
          this.init();
        }
        show() {
          -1 == this.selectedIndex && (this.selectedIndex = 0);
          utils_1.utils.send("DropDownLocation");
          this._dropDown.active = true;
          this.isShow = true;
          this.spriteArrow.spriteFrame = this.spriteFramesArrow[0];
          this.node.parent.setSiblingIndex(this.node.parent.parent.childrenCount + 1);
        }
        hide() {
          if (this._dropDown) {
            this._dropDown.active = false;
            this.isShow = false;
            this.spriteArrow.spriteFrame = this.spriteFramesArrow[1];
          }
        }
        delayedDestroyDropdownList() {
          for (let i = 0, len = this.items.length; i < len; i++) void 0 != this.items[i] && this.destroyItem(this.items[i]);
          this.items = [];
          void 0 != this._dropDown && this.destroyDropDownList(this._dropDown);
          this._dropDown = void 0;
        }
        destroyItem(item) {
          item.destroy();
        }
        refreshShownValue() {
          let len = this.data.list.length;
          if (len <= 0) return;
          let data = this.data.list[this.clamp(this.selectedIndex, 0, len - 1)];
          data && data.name ? this.labelName.string = data.name : this.labelName.string = "";
        }
        createDropDownList(template) {
          return cc.instantiate(template);
        }
        destroyDropDownList(dropDownList) {
          dropDownList.destroy();
        }
        createItem(itemTemplate) {
          let newItem = cc.instantiate(itemTemplate.node);
          return newItem.getComponent(DropDownItem_1.default);
        }
        onSelectedItem(event) {
          let toggle = event.target;
          let parent = toggle.parent;
          for (let i = 0; i < parent.childrenCount; i++) if (parent.children[i] == toggle) {
            this.selectedIndex = i - 1;
            let id = toggle.getComponent(DropDownItem_1.default).toggleID;
            sound_manager_1.sound_manager.play_click();
            utils_1.utils.send("DropDownItemToggleLocation", id);
            break;
          }
          this.hide();
        }
        onClick() {
          sound_manager_1.sound_manager.play_click();
          this.isShow ? this.hide() : this.show();
          tutorial_1.tutorial.close_tutorial();
        }
        start() {
          this.template.active = false;
        }
        onEnable() {
          this.node.on("touchend", this.onClick, this);
        }
        onDisable() {
          this.node.off("touchend", this.onClick, this);
        }
        clamp(value, min, max) {
          if (value < min) return min;
          if (value > max) return max;
          return value;
        }
      };
      __decorate([ property(cc.Node) ], DropDownLocation.prototype, "template", void 0);
      __decorate([ property(cc.Label) ], DropDownLocation.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], DropDownLocation.prototype, "labelDes", void 0);
      __decorate([ property(cc.Sprite) ], DropDownLocation.prototype, "spriteArrow", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], DropDownLocation.prototype, "spriteFramesArrow", void 0);
      DropDownLocation = __decorate([ ccclass() ], DropDownLocation);
      return DropDownLocation;
    })();
    exports.default = DropDownLocation;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./DropDownItem": "DropDownItem"
  } ],
  DropDown: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4c73768DrRIEpBrhG+kF/zC", "DropDown");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const DropDownItem_1 = require("./DropDownItem");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let DropDown = (() => {
      let DropDown = class DropDown extends cc.Component {
        constructor() {
          super(...arguments);
          this.template = null;
          this.labelTitle = null;
          this.labelName = null;
          this.labelDes = null;
          this.spriteArrow = null;
          this.spriteFramesArrow = [];
          this.items = [];
          this.isShow = false;
          this.data = null;
          this._selectedIndex = -1;
        }
        get selectedIndex() {
          return this._selectedIndex;
        }
        set selectedIndex(value) {
          this._selectedIndex = value;
          this.refreshShownValue();
        }
        show() {
          utils_1.utils.send("HideAllDropDown", this.data.id);
          this.isShow = true;
          this.spriteArrow.spriteFrame = this.spriteFramesArrow[0];
          this._dropDown = this.createDropDownList(this.template);
          this._dropDown.name = "DropDownList";
          this._dropDown.active = true;
          this._dropDown.setParent(this.template.parent);
          let itemTemplate = this._dropDown.getComponentInChildren(DropDownItem_1.default);
          this._dropDown.getComponent(cc.ScrollView).vertical = false;
          let content = itemTemplate.node.parent;
          itemTemplate.node.active = true;
          this.items = [];
          for (let i = 0, len = this.data.list.length; i < len; i++) {
            let data = this.data.list[i];
            let item = this.addItem(data, i == this.selectedIndex, itemTemplate, this.items);
            if (!item) continue;
            item.toggle.isChecked = i == this.selectedIndex;
            utils_1.utils.bind_toggle_event(item.toggle, this.node, "DropDown", "onSelectedItem");
          }
          itemTemplate.node.active = false;
          let height = itemTemplate.node.height * this.data.list.length;
          content.height = height;
          content.parent.height = height;
          content.parent.parent.height = height;
          400 == this.data.id || 700 == this.data.id ? this.node.parent.parent.setSiblingIndex(this.node.parent.parent.parent.childrenCount + 1) : this.node.parent.setSiblingIndex(this.node.parent.parent.childrenCount + 1);
          utils_1.utils.send("ShowDropDown", this.data.id, this.data.list.length);
        }
        addItem(data, selected, itemTemplate, dropDownItems) {
          let item = this.createItem(itemTemplate);
          item.node.setParent(itemTemplate.node.parent);
          item.node.active = true;
          item.node.name = `item_${data.id}`;
          item.toggle && (item.toggle.isChecked = false);
          item.labelName.string = data.name;
          data.desc ? item.labelDes.string = "(" + data.desc + ")" : item.labelDes.string = "";
          item.toggleID = data.id;
          this.items.push(item);
          return item;
        }
        setData(data, index) {
          this.labelTitle.string = data.name;
          this.data = data;
          this.selectedIndex = index;
          this.refreshShownValue();
        }
        hide() {
          this.isShow = false;
          this.spriteArrow.spriteFrame = this.spriteFramesArrow[1];
          void 0 != this._dropDown && this.delayedDestroyDropdownList();
        }
        delayedDestroyDropdownList() {
          for (let i = 0, len = this.items.length; i < len; i++) void 0 != this.items[i] && this.destroyItem(this.items[i]);
          this.items = [];
          void 0 != this._dropDown && this.destroyDropDownList(this._dropDown);
          this._dropDown = void 0;
        }
        destroyItem(item) {
          item.destroy();
        }
        refreshShownValue() {
          let len = this.data.list.length;
          if (len <= 0) return;
          if (-1 == this.selectedIndex) return;
          let data = this.data.list[this.clamp(this.selectedIndex, 0, len - 1)];
          data && data.name ? this.labelName.string = data.name : this.labelName.string = "";
          if (data.desc) {
            let width_1 = this.node.getContentSize().width;
            let count = Math.floor((width_1 - 28 * this.labelName.string.length - 144) / 22);
            this.labelDes.string = "(" + utils_1.utils.clamp_nickname(data.desc, count) + ")";
          } else this.labelDes.string = "";
        }
        setCustomValue(name = "", desc = "") {
          this.selectedIndex = -1;
          this.labelName.string = name;
          if ("" != desc) {
            let width_1 = this.node.getContentSize().width;
            let count = Math.floor((width_1 - 28 * this.labelName.string.length - 144) / 22);
            this.labelDes.string = "(" + utils_1.utils.clamp_nickname(desc, count) + ")";
          } else this.labelDes.string = "";
        }
        createDropDownList(template) {
          return cc.instantiate(template);
        }
        destroyDropDownList(dropDownList) {
          dropDownList.destroy();
        }
        createItem(itemTemplate) {
          let newItem = cc.instantiate(itemTemplate.node);
          return newItem.getComponent(DropDownItem_1.default);
        }
        onSelectedItem(event) {
          let toggle = event.target;
          let parent = toggle.parent;
          for (let i = 0; i < parent.childrenCount; i++) if (parent.children[i] == toggle) {
            this.selectedIndex = i - 1;
            let id = toggle.getComponent(DropDownItem_1.default).toggleID;
            sound_manager_1.sound_manager.play_click();
            utils_1.utils.send("DropDownItemToggle", id);
            break;
          }
          this.hide();
        }
        onClick() {
          sound_manager_1.sound_manager.play_click();
          if (this.isShow) {
            this.hide();
            utils_1.utils.send("HideDropDown", this.data.id);
          } else this.show();
          tutorial_1.tutorial.close_tutorial();
        }
        start() {
          this.template.active = false;
        }
        onEnable() {
          this.node.on("touchend", this.onClick, this);
        }
        onDisable() {
          this.node.off("touchend", this.onClick, this);
        }
        clamp(value, min, max) {
          if (value < min) return min;
          if (value > max) return max;
          return value;
        }
      };
      __decorate([ property(cc.Node) ], DropDown.prototype, "template", void 0);
      __decorate([ property(cc.Label) ], DropDown.prototype, "labelTitle", void 0);
      __decorate([ property(cc.Label) ], DropDown.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], DropDown.prototype, "labelDes", void 0);
      __decorate([ property(cc.Sprite) ], DropDown.prototype, "spriteArrow", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], DropDown.prototype, "spriteFramesArrow", void 0);
      DropDown = __decorate([ ccclass() ], DropDown);
      return DropDown;
    })();
    exports.default = DropDown;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./DropDownItem": "DropDownItem"
  } ],
  EmButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "88e9bZqmsZLP6l7Vub6R9Wv", "EmButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let EmButton = (() => {
      let EmButton = class EmButton extends cc.Component {
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "EmButton";
          clickEventHandler.handler = "onBtnClicked";
          var button = this.getComponent(cc.Button);
          button.clickEvents.push(clickEventHandler);
        }
        onBtnClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let e = new cc.Event.EventCustom("emClicked", true);
          let t = this.node.name;
          e.setUserData(t.slice(0, t.indexOf("_se")));
          this.node.dispatchEvent(e);
        }
      };
      EmButton = __decorate([ ccclass ], EmButton);
      return EmButton;
    })();
    exports.default = EmButton;
    cc._RF.pop();
  }, {
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  EmotionPlayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7d5b6MHMS9KvKTpBrOtcaaQ", "EmotionPlayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let EmotionPlayer = (() => {
      let EmotionPlayer = class EmotionPlayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.animation = null;
        }
        onEnable() {
          this.animation.on("play", this.onPlay, this);
          this.animation.on("stop", this.onStop, this);
          this.animation.on("lastframe", this.onLastFrame, this);
          this.animation.on("finished", this.onFinished, this);
          this.animation.on("pause", this.onPause, this);
          this.animation.on("resume", this.onResume, this);
        }
        onDisable() {
          this.animation.off("play", this.onPlay, this);
          this.animation.off("stop", this.onStop, this);
          this.animation.off("lastframe", this.onLastFrame, this);
          this.animation.off("finished", this.onFinished, this);
          this.animation.off("pause", this.onPause, this);
          this.animation.off("resume", this.onResume, this);
        }
        play(index) {
          if (!cc.isValid(this)) return false;
          if (index < 27) {
            this.animation.getClips().find(x => x.name == "em" + index) || this.animation.addClip(lobby_framework_1.lobby_framework.get_emotion_animation_clip(index));
            this.animation.stop();
            this.animation.play("em" + index);
            return true;
          }
          return false;
        }
        onPlay() {
          this.animation.node.active = true;
        }
        onStop() {
          this.animation.node.active = false;
        }
        onLastFrame() {}
        onFinished() {
          this.animation.node.active = false;
          this.node.active = false;
        }
        onPause() {}
        onResume() {}
      };
      __decorate([ property(cc.Animation) ], EmotionPlayer.prototype, "animation", void 0);
      EmotionPlayer = __decorate([ ccclass ], EmotionPlayer);
      return EmotionPlayer;
    })();
    exports.default = EmotionPlayer;
    cc._RF.pop();
  }, {
    "../Framework/lobby/lobby_framework": "lobby_framework"
  } ],
  EnterPrivate: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a2c53CUxWtGNYuOmvMncrCP", "EnterPrivate");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../../AppGlobal");
    const game_auxi_1 = require("../../Framework/lobby/game/game_auxi");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let EnterPrivate = (() => {
      let EnterPrivate = class EnterPrivate extends cc.Component {
        constructor() {
          super(...arguments);
          this.roomNumber = null;
          this.buttonLayout = null;
          this._displayNumber = "";
        }
        get displayNumber() {
          return this._displayNumber;
        }
        set displayNumber(value) {
          this.roomNumber.string = value;
          this._displayNumber = value;
        }
        onLoad() {
          this.buttonLayout.children.forEach(node => {
            utils_1.utils.bind_button_event(node.getComponent(cc.Button), this.node, "EnterPrivate", "onButtonClicked");
          });
        }
        setData() {
          this.displayNumber = "";
        }
        onButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let n = event.target.name;
          if ("d" == n) this.displayNumber = this.displayNumber.slice(0, this.displayNumber.length - 1); else if ("c" == n) this.displayNumber = ""; else {
            this.displayNumber.length < 6 && (this.displayNumber += n);
            6 == this.displayNumber.length && this.tryEnterRoom();
          }
        }
        tryEnterRoom() {
          game_auxi_1.game_auxi.enter_private_room(this.displayNumber);
        }
        on_enter_auxi_result(param) {
          let int_code = param.int_code;
          let str_result = param.str_result;
          if (int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20) {
            this.displayNumber = "";
            AppGlobal_1.AppGlobal.getInstance().showPrivateDetail();
          } else utils_1.utils.show_hint(str_result);
        }
      };
      __decorate([ property(cc.EditBox) ], EnterPrivate.prototype, "roomNumber", void 0);
      __decorate([ property(cc.Node) ], EnterPrivate.prototype, "buttonLayout", void 0);
      EnterPrivate = __decorate([ ccclass ], EnterPrivate);
      return EnterPrivate;
    })();
    exports.default = EnterPrivate;
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/game/game_auxi": "game_auxi",
    "../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ErRenCardLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "59c46/4Cs1OfpQKof8xaonI", "ErRenCardLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenOutCard_1 = require("./ErRenOutCard");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenCardLayer = (() => {
      let ErRenCardLayer = class ErRenCardLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.out_card_layer = [];
          this.m_hand_count = [];
          this.hand_cards = [];
          this.hand_cards_other = [];
          this.table_big_card = [];
          this.point_out_cards = [];
          this.hand_cards_count = 0;
          this.hand_cards_count_other = 0;
          this.ptr_action_card = [];
          this.m_game_layer = null;
        }
        onLoad() {}
        start() {}
        init() {
          let that = this;
          for (let i = 0; i < this.out_card_layer.length; i++) this.out_card_layer[i].init();
          cards_3d_layout_1.default.get().setOnAnyTouchEventFunc(function(param_sender, param_touchType) {});
          cards_3d_layout_1.default.get().setOutCardEndFunc(function(param_view, param_pos) {
            cards_3d_layout_1.default.get().showLastOutCardIndicator(param_view);
          });
          cards_3d_layout_1.default.get().setClickCardOutFunc(function(param_value) {
            that.out_card(param_value);
          });
          cards_3d_layout_1.default.get().setMoveCardOutFunc(function(param_value) {
            that.out_card(param_value);
          });
          cards_3d_layout_1.default.get().setSortCardsFunc(function(param_list) {
            if (param_list) return that.sort_cards(param_list, that.m_game_layer.m_fake_card);
            return [];
          });
          cards_3d_layout_1.default.get().setFindCardInHandPositionFunc(function(param_cards, param_value) {
            return that.find_new_card_index(param_cards, param_value);
          });
          cards_3d_layout_1.default.get().setClickCardFunc(function(param_value) {
            that.onclick_card_once(param_value);
          }.bind(this));
          cards_3d_layout_1.default.get().setHandleClickedFunc(function(arg) {
            that.onclick_handle_btn(arg);
          });
        }
        onclick_handle_btn(arg) {
          let handle_type = arg.handle_type;
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          if (handle_type == cards_3d_config_1.HandleType.ting) {
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.do_baoting, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            ErRenGameDefine_1.ErRenGameDefine.FLAG_TING_STAGE = true;
            cards_3d_layout_1.default.get().unselectAllHandCards();
            return;
          }
          if (handle_type == cards_3d_config_1.HandleType.pass && true == ErRenGameDefine_1.ErRenGameDefine.FLAG_TING_STAGE) {
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.do_quxiao, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            ErRenGameDefine_1.ErRenGameDefine.FLAG_TING_STAGE = false;
            cards_3d_layout_1.default.get().unselectAllHandCards();
            return;
          }
          the_data["handle_type"] = this.switch_handle_type_to_server(arg.handle_type);
          the_data["gang_card"] = arg.card_value;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.handle_card, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          cards_3d_layout_1.default.get().unselectAllHandCards();
        }
        switch_handle_type_to_server(typeClient) {
          let typeServer = 0;
          typeClient == cards_3d_config_1.HandleType.b_chi_left ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_left : typeClient == cards_3d_config_1.HandleType.b_chi_right ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_right : typeClient == cards_3d_config_1.HandleType.b_chi_mid ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_mid : typeClient == cards_3d_config_1.HandleType.b_peng ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.peng : typeClient == cards_3d_config_1.HandleType.b_gang ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_1 : typeClient == cards_3d_config_1.HandleType.a_gang ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_2 : typeClient == cards_3d_config_1.HandleType.d_gang ? typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang : typeClient == cards_3d_config_1.HandleType.hu && (typeServer = ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.hu);
          return typeServer;
        }
        out_card(card) {
          cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
          let sex = bind_function_1.bf.get_self_user_data().cbGender;
          ErRenSoundManager_1.ErRenSoundManager.out_card_effect(sex, card);
          this.other_turn();
          let the_data = {};
          the_data["out_card"] = card;
          the_data["out_index"] = 0;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.out_card, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          this.m_game_layer.client_out_card = card;
          this.show_out_card(ErRenGameDefine_1.ErRenGameDefine.ViewID.self, card);
          this.m_game_layer.ptr_finish_layer.m_hu_cards.length > 0 ? this.m_game_layer.set_btn_tingLayer_visible(true) : this.m_game_layer.set_btn_tingLayer_visible(false);
          cards_3d_layout_1.default.get().unselectAllHandCards();
        }
        find_new_card_index(param_array, param_value) {
          let temp_value = param_value;
          for (let i = param_array.length - 1; i >= 0; i--) {
            let array_value = param_array[i];
            if (array_value <= temp_value) return i + 1;
          }
          return 0;
        }
        onclick_card_once(args) {
          if (!args) return;
          ErRenSoundManager_1.ErRenSoundManager.playEffect(1);
          let find = false;
          for (let i = 0; i < this.m_game_layer.hint_cards.length; i++) if (this.m_game_layer.hint_cards[i] == args) {
            let the_data = {};
            the_data["touch_card"] = args;
            the_data["touch_index"] = 0;
            find = true;
            console.log("MessageToServer.hu_hint data : ", the_data);
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.hu_hint, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            return;
          }
          find || this.m_game_layer.ptr_ting_layer.hide_ting_layer();
        }
        other_turn() {
          cards_3d_layout_1.default.get().setHandCardsCanOut(false);
          cards_3d_layout_1.default.get().unselectAllHandCards();
          cards_3d_layout_1.default.get().setHandCardsTing(null);
          cards_3d_layout_1.default.get().hideHandleSelect();
          if (this.m_game_layer.ptr_finish_layer.m_hu_cards[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].length > 0) {
            cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
            cards_3d_layout_1.default.get().setHandCardsDark(true);
          } else {
            cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
            cards_3d_layout_1.default.get().setHandCardsDark(false);
          }
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        on_event_hand_cards(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data._int_chair_id);
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            cards_3d_layout_1.default.get().unselectAllHandCards();
            let count = json_data._hand_cards.length;
            this.set_self_hand_card(json_data._hand_cards, count, json_data._bool_ani);
            this.m_game_layer.set_btn_tingLayer_visible(json_data.bool_ting);
            !json_data.bool_ani && json_data.bool_ting && cards_3d_layout_1.default.get().setHandCardsDark(true);
          }
        }
        set_self_hand_card(values, cnt, ani) {
          if (void 0 == cnt || null == cnt) return;
          let view_id = bind_function_1.bf.switch_to_view_id(bind_function_1.bf.get_self_user_data().wChairID);
          this.hand_cards = [];
          for (let i = 0; i < cnt; i++) this.hand_cards[i] = values[i];
          this.test_hand_card();
          let that = this;
          if (ani) {
            bind_function_1.bf.pause_message();
            let int_time = .5;
            let int_hand_card_group_self = 0;
            let callBack = function() {
              ErRenSoundManager_1.ErRenSoundManager.playEffect(2);
              int_hand_card_group_self += 1;
              cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.down, that.hand_cards, 3 * int_hand_card_group_self);
            };
            this.ptr_action_card[0].runAction(cc.sequence(cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(function() {
              that.sort_hand_cards(that.m_game_layer.m_fake_card);
              cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.down, that.hand_cards);
              bind_function_1.bf.restore_message();
            })));
          } else {
            that.sort_hand_cards(this.m_game_layer.m_fake_card);
            cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.down, that.hand_cards);
          }
        }
        set_other_hand_card(cnt, ani) {
          for (let i = 0; i < cnt; i++) this.hand_cards_other[i] = ErRenGameDefine_1.ErRenGameDefine.InvalidValue;
          let that = this;
          if (ani) {
            let int_time = .5;
            let int_hand_card_group_other = 0;
            let callBack = function() {
              int_hand_card_group_other += 1;
              cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.up, that.hand_cards_other, 3 * int_hand_card_group_other);
            };
            this.ptr_action_card[1].runAction(cc.sequence(cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(callBack), cc.delayTime(int_time), cc.callFunc(function() {
              cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.up, that.hand_cards_other);
            })));
          } else cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.up, that.hand_cards_other);
        }
        sort_hand_cards(fake_card = ErRenGameDefine_1.ErRenGameDefine.INVALID_CARD) {
          if (0 == this.hand_cards.length) return;
          this.hand_cards.sort((a, b) => a == fake_card ? -1 : b == fake_card ? 1 : a - b);
        }
        sort_cards(byte_cards, fake_card = ErRenGameDefine_1.ErRenGameDefine.INVALID_CARD) {
          if (0 == byte_cards.length) return [];
          byte_cards.sort((a, b) => a == fake_card ? -1 : b == fake_card ? 1 : a - b);
          return byte_cards;
        }
        sort_enemy_hand_cards() {
          if (0 == this.hand_cards_other.length) return;
          this.hand_cards_other.sort();
        }
        insert_hand_card(cards, count) {
          if (!cards) return;
          if (1 == count) {
            this.test_hand_card();
            this.hand_cards.push(cards);
            this.test_hand_card();
            return;
          }
        }
        remove_hand_card(card) {
          this.test_hand_card();
          for (let i = 0; i < this.hand_cards.length; i++) {
            let value = this.hand_cards[i];
            if (value == card) {
              this.hand_cards.splice(i, 1);
              break;
            }
          }
        }
        remove_hand_cards(cards) {
          for (let i = 0; i < cards.length; i++) this.remove_hand_card(cards[i]);
        }
        hide_point() {
          cards_3d_layout_1.default.get().showLastOutCardIndicator(0);
        }
        clear_out_cards() {
          for (let i = 0; i < this.out_card_layer.length; i++) this.out_card_layer[i].hideCard();
        }
        clear_out_card(int_view_id) {
          if (int_view_id < 0 || int_view_id > 1) return;
          this.out_card_layer[int_view_id].hideCard();
        }
        show_out_card(view_id, value) {
          this.hide_all_out_card();
          this.out_card_layer[view_id].showCard(value);
        }
        hide_all_out_card() {
          for (let i = 0; i < this.out_card_layer.length; i++) this.out_card_layer[i].node.active = false;
        }
        set_can_hide(hide) {
          for (let i = 0; i < this.out_card_layer.length; i++) this.out_card_layer[i].node.active && this.out_card_layer[i].setCanHide(hide);
        }
        get_card_index(card_value) {
          let index = 0;
          this.test_hand_card();
          for (let i = this.hand_cards.length; i > 0; i--) {
            let card = this.hand_cards[i];
            if (card == card_value) {
              index = i;
              break;
            }
          }
          return index;
        }
        test_hand_card() {
          return;
        }
      };
      __decorate([ property([ ErRenOutCard_1.default ]) ], ErRenCardLayer.prototype, "out_card_layer", void 0);
      __decorate([ property(cc.Node) ], ErRenCardLayer.prototype, "ptr_action_card", void 0);
      ErRenCardLayer = __decorate([ ccclass ], ErRenCardLayer);
      return ErRenCardLayer;
    })();
    exports.default = ErRenCardLayer;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../Framework/lobby/bind_function": "bind_function",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenOutCard": "ErRenOutCard",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenDoubleLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e6e2283TiJGUpkM8Fsk3Z1P", "ErRenDoubleLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenDoubleLayer = (() => {
      let ErRenDoubleLayer = class ErRenDoubleLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.win_node = null;
          this.lose_node = null;
          this.hu_gold_label = null;
          this.fan_num_back = null;
          this.btn_double = null;
          this.fan_num_label = null;
          this.logo_si_ting = null;
          this.btn_hu = null;
          this.other_double = null;
          this.may_lose = null;
          this.lose_gold_label = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btn_double, this.node, "ErRenDoubleLayer", "onSelfDoubleClicked");
          utils_1.utils.bind_button_event(this.btn_hu, this.node, "ErRenDoubleLayer", "onSelfHuClicked");
        }
        start() {}
        set_double_visible(double_id, si_ting) {
          if (double_id < 0 || double_id > ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER - 1) {
            this.node.active = false;
            return;
          }
          this.node.active = true;
          let is_self = double_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self;
          this.win_node.active = is_self;
          this.lose_node.active = !is_self;
          this.btn_double.interactable = true;
          if (double_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            this.logo_si_ting.node.active = si_ting;
            si_ting && (this.btn_double.interactable = false);
          } else double_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy;
        }
        set_gold_count(double_id, gold_count) {
          if (double_id < 0 || double_id > ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER - 1) {
            this.node.active = false;
            return;
          }
          double_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? this.hu_gold_label.string = "\u80e1" + gold_count : double_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && (this.lose_gold_label.string = gold_count);
        }
        set_fan_count(double_id, fan_count, si_ting) {
          if (double_id < 0 || double_id > ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER - 1) {
            this.node.active = false;
            return;
          }
          this.fan_num_label.string = fan_count;
        }
        onSelfDoubleClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.do_double, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        onSelfHuClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.do_hu, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        hide() {
          this.node.active = false;
        }
      };
      __decorate([ property(cc.Node) ], ErRenDoubleLayer.prototype, "win_node", void 0);
      __decorate([ property(cc.Node) ], ErRenDoubleLayer.prototype, "lose_node", void 0);
      __decorate([ property(cc.Label) ], ErRenDoubleLayer.prototype, "hu_gold_label", void 0);
      __decorate([ property(cc.Sprite) ], ErRenDoubleLayer.prototype, "fan_num_back", void 0);
      __decorate([ property(cc.Button) ], ErRenDoubleLayer.prototype, "btn_double", void 0);
      __decorate([ property(cc.Label) ], ErRenDoubleLayer.prototype, "fan_num_label", void 0);
      __decorate([ property(cc.Sprite) ], ErRenDoubleLayer.prototype, "logo_si_ting", void 0);
      __decorate([ property(cc.Button) ], ErRenDoubleLayer.prototype, "btn_hu", void 0);
      __decorate([ property(cc.Sprite) ], ErRenDoubleLayer.prototype, "other_double", void 0);
      __decorate([ property(cc.Sprite) ], ErRenDoubleLayer.prototype, "may_lose", void 0);
      __decorate([ property(cc.Label) ], ErRenDoubleLayer.prototype, "lose_gold_label", void 0);
      ErRenDoubleLayer = __decorate([ ccclass ], ErRenDoubleLayer);
      return ErRenDoubleLayer;
    })();
    exports.default = ErRenDoubleLayer;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenFinishLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4e476tZDbhGCouHXSFgxqJF", "ErRenFinishLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const table_3d_layout_1 = require("../../../Layout3D/Src/table_3d_layout");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const ErRenGameData_1 = require("./ErRenGameData");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenHuTypeLabel_1 = require("./ErRenHuTypeLabel");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var FinishType;
    (function(FinishType) {
      FinishType[FinishType["NULL"] = 0] = "NULL";
      FinishType[FinishType["WIN"] = 1] = "WIN";
      FinishType[FinishType["LOSE"] = 2] = "LOSE";
      FinishType[FinishType["EQUAL"] = 3] = "EQUAL";
    })(FinishType || (FinishType = {}));
    var ClearScoreType;
    (function(ClearScoreType) {
      ClearScoreType[ClearScoreType["NULL"] = 0] = "NULL";
      ClearScoreType[ClearScoreType["WEEK"] = 1] = "WEEK";
      ClearScoreType[ClearScoreType["DAY"] = 2] = "DAY";
    })(ClearScoreType || (ClearScoreType = {}));
    let ErRenFinishLayer = (() => {
      let ErRenFinishLayer = class ErRenFinishLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.back_button = null;
          this.change_button = null;
          this.again_button = null;
          this.difen_label = null;
          this.taifei_label = null;
          this.layer_back_liu = null;
          this.layer_back = null;
          this.label_node = null;
          this.jiabei_label = null;
          this.task_label = null;
          this.paixing_label = null;
          this.sum_label = null;
          this.ptr_card_info = null;
          this.time_label_bg = null;
          this.time_label = null;
          this.win_node = null;
          this.hu_fan_back_win = null;
          this.gold_win_label = null;
          this.lose_node = null;
          this.hu_fan_back_lose = null;
          this.gold_lose_label = null;
          this.hu_type_node = null;
          this.hu_type_prefab = null;
          this.progress = null;
          this.progress_bar_bg = null;
          this.progress_bars = [];
          this.next_level = null;
          this.win_current_score = null;
          this.lose_current_score = null;
          this.win_duanwei_label = null;
          this.lose_duanwei_label = null;
          this.win_duanwei_1 = [];
          this.win_duanwei_2 = [];
          this.win_star_1 = [];
          this.win_star_2 = [];
          this.win_base_star = null;
          this.lose_duanwei_1 = [];
          this.lose_duanwei_2 = [];
          this.lose_star_1 = [];
          this.lose_star_2 = [];
          this.lose_base_star = null;
          this.ani_win = null;
          this.ani_lose = null;
          this.share_node = null;
          this.share_button = null;
          this.share_tip_node = null;
          this.share_tip_lable = null;
          this.sp_matchShare = null;
          this.matchWin = null;
          this.matchLose = null;
          this._matchData = null;
          this.handle_card_space_x = 204;
          this.offset_handle_and_hand_x = 44;
          this.scale = .7;
          this.card_width = 64;
          this.last_card_space = 10;
          this.m_handled_cards_pos = [];
          this.m_hand_cards = [];
          this.m_hu_cards = [ [], [] ];
          this.finish_type = FinishType.NULL;
          this.m_current_socre = 0;
          this.m_current_game_socre = 0;
          this.m_fan_count = 0;
          this.m_game_layer = null;
          this.m_base = 0;
          this.m_tax = 0;
          this.m_timer_func = null;
          this._show_time = 10;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.change_button, this.node, "ErRenFinishLayer", "onChangeButtonClicked");
          utils_1.utils.bind_button_event(this.back_button, this.node, "ErRenFinishLayer", "onBackButtonClicked");
          utils_1.utils.bind_button_event(this.again_button, this.node, "ErRenFinishLayer", "onAgainButtonClicked");
          utils_1.utils.bind_button_event(this.share_button, this.node, "ErRenFinishLayer", "onShareButtonClicked");
        }
        start() {
          this.init_cards_pos();
          this.back_button.node.getComponent(cc.Widget).isAlignLeft = true;
          cc.winSize.width > 1520 && (this.back_button.node.getComponent(cc.Widget).left += ErRenGameDefine_1.ErRenGameDefine.OFFSET_X);
        }
        init() {
          this.node.active = false;
          this.label_node.active = false;
          this.progress.node.active = false;
          this.time_label_bg.node.active = false;
          this.change_button.node.active = false;
          this.again_button.node.active = false;
          this.share_button.node.active = false;
          this.hu_type_node.removeAllChildren();
          this.ptr_card_info.removeAllChildren();
        }
        init_animation() {
          this.ani_lose.node.active = false;
          this.ani_win.node.active = false;
          this.change_button.node.active = false;
          this.again_button.node.active = false;
          this.share_button.node.active = false;
          this.set_base_start_show(false, false);
          this.win_duanwei_1.forEach(v => v.active = false);
          this.win_duanwei_2.forEach(v => v.active = false);
          this.win_star_1.forEach(v => v.active = false);
          this.win_star_2.forEach(v => v.active = false);
          this.lose_duanwei_1.forEach(v => v.active = false);
          this.lose_duanwei_2.forEach(v => v.active = false);
          this.lose_star_1.forEach(v => v.active = false);
          this.lose_star_2.forEach(v => v.active = false);
        }
        set_base_start_show(show_win, show_lose) {
          this.win_base_star.active = show_win;
          this.lose_base_star.active = show_lose;
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        onChangeButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.m_game_layer.on_btn_change();
        }
        onBackButtonClicked() {
          this.m_game_layer.on_btn_back();
        }
        onAgainButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playButtonEffect("ready_click");
          if (this._matchData) {
            this.m_game_layer.on_btn_change();
            return;
          }
          if (bind_function_1.bf.get_game_status() != ErRenGameDefine_1.ErRenGameDefine.GameStatus.free) return;
          this.m_game_layer.base_gold_label.string = "";
          this.m_game_layer.base_gold_label.node.active = false;
          this.m_game_layer.left_card_bg.node.active = false;
          this.m_game_layer.clear_data();
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["handle_type"] = 0;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.again, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER = false;
          this.m_game_layer.set_change2_btn(true);
          bind_function_1.bf.send_ready_data();
          cards_3d_layout_1.default.get().reset();
          cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
          table_3d_layout_1.default.get().showTime(false);
          table_3d_layout_1.default.get().turnOffAllLight();
        }
        onShareButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          if (this._matchData) {
            lobby_framework_1.lobby_framework.share_to_match_invite();
            return;
          }
          if (this.finish_type == FinishType.LOSE) {
            if (!ErRenGameData_1.get_game_data().have_share_clear_week_score && this.m_current_socre < 0) if (global_data_1.global_data.is_online) this.share("\u6211\u8be5\u52a0\u500d\u5417?\u5728\u7ebf\u7b49...", "https://user.73sy.com/share/152_2.png", "\u5206\u4eab\u6210\u529f \u60a8\u7684\u603b\u79ef\u5206\u5df2\u6e05\u96f6", "\u5206\u4eab\u5931\u8d25(1)", .5, () => {
              this.share_clear_score(ClearScoreType.WEEK);
            }); else {
              console.log("\u6bcf\u5468\u79ef\u5206\u6e05\u96f6\u5206\u4eab\u6210\u529f");
              this.share_clear_score(ClearScoreType.WEEK);
            } else if (!ErRenGameData_1.get_game_data().have_share_clear_day_score) if (global_data_1.global_data.is_online) this.share("\u6bcf\u5929\u8d6210\u628a,\u52a9\u6211\u4e0a\u201c\u96c0\u795e\u201d!", "https://user.73sy.com/share/152_1.png", "\u5206\u4eab\u6210\u529f \u4eca\u65e5\u9996\u8f93\u514d\u6263\u5206", "\u5206\u4eab\u5931\u8d25(2)", .5, () => {
              this.share_clear_score(ClearScoreType.DAY);
            }); else {
              console.log("\u6bcf\u65e5\u79ef\u5206\u6e05\u96f6\u5206\u4eab\u6210\u529f");
              this.share_clear_score(ClearScoreType.DAY);
            }
          } else if (this.finish_type == FinishType.WIN) {
            let index = 2;
            let fan_count = 30;
            if (this.m_fan_count >= fan_count) {
              let list = [ 1, 3 ];
              index = list[Math.floor(2 * Math.random())];
            } else index = 2;
            let share_text = this.m_fan_count >= fan_count ? `\u4e00\u5c40\u8d62${this.m_fan_count}\u756a,\u505a\u4e2a\u9ad8\u624b\u597d\u7b80\u5355!` : "\u6211\u8be5\u52a0\u500d\u5417?\u5728\u7ebf\u7b49...";
            this.share(share_text, `https://user.73sy.com/share/152_${index}.png`, "\u5206\u4eab\u6210\u529f", "\u5206\u4eab\u5931\u8d25(3)", .5);
          }
        }
        share(share_text, imageUrl, succesHint, failHint, delayTime = 0, success = null, fail = null) {
          platform_1.platform.inst.share({
            title: share_text,
            imageUrl: imageUrl,
            success: () => {
              delayTime > 0 ? setTimeout(() => {
                utils_1.utils.show_hint(succesHint);
              }, 1e3 * delayTime) : utils_1.utils.show_hint(succesHint);
              success && success();
            },
            fail: () => {
              fail && fail();
              utils_1.utils.show_hint(failHint);
            }
          });
        }
        share_clear_score(clearType) {
          if (clearType == ClearScoreType.WEEK) {
            let the_data = {};
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.week_score_clear, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            this.hide_share_btn();
          } else if (clearType == ClearScoreType.DAY) {
            let the_data = {};
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.day_score_clear, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            this.hide_share_btn();
          }
        }
        hide_share_btn() {
          this.share_button.node.active = false;
        }
        show_share_btn() {
          this.share_button.node.active = false;
          this.share_tip_node.active = false;
          if (this._matchData) {
            this.share_button.node.active = true;
            return;
          }
          if (this.finish_type == FinishType.EQUAL) this.share_button.node.active = false; else if (this.finish_type == FinishType.WIN) {
            this.share_button.node.active = true;
            this.share_tip_node.active = false;
          } else if (this.finish_type == FinishType.LOSE) if (ErRenGameData_1.get_game_data().have_share_clear_week_score && ErRenGameData_1.get_game_data().have_share_clear_day_score) this.share_button.node.active = false; else if (!ErRenGameData_1.get_game_data().have_share_clear_week_score && this.m_current_socre < 0) {
            this.share_button.node.active = true;
            this.share_tip_node.active = true;
            this.share_tip_lable.string = "\u6bcf\u5468\u9996\u6b21\u5206\u4eab \u8d1f\u5206\u6e05\u96f6";
          } else if (!ErRenGameData_1.get_game_data().have_share_clear_day_score) {
            this.share_button.node.active = true;
            this.share_tip_node.active = true;
            this.share_tip_lable.string = "\u6bcf\u5929\u9996\u6b21\u5206\u4eab \u672c\u5c40\u514d\u6263\u5206";
          }
          this.share_tip_node.stopAllActions();
          this.share_tip_node.setPosition(cc.v2(0, 72));
          if (this.share_tip_node.active) {
            let timer = 1;
            let dis = 10;
            let vec_1 = cc.v2(this.share_tip_node.getPosition().x, this.share_tip_node.getPosition().y + dis);
            let vec_2 = cc.v2(this.share_tip_node.getPosition().x, this.share_tip_node.getPosition().y - dis);
            this.share_tip_node.runAction(cc.sequence(cc.moveTo(timer, vec_1), cc.moveTo(timer, vec_2)).repeatForever());
          }
        }
        start_layer_timer(time) {
          let show_time = time;
          time && -1 != time || (show_time = 10);
          this.hide_timer();
          this.time_label_bg.node.active = true;
          this.time_label.string = Math.floor(show_time).toString();
          let that = this;
          this.m_timer_func = function(dt) {
            show_time -= dt;
            if (show_time > 0) that.time_label.string = Math.floor(show_time).toString(); else {
              that.hide_timer();
              bind_function_1.bf.close_game(true);
              bind_function_1.bf.show_system_message_box("\u63d0\u793a", "\u957f\u65f6\u95f4\u672a\u5f00\u59cb\uff0c\u5df2\u81ea\u52a8\u79bb\u5f00\u623f\u95f4", "\u786e\u5b9a");
            }
          };
          this.schedule(this.m_timer_func, 1);
        }
        set_difen(difen, taifei) {
          this.difen_label.node.active = false;
          this.taifei_label.node.active = false;
          return;
        }
        hide_timer() {
          if (this.m_timer_func) {
            this.unschedule(this.m_timer_func);
            this.m_timer_func = null;
          }
          this.time_label_bg.node.active = false;
        }
        set_liuju(current_score) {
          this.show();
          this.layer_back.active = false;
          this.layer_back_liu.active = true;
          this.change_button.node.opacity = 255;
          this.again_button.node.opacity = 255;
          this.change_button.node.active = true;
          this.again_button.node.active = true;
          bind_function_1.bf.get_game_engine().ptr_rank_panel.setScore(current_score);
          this.start_layer_timer(ErRenGameDefine_1.ErRenGameDefine.GameConfig.again_time);
          this.finish_type = FinishType.EQUAL;
          this.show_share_btn();
        }
        set_user_score(is_win, num_gold, userGold) {
          let current_score = 0;
          if (is_win) {
            this.gold_win_label.node.active = true;
            this.gold_win_label.string = "+" + num_gold;
          } else {
            this.gold_lose_label.node.active = true;
            this.gold_lose_label.string = "-" + num_gold;
          }
          this.matchWin.active = false;
          this.matchLose.active = false;
          if (this._matchData) {
            is_win ? this.matchWin.active = true : this.matchLose.active = true;
            return;
          }
          if (is_win) {
            current_score = userGold + num_gold;
            this.win_current_score.string = current_score.toString();
            this.next_level.node.color = new cc.Color().fromHEX("#962806");
            this.progress_bar_bg.spriteFrame = this.progress_bars[0];
            this.win_current_score.node.active = true;
            this.finish_type = FinishType.WIN;
            this.m_current_game_socre = num_gold;
          } else {
            current_score = userGold - num_gold;
            this.lose_current_score.string = current_score.toString();
            this.next_level.node.color = new cc.Color().fromHEX("#234661");
            this.progress_bar_bg.spriteFrame = this.progress_bars[1];
            this.lose_current_score.node.active = true;
            this.finish_type = FinishType.LOSE;
            this.m_current_game_socre = -num_gold;
          }
          this.m_current_socre = current_score;
          let next_score = ErRenGameData_1.get_game_data().get_user_next_level_by_score(current_score);
          this.next_level.string = "\u4e0b\u4e00\u6bb5:  " + next_score;
          this.progress.progress = current_score / next_score;
          this.progress.node.active = true;
          let _level = ErRenGameData_1.get_game_data().get_user_level_index_by_score(current_score);
          this.progress.node.active = !(6 == _level);
          this.next_level.node.active = !(6 == _level);
        }
        init_other() {
          this.init_win_lose();
          this.init_animation();
          this.progress.node.active = false;
          this.win_current_score.node.active = false;
          this.lose_current_score.node.active = false;
          this.next_level.node.active = false;
          this.label_node.active = false;
          this.win_duanwei_label.node.active = false;
          this.layer_back_liu.active = false;
          this.win_duanwei_label.string = "";
          this.lose_duanwei_label.node.active = false;
          this.lose_duanwei_label.string = "";
          this.hu_type_node.removeAllChildren();
          this.ptr_card_info.removeAllChildren();
        }
        set_win_lose_logo(is_win, num_gold, userGold) {
          let delay_time = 1;
          let that = this;
          this.layer_back.active = true;
          this.init_other();
          this.show();
          let current_score = 0;
          current_score = is_win ? userGold + num_gold : userGold - num_gold;
          bind_function_1.bf.get_game_engine().ptr_rank_panel.setScore(current_score);
          if (is_win) {
            this.win_node.active = true;
            this.hu_fan_back_win.active = true;
          } else {
            this.lose_node.active = true;
            this.hu_fan_back_lose.active = true;
          }
          that.change_button.node.opacity = 0;
          that.again_button.node.opacity = 0;
          that.change_button.node.active = true;
          that.again_button.node.active = true;
          this.again_button.node.runAction(cc.sequence(cc.delayTime(delay_time), cc.callFunc(function() {
            that.change_button.node.opacity = 255;
            that.again_button.node.opacity = 255;
            that.show_share_btn();
          })));
          if (this._matchData) return;
          let new_level_duanwei = ErRenGameData_1.get_game_data().get_user_level_index_by_score(current_score);
          let old_level_duanwei = ErRenGameData_1.get_game_data().get_user_level_index_by_score(userGold);
          let new_level_star = ErRenGameData_1.get_game_data().get_user_level_star_by_score(current_score);
          let old_level_star = ErRenGameData_1.get_game_data().get_user_level_star_by_score(userGold);
          0 == new_level_duanwei || 6 == new_level_duanwei ? this.set_base_start_show(false, false) : this.set_base_start_show(true, true);
          if (is_win) {
            this.ani_win.node.active = true;
            this.ani_win.play();
            this.win_duanwei_label.node.active = true;
            this.win_duanwei_label.node.runAction(cc.sequence(cc.delayTime(delay_time), cc.callFunc(function() {
              that.win_duanwei_label.string = ErRenGameData_1.get_game_data().get_big_rank_name_by_score(current_score);
            })));
            for (let i = 0; i < this.win_duanwei_1.length; i++) if (new_level_duanwei == i) {
              this.win_duanwei_1[i].active = true;
              break;
            }
            for (let i = 0; i < this.win_duanwei_2.length; i++) if (new_level_duanwei == i) {
              this.win_duanwei_2[i].active = true;
              break;
            }
            new_level_duanwei > old_level_duanwei && new_level_duanwei > 0 && this.m_game_layer.ptr_rank_up_layer.setData(new_level_duanwei);
            if (0 == old_level_star && 0 == new_level_star) ; else if (0 == old_level_star && new_level_star > 0) for (let i = 0; i < this.win_star_2.length; i++) i < new_level_star && (this.win_star_2[i].active = true); else if (old_level_star > 0 && new_level_star > 0) {
              let star_level = new_level_star - old_level_star;
              if (0 == star_level) for (let i = 0; i < this.win_star_1.length; i++) i < new_level_star && (this.win_star_1[i].active = true); else if (star_level > 0) {
                for (let i = 0; i < this.win_star_1.length; i++) i < old_level_star && (this.win_star_1[i].active = true);
                for (let i = old_level_star; i < this.win_star_2.length; i++) i < new_level_star && (this.win_star_2[i].active = true);
              } else if (star_level < 0) for (let i = 0; i < this.win_star_1.length; i++) i < new_level_star && (this.win_star_1[i].active = true);
            }
          } else {
            this.ani_lose.node.active = true;
            this.ani_lose.play();
            this.lose_duanwei_label.node.active = true;
            this.lose_duanwei_label.node.runAction(cc.sequence(cc.delayTime(delay_time), cc.callFunc(function() {
              that.lose_duanwei_label.string = ErRenGameData_1.get_game_data().get_big_rank_name_by_score(current_score);
            })));
            if (new_level_duanwei < old_level_duanwei) {
              for (let i = 0; i < this.lose_duanwei_1.length; i++) if (new_level_duanwei == i) {
                this.lose_duanwei_1[i].active = true;
                break;
              }
              for (let i = 0; i < this.lose_duanwei_1.length; i++) if (old_level_duanwei == i) {
                this.lose_duanwei_2[i].active = true;
                break;
              }
            } else for (let i = 0; i < this.lose_duanwei_1.length; i++) if (new_level_duanwei == i) {
              this.lose_duanwei_1[i].active = true;
              break;
            }
            if (0 == old_level_star && 0 == new_level_star) ; else if (old_level_star > 0 && 0 == new_level_star) for (let i = 0; i < this.lose_star_2.length; i++) i < old_level_star && (this.lose_star_2[i].active = true); else if (old_level_star > 0 && new_level_star > 0) {
              let star_level = new_level_star - old_level_star;
              if (0 == star_level) for (let i = 0; i < this.lose_star_1.length; i++) i < new_level_star && (this.lose_star_1[i].active = true); else if (star_level > 0) for (let i = 0; i < this.lose_star_1.length; i++) i < new_level_star && (this.lose_star_1[i].active = true); else if (star_level < 0) {
                for (let i = 0; i < this.lose_star_1.length; i++) i < new_level_star && (this.lose_star_1[i].active = true);
                for (let i = new_level_star; i < this.lose_star_2.length; i++) i < old_level_star && (this.lose_star_2[i].active = true);
              }
            }
          }
          if (6 == new_level_duanwei || 0 == new_level_duanwei) {
            this.win_star_1.forEach(v => v.active = false);
            this.win_star_2.forEach(v => v.active = false);
            this.lose_star_1.forEach(v => v.active = false);
            this.lose_star_2.forEach(v => v.active = false);
          }
        }
        init_win_lose() {
          this.win_node.active = false;
          this.hu_fan_back_win.active = false;
          this.gold_win_label.node.active = false;
          this.lose_node.active = false;
          this.hu_fan_back_lose.active = false;
          this.gold_lose_label.node.active = false;
        }
        init_cards_pos() {
          this.ptr_card_info.removeAllChildren();
          this.handle_card_space_x = this.handle_card_space_x * this.scale;
          for (let i = 0; i < 5; i++) this.m_handled_cards_pos[i] = cc.v2(i * this.handle_card_space_x, 0);
        }
        show_last_cards(handled_count, handled_types, handled_cards, hand_count, hand_cards, last_card_value) {
          this.init_start_pos(handled_types, hand_cards);
          this.set_heap_card(handled_types, handled_cards);
          this.set_hand_cards(hand_cards, handled_types, last_card_value);
        }
        set_heap_card(handled_types, handled_cards) {
          if (null != handled_types && handled_types.length > 0) for (let i = 0; i < handled_types.length; i++) {
            let card_value = handled_cards[i];
            let handle_type = handled_types[i];
            let newNode = this.getNewHandleCards(handle_type, card_value, this.scale);
            newNode.setPosition(this.m_handled_cards_pos[i]);
            this.ptr_card_info.addChild(newNode);
          }
        }
        set_hand_cards(param_hand, param_handle, last_card_value) {
          let hand_cards = param_hand;
          let handled_count = param_handle.length;
          hand_cards.sort();
          0 != last_card_value && hand_cards.push(last_card_value);
          if (null != hand_cards) {
            let begin_pos = 0;
            0 != handled_count && (begin_pos = this.handle_card_space_x * handled_count - this.offset_handle_and_hand_x);
            for (let i = 0; i < hand_cards.length; i++) {
              this.m_hand_cards[i] = cards_3d_layout_1.default.get().getNewHandCard(true);
              this.m_hand_cards[i].scale = cc.v2(this.scale, this.scale);
              this.m_hand_cards[i].x = begin_pos + i * this.card_width * this.scale;
              this.m_hand_cards[i].y = 0;
              this.ptr_card_info.addChild(this.m_hand_cards[i]);
              this.m_hand_cards[i].getComponent(CSelfHandCard3D_1.default).showCard(hand_cards[i]);
              this.isAllHandCard(hand_cards.length) && i == hand_cards.length - 1 && (this.m_hand_cards[i].x += this.last_card_space);
            }
          }
        }
        isAllHandCard(hand_count) {
          if (2 == hand_count || 5 == hand_count || 8 == hand_count || 11 == hand_count || 14 == hand_count || 17 == hand_count) return true;
          return false;
        }
        init_start_pos(heap_cards, hand_cards) {
          let json_handle = heap_cards;
          let handle_x = json_handle.length * this.handle_card_space_x;
          let heap_and_hand_space = 0;
          0 != heap_cards.length && (heap_and_hand_space = this.offset_handle_and_hand_x + 30);
          let hand_x = hand_cards.length * this.card_width * this.scale;
          let all_length = handle_x + hand_x - heap_and_hand_space;
          let line_info_y = this.ptr_card_info.getPosition().y;
          let pos = cc.v2(.5 * -all_length, line_info_y);
          this.ptr_card_info.setPosition(pos);
        }
        getNewHandleCards(handle_type, value, scale) {
          let pos = [ cc.v2(-this.card_width * scale, 0), cc.v2(0, 0), cc.v2(this.card_width * scale, 0), cc.v2(0, 20 * scale) ];
          let newNode = new cc.Node("single_node");
          let m_handled_cards = [];
          for (let i = 0; i < 4; i++) {
            m_handled_cards[i] = cards_3d_layout_1.default.get().getNewHandCard(true);
            m_handled_cards[i].setPosition(pos[i]);
            m_handled_cards[i].scale = scale;
            newNode.addChild(m_handled_cards[i]);
          }
          handle_type == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_shun ? handle_type = cards_3d_config_1.HandleType.b_chi_left : handle_type == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_ke ? handle_type = cards_3d_config_1.HandleType.b_peng : handle_type == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_gang1 || handle_type == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_gang2 ? handle_type = cards_3d_config_1.HandleType.b_gang : handle_type == ErRenGameDefine_1.ErRenGameDefine.HandledType.an_gang && (handle_type = cards_3d_config_1.HandleType.d_gang);
          if (handle_type == cards_3d_config_1.HandleType.b_chi_left) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value + 1);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value + 2);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_chi_mid) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value - 1);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value + 1);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_chi_right) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value - 2);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value - 1);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_peng) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          } else if (handle_type == cards_3d_config_1.HandleType.d_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          } else if (handle_type == cards_3d_config_1.HandleType.a_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          }
          return newNode;
        }
        set_detail_label(is_win, num_jiabei, num_renwu, num_hu, num_difen) {
          this.jiabei_label.string = num_jiabei.toString();
          this.task_label.string = num_renwu.toString();
          this.paixing_label.string = num_hu.toString();
          let total = num_hu * num_jiabei * num_renwu;
          this.m_fan_count = total;
          this.sum_label.string = total.toString();
          if (is_win) {
            let color_1 = "#C35B2D";
            this.jiabei_label.node.color = new cc.Color().fromHEX(color_1);
            this.task_label.node.color = new cc.Color().fromHEX(color_1);
            this.paixing_label.node.color = new cc.Color().fromHEX(color_1);
            this.sum_label.node.color = new cc.Color().fromHEX(color_1);
            let color_2 = "#0B9C89";
            this.jiabei_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.task_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.paixing_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.sum_label.node.parent.color = new cc.Color().fromHEX(color_2);
          } else {
            let color_1 = "#721A04";
            this.jiabei_label.node.color = new cc.Color().fromHEX(color_1);
            this.task_label.node.color = new cc.Color().fromHEX(color_1);
            this.paixing_label.node.color = new cc.Color().fromHEX(color_1);
            this.sum_label.node.color = new cc.Color().fromHEX(color_1);
            let color_2 = "#417EAF";
            this.jiabei_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.task_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.paixing_label.node.parent.color = new cc.Color().fromHEX(color_2);
            this.sum_label.node.parent.color = new cc.Color().fromHEX(color_2);
          }
          this.label_node.active = true;
        }
        add_hu_type(is_win, hu_type, hu_count) {
          this.hu_type_node.removeAllChildren();
          hu_type.length > 1 && hu_type.sort((a, b) => b - a);
          for (let i = 0; i < hu_type.length; i++) this.get_hu_type_label(hu_type[i], is_win);
          this.hu_type_node.getComponent(cc.Layout).updateLayout();
          let width = this.hu_type_node.getContentSize().width;
          let height = this.hu_type_node.parent.getContentSize().height;
          let width_l = 710;
          width > width_l ? this.hu_type_node.parent.setContentSize(width_l, height) : this.hu_type_node.parent.setContentSize(width, height);
        }
        add_hu_type_mul(is_win, hu_result) {
          let hu_types = hu_result.hu_types;
          let hu_results = {};
          for (let i = 0; i < hu_types.length; i++) {
            let hu_type = hu_types[i];
            for (let j = 0; j < hu_type.length; j++) {
              hu_results[hu_type[j]] || (hu_results[hu_type[j]] = 0);
              hu_results[hu_type[j]]++;
            }
          }
          this.hu_type_node.removeAllChildren();
          let nCount = 0;
          for (let i = ErRenGameDefine_1.ErRenGameDefine.HuTypeName.length - 1; i >= 0; i--) if (hu_results[i + 1] && hu_results[i + 1] > 0) {
            this.get_hu_type_label(i + 1, is_win, hu_results[i + 1]);
            nCount++;
          }
          console.log("hu_type" + nCount);
          this.hu_type_node.getComponent(cc.Layout).updateLayout();
          this.ptr_card_info.y = 50;
          this.hu_type_node.parent.y = -135;
        }
        get_hu_type_label(hu_type, is_win, hu_mul = 1) {
          let item = cc.instantiate(this.hu_type_prefab);
          item.active = true;
          this.hu_type_node.addChild(item);
          let typeName = ErRenGameDefine_1.ErRenGameDefine.HuTypeName[hu_type - 1];
          let typeFan = ErRenGameDefine_1.ErRenGameDefine.HuTypeFan[hu_type - 1];
          item.getComponent(ErRenHuTypeLabel_1.default).setData(typeName, typeFan, is_win, hu_mul);
          item.getComponent(ErRenHuTypeLabel_1.default).node.getComponent(cc.Layout).updateLayout();
        }
        on_btn_again() {
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["handle_type"] = 0;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.change_cards, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        clear_data() {
          if (this.m_timer_func) {
            this.unschedule(this.m_timer_func);
            this.m_timer_func = null;
          }
          this.init_other();
          this.hide();
          this.m_hu_cards = [ [], [] ];
        }
        hide() {
          this.node.active = false;
        }
        show() {
          this.node.active = true;
        }
        test001() {
          return;
        }
        onDestroy() {}
        setCurMatchScore(score) {
          console.log(`current match score ${score}`);
          this.matchWin.getChildByName("label_scroe").getComponent(cc.Label).string = score;
          this.matchLose.getChildByName("label_scroe").getComponent(cc.Label).string = score;
        }
        setMatchData(data) {
          this._matchData = data;
          this.share_tip_node.active = false;
          this.sp_matchShare.node.active = true;
        }
      };
      __decorate([ property(cc.Button) ], ErRenFinishLayer.prototype, "back_button", void 0);
      __decorate([ property(cc.Button) ], ErRenFinishLayer.prototype, "change_button", void 0);
      __decorate([ property(cc.Button) ], ErRenFinishLayer.prototype, "again_button", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "difen_label", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "taifei_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "layer_back_liu", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "layer_back", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "label_node", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "jiabei_label", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "task_label", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "paixing_label", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "sum_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "ptr_card_info", void 0);
      __decorate([ property(cc.Sprite) ], ErRenFinishLayer.prototype, "time_label_bg", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "time_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_node", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "hu_fan_back_win", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "gold_win_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_node", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "hu_fan_back_lose", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "gold_lose_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "hu_type_node", void 0);
      __decorate([ property(cc.Prefab) ], ErRenFinishLayer.prototype, "hu_type_prefab", void 0);
      __decorate([ property(cc.ProgressBar) ], ErRenFinishLayer.prototype, "progress", void 0);
      __decorate([ property(cc.Sprite) ], ErRenFinishLayer.prototype, "progress_bar_bg", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], ErRenFinishLayer.prototype, "progress_bars", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "next_level", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "win_current_score", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "lose_current_score", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "win_duanwei_label", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "lose_duanwei_label", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_duanwei_1", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_duanwei_2", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_star_1", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_star_2", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "win_base_star", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_duanwei_1", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_duanwei_2", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_star_1", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_star_2", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "lose_base_star", void 0);
      __decorate([ property(cc.Animation) ], ErRenFinishLayer.prototype, "ani_win", void 0);
      __decorate([ property(cc.Animation) ], ErRenFinishLayer.prototype, "ani_lose", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "share_node", void 0);
      __decorate([ property(cc.Button) ], ErRenFinishLayer.prototype, "share_button", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "share_tip_node", void 0);
      __decorate([ property(cc.Label) ], ErRenFinishLayer.prototype, "share_tip_lable", void 0);
      __decorate([ property(cc.Sprite) ], ErRenFinishLayer.prototype, "sp_matchShare", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "matchWin", void 0);
      __decorate([ property(cc.Node) ], ErRenFinishLayer.prototype, "matchLose", void 0);
      ErRenFinishLayer = __decorate([ ccclass ], ErRenFinishLayer);
      return ErRenFinishLayer;
    })();
    exports.default = ErRenFinishLayer;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/table_3d_layout": "table_3d_layout",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "./ErRenGameData": "ErRenGameData",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenHuTypeLabel": "ErRenHuTypeLabel",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenGameData: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5c7b2d9zzdJvoz9t6XHoIcB", "ErRenGameData");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.get_game_data = void 0;
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenGameData = (() => {
      let ErRenGameData = class ErRenGameData extends cc.Component {
        constructor() {
          super(...arguments);
          this.score_list = [ [ 10, 30, 88, 206, 408 ], [ 718, 1160, 1758, 2536, 3518 ], [ 4728, 6190, 7928, 9966, 12328 ], [ 15038, 18120, 21598, 25496, 29838 ], [ 34648, 39950, 45768, 52126, 59048 ], [ 66558, 66558, 66558, 66558, 66558 ] ];
          this.rank_list_name_big = [ "\u65b0\u624b", "\u521d\u6bb5", "\u4e2d\u6bb5", "\u9ad8\u6bb5", "\u56fd\u624b", "\u5b97\u5e08", "\u96c0\u795e" ];
          this.rank_list_name_samll = [ "1\u661f", "2\u661f", "3\u661f", "4\u661f", "5\u661f" ];
          this.have_share_clear_week_score = true;
          this.have_share_clear_day_score = true;
        }
        get_user_level_by_score(int_socre) {
          let rank_big = 0;
          let rank_small = 0;
          if (int_socre < 0) {
            rank_big = 0;
            rank_small = 0;
          } else if (int_socre >= 10 && int_socre < 718) {
            rank_big = 1;
            int_socre >= 10 && int_socre < 30 ? rank_small = 1 : int_socre >= 30 && int_socre < 88 ? rank_small = 2 : int_socre >= 88 && int_socre < 206 ? rank_small = 3 : int_socre >= 206 && int_socre < 408 ? rank_small = 4 : int_socre >= 408 && int_socre < 718 && (rank_small = 5);
          } else if (int_socre >= 718 && int_socre < 4728) {
            rank_big = 2;
            int_socre >= 718 && int_socre < 1160 ? rank_small = 1 : int_socre >= 1160 && int_socre < 1758 ? rank_small = 2 : int_socre >= 1758 && int_socre < 2536 ? rank_small = 3 : int_socre >= 2536 && int_socre < 3518 ? rank_small = 4 : int_socre >= 3518 && int_socre < 4728 && (rank_small = 5);
          } else if (int_socre >= 4728 && int_socre < 15038) {
            rank_big = 3;
            int_socre >= 4728 && int_socre < 6190 ? rank_small = 1 : int_socre >= 6190 && int_socre < 7928 ? rank_small = 2 : int_socre >= 7928 && int_socre < 9966 ? rank_small = 3 : int_socre >= 9966 && int_socre < 12328 ? rank_small = 4 : int_socre >= 12328 && int_socre < 15038 && (rank_small = 5);
          } else if (int_socre >= 15038 && int_socre < 34648) {
            rank_big = 4;
            int_socre >= 15038 && int_socre < 18120 ? rank_small = 1 : int_socre >= 18120 && int_socre < 21598 ? rank_small = 2 : int_socre >= 21598 && int_socre < 25496 ? rank_small = 3 : int_socre >= 25496 && int_socre < 29838 ? rank_small = 4 : int_socre >= 29838 && int_socre < 34648 && (rank_small = 5);
          } else if (int_socre >= 34648 && int_socre < 66558) {
            rank_big = 5;
            int_socre >= 34648 && int_socre < 39950 ? rank_small = 1 : int_socre >= 39950 && int_socre < 45768 ? rank_small = 2 : int_socre >= 45768 && int_socre < 52126 ? rank_small = 3 : int_socre >= 52126 && int_socre < 59048 ? rank_small = 4 : int_socre >= 59048 && int_socre < 66558 && (rank_small = 5);
          } else if (int_socre >= 66558) {
            rank_big = 6;
            rank_small = 1;
          }
          return 10 * rank_big + rank_small;
        }
        get_user_next_level(int_socre) {
          console.log("int_socre : ", int_socre);
          let index = this.get_user_level_by_score(int_socre);
          console.log("index : ", index);
          let current_rank_big = Math.floor(index / 10);
          let current_rank_small = Math.floor(index % 10);
          console.log("current_rank_big : ", current_rank_big);
          console.log("current_rank_small : ", current_rank_small);
          let next_rank_big = 1;
          let next_rank_small = 1;
          if (0 == current_rank_big) {
            next_rank_big = 1;
            next_rank_small = 1;
          } else if (6 == current_rank_big) {
            next_rank_big = current_rank_big;
            next_rank_small = 1;
          } else if (current_rank_small < 5) {
            next_rank_small = current_rank_small + 1;
            next_rank_big = current_rank_big;
          } else if (5 == current_rank_small) {
            next_rank_big = current_rank_big + 1;
            next_rank_small = 1;
          }
          return 10 * next_rank_big + next_rank_small;
        }
        get_user_next_level_score(next_level) {
          let rank_big = Math.floor(next_level / 10);
          let rank_small = next_level % 10;
          let score = 0;
          rank_big < 1 && (rank_big = 1);
          rank_big > 6 && (rank_big = 6);
          rank_small < 1 && (rank_small = 0);
          rank_small > 5 && (rank_small = 5);
          6 == rank_big && (rank_small = 1);
          score = this.score_list[rank_big - 1][rank_small - 1];
          return score;
        }
        get_user_next_level_by_score(int_socre) {
          let next_level = this.get_user_next_level(int_socre);
          console.log("next_level :  ", next_level);
          let next_score = this.get_user_next_level_score(next_level);
          console.log("next_score :  ", next_score);
          return next_score;
        }
        get_user_level_index_by_score(int_socre) {
          let index = this.get_user_level_by_score(int_socre);
          return Math.floor(index / 10);
        }
        get_user_level_star_by_score(int_socre) {
          let index = this.get_user_level_by_score(int_socre);
          return Math.floor(index % 10);
        }
        get_rank_name_by_score(int_socre) {
          let level = this.get_user_level_by_score(int_socre);
          let rank_big = Math.floor(level / 10);
          let rank_small = level % 10;
          let rank_big_name = "";
          let rank_small_name = "";
          if (0 == rank_big) rank_big_name = this.rank_list_name_big[rank_big]; else if (6 == rank_big) rank_big_name = this.rank_list_name_big[rank_big]; else {
            rank_big_name = this.rank_list_name_big[rank_big];
            rank_small_name = this.rank_list_name_samll[rank_small - 1];
          }
          return rank_big_name + rank_small_name;
        }
        get_big_rank_name_by_score(int_socre) {
          let level = this.get_user_level_by_score(int_socre);
          let rank_big = Math.floor(level / 10);
          let rank_big_name = "";
          rank_big_name = 0 == rank_big ? this.rank_list_name_big[rank_big] : (6 == rank_big, 
          this.rank_list_name_big[rank_big]);
          return rank_big_name;
        }
      };
      ErRenGameData = __decorate([ ccclass ], ErRenGameData);
      return ErRenGameData;
    })();
    exports.default = ErRenGameData;
    var ptr_global_data = null;
    function get_game_data() {
      ptr_global_data = null != ptr_global_data ? ptr_global_data : new ErRenGameData();
      return ptr_global_data;
    }
    exports.get_game_data = get_game_data;
    cc._RF.pop();
  }, {} ],
  ErRenGameDefine: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "50694XcuoZLaYVVw+UymyKh", "ErRenGameDefine");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ErRenGameDefine = void 0;
    var ErRenGameDefine;
    (function(ErRenGameDefine) {
      ErRenGameDefine.window_width = 1334;
      ErRenGameDefine.window_height = 750;
      ErRenGameDefine.screenGap = 0;
      ErRenGameDefine.OFFSET_X = 60;
      ErRenGameDefine.HAND_CARD_SCALE = 1;
      ErRenGameDefine.scale_height = 1;
      ErRenGameDefine.InvalidValue = 0;
      ErRenGameDefine.INVALID_CARD = 0;
      ErRenGameDefine.JiFen = true;
      ErRenGameDefine.UI_SCALE = .8;
      ErRenGameDefine.CardInfo = {
        CARD_RESOURCE_WIDTH: 72,
        CARD_RESOURCE_HEIGHT: 108
      };
      ErRenGameDefine.SMessageType = {
        info: 1,
        eject: 2,
        global: 4,
        close_game: 4096
      };
      ErRenGameDefine.RoomLimit = {
        score_min: 1,
        score_max: 2,
        gold_min: 4,
        gold_max: 8,
        charm_min: 16,
        charm_max: 32
      };
      ErRenGameDefine.ButtonPower = {
        change: 1,
        ready: 2,
        peng: 4,
        chi: 8,
        gang: 16,
        guo: 32,
        tingpai: 64,
        quxiao: 128,
        auto_ready: 256
      };
      ErRenGameDefine.MessageType = {
        button_power: 100,
        game_chat: 101,
        user_trust: 102,
        game_dice: 103,
        game_start: 104,
        game_info: 105,
        game_config: 106,
        game_banker_id: 107,
        game_ready_time: 108,
        hand_cards: 109,
        hand_cards_count: 110,
        change_cards: 111,
        change_result: 112,
        left_cards_num: 113,
        task_data: 114,
        head_time: 115,
        new_card: 116,
        out_card: 117,
        handle_type: 118,
        handle_result: 119,
        card_mask: 120,
        user_double: 121,
        double_result: 122,
        ting_hint: 123,
        hu_hint: 124,
        ting_state: 125,
        hu_data: 126,
        head_status: 127,
        handled_cards: 128,
        outed_cards: 129,
        last_cards: 130,
        hand_ting: 131,
        outing_card: 132,
        double_count: 133,
        send_gift: 134,
        score_clear_power: 135,
        fake_card: 136,
        hu_cards: 137,
        game_finish: 138,
        ting_result: 139,
        match_info: 140,
        match_score: 141,
        match_item: 142,
        match_result: 143,
        match_key: 144
      };
      ErRenGameDefine.MessageToServer = {
        no_trust: 1001,
        change_cards: 1002,
        out_card: 1003,
        handle_card: 1004,
        do_double: 1005,
        do_baoting: 1006,
        do_hu: 1007,
        do_quxiao: 1008,
        again: 1009,
        send_gift: 1010,
        hu_hint: 1011,
        week_score_clear: 1012,
        day_score_clear: 1013,
        match_invite: 1014,
        match_key: 1015
      };
      ErRenGameDefine.TaskType = {
        peng: 11,
        gang: 12,
        baoting: 20,
        double: 30
      };
      ErRenGameDefine.CardValue = {
        11: "\u4e00\u4e07",
        12: "\u4e8c\u4e07",
        13: "\u4e09\u4e07",
        14: "\u56db\u4e07",
        15: "\u4e94\u4e07",
        16: "\u516d\u4e07",
        17: "\u4e03\u4e07",
        18: "\u516b\u4e07",
        19: "\u4e5d\u4e07",
        41: "\u4e1c\u98ce",
        42: "\u5357\u98ce",
        43: "\u897f\u98ce",
        44: "\u5317\u98ce",
        45: "\u7ea2\u4e2d",
        46: "\u53d1\u8d22",
        47: "\u767d\u677f"
      };
      ErRenGameDefine.PlayerRank = {
        rank0: 0,
        rank1: 1,
        rank2: 2,
        rank3: 3,
        rank4: 4,
        rank5: 5,
        rank6: 6
      };
      ErRenGameDefine.PlayerSex = {
        girl: 0,
        boy: 1
      };
      ErRenGameDefine.GameType = {
        normal: 0,
        fake: 1
      };
      ErRenGameDefine.ViewID = {
        self: 1,
        enemy: 0
      };
      ErRenGameDefine.View3D = {
        up: 4,
        down: 2
      };
      ErRenGameDefine.GameStatus = {
        free: 0,
        start: 1,
        change: 2,
        outcards: 3
      };
      ErRenGameDefine.MB = {
        OK: 0,
        OKCANCEL: 1
      };
      ErRenGameDefine.ChatDirection = {
        left_top: 0,
        left_down: 1,
        right_top: 2,
        right_down: 3
      };
      ErRenGameDefine.ROOM_TYPE_SCORE = 1;
      ErRenGameDefine.ROOM_TYPE_EDUCATE = 8;
      ErRenGameDefine.ROOM_TYPE_GOLD = 16;
      ErRenGameDefine.ROOM_TYPE_NOCHEAT = 32;
      ErRenGameDefine.ROOM_TYPE_BETA = 64;
      ErRenGameDefine.ROOM_TYPE_LINEUP = 128;
      ErRenGameDefine.PlayerStatus = {
        ready: 1
      };
      ErRenGameDefine.USER_STATUS_NULL = 0;
      ErRenGameDefine.USER_STATUS_FREE = 1;
      ErRenGameDefine.USER_STATUS_SIT = 2;
      ErRenGameDefine.USER_STATUS_READY = 3;
      ErRenGameDefine.WinScale = {
        x: 1,
        y: 1
      };
      ErRenGameDefine.GameConfig = {
        base_gold: -1,
        start_time: -1,
        show_hand_card_time: -1,
        change_card_time: -1,
        out_card_time: -1,
        handle_card_time: -1,
        trust_time: -1,
        double_time: -1,
        consume_gold: -1,
        consume_gold_coefficient: -1,
        again_time: -1,
        max_win_gold: -1,
        game_type: -1
      };
      ErRenGameDefine.HandleTypeC = {
        null: 0,
        chi_left: 1,
        chi_mid: 2,
        chi_right: 4,
        peng: 8,
        gang_1: 16,
        gang_2: 32,
        an_gang: 64,
        hu: 128
      };
      ErRenGameDefine.HandledType = {
        an_dui: 1,
        an_shun: 2,
        an_ke: 3,
        an_gang: 4,
        ming_dui: 5,
        ming_shun: 6,
        ming_ke: 7,
        ming_gang1: 8,
        ming_gang2: 9
      };
      ErRenGameDefine.HuTypeName = [ "\u78b0\u78b0\u548c", "\u6df7\u4e00\u8272", "\u53cc\u6697\u6760", "\u53cc\u7bad\u523b", "\u5168\u6c42\u4eba", "\u5999\u624b\u56de\u6625", "\u6d77\u5e95\u635e\u6708", "\u6760\u4e0a\u5f00\u82b1", "\u62a2\u6760\u548c", "\u4e09\u98ce\u523b", "\u5927\u4e8e 5", "\u5c0f\u4e8e 5", "\u6e05\u9f99", "\u4e00\u8272\u4e09\u6b65\u9ad8", "\u4e09\u6697\u523b", "\u5929\u542c", "\u4e03\u5bf9", "\u6e05\u4e00\u8272", "\u4e00\u8272\u4e09\u540c\u987a", "\u4e00\u8272\u4e09\u8282\u9ad8", "\u4e00\u8272\u56db\u6b65\u9ad8", "\u4e09\u6760", "\u6df7\u5e7a\u4e5d", "\u4e00\u8272\u56db\u540c\u987a", "\u4e00\u8272\u56db\u8282\u9ad8", "\u5c0f\u56db\u559c", "\u5c0f\u4e09\u5143", "\u5b57\u4e00\u8272", "\u56db\u6697\u523b", "\u4e00\u8272\u53cc\u9f99\u4f1a", "\u5927\u56db\u559c", "\u5927\u4e09\u5143", "\u4e5d\u83b2\u5b9d\u706f", "\u56db\u6760", "\u8fde\u4e03\u5bf9", "\u767e\u4e07\u77f3", "\u5929\u548c", "\u5730\u548c", "\u4eba\u548c" ];
      ErRenGameDefine.HuTypeLen = [ 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 2, 5, 3, 2, 2, 3, 5, 5, 5, 2, 3, 5, 5, 3, 3, 3, 3, 5, 3, 3, 4, 2, 3, 3, 2, 2, 2 ];
      ErRenGameDefine.HuTypeFan = [ 6, 6, 6, 6, 6, 8, 8, 8, 8, 12, 12, 12, 16, 16, 16, 16, 24, 24, 24, 24, 32, 32, 32, 48, 48, 64, 64, 64, 64, 64, 88, 88, 88, 88, 88, 88, 88, 88, 88 ];
      ErRenGameDefine.GAME_PLAYER = 2;
      ErRenGameDefine.MAX_HAND_CARDS = 14;
      ErRenGameDefine.MAX_CHANGE_CARDS = 3;
      ErRenGameDefine.MAX_EMOTION_ITEM_COUNT = 26;
      ErRenGameDefine.BANKER_ID = 0;
      ErRenGameDefine.MAX_LEFT_CARDS_COUNT = 38;
      ErRenGameDefine.MAX_CARD_VALUE = 99;
      ErRenGameDefine.MIN_CARD_VALUE = 0;
      ErRenGameDefine.FLAG_GAME_OVER = false;
      ErRenGameDefine.FLAG_GAME_LIUJU = false;
      ErRenGameDefine.FLAG_TING_STAGE = false;
      ErRenGameDefine.SEX_WOMAN = 0;
      ErRenGameDefine.SEX_MAN = 1;
      ErRenGameDefine.FLAG_AUTO_READY = false;
    })(ErRenGameDefine = exports.ErRenGameDefine || (exports.ErRenGameDefine = {}));
    cc._RF.pop();
  }, {} ],
  ErRenGameMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "40a643tyIRLYr/nNoEU6Oix", "ErRenGameMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const table_3d_layout_1 = require("../../../Layout3D/Src/table_3d_layout");
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const ErRenCardLayer_1 = require("./ErRenCardLayer");
    const ErRenTaskLayer_1 = require("./ErRenTaskLayer");
    const ErRenFinishLayer_1 = require("./ErRenFinishLayer");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenTrustLayer_1 = require("./ErRenTrustLayer");
    const ErRenUIHelper_1 = require("./ErRenUIHelper");
    const ErRenUserHead_1 = require("./ErRenUserHead");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const ErRenTingLayer_1 = require("./ErRenTingLayer");
    const ErRenDoubleLayer_1 = require("./ErRenDoubleLayer");
    const ErRenRuleLayer_1 = require("./ErRenRuleLayer");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const cards_3d_logic_1 = require("../../../Layout3D/Src/cards_3d_logic");
    const ErRenRankUpLayer_1 = require("./ErRenRankUpLayer");
    const ErRenGameData_1 = require("./ErRenGameData");
    const game_tools_1 = require("../../../Layout3D/Src/game_tools");
    const LobbyYiFuRuleAward_1 = require("../../Component/LobbyYiFu/LobbyYiFuRuleAward");
    const LobbyYiFuMatch_1 = require("../../Component/LobbyYiFu/LobbyYiFuMatch");
    const LobbyYiFuMatchNotice_1 = require("../../Component/LobbyYiFu/LobbyYiFuMatchNotice");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const global_define_1 = require("../../Framework/lobby/global_define");
    const ErRenRankPanel_1 = require("./ErRenRankPanel");
    const ErRenHistoryRank_1 = require("./ErRenHistoryRank");
    const ErRenRankLayer_1 = require("./ErRenRankLayer");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenGameMain = (() => {
      let ErRenGameMain = class ErRenGameMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_user_heads = [];
          this.ptr_ui_helper = null;
          this.ptr_trust_layer = null;
          this.ptr_finish_layer = null;
          this.ptr_card_layer = null;
          this.ptr_task_layer = null;
          this.ptr_ting_layer = null;
          this.ptr_double_layer = null;
          this.ptr_rule_layer = null;
          this.ptr_rank_up_layer = null;
          this.ptr_left_top_node = null;
          this.ptr_right_top_node = null;
          this.ptr_gift_node = null;
          this.ptr_btn_back = null;
          this.ptr_btn_rule = null;
          this.ptr_btn_ready = null;
          this.ptr_btn_have_ready = null;
          this.ptr_btn_change = null;
          this.ptr_btn_change2 = null;
          this.ptr_btn_changeCard = null;
          this.ptr_btn_start = null;
          this.ptr_btn_test = null;
          this.left_card_bg = null;
          this.left_card_count = null;
          this.base_gold_label = null;
          this.ptr_dice_1 = null;
          this.ptr_dice_2 = null;
          this.ptr_dice_result_1 = null;
          this.ptr_dice_result_2 = null;
          this.ptr_frame_dice = [];
          this.ptr_frames_level = [];
          this.ptr_pipei_ani = null;
          this.ptr_duiju_ani = null;
          this.ptr_huLight_ani = null;
          this.ptr_btn_ting = null;
          this.ptr_sp_ske = null;
          this.ptr_label_win = null;
          this.ptr_label_lose = null;
          this.prefab_ruleAward = null;
          this._ruleAward = null;
          this.matchtipprefab = null;
          this.matchtip = null;
          this.matchNoticePrefab = null;
          this.match_notice = null;
          this.ptr_rank_panel = null;
          this.shareBtn = null;
          this.historyBtn = null;
          this.historyPanel = null;
          this.sp_matchRemain = null;
          this.rankResult = null;
          this.ting_cards = [];
          this.byte_last_out_card = 0;
          this.client_out_card = 0;
          this.int_last_out_card_view = -1;
          this.m_dice_number_1 = -1;
          this.m_dice_number_2 = -1;
          this.hint_cards = [];
          this.m_player_count = 0;
          this.m_fake_card = 0;
          this.fake_match_data = null;
          this._rank_result = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ptr_btn_change, this.node, "ErRenGameMain", "on_btn_change");
          utils_1.utils.bind_button_event(this.ptr_btn_change2, this.node, "ErRenGameMain", "on_btn_change2");
          utils_1.utils.bind_button_event(this.ptr_btn_ready, this.node, "ErRenGameMain", "on_btn_ready");
          utils_1.utils.bind_button_event(this.ptr_btn_back, this.node, "ErRenGameMain", "on_btn_back");
          utils_1.utils.bind_button_event(this.ptr_btn_rule, this.node, "ErRenGameMain", "on_btn_rule");
          utils_1.utils.bind_button_event(this.ptr_btn_test, this.node, "ErRenGameMain", "on_btn_test");
          utils_1.utils.bind_button_event(this.ptr_btn_changeCard, this.node, "ErRenGameMain", "on_btn_changeCard");
          utils_1.utils.bind_button_event(this.ptr_btn_start, this.node, "ErRenGameMain", "on_btn_start");
          utils_1.utils.bind_button_event(this.ptr_btn_ting, this.node, "ErRenGameMain", "on_btn_tingLayer");
          utils_1.utils.bind_button_event(this.shareBtn, this.node, "ErRenGameMain", "on_btn_share");
          utils_1.utils.bind_button_event(this.historyBtn, this.node, "ErRenGameMain", "on_btn_history");
          this.ptr_sp_ske.setCompleteListener(() => {
            this.ptr_sp_ske.node.active = false;
          });
        }
        start() {
          bind_function_1.bf.register_game_engine(152, this);
          let that = this;
          this.fit_screen();
          bind_function_1.bf.pause_message();
          table_3d_layout_1.default._inst.loadResources(2, 14);
          table_3d_layout_1.default.setLoadFinishFunc(function() {
            bind_function_1.bf.restore_message();
            that.init_back_ground();
            that.test();
          });
          this.set_game_layer_init();
          this.init();
          this.dice_init();
          this.init_btn();
          this.init_trust();
          bind_function_1.bf.set_play_gift_node(this.ptr_gift_node);
          this.ptr_gift_node.active = true;
        }
        fit_screen() {
          this.ptr_left_top_node.getComponent(cc.Widget).isAlignLeft = true;
          this.ptr_right_top_node.getComponent(cc.Widget).isAlignRight = true;
          this.ptr_user_heads[1].getComponent(cc.Widget).isAlignLeft = true;
          if (cc.winSize.width > 1520) {
            this.ptr_left_top_node.getComponent(cc.Widget).left += ErRenGameDefine_1.ErRenGameDefine.OFFSET_X;
            this.ptr_right_top_node.getComponent(cc.Widget).right += ErRenGameDefine_1.ErRenGameDefine.OFFSET_X;
            this.ptr_user_heads[1].getComponent(cc.Widget).left += ErRenGameDefine_1.ErRenGameDefine.OFFSET_X;
          }
        }
        init() {
          let window_width = cc.winSize.width;
          let window_height = cc.winSize.height;
          ErRenGameDefine_1.ErRenGameDefine.window_width = window_width;
          ErRenGameDefine_1.ErRenGameDefine.window_height = window_height;
          window_width / window_height > 17 / 9 && (ErRenGameDefine_1.ErRenGameDefine.screenGap = 60);
          ErRenGameDefine_1.ErRenGameDefine.scale_height = window_height / 750;
          ErRenGameDefine_1.ErRenGameDefine.HAND_CARD_SCALE = window_width / 1334 * 1.05;
          this.safe_on("onSendGiftErRen", this.send_user_gift, this);
          this.base_gold_label.node.active = false;
          this.left_card_bg.node.active = false;
          this.ptr_btn_changeCard.node.active = false;
          this.shareBtn.node.active = false;
          this.historyBtn.node.active = false;
          this.sp_matchRemain.node.active = false;
          this.rankResult.node.active = false;
        }
        update(dt) {
          let data = custom_lobby_1.custom_lobby.fake_match_data;
          if (data && 0 == data.status) {
            let curTime = Math.floor(new Date().getTime() / 1e3);
            let differTime = data.start_time - curTime;
            600 == differTime ? this.showMatchNotice(10) : 60 == differTime && this.showMatchNotice(1);
          }
          data && 1 == data.status && this.updateRemainTime();
        }
        showRuleAward() {
          cc.isValid(this._ruleAward) || (this._ruleAward = utils_1.utils.add_instance_to_root(this.prefab_ruleAward, cc.Canvas.instance.node, LobbyYiFuRuleAward_1.default));
          if (cc.isValid(this._ruleAward)) {
            this._ruleAward.node.setSiblingIndex(this._ruleAward.node.getParent().childrenCount + 1);
            this._ruleAward.node.zIndex = cc.macro.MAX_ZINDEX;
            this._ruleAward.show();
          }
        }
        showMatchTip(data) {
          let curTime = Math.floor(new Date().getTime() / 1e3);
          if (!data || data.starttime <= curTime) return;
          cc.isValid(this.matchtip) || (this.matchtip = utils_1.utils.add_instance_to_root(this.matchtipprefab, cc.Canvas.instance.node, LobbyYiFuMatch_1.default));
          if (cc.isValid(this.matchtip)) {
            this.matchtip.node.setSiblingIndex(this.matchtip.node.getParent().childrenCount + 1);
            this.matchtip.node.zIndex = cc.macro.MAX_ZINDEX;
            this.matchtip.refresh(data);
            this.matchtip.show();
          }
        }
        showMatchNotice(param) {
          let curTime = Math.floor(new Date().getTime() / 1e3);
          let curDate = Math.floor(curTime / 86400);
          let flag10 = utils_1.utils.getLocalStorage(`matchNotice_10_${curDate}`);
          let flag1 = utils_1.utils.getLocalStorage(`matchNotice_1_${curDate}`);
          if (10 == param) {
            if (flag10 && "1" == flag10) return;
            utils_1.utils.setLocalStorage(`matchNotice_10_${curDate}`, "1");
          }
          if (1 == param) {
            if (flag1 && "1" == flag1) return;
            utils_1.utils.setLocalStorage(`matchNotice_1_${curDate}`, "1");
          }
          cc.isValid(this.match_notice) || (this.match_notice = utils_1.utils.add_instance_to_root(this.matchNoticePrefab, cc.Canvas.instance.node, LobbyYiFuMatchNotice_1.default));
          if (cc.isValid(this.match_notice)) {
            this.match_notice.node.setSiblingIndex(this.match_notice.node.getParent().childrenCount + 1);
            this.match_notice.node.zIndex = cc.macro.MAX_ZINDEX;
            this.match_notice.refreshLabelTime(param);
            this.match_notice.show();
          }
        }
        set_game_layer_init() {
          for (let i = 0; i < this.ptr_user_heads.length; i++) this.ptr_user_heads[i].set_game_layer(this);
          this.ptr_ui_helper.set_game_layer(this);
          this.ptr_card_layer.set_game_layer(this);
          this.ptr_finish_layer.set_game_layer(this);
        }
        init_btn() {
          this.show_ready_change_btn(false, false);
          this.set_change2_btn(false);
        }
        init_trust() {
          this.ptr_trust_layer.init();
          this.ptr_task_layer.init();
          this.ptr_finish_layer.init();
          this.ptr_rank_up_layer.init();
          this.ptr_rule_layer.hide();
          this.show_pi_pei_ani(false);
          this.show_start_ani(false);
        }
        init_back_ground() {
          table_3d_layout_1.default.get().showDirectionClock(true);
          this.ptr_card_layer.init();
        }
        init_table_plugin() {}
        dice_init() {
          this.ptr_dice_1.active = false;
          this.ptr_dice_2.active = false;
        }
        play_dice_animate() {
          this.ptr_dice_1.active = true;
          this.ptr_dice_2.active = true;
          this.ptr_dice_result_1.spriteFrame = this.ptr_frame_dice[this.m_dice_number_1];
          this.ptr_dice_result_2.spriteFrame = this.ptr_frame_dice[this.m_dice_number_2];
          this.ptr_dice_1.getComponent(cc.Animation).play();
          this.ptr_dice_2.getComponent(cc.Animation).play();
          ErRenSoundManager_1.ErRenSoundManager.dice_effect();
          let that = this;
          let act = cc.callFunc(function() {
            that.dice_init();
            bind_function_1.bf.restore_message();
          });
          this.ptr_dice_1.stopAllActions();
          this.ptr_dice_1.runAction(cc.sequence(cc.delayTime(2), act));
        }
        init_table_btn() {}
        send_user_gift(event) {
          let gift_btn_data = event.getUserData();
          let user_data = bind_function_1.bf.get_user_data_by_user_id(gift_btn_data.userid);
          let the_data = {};
          the_data["to_chair_id"] = user_data.wChairID;
          the_data["to_user_id"] = user_data.dwUserID;
          the_data["from_chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["from_user_id"] = bind_function_1.bf.get_self_user_id();
          the_data["gift_id"] = gift_btn_data.index - 1011;
          the_data["int_num"] = gift_btn_data.count;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.send_gift, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        on_btn_start() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.show_ready_change_btn(false, false);
          this.on_btn_change();
          this.show_start_btn(false);
        }
        on_game_user_enter(ptr_user_data, bool_look) {
          if (bool_look) return;
          let view_id = bind_function_1.bf.switch_to_view_id(ptr_user_data.wChairID);
          ErRenGameDefine_1.ErRenGameDefine.JiFen ? this.ptr_user_heads[view_id].set_head_gold(ptr_user_data.lScore) : this.ptr_user_heads[view_id].set_head_gold(ptr_user_data.lGold);
          view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self && this.ptr_rank_panel.setScore(ptr_user_data.lScore);
          this.ptr_user_heads[view_id].set_user_data(ptr_user_data, view_id);
          this.ptr_user_heads[view_id].show_head();
          if (ptr_user_data.dwUserID == bind_function_1.bf.get_self_user_id() && this.is_line_up()) if (ptr_user_data.wTableID >= 300) {
            this.show_start_btn(true);
            this.on_btn_start();
          } else if (ptr_user_data.wTableID < 300) {
            this.show_start_btn(false);
            this.show_pi_pei_ani(false);
            for (let i = 0; i < ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER; i++) this.ptr_user_heads[i].set_ready_sign_visible(false);
            0 == bind_function_1.bf.get_game_status() && setTimeout(() => {
              bind_function_1.bf.send_ready_data();
            }, 100);
          }
        }
        on_game_user_left(ptr_user_data, bool_look) {
          if (bool_look) return;
          let view_id = bind_function_1.bf.switch_to_view_id(ptr_user_data.wChairID);
          this.ptr_user_heads[view_id].hide_head();
        }
        on_game_user_status(ptr_user_data, bool_look) {
          if (bool_look) return;
          let user_data = bind_function_1.bf.get_user_data_by_chair_id(ptr_user_data.wChairID);
          let view_id = bind_function_1.bf.switch_to_view_id(ptr_user_data.wChairID);
          if (user_data.cbUserStatus != ErRenGameDefine_1.ErRenGameDefine.USER_STATUS_READY || false != ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER && !ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_LIUJU) {
            if (user_data.cbUserStatus == ErRenGameDefine_1.ErRenGameDefine.USER_STATUS_READY) {
              this.ptr_user_heads[view_id].hide_ready_timer();
              this.ptr_user_heads[view_id].set_ting_sign_visible(false);
              this.ptr_user_heads[view_id].set_ready_sign_visible(true);
            }
          } else {
            this.ptr_user_heads[view_id].hide_ready_timer();
            this.ptr_user_heads[view_id].set_ready_sign_visible(true);
          }
          if (user_data.cbUserStatus == ErRenGameDefine_1.ErRenGameDefine.USER_STATUS_READY && view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            this.ptr_ui_helper.setReady();
            if (this.fake_match_data && 1 == this.fake_match_data.status && global_data_1.global_data.match_invite_id && global_data_1.global_data.match_invite_id != bind_function_1.bf.get_self_user_id()) {
              let data = {};
              data["userid"] = bind_function_1.bf.get_self_user_id();
              data["inviteid"] = global_data_1.global_data.match_invite_id;
              bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.match_invite, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(data)));
              global_data_1.global_data.match_invite_id = null;
            }
          }
          user_data.cbUserStatus == ErRenGameDefine_1.ErRenGameDefine.USER_STATUS_READY && view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && this.ptr_user_heads[view_id].set_trust_robot_visible(false);
        }
        on_game_user_data(ptr_user_data, bool_look) {
          if (bool_look) return;
          let user_data = bind_function_1.bf.get_user_data_by_chair_id(ptr_user_data.wChairID);
          let view_id = bind_function_1.bf.switch_to_view_id(ptr_user_data.wChairID);
          ErRenGameDefine_1.ErRenGameDefine.JiFen ? this.ptr_user_heads[view_id].set_head_gold(user_data.lScore) : this.ptr_user_heads[view_id].set_head_gold(user_data.lGold);
        }
        on_game_user_score(ptr_user_data, bool_look) {
          if (bool_look) return;
          let user_data = bind_function_1.bf.get_user_data_by_chair_id(ptr_user_data.wChairID);
          let view_id = bind_function_1.bf.switch_to_view_id(ptr_user_data.wChairID);
          ErRenGameDefine_1.ErRenGameDefine.JiFen ? this.ptr_user_heads[view_id].set_head_gold(user_data.lScore) : this.ptr_user_heads[view_id].set_head_gold(user_data.lGold);
        }
        on_game_message(int_main_id, int_sub_id, data) {
          let json_data = bind_function_1.bf.parse_game_message_data(data, true);
          int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.button_power ? this.on_event_button_power(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_chat ? this.on_event_game_chat(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.user_trust ? this.on_event_user_trust(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_dice ? this.on_event_game_dice(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_start ? this.on_event_game_start(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_info ? this.on_event_game_info(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_config ? this.on_event_game_config(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_banker_id ? this.on_event_game_banker(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_ready_time ? this.on_event_game_ready_time(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hand_cards ? this.on_event_hand_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hand_cards_count ? this.on_event_hand_cards_count(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.change_cards ? this.on_event_change_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.change_result ? this.on_event_change_result(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.left_cards_num ? this.on_event_left_cards_num(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.task_data ? this.on_event_task_data(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.head_time ? this.on_event_head_time(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.new_card ? this.on_event_new_card(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.out_card ? this.on_event_out_card(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.handle_type ? this.on_event_handle_type(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.handle_result ? this.on_event_handle_result(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.card_mask ? this.on_event_card_mask(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.user_double ? this.on_event_user_double(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.double_result ? this.on_event_double_result(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.ting_hint ? this.on_event_ting_hint(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.ting_state ? this.on_event_ting_state(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hu_data ? this.on_event_hu_data(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.head_status ? this.on_event_head_status(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.handled_cards ? this.on_event_handled_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.outed_cards ? this.on_event_outed_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.last_cards ? this.on_event_last_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hand_ting ? this.on_event_hand_ting(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.outing_card ? this.on_event_outing_card(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.double_count ? this.on_event_double_count(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.send_gift ? this.on_event_send_gift(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hu_hint ? this.on_event_hu_hint(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.score_clear_power ? this.on_event_score_clear_power(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.fake_card ? this.on_event_fake_card(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.hu_cards ? this.on_event_hu_cards(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.game_finish ? this.on_event_game_finish(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.ting_result ? this.on_event_ting_result(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.match_info ? this.on_event_match_info(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.match_score ? this.on_event_match_score(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.match_result ? this.on_event_match_result(json_data) : int_sub_id == ErRenGameDefine_1.ErRenGameDefine.MessageType.match_key && this.on_event_match_key(json_data);
          return true;
        }
        on_event_match_key(data) {
          this.rankResult.refresh(data.reskey);
          utils_1.utils.send("refresh_key", data);
        }
        on_event_match_info(data) {
          0 == data.status && 0 != data.starttime ? this.showMatchTip(data) : 0 == data.status && bind_function_1.bf.get_game_status() == ErRenGameDefine_1.ErRenGameDefine.GameStatus.free ? utils_1.utils.show_message_box({
            content: "\u6e38\u620f\u8fd8\u672a\u5f00\u59cb\uff0c\u8bf7\u7a0d\u5019\uff01",
            button_count: 1
          }) : 2 == data.status && bind_function_1.bf.get_game_status() == ErRenGameDefine_1.ErRenGameDefine.GameStatus.free && utils_1.utils.show_message_box({
            content: "\u6e38\u620f\u4eca\u5929\u5df2\u7ed3\u675f\uff0c\u8bf7\u660e\u5929\u518d\u6765\uff01",
            button_count: 1
          });
          this.fake_match_data = data;
          this.ptr_btn_rule.node.active = false;
          this.shareBtn.node.active = true;
          this.historyBtn.node.active = true;
          this.sp_matchRemain.node.active = 1 == data.status;
          this.ptr_rank_panel.setMatchData(data);
          this.historyPanel.setMatchData(data);
          this.ptr_finish_layer.setMatchData(data);
        }
        updateRemainTime() {
          if (!this.fake_match_data || 0 == this.fake_match_data.endtime) return;
          let curTime = Math.floor(new Date().getTime() / 1e3);
          if (curTime < this.fake_match_data.starttime || curTime >= this.fake_match_data.endtime) return;
          let differTime = this.fake_match_data.endtime - curTime;
          let hour = differTime / 3600 < 10 ? `0${Math.floor(differTime / 3600)}` : `${Math.floor(differTime / 3600)}`;
          let minute = differTime % 3600 / 60 < 10 ? `0${Math.floor(differTime % 3600 / 60)}` : `${Math.floor(differTime % 3600 / 60)}`;
          let second = differTime % 60 < 10 ? `0${differTime % 60}` : `${differTime % 60}`;
          let label_time = this.sp_matchRemain.node.getChildByName("label_time").getComponent(cc.Label);
          label_time.string = `${hour}:${minute}:${second}`;
        }
        on_event_match_score(data) {
          this.ptr_finish_layer.setCurMatchScore(data.score);
        }
        on_event_match_result(data) {
          this._rank_result = data;
          this.rankResult.setData(data);
        }
        on_event_hu_cards(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.show_id);
          this.ptr_finish_layer.m_hu_cards[view_id] = [];
          json_data.hu_cards.forEach(card_value => {
            this.ptr_finish_layer.m_hu_cards[view_id].push(card_value);
          });
          let seat_id = this.switch_view_to_seat(view_id);
          cards_3d_layout_1.default.get().setHuaCards(seat_id, this.ptr_finish_layer.m_hu_cards[view_id]);
        }
        on_event_fake_card(json_data) {
          let fake_cards = [];
          fake_cards[json_data.fake_card] = 1;
          this.m_fake_card = json_data.fake_card;
          cards_3d_layout_1.default.get().setCornerCardValue(fake_cards);
          this.ptr_ting_layer.setCornerCardValue(fake_cards);
        }
        on_event_button_power(json_data) {
          this.ptr_ui_helper.show_btn_power(json_data.button_power);
        }
        on_event_game_chat(json_data) {
          bind_function_1.bf.show_hinting(json_data.str, "");
        }
        on_event_user_trust(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data._int_trust_chair_id);
          let is_trust = json_data._bool_trust;
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            true == is_trust && false == this.ptr_trust_layer.node.active && cards_3d_layout_1.default.get().setHandCardsCanOut(false);
            if (this.ptr_trust_layer.node.active != is_trust) {
              this.ptr_trust_layer.node.active = is_trust;
              cards_3d_layout_1.default.get().setHandCardsDark(this.ptr_finish_layer.m_hu_cards[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].length > 0);
            }
          } else view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && this.ptr_user_heads[view_id].set_trust_robot_visible(is_trust);
        }
        on_event_game_dice(json_data) {
          this.m_dice_number_1 = json_data._int_dice_num_0 - 1;
          this.m_dice_number_2 = json_data._int_dice_num_1 - 1;
        }
        on_event_game_start(json_data) {
          ErRenSoundManager_1.ErRenSoundManager.start_game_effect(1);
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_LIUJU = false;
          this.ptr_btn_have_ready.node.active = false;
          this.show_ready_change_btn(false, false);
          this.set_change2_btn(false);
          for (let i = 0; i < ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER; i++) this.ptr_user_heads[i].hide_ready_timer();
          this.ptr_finish_layer.hide_timer();
          this.is_line_up() && this.show_pi_pei_ani(false);
          this.show_start_ani(true);
        }
        on_event_game_info(json_data) {
          let gold = json_data.base_gold;
          let is_show = json_data.is_show;
          if (gold) {
            this.base_gold_label.string = "\u771f\u4eba\u5339\u914d1V1 \u5e95\u5206: " + gold;
            this.base_gold_label.node.active = is_show;
          }
        }
        on_event_game_config(json_data) {
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.base_gold = json_data._int_base_gold;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.start_time = json_data._int_start_time;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.again_time = json_data._again_time;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.consume_gold = json_data.consume;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.consume_gold_coefficient = json_data._int_consume_gold_coefficient;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.max_win_gold = json_data.max_win_gold;
          ErRenGameDefine_1.ErRenGameDefine.GameConfig.game_type = json_data.game_type;
          this.ptr_finish_layer.set_difen(ErRenGameDefine_1.ErRenGameDefine.GameConfig.base_gold, ErRenGameDefine_1.ErRenGameDefine.GameConfig.consume_gold);
        }
        on_event_game_banker(json_data) {
          if (json_data._int_banker_id < 0 || json_data._int_banker_id > ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER - 1) return;
          ErRenGameDefine_1.ErRenGameDefine.BANKER_ID = bind_function_1.bf.switch_to_view_id(json_data._int_banker_id);
        }
        on_event_game_ready_time(json_data) {
          let viewid = bind_function_1.bf.switch_to_view_id(json_data.ready_id);
          let bool_ready = json_data.is_ready;
          let left_time = json_data.left_time;
          bool_ready ? this.ptr_user_heads[viewid].set_ready_sign_visible(true) : this.ptr_user_heads[viewid].set_ready_timer(left_time);
        }
        on_event_hand_cards(json_data) {
          this.ptr_card_layer.on_event_hand_cards(json_data);
        }
        on_event_hand_cards_count(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.chair_id);
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) return;
          this.ptr_card_layer.hand_cards_count_other = json_data.hand_cards_count;
          this.ptr_card_layer.set_other_hand_card(json_data.hand_cards_count, json_data.bool_ani);
        }
        on_event_change_cards(json_data) {
          this.ptr_btn_changeCard.node.active = false;
        }
        on_event_change_result(json_data) {
          this.ptr_btn_changeCard.node.active = false;
        }
        on_event_left_cards_num(json_data) {
          if (json_data.int_count < 0 || json_data.int_count > ErRenGameDefine_1.ErRenGameDefine.MAX_LEFT_CARDS_COUNT) return;
          this.left_card_bg.node.active = true;
          this.left_card_count.string = json_data.int_count;
        }
        on_event_task_data(json_data) {
          if (json_data.bool_finish) this.ptr_task_layer.add_new_task(json_data.task_value); else if (json_data.bool_fade_in) this.ptr_task_layer.fade_in_task(json_data.task_value); else if (!json_data.bool_fade_in) {
            this.ptr_task_layer.set_task_content(json_data.task_value);
            this.ptr_task_layer.set_task_visible(true);
          }
        }
        on_event_head_time(json_data) {
          let now_time = json_data.now_time;
          let sum_time = json_data.sum_time;
          if (-1 == json_data.head_id) this.show_clock(-1, sum_time); else {
            let view_id = bind_function_1.bf.switch_to_view_id(json_data.head_id);
            this.show_clock(view_id, sum_time);
          }
        }
        on_event_new_card(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.catch_id);
          this.ptr_card_layer.clear_out_cards();
          cards_3d_layout_1.default.get().unselectAllHandCards();
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            ErRenSoundManager_1.ErRenSoundManager.catch_effect(1);
            cards_3d_layout_1.default.get().catchCard(cards_3d_config_1.UserIndex.down, json_data.new_card);
            this.ptr_card_layer.insert_hand_card(json_data.new_card, 1);
            cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
            if (this.ptr_finish_layer.m_hu_cards[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].length > 0) {
              cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
              cards_3d_layout_1.default.get().setHandCardsCanOut(false);
              cards_3d_layout_1.default.get().setHandCardsDark(true);
              let cards = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
              cards_3d_layout_1.default.get().setHandCardsCanTouch(true, [ cards.length - 1 ]);
              cards_3d_layout_1.default.get().setHandCardsCanOut(true, [ cards.length - 1 ]);
              cards_3d_layout_1.default.get().setHandCardsDark(false, [ cards.length - 1 ]);
            }
          } else json_data.new_card && json_data.new_card > 10 ? cards_3d_layout_1.default.get().catchCard(cards_3d_config_1.UserIndex.up, json_data.new_card) : cards_3d_layout_1.default.get().catchCard(cards_3d_config_1.UserIndex.up, 0);
        }
        on_event_out_card(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.out_id);
          if (false == json_data.is_out) return;
          this.ptr_card_layer.clear_out_card(json_data.out_id);
          this.byte_last_out_card = 0;
          let out_card = json_data.out_card;
          if (view_id != ErRenGameDefine_1.ErRenGameDefine.ViewID.self || this.client_out_card != out_card) {
            let sex = bind_function_1.bf.get_self_user_data().cbGender;
            ErRenSoundManager_1.ErRenSoundManager.out_card_effect(sex, out_card);
            let seat = this.switch_view_to_seat(view_id);
            this.ptr_card_layer.show_out_card(view_id, out_card);
            if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
              let l_card_values = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
              let index_1 = l_card_values.length - 1;
              for (let i = l_card_values.length - 1; i >= 0; i--) if (l_card_values[i] == out_card) {
                index_1 = i;
                break;
              }
              cards_3d_layout_1.default.get().outCard(seat, out_card, null, index_1);
            } else cards_3d_layout_1.default.get().outCardEX(seat, out_card, null, null, out_card);
          }
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            this.ptr_card_layer.remove_hand_card(out_card);
            this.ptr_ting_layer.hide_ting_layer();
            this.ptr_ui_helper.show_btn_power(0);
            this.ptr_card_layer.sort_hand_cards(this.m_fake_card);
            cards_3d_layout_1.default.get().setHandCardsTing(null);
          }
          this.int_last_out_card_view = view_id;
          this.byte_last_out_card = out_card;
          this.client_out_card = 0;
        }
        on_event_handle_type(json_data) {
          this.ptr_card_layer.set_can_hide(false);
          let list_handle = [];
          let cards = json_data.cards;
          let gang2_count = json_data.gang2_count;
          let eye_card = json_data.eye_card;
          0 == this.ptr_finish_layer.m_hu_cards[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].length && list_handle.push({
            type: cards_3d_config_1.HandleType.pass,
            value: 0
          });
          let handle_type = json_data.handle_type;
          (handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_left) > 0 && list_handle.push({
            type: cards_3d_config_1.HandleType.b_chi_left,
            value: eye_card
          });
          (handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_mid) > 0 && list_handle.push({
            type: cards_3d_config_1.HandleType.b_chi_mid,
            value: eye_card
          });
          (handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_right) > 0 && list_handle.push({
            type: cards_3d_config_1.HandleType.b_chi_right,
            value: eye_card
          });
          (handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.peng) > 0 && list_handle.push({
            type: cards_3d_config_1.HandleType.b_peng,
            value: eye_card
          });
          if ((handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_1) > 0) list_handle.push({
            type: cards_3d_config_1.HandleType.b_gang,
            value: eye_card
          }); else {
            let index = 0;
            if ((handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_2) > 0) for (let i = 0; i < gang2_count; i++) {
              list_handle.push({
                type: cards_3d_config_1.HandleType.a_gang,
                value: cards[index]
              });
              index++;
            }
            if ((handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang) > 0) for (let i = index; i < cards.length; i++) {
              list_handle.push({
                type: cards_3d_config_1.HandleType.d_gang,
                value: cards[index]
              });
              index++;
            }
          }
          (handle_type & ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.hu) > 0 && list_handle.push({
            type: cards_3d_config_1.HandleType.hu,
            value: eye_card
          });
          cards_3d_layout_1.default.get().showHandleSelect(list_handle);
        }
        on_event_handle_result(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.handle_id);
          if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            cards_3d_layout_1.default.get().hideHandleSelect();
            this.ptr_card_layer.sort_hand_cards(this.m_fake_card);
          }
          let sex = bind_function_1.bf.get_self_user_data().cbGender;
          ErRenSoundManager_1.ErRenSoundManager.user_handle_effect(sex, json_data.handle_type);
          let remove_list = [];
          let eye_card = json_data.handle_card;
          let _handle_type = json_data.handle_type;
          let handle_type = cards_3d_config_1.HandleType.b_chi_left;
          remove_list.push(eye_card + 2);
          remove_list.push(eye_card + 1);
          if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_mid) {
            remove_list.push(eye_card - 1);
            remove_list.push(eye_card + 1);
            handle_type = cards_3d_config_1.HandleType.b_chi_mid;
          } else if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_right) {
            remove_list.push(eye_card - 2);
            remove_list.push(eye_card - 1);
            handle_type = cards_3d_config_1.HandleType.b_chi_right;
          } else if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.peng) {
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            handle_type = cards_3d_config_1.HandleType.b_peng;
          } else if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_1) {
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            handle_type = cards_3d_config_1.HandleType.b_gang;
          } else if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_2) {
            remove_list.push(eye_card);
            handle_type = cards_3d_config_1.HandleType.a_gang;
          } else if (_handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang) {
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            remove_list.push(eye_card);
            handle_type = cards_3d_config_1.HandleType.d_gang;
          }
          let seat = this.switch_view_to_seat(view_id);
          let seat_from = seat == cards_3d_config_1.UserIndex.down ? cards_3d_config_1.UserIndex.up : cards_3d_config_1.UserIndex.down;
          cards_3d_layout_1.default.get().handle(seat, seat_from, handle_type, eye_card);
          cards_3d_layout_1.default.get().playHandleAnimation(seat, handle_type, eye_card);
          this.byte_last_out_card = 0;
          this.ptr_card_layer.clear_out_card(this.int_last_out_card_view);
          view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? this.ptr_card_layer.remove_hand_cards(remove_list) : view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy;
          handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang && this.ptr_card_layer.hide_point();
        }
        on_event_card_mask(json_data) {
          cards_3d_layout_1.default.get().setHandCardsCanOut(!json_data.is_mask);
        }
        on_event_user_double(json_data) {
          this.ptr_card_layer.set_can_hide(false);
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.double_id);
          let fan_count = json_data.fan_count;
          let gold_count = json_data.gold_count;
          let si_ting = json_data.si_ting;
          this.ptr_double_layer.set_fan_count(view_id, fan_count, si_ting);
          this.ptr_double_layer.set_gold_count(view_id, gold_count);
          this.ptr_double_layer.set_double_visible(view_id, si_ting);
        }
        on_event_double_result(json_data) {
          let double_id = json_data.double_id;
          let is_double = json_data.is_double;
          let double_count = json_data.double_count;
          let view_id = bind_function_1.bf.switch_to_view_id(double_id);
          let that = this;
          if (is_double) {
            let sex = bind_function_1.bf.get_self_user_data().cbGender;
            ErRenSoundManager_1.ErRenSoundManager.double_effect(sex, double_count);
            this.ptr_double_layer.node.active = false;
            let seat = this.switch_view_to_seat(view_id);
            cards_3d_layout_1.default.get().playHandleAnimation(seat, cards_3d_config_1.HandleType.jiabai, null);
          }
        }
        on_event_ting_hint(json_data) {
          let is_baoting = json_data.is_baoting;
          if (json_data.card_count) {
            let ting = [];
            let ting_da = [];
            let ting_duo = [];
            this.hint_cards = [];
            if (json_data.ting_da) for (let i = 0; i < json_data.ting_da.length; i++) {
              ting_da.push(json_data.ting_da[i]);
              this.hint_cards.push(json_data.ting_da[i]);
            }
            if (json_data.ting_duo) for (let i = 0; i < json_data.ting_duo.length; i++) {
              ting_duo.push(json_data.ting_duo[i]);
              this.hint_cards.push(json_data.ting_duo[i]);
            }
            if (json_data.ting) for (let i = 0; i < json_data.ting.length; i++) {
              ting.push(json_data.ting[i]);
              this.hint_cards.push(json_data.ting[i]);
            }
            let _ting = [];
            let _ting_da = [];
            let _ting_duo = [];
            _ting = this.filter_ting_array(ting);
            _ting_da = this.filter_ting_array(ting_da);
            _ting_duo = this.filter_ting_array(ting_duo);
            cards_3d_layout_1.default.get().setHandCardsCanOut(!is_baoting);
            cards_3d_layout_1.default.get().setHandCardsTingByValue(_ting);
            cards_3d_layout_1.default.get().setHandCardsTingDaByValue(_ting_da);
            cards_3d_layout_1.default.get().setHandCardsTingDuoByValue(_ting_duo);
          } else if (is_baoting) {
            cards_3d_layout_1.default.get().setHandCardsDark(true);
            cards_3d_layout_1.default.get().setHandCardsDarkByValue(false, this.hint_cards);
            cards_3d_layout_1.default.get().setHandCardsCanOut(false);
            cards_3d_layout_1.default.get().setHandCardsCanOutByValue(true, this.hint_cards);
          } else {
            cards_3d_layout_1.default.get().setHandCardsCanOut(!is_baoting);
            cards_3d_layout_1.default.get().setHandCardsDark(false);
            cards_3d_layout_1.default.get().unselectAllHandCards();
          }
        }
        filter_ting_array(ting_cards) {
          let ting = [];
          let _ting_cards = game_tools_1.default.clone(ting_cards);
          if (_ting_cards.length > 0) for (let i = 0; i < _ting_cards.length; i++) ting.find((v, k) => v == _ting_cards[i]) || ting.push(ting_cards[i]);
          return ting;
        }
        on_event_ting_state(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.ting_id);
          let is_ting = json_data.is_baoting;
          this.ptr_user_heads[view_id].set_ting_sign_visible(is_ting);
          if (json_data.is_effect) {
            let sex = bind_function_1.bf.get_self_user_data().cbGender;
            ErRenSoundManager_1.ErRenSoundManager.ting_card_effect(sex);
          }
          if (is_ting) if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            this.ptr_ting_layer.show_layer(true);
            utils_1.utils.show_hint("\u542c\u724c\u540e\u53ef\u770b\u5230\u5bf9\u65b9\u624b\u724c");
          } else utils_1.utils.show_hint("\u5bf9\u624b\u542c\u724c\u540e\u53ef\u770b\u5230\u4f60\u7684\u624b\u724c");
          if (is_ting) {
            let seat = this.switch_view_to_seat(view_id);
            cards_3d_layout_1.default.get().playHandleAnimation(seat, cards_3d_config_1.HandleType.ting, null);
          }
        }
        test_on_event_hu_data() {
          let json_data = {
            base_gold: 1,
            double_count: 1,
            fan_count: 24,
            gold_count: 1e4,
            hu_id: 1,
            hu_type: [ 18 ],
            task_count: 1,
            type_count: 1
          };
          let selfUGold = 5e3;
          this.ptr_double_layer.node.active = false;
          if (-1 != json_data.hu_id) {
            let view_id = 0;
            let gold_count = json_data.gold_count;
            let task_count = json_data.task_count;
            let fan_count = json_data.fan_count;
            let double_count = json_data.double_count;
            let base_gold = json_data.base_gold;
            let type_count = json_data.type_count;
            let hu_type = json_data.hu_type;
            let that = this;
            let is_self = view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self;
            let callBack_1 = function() {
              that.ptr_finish_layer.init_animation();
              view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_win_lose_logo(true, gold_count, selfUGold) : view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_win_lose_logo(false, gold_count, selfUGold);
            };
            let callBack_2 = function() {
              that.ptr_finish_layer.set_detail_label(is_self, double_count, task_count, fan_count, base_gold);
              view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_user_score(true, gold_count, selfUGold) : view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_user_score(false, gold_count, selfUGold);
              that.ptr_finish_layer.add_hu_type(is_self, hu_type, type_count);
              that.ptr_finish_layer.start_layer_timer(ErRenGameDefine_1.ErRenGameDefine.GameConfig.again_time);
            };
            this.ptr_finish_layer.show();
            this.ptr_finish_layer.node.stopAllActions();
            this.ptr_finish_layer.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
              callBack_1();
            }), cc.delayTime(1), cc.callFunc(function() {
              callBack_2();
            })));
          } else this.ptr_finish_layer.set_liuju(0);
        }
        playHuAnimation(hu_id, from_id) {
          let seat_id = this.switch_view_to_seat(bind_function_1.bf.switch_to_view_id(hu_id));
          let seat_from = this.switch_view_to_seat(bind_function_1.bf.switch_to_view_id(from_id));
          let pos = {
            x: 0,
            y: 0,
            index: 0
          };
          pos = -1 == from_id || from_id == hu_id ? cards_3d_layout_1.default.get().getLastVisibleCardInfo(seat_id, cards_3d_config_1.LayoutCardsType.hand) : cards_3d_layout_1.default.get().getLastVisibleCardInfo(seat_from, cards_3d_config_1.LayoutCardsType.out);
          let position2 = cc.v2(pos.x - 667, pos.y - 375);
          let func = () => {
            this.ptr_huLight_ani.position = cc.v3(position2);
            this.ptr_huLight_ani.active = true;
            this.ptr_huLight_ani.scale = .5;
            this.ptr_huLight_ani.getComponent(cc.Animation).play();
          };
          cc.tween(this.node).delay(.8).call(func).start();
        }
        playHuScoreChange(hu_id, hu_score) {
          if (hu_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
            this.ptr_label_win.node.y = -cc.winSize.height / 2 + 150;
            this.ptr_label_lose.node.y = cc.winSize.height / 2 - 120;
          } else {
            this.ptr_label_win.node.y = cc.winSize.height / 2 - 120;
            this.ptr_label_lose.node.y = -cc.winSize.height / 2 + 150;
          }
          this.ptr_label_win.string = "+" + hu_score;
          this.ptr_label_win.node.opacity = 0;
          this.ptr_label_win.node.scale = .8;
          this.ptr_label_win.node.active = true;
          this.ptr_label_win.node.stopAllActions();
          this.ptr_label_win.node.runAction(cc.sequence(cc.delayTime(1), cc.spawn(cc.fadeIn(.3), cc.scaleTo(.3, 1)), cc.delayTime(.2), cc.callFunc(() => {
            this.ptr_label_win.node.active = false;
          })));
          this.ptr_label_lose.string = "-" + hu_score;
          this.ptr_label_lose.node.opacity = 0;
          this.ptr_label_lose.node.scale = .8;
          this.ptr_label_lose.node.active = true;
          this.ptr_label_lose.node.stopAllActions();
          this.ptr_label_lose.node.runAction(cc.sequence(cc.delayTime(1), cc.spawn(cc.fadeIn(.3), cc.scaleTo(.3, 1)), cc.delayTime(.2), cc.callFunc(() => {
            this.ptr_label_lose.node.active = false;
          })));
        }
        on_event_game_finish(json_data) {
          let selfUGold = 0;
          selfUGold = ErRenGameDefine_1.ErRenGameDefine.JiFen ? bind_function_1.bf.get_self_user_data().lScore : bind_function_1.bf.get_self_user_data().lGold;
          let view_win_id = -1;
          view_win_id = -1 != json_data.win_id ? bind_function_1.bf.switch_to_view_id(json_data.win_id) : ErRenGameDefine_1.ErRenGameDefine.ViewID.self;
          let that = this;
          let callBack_1 = function() {
            console.log("on_event_game_finish:callBack_1");
            ErRenSoundManager_1.ErRenSoundManager.game_over_effect(view_win_id);
            that.ptr_finish_layer.init_animation();
            view_win_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_win_lose_logo(true, Math.abs(json_data.win_score), selfUGold) : view_win_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_win_lose_logo(false, Math.abs(json_data.win_score), selfUGold);
          };
          let callBack_2 = function() {
            console.log("on_event_game_finish:callBack_2");
            view_win_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_user_score(true, Math.abs(json_data.win_score), selfUGold) : view_win_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_user_score(false, Math.abs(json_data.win_score), selfUGold);
            that.ptr_finish_layer.add_hu_type_mul(view_win_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self, json_data.hu_result);
            that.ptr_finish_layer.start_layer_timer(ErRenGameDefine_1.ErRenGameDefine.GameConfig.again_time);
          };
          let callBack_3 = function() {
            console.log("on_event_game_finish:callBack_3");
            if (that._rank_result) {
              that._rank_result = null;
              that.rankResult.node.active = true;
            }
          };
          this.ptr_finish_layer.show();
          this.ptr_finish_layer.node.stopAllActions();
          this.ptr_finish_layer.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
            callBack_1();
          }), cc.delayTime(1), cc.callFunc(function() {
            callBack_2();
          }), cc.delayTime(1), cc.callFunc(function() {
            callBack_3();
          })));
          this.ptr_trust_layer.hide();
          this.ptr_ting_layer.hide_ting_layer();
          this.ptr_user_heads[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].ptr_ting_btn.node.active = false;
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER = true;
        }
        on_event_hu_data(json_data) {
          this.ptr_double_layer.node.active = false;
          this.ptr_card_layer.clear_out_cards();
          if (ErRenGameDefine_1.ErRenGameDefine.GameConfig.game_type == ErRenGameDefine_1.ErRenGameDefine.GameType.fake) {
            let view_id = bind_function_1.bf.switch_to_view_id(json_data.hu_id);
            let seat_id = this.switch_view_to_seat(view_id);
            this.ptr_finish_layer.m_hu_cards[view_id].push(json_data.hu_card);
            cards_3d_layout_1.default.get().setHuaCards(seat_id, this.ptr_finish_layer.m_hu_cards[view_id]);
            this.playHuAnimation(json_data.hu_id, json_data.from_id);
            let sex = bind_function_1.bf.get_user_data_by_chair_id(json_data.hu_id).cbGender;
            ErRenSoundManager_1.ErRenSoundManager.hu_effect(sex);
            if (view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self) {
              cards_3d_layout_1.default.get().setHandCardsTing(null);
              this.ptr_ting_layer.hide_ting_layer();
              cards_3d_layout_1.default.get().setHandCardsDark(true);
              cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
              cards_3d_layout_1.default.get().setHandCardsCanOut(false);
              let cards = cards_3d_logic_1.default.get().getCards(view_id, cards_3d_config_1.LayoutCardsType.hand);
              if (cards.length % 3 == 2) {
                cards_3d_layout_1.default.get().setHandCardsDark(false, [ cards.length - 1 ]);
                cards_3d_layout_1.default.get().setHandCardsCanTouch(true, [ cards.length - 1 ]);
                cards_3d_layout_1.default.get().setHandCardsCanOut(true, [ cards.length - 1 ]);
              }
              this.ptr_sp_ske.node.y = -cc.winSize.height / 2 + 200;
            } else this.ptr_sp_ske.node.y = cc.winSize.height / 2 - 100;
            this.ptr_sp_ske.node.active = true;
            this.ptr_sp_ske.setAnimation(0, "dh_hu", false);
            this.playHuScoreChange(view_id, json_data.fan_count);
            let from_id = json_data.from_id;
            if (json_data.bool_qiang_gang) {
              cards_3d_logic_1.default.get().removeCard(seat_id, cards_3d_config_1.LayoutCardsType.out);
              cards_3d_logic_1.default.get().addCard(seat_id, cards_3d_config_1.LayoutCardsType.out, json_data.hu_card + 50);
            } else if (-1 != from_id && from_id != json_data.hu_id) {
              let view_from_id = bind_function_1.bf.switch_to_view_id(from_id);
              let seat_from_id = this.switch_view_to_seat(view_from_id);
              cards_3d_logic_1.default.get().removeCard(seat_from_id, cards_3d_config_1.LayoutCardsType.out);
              cards_3d_logic_1.default.get().addCard(seat_from_id, cards_3d_config_1.LayoutCardsType.out, json_data.hu_card + 50);
            } else {
              cards_3d_logic_1.default.get().removeCardByValue(seat_id, cards_3d_config_1.LayoutCardsType.hand, json_data.hu_card);
              cards_3d_layout_1.default.get().refreshLayout(seat_id, cards_3d_config_1.LayoutCardsType.hand);
            }
            return;
          }
          if (-1 != json_data.hu_id) {
            let view_id = bind_function_1.bf.switch_to_view_id(json_data.hu_id);
            let gold_count = json_data.gold_count;
            let task_count = json_data.task_count;
            let fan_count = json_data.fan_count;
            let double_count = json_data.double_count;
            let base_gold = json_data.base_gold;
            let type_count = json_data.type_count;
            let hu_type = json_data.hu_type;
            let selfUGold = 0;
            selfUGold = ErRenGameDefine_1.ErRenGameDefine.JiFen ? bind_function_1.bf.get_self_user_data().lScore : bind_function_1.bf.get_self_user_data().lGold;
            let sex = bind_function_1.bf.get_user_data_by_chair_id(json_data.hu_id).cbGender;
            ErRenSoundManager_1.ErRenSoundManager.hu_effect(sex);
            let that = this;
            let is_self = view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self;
            let callBack_1 = function() {
              ErRenSoundManager_1.ErRenSoundManager.game_over_effect(view_id);
              that.ptr_finish_layer.init_animation();
              view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_win_lose_logo(true, gold_count, selfUGold) : view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_win_lose_logo(false, gold_count, selfUGold);
            };
            let callBack_2 = function() {
              that.ptr_finish_layer.set_detail_label(is_self, double_count, task_count, fan_count, base_gold);
              view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? that.ptr_finish_layer.set_user_score(true, gold_count, selfUGold) : view_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy && that.ptr_finish_layer.set_user_score(false, gold_count, selfUGold);
              that.ptr_finish_layer.add_hu_type(is_self, hu_type, type_count);
              that.ptr_finish_layer.start_layer_timer(ErRenGameDefine_1.ErRenGameDefine.GameConfig.again_time);
            };
            this.ptr_finish_layer.show();
            this.ptr_finish_layer.node.stopAllActions();
            this.ptr_finish_layer.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
              callBack_1();
            }), cc.delayTime(1), cc.callFunc(function() {
              callBack_2();
            })));
          } else {
            let selfUGold = bind_function_1.bf.get_self_user_data().lScore;
            ErRenSoundManager_1.ErRenSoundManager.game_over_effect(-1);
            this.ptr_finish_layer.set_liuju(selfUGold);
          }
          this.ptr_trust_layer.hide();
          this.ptr_ting_layer.hide_ting_layer();
          this.ptr_user_heads[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].ptr_ting_btn.node.active = false;
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER = true;
        }
        on_event_head_status(json_data) {
          let is_start = json_data.is_start;
          if (is_start) for (let i = 0; i < ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER; i++) {
            let is_banker = true;
            i != ErRenGameDefine_1.ErRenGameDefine.BANKER_ID && (is_banker = false);
            this.ptr_user_heads[i].set_banker_sign_visible(is_banker);
            this.ptr_user_heads[i].show_head();
          }
        }
        on_event_handled_cards(json_data) {
          let handled_types = json_data.handled_types;
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.handled_id);
          let handled_count = json_data.handled_count;
          let seat = this.switch_view_to_seat(view_id);
          let heaps = [];
          for (let i = 0; i < handled_types.length; i++) {
            let card_value = json_data.handled_cards[i];
            let l_type = 0;
            handled_types[i] == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_shun ? l_type = cards_3d_config_1.HandleType.b_chi_left : handled_types[i] == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_ke ? l_type = cards_3d_config_1.HandleType.b_peng : handled_types[i] == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_gang1 || handled_types[i] == ErRenGameDefine_1.ErRenGameDefine.HandledType.ming_gang2 ? l_type = cards_3d_config_1.HandleType.b_gang : handled_types[i] == ErRenGameDefine_1.ErRenGameDefine.HandledType.an_gang && (l_type = cards_3d_config_1.HandleType.d_gang);
            let from_id = seat == cards_3d_config_1.UserIndex.down ? cards_3d_config_1.UserIndex.up : cards_3d_config_1.UserIndex.down;
            heaps[i] = {
              _type: l_type,
              _value: card_value,
              _from: from_id
            };
          }
          cards_3d_layout_1.default.get().setHeapCards(seat, heaps);
        }
        on_event_outed_cards(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.outed_id);
          let outed_count = json_data.outed_count;
          let outed_cards = [];
          let mask_cards = [];
          for (let i = 0; i < json_data.outed_cards.length; i++) {
            if (i >= json_data.outed_mask.length) break;
            0 == json_data.outed_mask[i] ? outed_cards.push(json_data.outed_cards[i]) : outed_cards.push(json_data.outed_cards[i] + 50);
          }
          if (view_id != ErRenGameDefine_1.ErRenGameDefine.ViewID.self && view_id != ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy) return;
          let seat = this.switch_view_to_seat(view_id);
          cards_3d_layout_1.default.get().setOutCards(seat, outed_cards);
          this.ptr_card_layer.hide_point();
        }
        on_event_last_cards(json_data) {
          let handled_count = json_data.handled_count;
          let handled_types = json_data.handled_types;
          let handled_cards = json_data.handled_cards;
          let hand_count = json_data.hand_count;
          let hand_cards = json_data.hand_cards;
          let last_card = json_data.last_card;
          this.scheduleOnce(() => {
            this.ptr_finish_layer && this.ptr_finish_layer.show_last_cards(handled_count, handled_types, handled_cards, hand_count, hand_cards, last_card);
          }, 1.5);
        }
        on_event_hand_ting(json_data) {
          let cards_count = json_data.cards_count;
          let cards_value = json_data.cards_value;
          let show_first = json_data.show_first;
          cards_value = cards_value.sort();
          cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.up, cards_value, cards_count);
        }
        on_event_outing_card(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.outing_id);
          let outing_card = json_data.outing_card;
          let seat = this.switch_view_to_seat(view_id);
          cards_3d_layout_1.default.get().catchCard(seat, outing_card);
          cards_3d_layout_1.default.get().outCard(seat, outing_card, null, 1);
          this.ptr_card_layer.show_out_card(view_id, outing_card);
          this.int_last_out_card_view = view_id;
        }
        on_event_double_count(json_data) {
          let view_id = bind_function_1.bf.switch_to_view_id(json_data.double_id);
          let double_count = json_data.double_count;
          double_count > 1 && this.ptr_user_heads[view_id].jiabei(double_count);
        }
        on_event_send_gift(json_data) {
          let from_chair_id = bind_function_1.bf.switch_to_view_id(json_data.from_chair_id);
          let to_chair_id = bind_function_1.bf.switch_to_view_id(json_data.to_chair_id);
          let gift_id = json_data.gift_id + 1011;
          let int_num = json_data.int_num;
          let from_vec2;
          let to_vec2;
          from_vec2 = this.ptr_user_heads[from_chair_id].node.convertToWorldSpaceAR(cc.v2(0, 0));
          to_vec2 = this.ptr_user_heads[to_chair_id].node.convertToWorldSpaceAR(cc.v2(0, 0));
          bind_function_1.bf.play_gift(from_vec2, to_vec2, gift_id, int_num);
        }
        on_event_hu_hint(json_data) {
          let touch_index = json_data.touch_index;
          let hint_count = json_data.hint_count;
          let hint_cards = [];
          let hint_fan = [];
          let hint_left = [];
          for (let i = 0; i < json_data.hint_data.length; i++) {
            let data = json_data.hint_data[i];
            let card = Math.floor(data / 1e4);
            let fan = Math.floor(data % 1e4 / 10);
            let left = Math.floor(data % 10);
            hint_cards.push(card);
            hint_fan.push(fan);
            hint_left.push(left);
          }
          this.ptr_ting_layer.set_hu_card(hint_fan, hint_cards, hint_count, hint_left);
          this.ptr_ting_layer.show_layer(true);
        }
        on_event_ting_result(json_data) {
          let hint_count = json_data.hint_count;
          let hint_cards = [];
          let hint_fan = [];
          let hint_left = [];
          for (let i = 0; i < json_data.hint_data.length; i++) {
            let data = json_data.hint_data[i];
            let card = Math.floor(data / 1e4);
            let fan = Math.floor(data % 1e4 / 10);
            let left = Math.floor(data % 10);
            hint_cards.push(card);
            hint_fan.push(fan);
            hint_left.push(left);
          }
          this.ptr_ting_layer.set_hu_card(hint_fan, hint_cards, hint_count, hint_left);
          this.set_btn_tingLayer_visible(json_data.hint_data.length > 0);
        }
        on_event_score_clear_power(json_data) {
          console.log("on_event_score_clear_power : ", json_data);
          this.refresh_share_clear_score(json_data.week_score_clear, json_data.day_score_clear);
        }
        test() {}
        switch_view_to_seat(view_id) {
          let seat = cards_3d_config_1.UserIndex.down;
          0 == view_id ? seat = cards_3d_config_1.UserIndex.up : 1 == view_id && (seat = cards_3d_config_1.UserIndex.down);
          return seat;
        }
        show_clock(view_id, time) {
          table_3d_layout_1.default.get().showTime(true);
          table_3d_layout_1.default.get().setTime(time, true);
          table_3d_layout_1.default.get().turnOffAll();
          table_3d_layout_1.default.get().turnOffAllLight();
          table_3d_layout_1.default.get().lightDirection(this.switch_view_to_seat(view_id));
          table_3d_layout_1.default.get().lightLightDirection(this.switch_view_to_seat(view_id));
        }
        switch_view_to_view(viewid) {
          if (1 == viewid) return 4;
          return viewid;
        }
        on_btn_back() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          if (!global_data_1.global_data.is_online) {
            bind_function_1.bf.close_game(true);
            return;
          }
          if (bind_function_1.bf.get_game_status() == ErRenGameDefine_1.ErRenGameDefine.GameStatus.free) bind_function_1.bf.close_game(true); else {
            let call_back = function() {
              bind_function_1.bf.request_user_data();
              bind_function_1.bf.close_game(true);
            };
            0 != bind_function_1.bf.get_game_status() && bind_function_1.bf.show_message_box("\u5f53\u524d\u6b63\u5728\u6e38\u620f\u4e2d\uff0c\u4f60\u786e\u5b9a\u8981\u79bb\u5f00\u5417", "\u63d0\u793a", 0, "\u786e\u5b9a", "\u53d6\u6d88", call_back, null, null);
          }
        }
        on_btn_rule() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.ptr_rule_layer.show();
        }
        on_btn_changeCard() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["change_cards"] = [];
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.change_cards, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        on_btn_tingLayer() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.ptr_ting_layer.show_layer(!this.ptr_ting_layer.is_show());
        }
        set_btn_tingLayer_visible(b_show) {
          this.ptr_btn_ting.node.active = b_show;
        }
        show_pi_pei_ani(show) {
          this.ptr_pipei_ani.active = show;
          show && this.ptr_pipei_ani.getComponentInChildren(cc.Animation).play();
        }
        show_start_ani(show) {
          this.ptr_duiju_ani.active = show;
          let that = this;
          if (show) {
            bind_function_1.bf.pause_message();
            this.ptr_duiju_ani.getComponentInChildren(cc.Animation).play();
            this.ptr_duiju_ani.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function() {
              this.ptr_duiju_ani.active = false;
              that.ptr_ui_helper.start_game_ani();
            }.bind(this))));
          }
        }
        is_line_up() {
          let room_data = bind_function_1.bf.get_room_data();
          if (null == room_data || void 0 == room_data) return;
          if (room_data._int_room_kind & ErRenGameDefine_1.ErRenGameDefine.ROOM_TYPE_LINEUP) return true;
          return false;
        }
        on_btn_test() {
          return;
        }
        on_btn_ready() {
          ErRenSoundManager_1.ErRenSoundManager.playButtonEffect("ready_click");
          if (bind_function_1.bf.get_game_status() != ErRenGameDefine_1.ErRenGameDefine.GameStatus.free) return;
          this.ptr_trust_layer.hide();
          bind_function_1.bf.send_ready_data();
          this.left_card_bg.node.active = false;
          cards_3d_layout_1.default.get().reset();
          cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
          table_3d_layout_1.default.get().showTime(false);
        }
        on_btn_change() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          if (bind_function_1.bf.get_game_status() != ErRenGameDefine_1.ErRenGameDefine.GameStatus.free) return;
          this.base_gold_label.node.active = false;
          this.base_gold_label.string = "";
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER = false;
          this.clear_data();
          for (let i = 0; i < this.ptr_user_heads.length; i++) i != ErRenGameDefine_1.ErRenGameDefine.ViewID.self && this.ptr_user_heads[i].hide_head();
          bind_function_1.bf.re_sit_down();
          if (this.is_line_up()) {
            this.show_ready_change_btn(false, false);
            this.show_pi_pei_ani(true);
          }
        }
        on_btn_change2() {
          this.set_change2_btn(false);
          this.on_btn_change();
        }
        show_ready_change_btn(show_ready, show_change) {
          this.ptr_btn_ready.node.active = show_ready;
          this.ptr_btn_change.node.active = show_change;
          this.ptr_btn_have_ready.node.active = false;
        }
        set_change2_btn(show_change2) {
          this.is_line_up() ? this.ptr_btn_change2.node.active = show_change2 : this.ptr_btn_change2.node.active = false;
        }
        show_start_btn(show_start) {
          this.ptr_btn_start.node.active = show_start;
        }
        clear_data() {
          if (this.is_line_up()) this.show_ready_change_btn(false, false); else {
            this.ptr_btn_ready.node.active = true;
            this.ptr_btn_have_ready.node.active = false;
          }
          for (let i = 0; i < this.ptr_user_heads.length; i++) this.ptr_user_heads[i].clear_data();
          this.ptr_finish_layer.clear_data();
          this.ptr_double_layer.hide();
          this.ptr_trust_layer.hide();
          this.ptr_task_layer.set_task_visible(false);
          this.left_card_bg.node.active = false;
          table_3d_layout_1.default.get().showTime(false);
          cards_3d_layout_1.default.get().reset();
          table_3d_layout_1.default.get().turnOffAll();
          table_3d_layout_1.default.get().turnOffAllLight();
        }
        refresh_share_clear_score(have_clear_week, have_clear_day) {
          ErRenGameData_1.get_game_data().have_share_clear_week_score = 0 == have_clear_week;
          ErRenGameData_1.get_game_data().have_share_clear_day_score = 0 == have_clear_day;
        }
        onDestroy() {
          bind_function_1.bf.unregister_game_engine(152);
        }
        fetch_Rank_data(guide) {
          if (!guide) return;
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MATCH_RESULT);
          url = utils_1.utils.string_replace_any(url, "{KINDID}", 152);
          url = utils_1.utils.string_replace_any(url, "{AREAID}", global_data_1.global_data.area_id);
          url = utils_1.utils.string_replace_any(url, "{CHANNELID}", global_data_1.global_data.channel_id);
          url = utils_1.utils.string_replace_any(url, "{VERSION}", global_data_1.global_data.version);
          url = utils_1.utils.string_replace_any(url, "{USERID}", global_data_1.global_data.get_the_user_data()._int_user_id);
          url = utils_1.utils.string_replace_any(url, "{SESSION}", global_data_1.global_data.get_the_user_data()._str_session);
          url = utils_1.utils.string_replace_any(url, "{MATCHID}", guide);
          url = utils_1.utils.string_replace_any(url, "{START}", 1);
          url = utils_1.utils.string_replace_any(url, "{SIZE}", 20);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: (data, msg) => {
              data && data.tops.length > 0 && utils_1.utils.send("refreshRealRank", data.tops);
            },
            fail: errMsg => {
              utils_1.utils.show_hint(errMsg);
            }
          });
        }
        on_btn_share() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_match_invite();
        }
        on_btn_history() {
          sound_manager_1.sound_manager.play_click();
          this.historyPanel.node.active = true;
        }
      };
      __decorate([ property([ ErRenUserHead_1.default ]) ], ErRenGameMain.prototype, "ptr_user_heads", void 0);
      __decorate([ property(ErRenUIHelper_1.default) ], ErRenGameMain.prototype, "ptr_ui_helper", void 0);
      __decorate([ property(ErRenTrustLayer_1.default) ], ErRenGameMain.prototype, "ptr_trust_layer", void 0);
      __decorate([ property(ErRenFinishLayer_1.default) ], ErRenGameMain.prototype, "ptr_finish_layer", void 0);
      __decorate([ property(ErRenCardLayer_1.default) ], ErRenGameMain.prototype, "ptr_card_layer", void 0);
      __decorate([ property(ErRenTaskLayer_1.default) ], ErRenGameMain.prototype, "ptr_task_layer", void 0);
      __decorate([ property(ErRenTingLayer_1.default) ], ErRenGameMain.prototype, "ptr_ting_layer", void 0);
      __decorate([ property(ErRenDoubleLayer_1.default) ], ErRenGameMain.prototype, "ptr_double_layer", void 0);
      __decorate([ property(ErRenRuleLayer_1.default) ], ErRenGameMain.prototype, "ptr_rule_layer", void 0);
      __decorate([ property(ErRenRankUpLayer_1.default) ], ErRenGameMain.prototype, "ptr_rank_up_layer", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_left_top_node", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_right_top_node", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_gift_node", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_back", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_rule", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_ready", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_have_ready", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_change", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_change2", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_changeCard", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_start", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_test", void 0);
      __decorate([ property(cc.Sprite) ], ErRenGameMain.prototype, "left_card_bg", void 0);
      __decorate([ property(cc.Label) ], ErRenGameMain.prototype, "left_card_count", void 0);
      __decorate([ property(cc.Label) ], ErRenGameMain.prototype, "base_gold_label", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_dice_1", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_dice_2", void 0);
      __decorate([ property(cc.Sprite) ], ErRenGameMain.prototype, "ptr_dice_result_1", void 0);
      __decorate([ property(cc.Sprite) ], ErRenGameMain.prototype, "ptr_dice_result_2", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenGameMain.prototype, "ptr_frame_dice", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenGameMain.prototype, "ptr_frames_level", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_pipei_ani", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_duiju_ani", void 0);
      __decorate([ property(cc.Node) ], ErRenGameMain.prototype, "ptr_huLight_ani", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "ptr_btn_ting", void 0);
      __decorate([ property(sp.Skeleton) ], ErRenGameMain.prototype, "ptr_sp_ske", void 0);
      __decorate([ property(cc.Label) ], ErRenGameMain.prototype, "ptr_label_win", void 0);
      __decorate([ property(cc.Label) ], ErRenGameMain.prototype, "ptr_label_lose", void 0);
      __decorate([ property(cc.Prefab) ], ErRenGameMain.prototype, "prefab_ruleAward", void 0);
      __decorate([ property(cc.Prefab) ], ErRenGameMain.prototype, "matchtipprefab", void 0);
      __decorate([ property(cc.Prefab) ], ErRenGameMain.prototype, "matchNoticePrefab", void 0);
      __decorate([ property(ErRenRankPanel_1.default) ], ErRenGameMain.prototype, "ptr_rank_panel", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "shareBtn", void 0);
      __decorate([ property(cc.Button) ], ErRenGameMain.prototype, "historyBtn", void 0);
      __decorate([ property(ErRenHistoryRank_1.default) ], ErRenGameMain.prototype, "historyPanel", void 0);
      __decorate([ property(cc.Sprite) ], ErRenGameMain.prototype, "sp_matchRemain", void 0);
      __decorate([ property(ErRenRankLayer_1.default) ], ErRenGameMain.prototype, "rankResult", void 0);
      ErRenGameMain = __decorate([ ccclass ], ErRenGameMain);
      return ErRenGameMain;
    })();
    exports.default = ErRenGameMain;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/cards_3d_logic": "cards_3d_logic",
    "../../../Layout3D/Src/game_tools": "game_tools",
    "../../../Layout3D/Src/table_3d_layout": "table_3d_layout",
    "../../Component/LobbyYiFu/LobbyYiFuMatch": "LobbyYiFuMatch",
    "../../Component/LobbyYiFu/LobbyYiFuMatchNotice": "LobbyYiFuMatchNotice",
    "../../Component/LobbyYiFu/LobbyYiFuRuleAward": "LobbyYiFuRuleAward",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/global_define": "global_define",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./ErRenCardLayer": "ErRenCardLayer",
    "./ErRenDoubleLayer": "ErRenDoubleLayer",
    "./ErRenFinishLayer": "ErRenFinishLayer",
    "./ErRenGameData": "ErRenGameData",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenHistoryRank": "ErRenHistoryRank",
    "./ErRenRankLayer": "ErRenRankLayer",
    "./ErRenRankPanel": "ErRenRankPanel",
    "./ErRenRankUpLayer": "ErRenRankUpLayer",
    "./ErRenRuleLayer": "ErRenRuleLayer",
    "./ErRenSoundManager": "ErRenSoundManager",
    "./ErRenTaskLayer": "ErRenTaskLayer",
    "./ErRenTingLayer": "ErRenTingLayer",
    "./ErRenTrustLayer": "ErRenTrustLayer",
    "./ErRenUIHelper": "ErRenUIHelper",
    "./ErRenUserHead": "ErRenUserHead"
  } ],
  ErRenGameUserInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "090efOyQL9D54udYHsdyKWL", "ErRenGameUserInfo");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("../../Component/PopWindow");
    const UserHead_1 = require("../../Component/UserHead");
    const utils_1 = require("../../Framework/common/utils");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const AppGlobal_1 = require("../../AppGlobal");
    const ItemDetail_1 = require("../../Component/ItemDetail");
    const ErRenGiftButton_1 = require("./ErRenGiftButton");
    const ErRenGameData_1 = require("./ErRenGameData");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenGameUserInfo = (() => {
      let ErRenGameUserInfo = class ErRenGameUserInfo extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.btnClose = null;
          this.userHead = null;
          this.labelNickname = null;
          this.giftItemRoot = null;
          this.giftItemPrefab = null;
          this.scrollView = null;
          this.hasItemNode = null;
          this.labelWinRate = null;
          this.labelRecord = null;
          this.ptr_level_sprite = null;
          this.ptr_level_spriteFrames = [];
          this.ptr_level_lable = null;
          this.view_id = -1;
          this.m_ptr_callback_object = null;
          this.m_ptr_callback_fun = null;
          this.m_int_user_id = 0;
          this.m_is_self = false;
          this.m_param = null;
          this.m_prices = [ "1000", "2000", "5000", "1000", "2000" ];
        }
        onLoad() {
          this.giftItemRoot.removeAllChildren();
          utils_1.utils.bind_button_event(this.btnClose, this.node, "ErRenGameUserInfo", "onBtnCloseClicked");
          this.safe_on("onErRenGiftButtonClick", this.onGiftButtonClick, this);
          let str_rule = "gift=&quot;1000,2000,5000,1000,2000&quot;;";
          let rule = utils_1.utils.parse_lua_text(str_rule);
          let gift_str = rule.gift ? rule.gift : "1000,2000,5000,1000,2000";
          this.m_prices = gift_str.split(",");
        }
        onDestroy() {}
        start() {}
        update() {}
        userLevel(lScore) {
          let index = ErRenGameData_1.get_game_data().get_user_level_index_by_score(lScore);
          this.ptr_level_sprite.spriteFrame = this.ptr_level_spriteFrames[index];
          let rank_level = ErRenGameData_1.get_game_data().get_rank_name_by_score(lScore);
          this.ptr_level_lable.string = rank_level + "";
        }
        onBtnCloseClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.hide();
        }
        onGiftButtonClick(event) {
          if (this.m_is_self) {
            let prop_id = event.getUserData();
            let d = global_data_1.global_data.get_prop_data_by_id(prop_id);
            d._bool_can_use && AppGlobal_1.AppGlobal.getInstance().showItemDetail(prop_id, ItemDetail_1.ItemDetailType.UserInfo);
          } else {
            this.hide();
            let e = new cc.Event.EventCustom("onSendGiftErRen", true);
            e.setUserData({
              index: event.getUserData(),
              userid: this.m_int_user_id,
              count: 1
            });
            this.node.dispatchEvent(e);
          }
        }
        onSendScoreButtonClick(event) {}
        getNextDisabledButton() {
          for (let i = 0; i < this.giftItemRoot.childrenCount; ++i) {
            let item = this.giftItemRoot.children[i];
            if (false == item.active) return item;
          }
          return null;
        }
        addGiftItem(index, prop_id, is_self) {
          let count = global_data_1.global_data.get_prop_count_by_id(prop_id);
          if (is_self) {
            if (count > 0) {
              this.hasItemNode.active = true;
              let item = this.getNextDisabledButton();
              let giftButton = null != item ? item.getComponent(ErRenGiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, ErRenGiftButton_1.default);
              giftButton.node.active = true;
              let name = global_data_1.global_data.get_prop_data_by_id(prop_id)._str_name;
              giftButton.setData(prop_id, true, name, true, count, true);
            }
          } else {
            this.hasItemNode.active = true;
            let item = this.getNextDisabledButton();
            let giftButton = null != item ? item.getComponent(ErRenGiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, ErRenGiftButton_1.default);
            giftButton.node.active = true;
            giftButton.setData(prop_id, true, this.m_prices[index], true, count, true);
          }
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        setData(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id) {
          let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(int_user_id);
          this.view_id = view_id;
          this.userHead.setData(100, 100, int_user_id, ptr_user_data.wFaceID, ptr_user_data.cbGender);
          this.userHead.setInteractable(false);
          this.m_ptr_callback_object = callback_obj;
          this.m_ptr_callback_fun = callback_close;
          this.m_param = any_param;
          this.m_int_user_id = int_user_id;
          this.m_is_self = int_user_id == global_data_1.global_data.get_the_user_data()._int_user_id;
          this.refresh();
        }
        refresh() {
          try {
            this.hasItemNode.active = false;
            let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(this.m_int_user_id);
            if (null != ptr_user_data) {
              this.labelNickname.string = "\u6635\u79f0\uff1a" + ptr_user_data.szName;
              ErRenGameDefine_1.ErRenGameDefine.JiFen ? this.userLevel(ptr_user_data.lScore) : this.userLevel(ptr_user_data.lGold);
              let int_win_count = ptr_user_data.lWinCount;
              let int_total_count = ptr_user_data.lWinCount + ptr_user_data.lLostCount + ptr_user_data.lDrawCount;
              this.labelWinRate.string = "\u80dc\u7387\uff1a" + (0 != int_total_count ? String(Math.floor(100 * int_win_count / int_total_count)) + "%" : "0%");
              this.labelRecord.string = "\u6218\u7ee9\uff1a" + ptr_user_data.lWinCount + "\u80dc/" + ptr_user_data.lLostCount + "\u8d1f/" + ptr_user_data.lDrawCount + "\u5e73";
              this.giftItemRoot.children.forEach(item => {
                item.active = false;
              });
              if (this.m_is_self) ; else {
                for (let i = 0; i < 5; ++i) this.addGiftItem(i, utils_1.utils.gift_id_to_resource_id(i), false);
                this.scrollView.scrollToLeft(0);
                this.scrollView.horizontal = false;
              }
            } else console.error("get_user_data_by_user_id fail. id: ", this.m_int_user_id);
          } catch (e) {}
        }
      };
      __decorate([ property(cc.Node) ], ErRenGameUserInfo.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], ErRenGameUserInfo.prototype, "btnClose", void 0);
      __decorate([ property(UserHead_1.UserHead) ], ErRenGameUserInfo.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], ErRenGameUserInfo.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Node) ], ErRenGameUserInfo.prototype, "giftItemRoot", void 0);
      __decorate([ property(cc.Prefab) ], ErRenGameUserInfo.prototype, "giftItemPrefab", void 0);
      __decorate([ property(cc.ScrollView) ], ErRenGameUserInfo.prototype, "scrollView", void 0);
      __decorate([ property(cc.Node) ], ErRenGameUserInfo.prototype, "hasItemNode", void 0);
      __decorate([ property(cc.Label) ], ErRenGameUserInfo.prototype, "labelWinRate", void 0);
      __decorate([ property(cc.Label) ], ErRenGameUserInfo.prototype, "labelRecord", void 0);
      __decorate([ property(cc.Sprite) ], ErRenGameUserInfo.prototype, "ptr_level_sprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenGameUserInfo.prototype, "ptr_level_spriteFrames", void 0);
      __decorate([ property(cc.Label) ], ErRenGameUserInfo.prototype, "ptr_level_lable", void 0);
      ErRenGameUserInfo = __decorate([ ccclass ], ErRenGameUserInfo);
      return ErRenGameUserInfo;
    })();
    exports.default = ErRenGameUserInfo;
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Component/ItemDetail": "ItemDetail",
    "../../Component/PopWindow": "PopWindow",
    "../../Component/UserHead": "UserHead",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "./ErRenGameData": "ErRenGameData",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenGiftButton": "ErRenGiftButton",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenGiftButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0dd92lmRQVL1odrKrc1yPHm", "ErRenGiftButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenGiftButton = (() => {
      let ErRenGiftButton = class ErRenGiftButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.nodeIcon = null;
          this.buttonUse = null;
          this.propId = 1011;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonUse, this.node, "ErRenGiftButton", "onBtnClicked");
        }
        onBtnClicked(event, customEventData) {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let e = new cc.Event.EventCustom("onErRenGiftButtonClick", true);
          e.setUserData(this.propId);
          this.node.dispatchEvent(e);
        }
        setData(propId, showLabel, label, showCount, count, canClick) {
          try {
            this.propId = propId;
            let sp_path = "Prop-prop_" + propId;
            null != global_data_1.global_data.spriteFrameMap.get(sp_path) ? this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path) : this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.webSpriteFrameCache.get("Exchange_prop_" + propId);
            this.buttonUse.interactable = canClick;
          } catch (e) {}
        }
      };
      __decorate([ property(cc.Node) ], ErRenGiftButton.prototype, "nodeIcon", void 0);
      __decorate([ property(cc.Button) ], ErRenGiftButton.prototype, "buttonUse", void 0);
      __decorate([ property ], ErRenGiftButton.prototype, "propId", void 0);
      ErRenGiftButton = __decorate([ ccclass ], ErRenGiftButton);
      return ErRenGiftButton;
    })();
    exports.default = ErRenGiftButton;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/global_data": "global_data",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenGlobalUI: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "27e94HomyRLBq3DNtVkZgNi", "ErRenGlobalUI");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const ErRenGameUserInfo_1 = require("./ErRenGameUserInfo");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenGlobalUI = (() => {
      var ErRenGlobalUI_1;
      let ErRenGlobalUI = ErRenGlobalUI_1 = class ErRenGlobalUI extends cc.Component {
        constructor() {
          super(...arguments);
          this.gameUserInfoPrefab = null;
          this.gameUserInfo = null;
        }
        static getInstance() {
          return ErRenGlobalUI_1._instance;
        }
        onLoad() {
          ErRenGlobalUI_1._instance = this;
        }
        start() {}
        showGameUserInfo(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id) {
          cc.isValid(this.gameUserInfo) || (this.gameUserInfo = utils_1.utils.add_instance_to_root(this.gameUserInfoPrefab, cc.Canvas.instance.node, ErRenGameUserInfo_1.default));
          if (cc.isValid(this.gameUserInfo)) {
            this.setTopSiblingIndex(this.gameUserInfo.node);
            this.gameUserInfo.show();
            this.gameUserInfo.setData(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id);
          }
        }
        hideGameUserInfo() {
          cc.isValid(this.gameUserInfo) && this.gameUserInfo.hide();
        }
        setTopSiblingIndex(node) {
          node.setSiblingIndex(node.getParent().childrenCount + 1);
          node.zIndex = cc.macro.MAX_ZINDEX;
        }
      };
      ErRenGlobalUI._instance = null;
      __decorate([ property(cc.Prefab) ], ErRenGlobalUI.prototype, "gameUserInfoPrefab", void 0);
      ErRenGlobalUI = ErRenGlobalUI_1 = __decorate([ ccclass ], ErRenGlobalUI);
      return ErRenGlobalUI;
    })();
    exports.default = ErRenGlobalUI;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "./ErRenGameUserInfo": "ErRenGameUserInfo"
  } ],
  ErRenHistoryRank: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "62a94hK4x5DRLYS8I3pf+k6", "ErRenHistoryRank");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const global_define_1 = require("../../Framework/lobby/global_define");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const ErRenRankButton_1 = require("./ErRenRankButton");
    const ErRenRankItem_1 = require("./ErRenRankItem");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenHistoryRank = (() => {
      let ErRenHistoryRank = class ErRenHistoryRank extends cc.Component {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.ruleBtn = null;
          this.shotBtn = null;
          this.historyBtn = null;
          this.scrollView_history = null;
          this.scrollView_rank = null;
          this.label_noRank = null;
          this.label_curDate = null;
          this.label_key = null;
          this.selfRank = null;
          this.prefab_bigRank = null;
          this.prefab_rankButton = null;
          this._match_data = null;
          this._show_button = false;
          this._current_guid = -1;
        }
        onLoad() {
          let date = new Date();
          let year = date.getFullYear();
          let month = date.getMonth() + 1;
          let day = date.getDate();
          this._show_button = false;
          this.label_curDate.string = `${year}\u5e74${month}\u6708${day}\u65e5`;
          utils_1.utils.on("refreshRealRank", this, this.refreshRealRank);
          utils_1.utils.on("refresh_key", this, this.refresh_key);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "ErRenHistoryRank", "onBtnClose");
          utils_1.utils.bind_button_event(this.ruleBtn, this.node, "ErRenHistoryRank", "onBtnRule");
          utils_1.utils.bind_button_event(this.shotBtn, this.node, "ErRenHistoryRank", "onBtnShot");
          utils_1.utils.bind_button_event(this.historyBtn, this.node, "ErRenHistoryRank", "onBtnHistory");
          let curDate = Math.floor(new Date().getTime() / 864e5);
          let matchDate = 0;
          this._match_data && this._match_data.starttime && (matchDate = Math.floor(this._match_data.starttime / 86400));
          if (this._match_data && 0 != this._match_data.guid && matchDate == curDate) {
            this.fetch_Rank_data(this._match_data.guid);
            let data = {};
            data["guid"] = `${this._match_data.guid}`;
            this._current_guid = this._match_data.guid;
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.match_key, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(data)));
          } else {
            let objDate = new Date(this._match_data.rank_end / 1e4, this._match_data.rank_end / 100 % 100 - 1, this._match_data.rank_end % 100);
            if (objDate.getTime() - new Date().getTime() > 0) {
              let nDiffer = Math.floor((objDate.getTime() - new Date().getTime()) / 864e5) + 1;
              let guideIndex = this._match_data.last_guid - nDiffer;
              this._current_guid = guideIndex;
              this.fetch_Rank_data(guideIndex);
              let data = {};
              data["guid"] = `${guideIndex}`;
              bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.match_key, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(data)));
            }
          }
        }
        onDestroy() {
          utils_1.utils.off("refreshRealRank", this, this.refreshRealRank);
          utils_1.utils.off("refresh_key", this, this.refresh_key);
        }
        refresh_key(data) {
          data.guid == this._current_guid && (this.label_key.string = data.reskey);
        }
        setMatchData(data) {
          this._match_data = data;
        }
        onBtnClose() {
          sound_manager_1.sound_manager.play_click();
          this.node.active = false;
        }
        onBtnRule() {
          sound_manager_1.sound_manager.play_click();
          bind_function_1.bf.get_game_engine().showRuleAward();
        }
        onBtnHistory() {
          sound_manager_1.sound_manager.play_click();
          if (!this._match_data || !this._match_data.last_guid) {
            utils_1.utils.show_hint("\u6682\u65e0\u6bd4\u8d5b\u6570\u636e\uff01");
            return;
          }
          let curDate = Number(this.getFormatDate());
          if (!this._match_data.rank_start || curDate < this._match_data.rank_start) {
            utils_1.utils.show_hint("\u6682\u65e0\u6bd4\u8d5b\u6570\u636e\uff01");
            return;
          }
          this.scrollView_history.content.removeAllChildren();
          let that = this;
          for (let i = 0; i <= curDate - this._match_data.rank_start; i++) {
            let rankBtnItem = cc.instantiate(this.prefab_rankButton).getComponent(ErRenRankButton_1.default);
            rankBtnItem.node.y = 40 * -this.scrollView_history.content.childrenCount;
            rankBtnItem.setData(i, index => {
              that.onButtonSelect(index);
            });
            40 * (this.scrollView_history.content.childrenCount + 1) > 160 && this.scrollView_history.content.setContentSize(this.scrollView_history.content.width, 40 * (this.scrollView_history.content.childrenCount + 1));
            this.scrollView_history.content.addChild(rankBtnItem.node);
          }
          this.scrollView_history.node.active = !this.scrollView_history.node.active;
          this.scrollView_history.scrollToTop();
        }
        onButtonSelect(index) {
          this.scrollView_history.content.children.forEach(child => {
            child.getComponent(ErRenRankButton_1.default).onButtonSelect(index);
          });
          let curDate = Math.floor(new Date().getTime() / 864e5);
          let matchDate = 0;
          this._match_data && this._match_data.starttime && (matchDate = Math.floor(this._match_data.starttime / 86400));
          if (this._match_data.guid && matchDate - curDate != 1) {
            this.fetch_Rank_data(this._match_data.guid - index);
            this._current_guid = this._match_data.guid - index;
            let data = {};
            data["guid"] = `${this._current_guid}`;
            bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.match_key, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(data)));
          } else {
            let objDate = new Date(this._match_data.rank_end / 1e4, this._match_data.rank_end / 100 % 100 - 1, this._match_data.rank_end % 100);
            if (objDate.getTime() - new Date().getTime() > 0) {
              let nDiffer = Math.floor((objDate.getTime() - new Date().getTime()) / 864e5) + 1;
              let guideIndex = this._match_data.last_guid - nDiffer;
              this.fetch_Rank_data(guideIndex - index);
              this._current_guid = guideIndex;
              let data = {};
              data["guid"] = `${this._current_guid}`;
              bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.match_key, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(data)));
            }
          }
          this.scrollView_rank.content.removeAllChildren();
          let selectDate = Number(this.getFormatDate()) - index;
          this.label_curDate.string = `${Math.floor(selectDate / 1e4)}\u5e74${Math.floor(selectDate / 100 % 100)}\u6708${Math.floor(selectDate % 100)}\u65e5`;
          this.selfRank.node.active = false;
          this.label_noRank.node.active = true;
        }
        onBtnShot() {
          sound_manager_1.sound_manager.play_click();
          let that = this;
          utils_1.utils.is_wechat() ? cc.game.canvas.toTempFilePath({
            fileType: "jpg",
            success: res => {
              console.log("toTempFilePath success :", res.tempFilePath);
              that.storePhotoToPhone(res.tempFilePath);
            },
            fail(res) {
              console.log("fail : ", res);
            }
          }) : utils_1.utils.show_hint("\u622a\u56fe\u6210\u529f");
        }
        storePhotoToPhone(path) {
          wx.saveImageToPhotosAlbum({
            filePath: path,
            success: function(data) {
              wx.hideLoading();
              wx.showModal({
                title: "\u63d0\u793a",
                content: "\u7167\u7247\u4fdd\u5b58\u6210\u529f",
                showCancel: false
              });
            },
            fail: function(err) {
              "saveImageToPhotosAlbum:fail:auth denied" !== err.errMsg && "saveImageToPhotosAlbum:fail auth deny" !== err.errMsg && "saveImageToPhotosAlbum:fail authorize no response" !== err.errMsg || wx.showModal({
                title: "\u63d0\u793a",
                content: "\u9700\u8981\u60a8\u6388\u6743\u4fdd\u5b58\u76f8\u518c",
                showCancel: false,
                success: modalSuccess => {
                  wx.openSetting({
                    success(settingdata) {
                      console.log("settingdata", settingdata);
                      settingdata.authSetting["scope.writePhotosAlbum"] ? wx.showModal({
                        title: "\u63d0\u793a",
                        content: "\u83b7\u53d6\u6743\u9650\u6210\u529f,\u518d\u6b21\u70b9\u51fb\u56fe\u7247\u5373\u53ef\u4fdd\u5b58",
                        showCancel: false
                      }) : wx.showModal({
                        title: "\u63d0\u793a",
                        content: "\u83b7\u53d6\u6743\u9650\u5931\u8d25\uff0c\u5c06\u65e0\u6cd5\u4fdd\u5b58\u5230\u76f8\u518c\u54e6~",
                        showCancel: false
                      });
                    },
                    fail(failData) {
                      console.log("failData", failData);
                    },
                    complete(finishData) {
                      console.log("finishData", finishData);
                    }
                  });
                }
              });
            },
            complete(res) {
              wx.hideLoading();
            }
          });
        }
        refreshRealRank(param) {
          if (!param || 0 == param.length) return;
          this.scrollView_rank.content.removeAllChildren(true);
          let that = this;
          let bFindSelf = false;
          param.forEach(data => {
            if (data.userid == bind_function_1.bf.get_self_user_id()) {
              bFindSelf = true;
              this.selfRank.setData(-1, data);
            }
            let rankItem = cc.instantiate(that.prefab_bigRank).getComponent(ErRenRankItem_1.default);
            rankItem.node.y = 78 * -(that.scrollView_rank.content.childrenCount + 1);
            rankItem.setData(that.scrollView_rank.content.childrenCount, data);
            78 * (that.scrollView_rank.content.childrenCount + 1) > this.scrollView_rank.content.height && this.scrollView_rank.content.setContentSize(this.scrollView_rank.content.width, 78 * (that.scrollView_rank.content.childrenCount + 1));
            that.scrollView_rank.content.addChild(rankItem.node);
          });
          this.scrollView_rank.scrollToTop();
          this.selfRank.node.active = false;
          this.label_noRank.node.active = false;
          bFindSelf ? this.selfRank.node.active = true : this.label_noRank.node.active = true;
        }
        getFormatDate() {
          let date = new Date();
          let year = date.getFullYear();
          let month = date.getMonth() + 1;
          let day = date.getDate();
          let zmonth = month < 10 ? "0" + month : month;
          let zday = day < 10 ? "0" + day : day;
          return `${year}${zmonth}${zday}`;
        }
        fetch_Rank_data(guide) {
          if (!guide) return;
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MATCH_RESULT);
          url = utils_1.utils.string_replace_any(url, "{KINDID}", 152);
          url = utils_1.utils.string_replace_any(url, "{AREAID}", global_data_1.global_data.area_id);
          url = utils_1.utils.string_replace_any(url, "{CHANNELID}", global_data_1.global_data.channel_id);
          url = utils_1.utils.string_replace_any(url, "{VERSION}", global_data_1.global_data.version);
          url = utils_1.utils.string_replace_any(url, "{USERID}", global_data_1.global_data.get_the_user_data()._int_user_id);
          url = utils_1.utils.string_replace_any(url, "{SESSION}", global_data_1.global_data.get_the_user_data()._str_session);
          url = utils_1.utils.string_replace_any(url, "{MATCHID}", guide);
          url = utils_1.utils.string_replace_any(url, "{START}", 1);
          url = utils_1.utils.string_replace_any(url, "{SIZE}", 20);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: (data, msg) => {
              data && data.tops.length > 0 && utils_1.utils.send("refreshRealRank", data.tops);
            },
            fail: errMsg => {
              utils_1.utils.show_hint(errMsg);
            }
          });
        }
      };
      __decorate([ property(cc.Button) ], ErRenHistoryRank.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], ErRenHistoryRank.prototype, "ruleBtn", void 0);
      __decorate([ property(cc.Button) ], ErRenHistoryRank.prototype, "shotBtn", void 0);
      __decorate([ property(cc.Button) ], ErRenHistoryRank.prototype, "historyBtn", void 0);
      __decorate([ property(cc.ScrollView) ], ErRenHistoryRank.prototype, "scrollView_history", void 0);
      __decorate([ property(cc.ScrollView) ], ErRenHistoryRank.prototype, "scrollView_rank", void 0);
      __decorate([ property(cc.Label) ], ErRenHistoryRank.prototype, "label_noRank", void 0);
      __decorate([ property(cc.Label) ], ErRenHistoryRank.prototype, "label_curDate", void 0);
      __decorate([ property(cc.Label) ], ErRenHistoryRank.prototype, "label_key", void 0);
      __decorate([ property(ErRenRankItem_1.default) ], ErRenHistoryRank.prototype, "selfRank", void 0);
      __decorate([ property(cc.Prefab) ], ErRenHistoryRank.prototype, "prefab_bigRank", void 0);
      __decorate([ property(cc.Prefab) ], ErRenHistoryRank.prototype, "prefab_rankButton", void 0);
      ErRenHistoryRank = __decorate([ ccclass ], ErRenHistoryRank);
      return ErRenHistoryRank;
    })();
    exports.default = ErRenHistoryRank;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/global_define": "global_define",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenRankButton": "ErRenRankButton",
    "./ErRenRankItem": "ErRenRankItem"
  } ],
  ErRenHuTypeLabel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e42527qOaRPmoqDUsWL2FCE", "ErRenHuTypeLabel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenHuTypeLabel = (() => {
      let ErRenHuTypeLabel = class ErRenHuTypeLabel extends cc.Component {
        constructor() {
          super(...arguments);
          this.typeName = null;
          this.typeCount = null;
          this.typeMul = null;
        }
        setData(name, count, is_win, mul = 1) {
          this.typeName.string = name;
          this.typeCount.string = count + "\u756a";
          this.typeMul.node.active = false;
          if (mul && mul > 1) {
            this.typeMul.node.active = true;
            this.typeMul.string = `x${mul}`;
          }
          if (is_win) {
            this.typeName.node.color = new cc.Color().fromHEX("#A35239");
            this.typeCount.node.color = new cc.Color().fromHEX("#A35239");
            this.typeMul.node.color = new cc.Color().fromHEX("#A35239");
          } else {
            this.typeName.node.color = new cc.Color().fromHEX("#417EAF");
            this.typeCount.node.color = new cc.Color().fromHEX("#417EAF");
            this.typeMul.node.color = new cc.Color().fromHEX("#417EAF");
          }
          this.typeName._forceUpdateRenderData(true);
          this.typeCount._forceUpdateRenderData(true);
          this.typeMul._forceUpdateRenderData(true);
        }
      };
      __decorate([ property(cc.Label) ], ErRenHuTypeLabel.prototype, "typeName", void 0);
      __decorate([ property(cc.Label) ], ErRenHuTypeLabel.prototype, "typeCount", void 0);
      __decorate([ property(cc.Label) ], ErRenHuTypeLabel.prototype, "typeMul", void 0);
      ErRenHuTypeLabel = __decorate([ ccclass ], ErRenHuTypeLabel);
      return ErRenHuTypeLabel;
    })();
    exports.default = ErRenHuTypeLabel;
    cc._RF.pop();
  }, {} ],
  ErRenOutCard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fafbe0hbEBJHL9bhXPWe0Rn", "ErRenOutCard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenOutCard = (() => {
      let ErRenOutCard = class ErRenOutCard extends cc.Component {
        constructor() {
          super(...arguments);
          this.m_card_value = ErRenGameDefine_1.ErRenGameDefine.InvalidValue;
          this.m_can_hide = false;
          this.m_card = null;
        }
        start() {}
        init() {
          this.m_card = cards_3d_layout_1.default.get().getNewHandCard(true);
          this.m_card.setScale(1.05);
          this.m_card.setPosition(cc.v2(0, -6));
          this.node.setScale(1.4);
          this.node.addChild(this.m_card);
          this.node.active = false;
        }
        setCardValue(param_value) {
          this.m_card_value = param_value;
          this.m_card.getComponent(CSelfHandCard3D_1.default).setCardValue(param_value, 0);
        }
        getCardValue() {
          return this.m_card_value;
        }
        stopAllAction() {
          this.node.stopAllActions();
          this.node.active = true;
        }
        showCard(param_value) {
          this.node.active = false;
          this.m_card.active = true;
          null != param_value && this.setCardValue(param_value);
          if (this.m_card_value != ErRenGameDefine_1.ErRenGameDefine.InvalidValue) {
            this.m_can_hide = true;
            this.node.active = true;
            this.node.stopAllActions();
            this.node.opacity = 0;
            let that = this;
            let callfunc = cc.callFunc(function() {
              true == that.m_can_hide && that.hideCard();
            });
            this.node.runAction(cc.sequence(cc.fadeIn(.1), cc.delayTime(2), callfunc));
          }
        }
        hideCard() {
          let that = this;
          let callfunc = cc.callFunc(function() {
            that.node.active = false;
            that.clearData();
          });
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.fadeOut(.01), callfunc));
        }
        setCanHide(hide) {
          this.m_can_hide = hide;
        }
        clearData() {
          this.m_can_hide = false;
        }
      };
      ErRenOutCard = __decorate([ ccclass ], ErRenOutCard);
      return ErRenOutCard;
    })();
    exports.default = ErRenOutCard;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "./ErRenGameDefine": "ErRenGameDefine"
  } ],
  ErRenRankButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "04d965OJrpK9I779S0RPCHl", "ErRenRankButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRankButton = (() => {
      let ErRenRankButton = class ErRenRankButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.sp_select = null;
          this.label_date = null;
          this.dateButton = null;
          this._index = -1;
          this._callBack = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.dateButton, this.node, "ErRenRankButton", "onClickDate");
        }
        onDestroy() {}
        onClickDate() {
          sound_manager_1.sound_manager.play_click();
          this._callBack && this._callBack(this._index);
        }
        setData(index, callBack) {
          this.label_date.string = 0 == index ? "\u4eca\u65e5\u6392\u540d" : this.getPriDate(index);
          this._index = index;
          this._callBack = callBack;
        }
        getPriDate(date) {
          var dd = new Date();
          dd.setDate(dd.getDate() - date);
          var y = dd.getFullYear();
          var m = dd.getMonth() + 1 < 10 ? "0" + (dd.getMonth() + 1) : dd.getMonth() + 1;
          var d = dd.getDate() < 10 ? "0" + dd.getDate() : dd.getDate();
          return `${y}\u5e74${m}\u6708${d}\u65e5`;
        }
        onButtonSelect(index) {
          index == this._index ? this.sp_select.node.active = true : this.sp_select.node.active = false;
        }
      };
      __decorate([ property(cc.Sprite) ], ErRenRankButton.prototype, "sp_select", void 0);
      __decorate([ property(cc.Label) ], ErRenRankButton.prototype, "label_date", void 0);
      __decorate([ property(cc.Button) ], ErRenRankButton.prototype, "dateButton", void 0);
      ErRenRankButton = __decorate([ ccclass ], ErRenRankButton);
      return ErRenRankButton;
    })();
    exports.default = ErRenRankButton;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ErRenRankItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "83c72NDfxFLbLoMrJpzpgAg", "ErRenRankItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRankItem = (() => {
      let ErRenRankItem = class ErRenRankItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelRank = null;
          this.spRank = null;
          this.labelName = null;
          this.labelScore = null;
          this.sp_Head = null;
          this.sp_selfBG = null;
          this.sf_rank = [];
          this._index = -1;
        }
        onLoad() {
          this.sp_selfBG && (this.sp_selfBG.node.active = false);
        }
        setData(index, data) {
          if (!data) return;
          this._index = index;
          if (this.sf_rank[data.rank - 1]) {
            this.spRank.node.active = true;
            this.labelRank.node.active = false;
            this.spRank.spriteFrame = this.sf_rank[data.rank - 1];
          } else {
            this.spRank.node.active = false;
            this.labelRank.node.active = true;
            this.labelRank.string = data.rank;
          }
          this.labelScore.string = data.score;
          this.labelName.string = utils_1.utils.clamp_nickname(data.user.nickname, 4);
          let userId = data.userid;
          let faceId = data.user.faceid;
          this.sp_selfBG && userId == bind_function_1.bf.get_self_user_id() && (this.sp_selfBG.node.active = true);
          0 != faceId && lobby_framework_1.lobby_framework.fetch_user_head_image(userId, faceId, this.sp_Head);
        }
      };
      __decorate([ property(cc.Label) ], ErRenRankItem.prototype, "labelRank", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankItem.prototype, "spRank", void 0);
      __decorate([ property(cc.Label) ], ErRenRankItem.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], ErRenRankItem.prototype, "labelScore", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankItem.prototype, "sp_Head", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankItem.prototype, "sp_selfBG", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenRankItem.prototype, "sf_rank", void 0);
      ErRenRankItem = __decorate([ ccclass ], ErRenRankItem);
      return ErRenRankItem;
    })();
    exports.default = ErRenRankItem;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/lobby_framework": "lobby_framework"
  } ],
  ErRenRankLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6e7cbOp7PVKGpMLiZWVCycW", "ErRenRankLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRankLayer = (() => {
      let ErRenRankLayer = class ErRenRankLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.sp_bg = null;
          this.sf_bg = [];
          this.sp_flag = null;
          this.sf_flag = [];
          this.sp_light = null;
          this.sp_rank = null;
          this.sf_rank = [];
          this.sp_win = null;
          this.sp_lose = null;
          this.label_rank = null;
          this.label_key = null;
          this.sp_do = null;
          this.sf_do = [];
          this.btnShot = null;
          this.btnKnow = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btnShot, this.node, "ErRenRankLayer", "onScreenShot");
          utils_1.utils.bind_button_event(this.btnKnow, this.node, "ErRenRankLayer", "onKnow");
        }
        onDestroy() {}
        refresh(strkey) {
          this.label_key.string = strkey;
        }
        setData(data) {
          if (!data) return;
          let rank = data.rank;
          if (rank < 10) {
            this.sp_bg.spriteFrame = this.sf_bg[0];
            if (rank < 3) {
              this.sp_flag.spriteFrame = this.sf_flag[0];
              this.sp_rank.spriteFrame = this.sf_rank[rank];
            } else {
              this.sp_flag.spriteFrame = this.sf_flag[1];
              this.sp_rank.spriteFrame = this.sf_rank[3];
            }
            this.sp_light.node.active = true;
            this.sp_rank.node.active = true;
            this.sp_win.node.active = true;
            this.sp_lose.node.active = false;
            this.label_rank.node.active = true;
            this.label_key.node.active = true;
            this.label_rank.string = `\u7b2c${rank + 1}\u540d`;
            this.sp_do.spriteFrame = this.sf_do[0];
          } else {
            this.sp_bg.spriteFrame = this.sf_bg[1];
            this.sp_flag.spriteFrame = this.sf_flag[2];
            this.sp_rank.node.active = false;
            this.sp_light.node.active = false;
            this.sp_win.node.active = false;
            this.sp_lose.node.active = true;
            this.label_rank.node.active = false;
            this.label_key.node.active = false;
            this.sp_do.spriteFrame = this.sf_do[1];
          }
        }
        onScreenShot() {
          sound_manager_1.sound_manager.play_click();
          let that = this;
          utils_1.utils.is_wechat() ? cc.game.canvas.toTempFilePath({
            fileType: "jpg",
            success: res => {
              console.log("toTempFilePath success :", res.tempFilePath);
              that.storePhotoToPhone(res.tempFilePath);
            },
            fail(res) {
              console.log("fail : ", res);
            }
          }) : utils_1.utils.show_hint("\u622a\u56fe\u6210\u529f");
        }
        onKnow() {
          sound_manager_1.sound_manager.play_click();
          this.node.active = false;
        }
        start() {}
        storePhotoToPhone(path) {
          wx.saveImageToPhotosAlbum({
            filePath: path,
            success: function(data) {
              wx.hideLoading();
              wx.showModal({
                title: "\u63d0\u793a",
                content: "\u7167\u7247\u4fdd\u5b58\u6210\u529f",
                showCancel: false
              });
            },
            fail: function(err) {
              "saveImageToPhotosAlbum:fail:auth denied" !== err.errMsg && "saveImageToPhotosAlbum:fail auth deny" !== err.errMsg && "saveImageToPhotosAlbum:fail authorize no response" !== err.errMsg || wx.showModal({
                title: "\u63d0\u793a",
                content: "\u9700\u8981\u60a8\u6388\u6743\u4fdd\u5b58\u76f8\u518c",
                showCancel: false,
                success: modalSuccess => {
                  wx.openSetting({
                    success(settingdata) {
                      console.log("settingdata", settingdata);
                      settingdata.authSetting["scope.writePhotosAlbum"] ? wx.showModal({
                        title: "\u63d0\u793a",
                        content: "\u83b7\u53d6\u6743\u9650\u6210\u529f,\u518d\u6b21\u70b9\u51fb\u56fe\u7247\u5373\u53ef\u4fdd\u5b58",
                        showCancel: false
                      }) : wx.showModal({
                        title: "\u63d0\u793a",
                        content: "\u83b7\u53d6\u6743\u9650\u5931\u8d25\uff0c\u5c06\u65e0\u6cd5\u4fdd\u5b58\u5230\u76f8\u518c\u54e6~",
                        showCancel: false
                      });
                    },
                    fail(failData) {
                      console.log("failData", failData);
                    },
                    complete(finishData) {
                      console.log("finishData", finishData);
                    }
                  });
                }
              });
            },
            complete(res) {
              wx.hideLoading();
            }
          });
        }
      };
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_bg", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenRankLayer.prototype, "sf_bg", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_flag", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenRankLayer.prototype, "sf_flag", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_light", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_rank", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenRankLayer.prototype, "sf_rank", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_win", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_lose", void 0);
      __decorate([ property(cc.Label) ], ErRenRankLayer.prototype, "label_rank", void 0);
      __decorate([ property(cc.Label) ], ErRenRankLayer.prototype, "label_key", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankLayer.prototype, "sp_do", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenRankLayer.prototype, "sf_do", void 0);
      __decorate([ property(cc.Button) ], ErRenRankLayer.prototype, "btnShot", void 0);
      __decorate([ property(cc.Button) ], ErRenRankLayer.prototype, "btnKnow", void 0);
      ErRenRankLayer = __decorate([ ccclass ], ErRenRankLayer);
      return ErRenRankLayer;
    })();
    exports.default = ErRenRankLayer;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ErRenRankPanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b2f1dRnnepBHrh+ZnZwVz47", "ErRenRankPanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenRealRank_1 = require("./ErRenRealRank");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRankPanel = (() => {
      let ErRenRankPanel = class ErRenRankPanel extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_show_button = null;
          this.ptr_rank_node = null;
          this.ptr_left_node = null;
          this.ptr_close_button = null;
          this.ptr_close_bg = null;
          this.ptr_match_button = null;
          this.ptr_real_rank = null;
          this.sp_subView = null;
          this.start_pos_x = -260;
          this.start_pos_y = 0;
          this.end_pos_x = 170;
          this._match_data = null;
          this._subViewStart = cc.v2(0, 0);
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ptr_show_button, this.node, "ErRenRankPanel", "onShowButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_close_button, this.node, "ErRenRankPanel", "onCloseButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_close_bg, this.node, "ErRenRankPanel", "onBgButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_match_button, this.node, "ErRenRankPanel", "onShowRealRank");
          utils_1.utils.on("refreshRealRank", this, this.refreshRealRank);
          this.sp_subView.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
          this.sp_subView.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
          this.sp_subView.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
          this.ptr_left_node.getComponent(cc.Widget).isAlignLeft = true;
          cc.winSize.width > 1520 && (this.ptr_left_node.getComponent(cc.Widget).left += ErRenGameDefine_1.ErRenGameDefine.OFFSET_X);
          this.initPos();
          this.fitShareCanvas();
        }
        touchStart(event) {
          this._subViewStart = this.sp_subView.node.convertToNodeSpaceAR(event.touch.getLocation());
        }
        touchMove(event) {
          let movePos = this.sp_subView.node.convertToNodeSpaceAR(event.touch.getLocation());
          let differY = movePos.y - this._subViewStart.y;
          if (Math.abs(differY) >= 20) {
            wx.postMessage({
              event: "slide",
              move: `${differY}`
            });
            this._subViewStart = movePos;
          }
        }
        touchEnd(event) {
          let endPos = this.sp_subView.node.convertToNodeSpaceAR(event.touch.getLocation());
          let moveY = endPos.y - this._subViewStart.y;
          wx.postMessage({
            event: "slide",
            move: `${moveY}`
          });
        }
        onDestroy() {
          utils_1.utils.off("refreshRealRank", this, this.refreshRealRank);
        }
        fitShareCanvas() {}
        initPos() {
          this.start_pos_y = this.ptr_rank_node.getPosition().y;
          this.ptr_rank_node.setPosition(cc.v2(this.end_pos_x, this.start_pos_y));
        }
        initStartPos() {
          this.start_pos_y = this.ptr_rank_node.getPosition().y;
          this.ptr_rank_node.setPosition(cc.v2(this.start_pos_x, this.start_pos_y));
        }
        start() {
          this.node.active = true;
          this.ptr_rank_node.active = false;
        }
        getRank() {
          if (!global_data_1.global_data.is_online) return;
          console.log("getRank...");
          wx.postMessage({
            event: "getRank",
            openid: global_data_1.global_data.wechat_openId
          });
        }
        setScore(value) {
          if (!global_data_1.global_data.is_online) return;
          console.log(`setScore ${value}`);
          wx.postMessage({
            event: "setScore",
            score: value
          });
        }
        clear_data() {
          this.hide();
        }
        onBgButtonClicked() {
          this.hide();
        }
        onCloseButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.hide();
        }
        onShowButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          if (!global_data_1.global_data.is_online) return;
          this.getRank();
          this.show();
        }
        hide() {
          this.ptr_rank_node.stopAllActions();
          let that = this;
          let callback_1 = cc.moveTo(.2, cc.v2(this.start_pos_x, this.start_pos_y));
          let callback_2 = cc.delayTime(.2);
          let callback_3 = cc.callFunc(function() {
            that.ptr_rank_node.active = false;
            that.ptr_show_button.node.active = true;
          });
          this.ptr_rank_node.runAction(cc.sequence(callback_1, callback_2, callback_3));
        }
        show() {
          this.initStartPos();
          this.ptr_rank_node.active = true;
          this.ptr_show_button.node.active = false;
          this.ptr_rank_node.stopAllActions();
          this.ptr_rank_node.runAction(cc.moveTo(.2, cc.v2(this.end_pos_x, this.start_pos_y)));
        }
        showRealRank() {
          this.ptr_real_rank.node.active = true;
          this.ptr_real_rank.node.opacity = 0;
          this.ptr_real_rank.node.stopAllActions();
          this.ptr_real_rank.node.runAction(cc.fadeIn(.2));
        }
        hideRealRank() {
          this.ptr_real_rank.node.stopAllActions();
          let that = this;
          let callback_3 = cc.callFunc(function() {
            that.ptr_real_rank.node.active = false;
          });
          this.ptr_real_rank.node.runAction(cc.sequence(cc.fadeOut(.01), callback_3));
        }
        onShowRealRank() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let curDate = Math.floor(new Date().getTime() / 864e5);
          let matchDate = Math.floor(this._match_data.starttime / 86400);
          if (!this._match_data || !this._match_data.guid || matchDate - curDate == 1) {
            let objDate = new Date(this._match_data.rank_end / 1e4, this._match_data.rank_end / 100 % 100 - 1, this._match_data.rank_end % 100);
            if (!(objDate.getTime() - new Date().getTime() > 0)) {
              utils_1.utils.show_hint("\u6682\u65e0\u6392\u884c\u6570\u636e\uff01");
              return;
            }
            {
              let nDiffer = Math.floor((objDate.getTime() - new Date().getTime()) / 864e5) + 1;
              let guideIndex = this._match_data.last_guid - nDiffer;
              bind_function_1.bf.get_game_engine().fetch_Rank_data(guideIndex);
            }
          }
          this.ptr_real_rank.node.active ? this.hideRealRank() : this.showRealRank();
          bind_function_1.bf.get_game_engine().fetch_Rank_data(this._match_data.guid);
        }
        refreshRealRank(data) {
          this.ptr_real_rank.refresh(data);
        }
        setMatchData(data) {
          this.ptr_show_button.node.active = false;
          this.ptr_match_button.node.active = false;
          data && (this.ptr_match_button.node.active = true);
          this._match_data = data;
        }
      };
      __decorate([ property(cc.Button) ], ErRenRankPanel.prototype, "ptr_show_button", void 0);
      __decorate([ property(cc.Node) ], ErRenRankPanel.prototype, "ptr_rank_node", void 0);
      __decorate([ property(cc.Node) ], ErRenRankPanel.prototype, "ptr_left_node", void 0);
      __decorate([ property(cc.Button) ], ErRenRankPanel.prototype, "ptr_close_button", void 0);
      __decorate([ property(cc.Button) ], ErRenRankPanel.prototype, "ptr_close_bg", void 0);
      __decorate([ property(cc.Button) ], ErRenRankPanel.prototype, "ptr_match_button", void 0);
      __decorate([ property(ErRenRealRank_1.default) ], ErRenRankPanel.prototype, "ptr_real_rank", void 0);
      __decorate([ property(cc.Sprite) ], ErRenRankPanel.prototype, "sp_subView", void 0);
      ErRenRankPanel = __decorate([ ccclass ], ErRenRankPanel);
      return ErRenRankPanel;
    })();
    exports.default = ErRenRankPanel;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenRealRank": "ErRenRealRank",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenRankUpLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "54516h+/CRFrJBQWUyDqroP", "ErRenRankUpLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const ErRenGameData_1 = require("./ErRenGameData");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRankUpLayer = (() => {
      let ErRenRankUpLayer = class ErRenRankUpLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_ok_btn = null;
          this.ptr_share_btn = null;
          this.ptr_rankup_ani = null;
          this.ptr_rank_ratio_label = null;
          this.ptr_rank_1_nodes = [];
          this.ptr_rank_2_nodes = [];
          this.level = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ptr_ok_btn, this.node, "ErRenRankUpLayer", "onOkButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_share_btn, this.node, "ErRenRankUpLayer", "onShareButtonClicked");
        }
        init() {
          this.hide();
        }
        onOkButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.hide();
        }
        hide() {
          this.node.active = false;
          this.ptr_rank_ratio_label.node.active = false;
        }
        show() {
          this.node.active = true;
        }
        initRanNode() {
          this.ptr_rank_1_nodes.forEach(v => v.active = false);
          this.ptr_rank_2_nodes.forEach(v => v.active = false);
        }
        setData(level) {
          this.initRanNode();
          this.show();
          this.playRankUpAnimation(level);
        }
        playRankUpAnimation(level) {
          this.level = level;
          let str_ratio = this.getRatio(level);
          this.ptr_rank_ratio_label.node.active = "" != str_ratio;
          this.ptr_rank_ratio_label.string = "\u8d85\u8fc7<color=#FF0000>" + str_ratio + "</c>\u73a9\u5bb6";
          for (let i = 0; i < this.ptr_rank_1_nodes.length; i++) if (level == i) {
            this.ptr_rank_1_nodes[i].active = true;
            break;
          }
          for (let i = 0; i < this.ptr_rank_2_nodes.length; i++) if (level == i) {
            this.ptr_rank_2_nodes[i].active = true;
            break;
          }
          this.ptr_rankup_ani.play();
        }
        getRatio(level) {
          let str_ratio = "";
          level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank0 ? str_ratio = "" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank1 ? str_ratio = (23.77 + 10 * Math.random()).toFixed(2) + "%" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank2 ? str_ratio = (51.92 + 10 * Math.random()).toFixed(2) + "%" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank3 ? str_ratio = (76.28 + 8 * Math.random()).toFixed(2) + "%" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank4 ? str_ratio = (91.21 + 5 * Math.random()).toFixed(2) + "%" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank5 ? str_ratio = "98.03%" : level == ErRenGameDefine_1.ErRenGameDefine.PlayerRank.rank6 && (str_ratio = "99.99%");
          return str_ratio;
        }
        onShareButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let share_text_1 = "\u5339\u914d\u573a[" + ErRenGameData_1.get_game_data().rank_list_name_big[this.level] + "]\u6bb5\u4f4d\uff0c\u51ed\u5b9e\u529b\u4e0a\u5206!";
          let share_text_2 = "\u9707\u60ca\u9ebb\u575b\uff0c\u5b9e\u529b\u8d85\u51e1!";
          let share_text = [ share_text_1, share_text_2 ];
          let _share_text = share_text[Math.floor(2 * Math.random())];
          platform_1.platform.inst.toTempFilePath(path => {
            platform_1.platform.inst.share({
              title: _share_text,
              imageUrl: path,
              success: () => {
                console.log("\u7b49\u7ea7\u63d0\u5347 \u4e8c\u4eba\u9ebb\u5c06\u622a\u56fe\u5206\u4eab\u6210\u529f");
              },
              fail: () => {
                utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25...");
                console.log("\u7b49\u7ea7\u63d0\u5347 \u4e8c\u4eba\u9ebb\u5c06\u622a\u56fe\u5206\u4eab\u5931\u8d25");
              }
            });
          });
        }
        start() {}
      };
      __decorate([ property(cc.Button) ], ErRenRankUpLayer.prototype, "ptr_ok_btn", void 0);
      __decorate([ property(cc.Button) ], ErRenRankUpLayer.prototype, "ptr_share_btn", void 0);
      __decorate([ property(cc.Animation) ], ErRenRankUpLayer.prototype, "ptr_rankup_ani", void 0);
      __decorate([ property(cc.RichText) ], ErRenRankUpLayer.prototype, "ptr_rank_ratio_label", void 0);
      __decorate([ property(cc.Node) ], ErRenRankUpLayer.prototype, "ptr_rank_1_nodes", void 0);
      __decorate([ property(cc.Node) ], ErRenRankUpLayer.prototype, "ptr_rank_2_nodes", void 0);
      ErRenRankUpLayer = __decorate([ ccclass ], ErRenRankUpLayer);
      return ErRenRankUpLayer;
    })();
    exports.default = ErRenRankUpLayer;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/platform/platform": "platform",
    "./ErRenGameData": "ErRenGameData",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenRealRank: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "beb8eTN24RI7r8RxeCXZxRM", "ErRenRealRank");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const ErRenRankItem_1 = require("./ErRenRankItem");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRealRank = (() => {
      let ErRenRealRank = class ErRenRealRank extends cc.Component {
        constructor() {
          super(...arguments);
          this.scroll_view = null;
          this.prefab_rankItem = null;
          this.label_noRank = null;
          this.selfRank = null;
          this.RankItemHeight = 80;
        }
        onLoad() {}
        onDestroy() {}
        refresh(param) {
          if (!param || 0 == param.length) return;
          this.scroll_view.content.removeAllChildren(true);
          let that = this;
          let bFindSelf = false;
          param.forEach(data => {
            if (data.userid == bind_function_1.bf.get_self_user_id()) {
              bFindSelf = true;
              this.selfRank.setData(-1, data);
            }
            let rankItem = cc.instantiate(that.prefab_rankItem).getComponent(ErRenRankItem_1.default);
            rankItem.node.y = -(that.scroll_view.content.childrenCount + 1) * that.RankItemHeight;
            rankItem.setData(that.scroll_view.content.childrenCount, data);
            (that.scroll_view.content.childrenCount + 1) * this.RankItemHeight > this.scroll_view.content.height && this.scroll_view.content.setContentSize(this.scroll_view.content.width, (that.scroll_view.content.childrenCount + 1) * this.RankItemHeight);
            that.scroll_view.content.addChild(rankItem.node);
          });
          this.scroll_view.scrollToTop();
          this.selfRank.node.active = false;
          this.label_noRank.node.active = false;
          bFindSelf ? this.selfRank.node.active = true : this.label_noRank.node.active = true;
        }
      };
      __decorate([ property(cc.ScrollView) ], ErRenRealRank.prototype, "scroll_view", void 0);
      __decorate([ property(cc.Prefab) ], ErRenRealRank.prototype, "prefab_rankItem", void 0);
      __decorate([ property(cc.Label) ], ErRenRealRank.prototype, "label_noRank", void 0);
      __decorate([ property(ErRenRankItem_1.default) ], ErRenRealRank.prototype, "selfRank", void 0);
      ErRenRealRank = __decorate([ ccclass ], ErRenRealRank);
      return ErRenRealRank;
    })();
    exports.default = ErRenRealRank;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function",
    "./ErRenRankItem": "ErRenRankItem"
  } ],
  ErRenRuleLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "24b94gmi3lIKrVbWPbM0hZ5", "ErRenRuleLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenRuleLayer = (() => {
      let ErRenRuleLayer = class ErRenRuleLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.toggle_jieshao = null;
          this.toggle_daunwei = null;
          this.scroll_jieshao = null;
          this.scroll_daunwei = null;
          this.back_button = null;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.toggle_jieshao, this.node, "ErRenRuleLayer", "onJieShaoClicked");
          utils_1.utils.bind_toggle_event(this.toggle_daunwei, this.node, "ErRenRuleLayer", "onDuanWeiClicked");
          utils_1.utils.bind_button_event(this.back_button, this.node, "ErRenRuleLayer", "onCloseClicked");
        }
        start() {}
        show() {
          this.node.active = true;
          this.scroll_jieshao.node.active = true;
          this.scroll_daunwei.node.active = false;
        }
        hide() {
          this.node.active = false;
        }
        onJieShaoClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.scroll_jieshao.node.active = true;
          this.scroll_daunwei.node.active = false;
        }
        onDuanWeiClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.scroll_jieshao.node.active = false;
          this.scroll_daunwei.node.active = true;
        }
        onCloseClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.hide();
        }
      };
      __decorate([ property(cc.Toggle) ], ErRenRuleLayer.prototype, "toggle_jieshao", void 0);
      __decorate([ property(cc.Toggle) ], ErRenRuleLayer.prototype, "toggle_daunwei", void 0);
      __decorate([ property(cc.ScrollView) ], ErRenRuleLayer.prototype, "scroll_jieshao", void 0);
      __decorate([ property(cc.ScrollView) ], ErRenRuleLayer.prototype, "scroll_daunwei", void 0);
      __decorate([ property(cc.Button) ], ErRenRuleLayer.prototype, "back_button", void 0);
      ErRenRuleLayer = __decorate([ ccclass ], ErRenRuleLayer);
      return ErRenRuleLayer;
    })();
    exports.default = ErRenRuleLayer;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenSoundManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "043d0Y88UREhKF4OYRmlCo0", "ErRenSoundManager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ErRenSoundManager = void 0;
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    var ErRenSoundManager;
    (function(ErRenSoundManager) {
      function playButtonEffect(param_path) {
        let str_path = "Game/152/sound/" + param_path;
        sound_manager_1.sound_manager.play_sound(str_path, false);
      }
      ErRenSoundManager.playButtonEffect = playButtonEffect;
      function start_game_effect(param_index) {
        let str_path = "Game/152/sound/game_start_" + param_index;
        sound_manager_1.sound_manager.play_sound(str_path, false);
      }
      ErRenSoundManager.start_game_effect = start_game_effect;
      function game_over_effect(hu_id) {
        let str_path = "";
        str_path = hu_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.self ? "Game/152/sound/over_win" : hu_id == ErRenGameDefine_1.ErRenGameDefine.ViewID.enemy ? "Game/152/sound/over_lost" : "Game/152/sound/over_liuju";
        sound_manager_1.sound_manager.play_sound(str_path, false);
      }
      ErRenSoundManager.game_over_effect = game_over_effect;
      function out_card_effect(sex, out_card) {
        let str_path_1 = "Game/152/sound/out_card";
        sound_manager_1.sound_manager.play_sound(str_path_1, false);
        let str_path_2 = "Game/152/sound/";
        sex == ErRenGameDefine_1.ErRenGameDefine.SEX_WOMAN ? str_path_2 += "woman/" : sex == ErRenGameDefine_1.ErRenGameDefine.SEX_MAN && (str_path_2 += "man/");
        let str_card = "card_" + out_card;
        str_path_2 += str_card;
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.out_card_effect = out_card_effect;
      function ting_card_effect(sex) {
        let str_path_2 = "Game/152/sound/";
        sex == ErRenGameDefine_1.ErRenGameDefine.SEX_WOMAN ? str_path_2 += "woman/" : sex == ErRenGameDefine_1.ErRenGameDefine.SEX_MAN && (str_path_2 += "man/");
        str_path_2 += "wait";
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.ting_card_effect = ting_card_effect;
      function user_handle_effect(sex, handle_type) {
        let str_path_2 = "Game/152/sound/";
        sex == ErRenGameDefine_1.ErRenGameDefine.SEX_WOMAN ? str_path_2 += "woman/" : sex == ErRenGameDefine_1.ErRenGameDefine.SEX_MAN && (str_path_2 += "man/");
        handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_left || handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_mid || handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_right ? str_path_2 += "chi" : handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.peng ? str_path_2 += "peng" : handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_1 && handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_2 && handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang || (str_path_2 += "gang");
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
        let str_path_1 = "Game/152/sound/";
        handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_left || handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_mid || handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.chi_right ? str_path_1 += "ex_chi" : handle_type == ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.peng ? str_path_1 += "ex_peng" : handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_1 && handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.gang_2 && handle_type != ErRenGameDefine_1.ErRenGameDefine.HandleTypeC.an_gang || (str_path_1 += "ex_gang");
        sound_manager_1.sound_manager.play_sound(str_path_1, false);
      }
      ErRenSoundManager.user_handle_effect = user_handle_effect;
      function double_effect(sex, double_count) {
        let str_path_2 = "Game/152/sound/";
        sex == ErRenGameDefine_1.ErRenGameDefine.SEX_WOMAN ? str_path_2 += "woman/" : sex == ErRenGameDefine_1.ErRenGameDefine.SEX_MAN && (str_path_2 += "man/");
        let str_double = "";
        str_double += double_count < 6 ? "double" + double_count : "double6";
        str_path_2 += str_double;
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.double_effect = double_effect;
      function hu_effect(sex) {
        let str_path_2 = "Game/152/sound/";
        sex == ErRenGameDefine_1.ErRenGameDefine.SEX_WOMAN ? str_path_2 += "woman/" : sex == ErRenGameDefine_1.ErRenGameDefine.SEX_MAN && (str_path_2 += "man/");
        str_path_2 += "hu";
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.hu_effect = hu_effect;
      function catch_effect(catch_num) {
        let str_path_2 = "Game/152/sound/catch_" + catch_num;
        str_path_2 += "_card";
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.catch_effect = catch_effect;
      function dice_effect() {
        let str_path_2 = "Game/152/sound/dice";
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.dice_effect = dice_effect;
      function playEffect(id) {
        let str_path_2 = "Game/152/sound/";
        if (-1 == id) {
          str_path_2 += "click";
          sound_manager_1.sound_manager.play_sound(str_path_2, false);
        }
        if (1 == id) {
          str_path_2 += "hit_card";
          sound_manager_1.sound_manager.play_sound(str_path_2, false);
        }
        if (2 == id) {
          str_path_2 += "get_hand_cards";
          sound_manager_1.sound_manager.play_sound(str_path_2, false);
        }
      }
      ErRenSoundManager.playEffect = playEffect;
      function left_effect() {
        let str_path_2 = "Game/152/sound/player_out";
        sound_manager_1.sound_manager.play_sound(str_path_2, false);
      }
      ErRenSoundManager.left_effect = left_effect;
    })(ErRenSoundManager = exports.ErRenSoundManager || (exports.ErRenSoundManager = {}));
    cc._RF.pop();
  }, {
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./ErRenGameDefine": "ErRenGameDefine"
  } ],
  ErRenTaskLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8026f4Fg0pLWKa5kfKjivEU", "ErRenTaskLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenTaskLayer = (() => {
      let ErRenTaskLayer = class ErRenTaskLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.taskNode = null;
          this.taskDone = null;
          this.taskDes = null;
          this.taskFold = null;
          this.task_wait = [];
        }
        onLoad() {}
        start() {}
        init() {
          this.taskNode.active = false;
          this.taskDone.active = false;
          this.task_wait = [];
        }
        set_task_visible(show) {
          this.taskNode.active = show;
        }
        set_task_description(task_type, task_x) {
          if (0 == task_type) {
            this.taskDes.string = "";
            return;
          }
          let description = "";
          task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.peng && ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] ? description = "\u78b0" + ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.gang && ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] ? description = "\u6760" + ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.baoting ? description = "\u62a5\u542c" : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.double && (description = "\u52a0\u500d" + task_x + "\u6b21");
          this.taskDes.string = description;
        }
        set_task_fold(task_type, task_x) {
          if (0 == task_type) {
            this.taskFold.string = "";
            return;
          }
          let fold = "x";
          task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.peng && ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] ? fold += "2" : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.gang && ErRenGameDefine_1.ErRenGameDefine.CardValue[task_x] ? fold += "2" : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.baoting ? fold += "2" : task_type == ErRenGameDefine_1.ErRenGameDefine.TaskType.double && task_x > 0 && task_x < 5 && (fold += "2");
          this.taskFold.string = fold;
        }
        set_task_content(task_value) {
          if (0 == task_value) {
            task_value = 3004;
            this.set_task_ok_visible(true);
            this.taskDone.opacity = 255;
          }
          let task_type = Math.floor(task_value / 100);
          let task_x = Math.floor(task_value % 100);
          this.set_task_description(task_type, task_x);
          this.set_task_fold(task_type, task_x);
        }
        set_task_ok_visible(visible) {
          this.taskDone.active = visible;
        }
        fade_in_task(task_value) {
          this.set_task_content(task_value);
          let that = this;
          this.taskNode.active = true;
          this.taskNode.opacity = 0;
          this.taskNode.runAction(cc.fadeIn(.2));
        }
        add_new_task(task_value) {
          this.task_wait.push(task_value);
          1 == this.task_wait.length && this.update_new_task(this.task_wait[0]);
        }
        update_new_task(task_value) {
          this.node.active = true;
          this.taskNode.active = true;
          if (0 == task_value) {
            this.set_task_ok_visible(true);
            this.taskDone.opacity = 255;
            return;
          }
          this.set_task_ok_visible(true);
          this.taskDone.opacity = 255;
          let that = this;
          let call_back_1 = function() {
            that.taskNode.runAction(cc.fadeOut(.2));
          };
          let call_back_2 = function() {
            that.set_task_content(Number(task_value));
            that.set_task_ok_visible(false);
          };
          let call_back_3 = function() {
            that.taskNode.runAction(cc.fadeIn(.2));
          };
          let call_back_4 = function() {};
          this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(call_back_1), cc.delayTime(1), cc.callFunc(call_back_2), cc.callFunc(call_back_3), cc.callFunc(call_back_4)));
          this.node.runAction(cc.sequence(cc.delayTime(2.5), cc.callFunc(function() {
            that.task_wait.shift();
            0 != that.task_wait.length && that.update_new_task(that.task_wait[0]);
          })));
        }
      };
      __decorate([ property(cc.Node) ], ErRenTaskLayer.prototype, "taskNode", void 0);
      __decorate([ property(cc.Node) ], ErRenTaskLayer.prototype, "taskDone", void 0);
      __decorate([ property(cc.Label) ], ErRenTaskLayer.prototype, "taskDes", void 0);
      __decorate([ property(cc.Label) ], ErRenTaskLayer.prototype, "taskFold", void 0);
      ErRenTaskLayer = __decorate([ ccclass ], ErRenTaskLayer);
      return ErRenTaskLayer;
    })();
    exports.default = ErRenTaskLayer;
    cc._RF.pop();
  }, {
    "./ErRenGameDefine": "ErRenGameDefine"
  } ],
  ErRenTingCard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2d5f2nWKOxCJaZ8XfOBDKvN", "ErRenTingCard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenTingCard = (() => {
      let ErRenTingCard = class ErRenTingCard extends cc.Component {
        constructor() {
          super(...arguments);
          this.LabelCount = null;
          this.LabelFan = null;
          this.NodeCardBg = null;
          this.CardTing = null;
        }
        start() {}
        set_card_node(cardNode) {
          this.CardTing = cardNode;
          this.NodeCardBg.addChild(this.CardTing.node);
          this.CardTing.node.setScale(1);
        }
        show_ting_card(cardValue, count, fan, corner_id) {
          this.CardTing.init();
          this.CardTing.showCard(cardValue, corner_id, false);
          this.LabelCount.string = count.toString();
          this.LabelFan.string = fan.toString() + "\u756a";
        }
      };
      __decorate([ property(cc.Label) ], ErRenTingCard.prototype, "LabelCount", void 0);
      __decorate([ property(cc.Label) ], ErRenTingCard.prototype, "LabelFan", void 0);
      __decorate([ property(cc.Node) ], ErRenTingCard.prototype, "NodeCardBg", void 0);
      ErRenTingCard = __decorate([ ccclass ], ErRenTingCard);
      return ErRenTingCard;
    })();
    exports.default = ErRenTingCard;
    cc._RF.pop();
  }, {} ],
  ErRenTingLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2da3f9RanhEc6gAEnzJSzD+", "ErRenTingLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const game_tools_1 = require("../../../Layout3D/Src/game_tools");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const utils_1 = require("../../Framework/common/utils");
    const ErRenTingCard_1 = require("./ErRenTingCard");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenTingLayer = (() => {
      let ErRenTingLayer = class ErRenTingLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.tingCardPrefab = null;
          this.tingCardLayout = null;
          this.tingCardBg = null;
          this.bgButton = null;
          this.have_data = false;
          this._corner_config = {};
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.bgButton, this.node, "ErRenTingLayer", "onBgButtonClicked");
          this._corner_config = {};
        }
        start() {}
        init() {
          this._corner_config = {};
          this.node.active = false;
          this.tingCardLayout.removeAllChildren();
        }
        set_hu_card(hu_size, hu_cards, card_count, left_count) {
          this.disableChildren();
          for (let i = 0; i < hu_cards.length; i++) {
            let ting_card = null;
            ting_card = i < this.tingCardLayout.childrenCount ? this.tingCardLayout.children[i].getComponent(ErRenTingCard_1.default) : this.get_one_card();
            ting_card.show_ting_card(hu_cards[i], left_count[i], hu_size[i], this._corner_config[hu_cards[i]]);
            ting_card.node.active = true;
          }
          let width = 400;
          let height = this.tingCardBg.getContentSize().height;
          let old_width = this.tingCardBg.getContentSize().width;
          let new_width = 92 * card_count;
          new_width > old_width ? this.tingCardBg.setContentSize(new_width, height) : this.tingCardBg.setContentSize(old_width, height);
          this.have_data = true;
        }
        get_one_card() {
          let ting_card = cc.instantiate(this.tingCardPrefab).getComponent(ErRenTingCard_1.default);
          let card3D = cards_3d_layout_1.default.get().getNewHandCard(true).getComponent(CSelfHandCard3D_1.default);
          ting_card.set_card_node(card3D);
          ting_card.node.active = true;
          this.tingCardLayout.addChild(ting_card.node);
          return ting_card;
        }
        hide_ting_layer() {
          this.node.active = false;
        }
        show_layer(isShow) {
          this.have_data && isShow ? this.node.active = true : this.node.active = false;
        }
        is_show() {
          return this.node.active;
        }
        onBgButtonClicked() {
          this.show_layer(false);
        }
        disableChildren() {
          this.tingCardLayout.children.forEach(v => v.active = false);
        }
        setCornerCardValue(config) {
          game_tools_1.default.log("setCornerCardValue", config);
          let list_cpy = game_tools_1.default.clone(config);
          this._corner_config = list_cpy;
        }
      };
      __decorate([ property(cc.Prefab) ], ErRenTingLayer.prototype, "tingCardPrefab", void 0);
      __decorate([ property(cc.Node) ], ErRenTingLayer.prototype, "tingCardLayout", void 0);
      __decorate([ property(cc.Node) ], ErRenTingLayer.prototype, "tingCardBg", void 0);
      __decorate([ property(cc.Button) ], ErRenTingLayer.prototype, "bgButton", void 0);
      ErRenTingLayer = __decorate([ ccclass ], ErRenTingLayer);
      return ErRenTingLayer;
    })();
    exports.default = ErRenTingLayer;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/game_tools": "game_tools",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../Framework/common/utils": "utils",
    "./ErRenTingCard": "ErRenTingCard"
  } ],
  ErRenTrustLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6f2dbyFnVlHgaR4SmNu6rLx", "ErRenTrustLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenTrustLayer = (() => {
      let ErRenTrustLayer = class ErRenTrustLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.no_trust_btn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.no_trust_btn, this.node, "ErRenTrustLayer", "onNoTrustButtonClicked");
        }
        start() {}
        onNoTrustButtonClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(ErRenGameDefine_1.ErRenGameDefine.MessageToServer.no_trust, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        init() {
          this.hide();
        }
        hide() {
          this.node.active = false;
        }
      };
      __decorate([ property(cc.Button) ], ErRenTrustLayer.prototype, "no_trust_btn", void 0);
      ErRenTrustLayer = __decorate([ ccclass ], ErRenTrustLayer);
      return ErRenTrustLayer;
    })();
    exports.default = ErRenTrustLayer;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ErRenUIHelper: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6b6720ZEmFF6ZVzS7JVG3Gn", "ErRenUIHelper");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenUIHelper = (() => {
      let ErRenUIHelper = class ErRenUIHelper extends cc.Component {
        constructor() {
          super(...arguments);
          this.m_game_layer = null;
        }
        onLoad() {}
        start() {}
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        start_game_ani() {
          let banker_id = ErRenGameDefine_1.ErRenGameDefine.BANKER_ID;
          for (let i = 0; i < ErRenGameDefine_1.ErRenGameDefine.GAME_PLAYER; i++) {
            this.m_game_layer.ptr_user_heads[i].hide_ready_timer();
            this.m_game_layer.ptr_user_heads[i].set_ready_sign_visible(false);
          }
          let that = this;
          this.node.runAction(cc.sequence(cc.delayTime(.4), cc.callFunc(function() {
            that.m_game_layer.play_dice_animate();
            that.m_game_layer.ptr_user_heads[banker_id].set_banker_sign_visible(true);
          })));
        }
        show_btn_power(visible) {
          let bool_show = (visible & ErRenGameDefine_1.ErRenGameDefine.ButtonPower.change) > 0;
          this.m_game_layer.ptr_btn_change.node.active = bool_show;
          this.m_game_layer.ptr_btn_change.interactable = bool_show;
          bool_show = (visible & ErRenGameDefine_1.ErRenGameDefine.ButtonPower.ready) > 0;
          this.m_game_layer.ptr_btn_ready.node.active = bool_show;
          this.m_game_layer.ptr_btn_ready.interactable = bool_show;
          bool_show = (visible & ErRenGameDefine_1.ErRenGameDefine.ButtonPower.tingpai) > 0;
          if (bool_show) {
            let list_handle = [];
            list_handle.push({
              type: cards_3d_config_1.HandleType.ting,
              value: 0
            });
            cards_3d_layout_1.default.get().showHandleSelect(list_handle);
          }
          bool_show = (visible & ErRenGameDefine_1.ErRenGameDefine.ButtonPower.quxiao) > 0;
          if (bool_show) {
            let list_handle = [];
            list_handle.push({
              type: cards_3d_config_1.HandleType.pass,
              value: 0
            });
            cards_3d_layout_1.default.get().showHandleSelect(list_handle);
          }
          bool_show = (visible & ErRenGameDefine_1.ErRenGameDefine.ButtonPower.auto_ready) > 0;
          ErRenGameDefine_1.ErRenGameDefine.FLAG_AUTO_READY = bool_show;
          ErRenGameDefine_1.ErRenGameDefine.FLAG_AUTO_READY && (this.m_game_layer.is_line_up() || this.m_game_layer.on_btn_ready());
          0 == visible && cards_3d_layout_1.default.get().hideHandleSelect();
          this.m_game_layer.is_line_up() && this.m_game_layer.show_ready_change_btn(false, false);
        }
        setReady() {
          this.m_game_layer.ptr_user_heads[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].hide_ready_timer();
          this.m_game_layer.ptr_user_heads[ErRenGameDefine_1.ErRenGameDefine.ViewID.self].set_ready_sign_visible(true);
          this.m_game_layer.base_gold_label.node.active = false;
          this.m_game_layer.base_gold_label.string = "";
          if (this.m_game_layer.is_line_up()) this.m_game_layer.show_ready_change_btn(false, false); else {
            this.m_game_layer.ptr_btn_ready.node.active = false;
            this.m_game_layer.ptr_btn_have_ready.node.active = true;
          }
          ErRenGameDefine_1.ErRenGameDefine.FLAG_GAME_OVER = false;
        }
      };
      ErRenUIHelper = __decorate([ ccclass ], ErRenUIHelper);
      return ErRenUIHelper;
    })();
    exports.default = ErRenUIHelper;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "./ErRenGameDefine": "ErRenGameDefine"
  } ],
  ErRenUserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "62141E1po5Pq63ZQi/O7XXO", "ErRenUserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const ErRenGameDefine_1 = require("./ErRenGameDefine");
    const ErRenGlobalUI_1 = require("./ErRenGlobalUI");
    const ErRenGameData_1 = require("./ErRenGameData");
    const ErRenSoundManager_1 = require("./ErRenSoundManager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ErRenUserHead = (() => {
      let ErRenUserHead = class ErRenUserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_head_btn = null;
          this.ptr_ting_btn = null;
          this.ptr_img_face = null;
          this.ptr_img_circle = null;
          this.ptr_img_banker = null;
          this.girlSprite = null;
          this.boySprite = null;
          this.unknownSprite = null;
          this.ptr_label_score_bg = null;
          this.ptr_level_sprite = null;
          this.ptr_label_score = null;
          this.ptr_label_nickname = null;
          this.ptr_label_zhunbei = null;
          this.ptr_label_jiebei = null;
          this.ptr_user_change_seat_face = null;
          this.ptr_img_robot = null;
          this.ptr_timer_ready_node = null;
          this.ptr_timer_ready_lable = null;
          this.ptr_view_id = 2;
          this.width = 0;
          this.height = 0;
          this.userId = 0;
          this.faceId = 0;
          this.sexId = 0;
          this.m_nickname = "";
          this.m_socre = 0;
          this.m_left_status = false;
          this.m_user_head_status = 0;
          this.m_game_layer = null;
          this.m_timer_read_func = null;
          this.m_all_time = 0;
          this.m_left_time = 0;
          this.clickToShowUserInfo = true;
        }
        onLoad() {
          this.node.active = false;
          this.clear_data();
          this.bind_btn(this.ptr_head_btn, "onHeadClicked");
          this.bind_btn(this.ptr_ting_btn, "onTingClicked");
        }
        start() {}
        show_change_seat() {
          this.ptr_img_face.spriteFrame = this.ptr_user_change_seat_face;
          this.ptr_img_circle.node.active = false;
        }
        hide_banker() {
          this.ptr_img_banker.node.active = false;
        }
        init_banker_sign() {
          this.hide_banker();
        }
        set_banker_sign_visible(show) {
          this.ptr_img_banker.node.active = show;
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "ErRenUserHead";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        onHeadClicked(event, customEventData) {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          ErRenGlobalUI_1.default.getInstance().showGameUserInfo(false, this.userId, null, null, null, this.ptr_view_id);
        }
        onTingClicked() {
          ErRenSoundManager_1.ErRenSoundManager.playEffect(-1);
          this.m_game_layer.ptr_ting_layer.show_layer(true);
        }
        set_ting_sign_visible(show) {
          this.ptr_ting_btn.node.active = show;
        }
        set_user_data(user_data, view_id) {
          this.userId = user_data.dwUserID;
          this.faceId = user_data.wFaceID;
          this.sexId = user_data.cbGender;
          this.ptr_view_id = view_id;
          this.m_nickname = user_data.szName;
          this.m_socre = user_data.lScore;
          this.ptr_img_circle.node.active = true;
          0 == this.sexId ? this.ptr_img_face.spriteFrame = this.girlSprite : 1 == this.sexId ? this.ptr_img_face.spriteFrame = this.boySprite : this.ptr_img_face.spriteFrame = this.unknownSprite;
          0 != this.faceId && bind_function_1.bf.fetch_user_head_image(this.userId, this.faceId, this.ptr_img_face);
        }
        set_head_name(nickname) {
          this.ptr_label_score_bg.node.active = false;
          this.ptr_label_nickname.node.active = true;
          this.ptr_label_nickname.node.color = new cc.Color().fromHEX("#FFFFFF");
          this.ptr_label_nickname.string = bind_function_1.bf.clamp_nickname(nickname, 4);
        }
        show_head_name() {
          this.ptr_label_score_bg.node.active = false;
          this.ptr_label_nickname.node.active = true;
        }
        set_head_gold(lScore) {
          this.m_socre = lScore;
          this.ptr_label_nickname.node.active = false;
          this.ptr_label_score_bg.node.active = true;
          this.ptr_label_score.node.active = true;
          this.ptr_label_score.node.color = new cc.Color().fromHEX("#FFFF00");
          this.ptr_label_score.string = lScore.toString();
          let index = ErRenGameData_1.get_game_data().get_user_level_index_by_score(lScore);
          this.ptr_level_sprite.spriteFrame = this.m_game_layer.ptr_frames_level[index];
        }
        hide_nick_name() {
          this.ptr_label_score_bg.node.active = false;
          this.ptr_label_nickname.node.active = false;
        }
        show_head() {
          this.node.active = true;
        }
        hide_head() {
          this.clear_data();
          this.node.active = false;
        }
        hide_ready_timer() {
          this.ptr_timer_ready_node.active = false;
          return;
        }
        init_ready_timer() {
          this.hide_ready_timer();
        }
        set_ready_timer(left_time) {
          this.hide_ready_timer();
          return;
        }
        init_trust_robot() {
          this.ptr_img_robot.node.active = false;
        }
        set_trust_robot_visible(show) {
          this.ptr_img_robot.node.active = show;
        }
        clear_data() {
          this.hide_banker();
          this.init_trust_robot();
          this.hide_ready_timer();
          this.clear_jiabei();
          this.set_trust_robot_visible(false);
          this.set_ready_sign_visible(false);
          this.ptr_ting_btn.node.active = false;
        }
        jiabei(double_count) {
          this.ptr_label_jiebei.node.active = true;
          this.ptr_label_jiebei.string = "\u52a0\u500dx" + double_count;
        }
        clear_jiabei() {
          this.ptr_label_jiebei.node.active = false;
        }
        set_ready_sign_visible(show) {
          this.ptr_label_zhunbei.active = show;
          if (show) {
            let ani_node_1 = this.ptr_label_zhunbei.children[0];
            ani_node_1.active = true;
            ani_node_1.children[0].active = true;
            ani_node_1.children[0].getComponent(cc.Animation).play();
            let ani_node_2 = this.ptr_label_zhunbei.children[1];
            ani_node_2.active = true;
            ani_node_2.children[0].active = true;
            ani_node_2.children[0].getComponent(cc.Animation).play();
          }
        }
        onDestroy() {
          this.m_timer_read_func && this.unschedule(this.m_timer_read_func);
        }
      };
      __decorate([ property(cc.Button) ], ErRenUserHead.prototype, "ptr_head_btn", void 0);
      __decorate([ property(cc.Button) ], ErRenUserHead.prototype, "ptr_ting_btn", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_img_face", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_img_circle", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_img_banker", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenUserHead.prototype, "girlSprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenUserHead.prototype, "boySprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenUserHead.prototype, "unknownSprite", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_label_score_bg", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_level_sprite", void 0);
      __decorate([ property(cc.Label) ], ErRenUserHead.prototype, "ptr_label_score", void 0);
      __decorate([ property(cc.Label) ], ErRenUserHead.prototype, "ptr_label_nickname", void 0);
      __decorate([ property(cc.Node) ], ErRenUserHead.prototype, "ptr_label_zhunbei", void 0);
      __decorate([ property(cc.Label) ], ErRenUserHead.prototype, "ptr_label_jiebei", void 0);
      __decorate([ property(cc.SpriteFrame) ], ErRenUserHead.prototype, "ptr_user_change_seat_face", void 0);
      __decorate([ property(cc.Sprite) ], ErRenUserHead.prototype, "ptr_img_robot", void 0);
      __decorate([ property(cc.Node) ], ErRenUserHead.prototype, "ptr_timer_ready_node", void 0);
      __decorate([ property(cc.Label) ], ErRenUserHead.prototype, "ptr_timer_ready_lable", void 0);
      __decorate([ property ], ErRenUserHead.prototype, "ptr_view_id", void 0);
      ErRenUserHead = __decorate([ ccclass ], ErRenUserHead);
      return ErRenUserHead;
    })();
    exports.default = ErRenUserHead;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function",
    "./ErRenGameData": "ErRenGameData",
    "./ErRenGameDefine": "ErRenGameDefine",
    "./ErRenGlobalUI": "ErRenGlobalUI",
    "./ErRenSoundManager": "ErRenSoundManager"
  } ],
  ExchangeItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "da11d5r8wlO0J+ZkkSHbi10", "ExchangeItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ExchangeItem = (() => {
      let ExchangeItem = class ExchangeItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.titleText = null;
          this.image = null;
          this.buttonText = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "ExchangeItem", "onClick");
        }
        setData(data) {
          this.data = data;
          this.titleText.string = data.name;
          this.buttonText.string = data.need_prop_name;
          utils_1.utils.load_web_spriteframe_by_id(this.image, data.logo_id);
        }
        onClick() {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "exchangeItemClicked", this.data);
        }
      };
      __decorate([ property(cc.Label) ], ExchangeItem.prototype, "titleText", void 0);
      __decorate([ property(cc.Sprite) ], ExchangeItem.prototype, "image", void 0);
      __decorate([ property(cc.Label) ], ExchangeItem.prototype, "buttonText", void 0);
      ExchangeItem = __decorate([ ccclass ], ExchangeItem);
      return ExchangeItem;
    })();
    exports.default = ExchangeItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ExchangePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4f0481cOzFFHpfktuggdUS/", "ExchangePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const ExchangeQuan_1 = require("./ExchangeQuan");
    const RedPackageExchange_1 = require("./RedPackageExchange");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var ExchangeTabIndex;
    (function(ExchangeTabIndex) {
      ExchangeTabIndex[ExchangeTabIndex["ExchangeQuan"] = 0] = "ExchangeQuan";
      ExchangeTabIndex[ExchangeTabIndex["ExchangeRed"] = 1] = "ExchangeRed";
      ExchangeTabIndex[ExchangeTabIndex["ExchangeRedWithRoundEdge"] = 2] = "ExchangeRedWithRoundEdge";
      ExchangeTabIndex[ExchangeTabIndex["Record"] = 3] = "Record";
    })(ExchangeTabIndex || (ExchangeTabIndex = {}));
    let ExchangePanel = (() => {
      let ExchangePanel = class ExchangePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.exchangeQuanPanel = null;
          this.exchangePanel = null;
          this.recordPanel = null;
          this.tabNodeList = [];
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "ExchangePanel", "onCloseClicked");
        }
        onHide() {
          this.exchangeQuanPanel.getComponent(ExchangeQuan_1.default).hasData = false;
          this.exchangePanel.getComponent(RedPackageExchange_1.default).hasData = false;
        }
        start() {
          if (global_data_1.global_data.have_module_redpacket()) {
            let hideQuan = false;
            if (hideQuan) {
              this.tabNodeList[ExchangeTabIndex.ExchangeQuan].active = false;
              this.tabNodeList[ExchangeTabIndex.ExchangeRed].active = false;
              this.tabNodeList[ExchangeTabIndex.ExchangeRedWithRoundEdge].active = true;
              this.switchToExchange();
            } else {
              this.tabNodeList[ExchangeTabIndex.ExchangeQuan].active = true;
              this.tabNodeList[ExchangeTabIndex.ExchangeRed].active = true;
              this.tabNodeList[ExchangeTabIndex.ExchangeRedWithRoundEdge].active = false;
              this.switchToExchangeQuan();
            }
          } else {
            this.tabNodeList[ExchangeTabIndex.ExchangeQuan].active = true;
            this.tabNodeList[ExchangeTabIndex.ExchangeRed].active = false;
            this.tabNodeList[ExchangeTabIndex.ExchangeRedWithRoundEdge].active = false;
            this.switchToExchangeQuan();
          }
        }
        onCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        switchToExchange() {
          sound_manager_1.sound_manager.play_click();
          this.exchangeQuanPanel.active = false;
          this.recordPanel.active = false;
          this.exchangePanel.active = true;
        }
        switchToRecord() {
          sound_manager_1.sound_manager.play_click();
          this.exchangeQuanPanel.active = false;
          this.exchangePanel.active = false;
          this.recordPanel.active = true;
        }
        switchToExchangeQuan() {
          sound_manager_1.sound_manager.play_click();
          this.exchangeQuanPanel.active = true;
          this.recordPanel.active = false;
          this.exchangePanel.active = false;
        }
      };
      __decorate([ property(cc.Button) ], ExchangePanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], ExchangePanel.prototype, "exchangeQuanPanel", void 0);
      __decorate([ property(cc.Node) ], ExchangePanel.prototype, "exchangePanel", void 0);
      __decorate([ property(cc.Node) ], ExchangePanel.prototype, "recordPanel", void 0);
      __decorate([ property([ cc.Node ]) ], ExchangePanel.prototype, "tabNodeList", void 0);
      ExchangePanel = __decorate([ ccclass ], ExchangePanel);
      return ExchangePanel;
    })();
    exports.default = ExchangePanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./ExchangeQuan": "ExchangeQuan",
    "./PopWindow": "PopWindow",
    "./RedPackageExchange": "RedPackageExchange"
  } ],
  ExchangeQuan: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5dae5BeZaVCyJSawVIWqHsj", "ExchangeQuan");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ExchangeQuanData = void 0;
    const AppGlobal_1 = require("../AppGlobal");
    const ExchangeItem_1 = require("./ExchangeItem");
    const ItemDetail_1 = require("./ItemDetail");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class ExchangeQuanData {
      constructor(id, name, logo_id, count, need_prop_id, need_prop_count, need_prop_name) {
        this.id = id;
        this.name = name;
        this.logo_id = logo_id;
        this.count = count;
        this.need_prop_id = need_prop_id;
        this.need_prop_count = need_prop_count;
        this.need_prop_name = need_prop_name;
      }
    }
    exports.ExchangeQuanData = ExchangeQuanData;
    let ExchangeQuan = (() => {
      let ExchangeQuan = class ExchangeQuan extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelQuantity = null;
          this.exchangeItemPrefab = null;
          this.exchangeItemRoot = null;
          this.completeInfoBtn = null;
          this.hasData = false;
        }
        onLoad() {
          this.safe_on("exchangeItemClicked", this.onExchangeItemClicked, this);
          utils_1.utils.bind_button_event(this.completeInfoBtn, this.node, "ExchangeQuan", "onCompleteInfoBtn");
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.updateData);
          utils_1.utils.on("ExchangeResultSuccess", this, this.onEventExchangeResultSuccess);
          this.fetchData();
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.updateData);
          utils_1.utils.off("ExchangeResultSuccess", this, this.onEventExchangeResultSuccess);
        }
        fetchData() {
          this.requestData();
          this.updateData();
        }
        updateData() {
          let n = global_data_1.global_data.get_prop_count_by_id(global_define_1.CONST.ID_PROP_LOTTER);
          this.labelQuantity.string = utils_1.utils.format_gold_string(n);
        }
        onEventExchangeResultSuccess(exchange_id, left_num) {
          this.updateExchangeData(exchange_id, left_num);
        }
        addExchangeData(data) {
          let d = new ExchangeQuanData(data.id, data.fund_name, data.logo, data.left_num, data.need_fund_id, data.need_fund_num, data.need_fund_name);
          let btn = utils_1.utils.add_instance_to_root(this.exchangeItemPrefab, this.exchangeItemRoot, ExchangeItem_1.default);
          btn.setData(d);
        }
        updateExchangeData(id, count) {
          let data = null;
          for (let i = 0; i < this.data.length; ++i) if (this.data[i].id == id) {
            this.data[i].count = count;
            data = this.data[i];
            break;
          }
          if (null != data) for (let i = 0; i < this.exchangeItemRoot.childrenCount; ++i) {
            let child = this.exchangeItemRoot.children[i].getComponent(ExchangeItem_1.default);
            if (cc.isValid(child)) {
              child.setData(data);
              break;
            }
          }
        }
        onExchangeItemClicked(event) {
          let data = event.getUserData();
          AppGlobal_1.AppGlobal.getInstance().showItemDetail(data.logo_id, ItemDetail_1.ItemDetailType.Exchange, data);
        }
        requestData() {
          if (this.hasData) return;
          utils_1.utils.show_loading("", true);
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_EXCHANGE_LIST);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data) {
              if (cc.isValid(that)) {
                that.showData(data);
                that.hasData = true;
              }
            },
            complete: function() {
              utils_1.utils.hide_loading();
            },
            fail: function(message) {
              utils_1.utils.show_hint(message);
            }
          });
        }
        showData(data) {
          console.log("exchangeQuanData", data);
          this.exchangeItemRoot.removeAllChildren();
          this.data = [];
          for (let i = 0; i < data.length; ++i) this.addExchangeData(data[i]);
        }
        onCompleteInfoBtn() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showCompleteInfo();
        }
      };
      __decorate([ property(cc.Label) ], ExchangeQuan.prototype, "labelQuantity", void 0);
      __decorate([ property(cc.Prefab) ], ExchangeQuan.prototype, "exchangeItemPrefab", void 0);
      __decorate([ property(cc.Node) ], ExchangeQuan.prototype, "exchangeItemRoot", void 0);
      __decorate([ property(cc.Button) ], ExchangeQuan.prototype, "completeInfoBtn", void 0);
      ExchangeQuan = __decorate([ ccclass ], ExchangeQuan);
      return ExchangeQuan;
    })();
    exports.default = ExchangeQuan;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./ExchangeItem": "ExchangeItem",
    "./ItemDetail": "ItemDetail"
  } ],
  ExchangeSuccess: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d3810cf8AlMfLGBT9I5r4Us", "ExchangeSuccess");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ExchangeSuccessData = void 0;
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class ExchangeSuccessData {
      constructor(is_red_package, quan, content, hint, code) {
        this.is_red_package = is_red_package;
        this.quan = quan;
        this.content = content;
        this.hint = hint;
        this.code = code;
      }
    }
    exports.ExchangeSuccessData = ExchangeSuccessData;
    let ExchangeSuccess = (() => {
      let ExchangeSuccess = class ExchangeSuccess extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.redpackageNode = null;
          this.quanNode = null;
          this.labelQuan = null;
          this.shareBtn = null;
          this.labelContent = null;
          this.labelHint = null;
          this.copyBtn = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "ExchangeSuccess", "onCloseButtonClicked");
          utils_1.utils.bind_button_event(this.shareBtn, this.node, "ExchangeSuccess", "onShareButtonClicked");
          utils_1.utils.bind_button_event(this.copyBtn, this.node, "ExchangeSuccess", "onCopyCodeClicked");
        }
        onCloseButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onShareButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          this.share();
        }
        onCopyCodeClicked() {
          platform_1.platform.inst.setClipboardData({
            data: this.data.code
          });
        }
        setData(data) {
          this.data = data;
          if (data.is_red_package) {
            this.redpackageNode.active = true;
            this.quanNode.active = false;
            this.labelContent.string = data.content;
            this.labelHint.string = data.hint;
          } else {
            this.redpackageNode.active = false;
            this.quanNode.active = true;
            this.labelQuan.string = data.quan;
          }
        }
        share() {
          platform_1.platform.inst.share({
            title: global_data_1.global_data._str_relief_share_img_text,
            imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url),
            query: "fromShare=2&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
            fail: () => {
              utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
            }
          });
        }
      };
      __decorate([ property(cc.Button) ], ExchangeSuccess.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], ExchangeSuccess.prototype, "redpackageNode", void 0);
      __decorate([ property(cc.Node) ], ExchangeSuccess.prototype, "quanNode", void 0);
      __decorate([ property(cc.Label) ], ExchangeSuccess.prototype, "labelQuan", void 0);
      __decorate([ property(cc.Button) ], ExchangeSuccess.prototype, "shareBtn", void 0);
      __decorate([ property(cc.Label) ], ExchangeSuccess.prototype, "labelContent", void 0);
      __decorate([ property(cc.Label) ], ExchangeSuccess.prototype, "labelHint", void 0);
      __decorate([ property(cc.Button) ], ExchangeSuccess.prototype, "copyBtn", void 0);
      ExchangeSuccess = __decorate([ ccclass ], ExchangeSuccess);
      return ExchangeSuccess;
    })();
    exports.default = ExchangeSuccess;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  Extensions: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "405fcQQeRRI/qLjjdH1MI1y", "Extensions");
    cc.Component.prototype.safe_on = function(type, callback, target, useCapture) {
      if (cc.isValid(this.node)) return this.node.on(type, callback, target, useCapture);
      cc.error(`SAFE_ON_EXCEPTION in ${this._get_name()}`);
    };
    cc.Component.prototype._get_name = function() {
      return cc.js.getClassName(this);
    };
    cc._RF.pop();
  }, {} ],
  GameButtonPage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "50c7bWA5V1HzbzinC4g/lv3", "GameButtonPage");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const GameButton_1 = require("./GameButton");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GameButtonPage = (() => {
      let GameButtonPage = class GameButtonPage extends cc.Component {
        constructor() {
          super(...arguments);
          this.gameButtonPrefab = null;
          this.gameButtonRoot = null;
          this.gameList = [];
        }
        addButton(gameid) {
          if (this.gameList.length < 4) {
            let btn = utils_1.utils.add_instance_to_root(this.gameButtonPrefab, this.gameButtonRoot, GameButton_1.default);
            btn.setData(new GameButton_1.GameButtonData(gameid));
            this.gameList.push(gameid);
          }
        }
        getButtonCount() {
          return this.gameList ? this.gameList.length : 0;
        }
      };
      __decorate([ property(cc.Prefab) ], GameButtonPage.prototype, "gameButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], GameButtonPage.prototype, "gameButtonRoot", void 0);
      GameButtonPage = __decorate([ ccclass ], GameButtonPage);
      return GameButtonPage;
    })();
    exports.default = GameButtonPage;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "./GameButton": "GameButton"
  } ],
  GameButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "960dduTqrBDoqMgugjLzl++", "GameButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.GameButtonData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class GameButtonData {
      constructor(gameid) {
        this.gameid = gameid;
      }
    }
    exports.GameButtonData = GameButtonData;
    let GameButton = (() => {
      let GameButton = class GameButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.bg = null;
          this.button = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "GameButton", "onClicked");
        }
        start() {}
        onClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("gameButtonClicked", true));
        }
        setData(data) {
          this.data = data;
          this.bg.spriteFrame = null;
          let that = this;
          cc.resources.load("GameButton/" + data.gameid, function(err, prefab) {
            if (err) {
              console.warn(err);
              return;
            }
            utils_1.utils.add_instance_to_root(prefab, that.node);
          });
        }
      };
      __decorate([ property(cc.Sprite) ], GameButton.prototype, "bg", void 0);
      __decorate([ property(cc.Button) ], GameButton.prototype, "button", void 0);
      GameButton = __decorate([ ccclass ], GameButton);
      return GameButton;
    })();
    exports.default = GameButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  GameChatNew: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c9378fxRShLNZQD5YyGY1Qm", "GameChatNew");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GameChatNew = (() => {
      let GameChatNew = class GameChatNew extends cc.Component {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.buttonClose = null;
          this.toggleCommonChat = null;
          this.commonChatPanel = null;
          this.commonChatRoot = null;
          this.commonChatTextPrefab = null;
          this.commonChatLinePrefab = null;
          this.commonChatScrollView = null;
          this.m_win_size = 0;
          this.offset_x = 0;
          this.move_to_time = .2;
          this.start_pos = null;
          this.end_pos = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonClose, this.node, "GameChatNew", "onCloseClick");
          utils_1.utils.bind_button_event(this.toggleCommonChat, this.node, "GameChatNew", "onCommonChatClick");
          this.init();
        }
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("closeChat", true));
        }
        onCommonChatClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toCommonChat", true));
        }
        onChatRecordClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toChatRecord", true));
        }
        start() {
          this.safe_on("closeChat", this.closeChat, this);
          this.safe_on("toCommonChat", this.toCommonChat, this);
          this.safe_on("textClicked", this.textClicked, this);
        }
        init() {
          this.m_win_size = cc.winSize.width;
          this.m_win_size > 1520 ? this.offset_x += 260 : this.offset_x += 180;
          let end_pos_x = -this.m_win_size / 2 + this.offset_x;
          let end_pos_y = this.node.y;
          this.end_pos = cc.v2(end_pos_x, end_pos_y);
          let start_pos_x = -this.m_win_size / 2 + this.offset_x - 400;
          let start_pos_y = this.node.y;
          this.start_pos = cc.v2(start_pos_x, start_pos_y);
          this.node.setPosition(this.start_pos);
        }
        onEnable() {}
        onDestroy() {}
        onCloseGameChat() {}
        closeChat(event) {
          this.hide();
        }
        toCommonChat(event) {
          this.commonChatPanel.active = true;
          this.commonChatScrollView.scrollToTop();
        }
        toChatRecord(event) {
          this.commonChatPanel.active = false;
        }
        textClicked(event) {
          let text = event.getUserData();
          text.length > 0 && bind_function_1.bf.send_user_chat(text);
          this.hide();
        }
        setCommonChat(array_string) {
          this.commonChatRoot.removeAllChildren();
          for (let s of array_string) {
            let label = utils_1.utils.add_instance_to_root(this.commonChatTextPrefab, this.commonChatRoot, cc.Label);
            label.string = s;
            utils_1.utils.add_instance_to_root(this.commonChatLinePrefab, this.commonChatRoot);
          }
        }
        hide() {
          let that = this;
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.moveTo(this.move_to_time, this.start_pos), cc.callFunc(function() {
            that.node.active = false;
          })));
        }
        show() {
          this.node.active = true;
          this.node.stopAllActions();
          this.node.runAction(cc.moveTo(this.move_to_time, this.end_pos));
          this.commonChatScrollView.scrollToTop();
        }
      };
      __decorate([ property(cc.Node) ], GameChatNew.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], GameChatNew.prototype, "buttonClose", void 0);
      __decorate([ property(cc.Toggle) ], GameChatNew.prototype, "toggleCommonChat", void 0);
      __decorate([ property(cc.Node) ], GameChatNew.prototype, "commonChatPanel", void 0);
      __decorate([ property(cc.Node) ], GameChatNew.prototype, "commonChatRoot", void 0);
      __decorate([ property(cc.Prefab) ], GameChatNew.prototype, "commonChatTextPrefab", void 0);
      __decorate([ property(cc.Prefab) ], GameChatNew.prototype, "commonChatLinePrefab", void 0);
      __decorate([ property(cc.ScrollView) ], GameChatNew.prototype, "commonChatScrollView", void 0);
      GameChatNew = __decorate([ ccclass ], GameChatNew);
      return GameChatNew;
    })();
    exports.default = GameChatNew;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  GameChat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6945aFfK9hPlbetbyGe6JV8", "GameChat");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const ChatRecordNode_1 = require("./ChatRecordNode");
    const PopWindow_1 = require("./PopWindow");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GameChat = (() => {
      let GameChat = class GameChat extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.buttonClose = null;
          this.buttonSend = null;
          this.editBox = null;
          this.toggleCommonChat = null;
          this.toggleChatRecord = null;
          this.commonEmScrollView = null;
          this.commonChatPanel = null;
          this.commonChatRoot = null;
          this.commonChatTextPrefab = null;
          this.commonChatLinePrefab = null;
          this.commonChatScrollView = null;
          this.chatRecordPanel = null;
          this.chatRecordRoot = null;
          this.chatRecordTextPrefab = null;
          this.chatRecordScrollView = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonClose, this.node, "GameChat", "onCloseClick");
          utils_1.utils.bind_button_event(this.buttonSend, this.node, "GameChat", "onSendClick");
          utils_1.utils.bind_button_event(this.toggleCommonChat, this.node, "GameChat", "onCommonChatClick");
          utils_1.utils.bind_button_event(this.toggleChatRecord, this.node, "GameChat", "onChatRecordClick");
        }
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("closeChat", true));
        }
        onSendClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("sendClicked", true));
        }
        onCommonChatClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toCommonChat", true));
        }
        onChatRecordClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toChatRecord", true));
        }
        start() {
          this.safe_on("closeChat", this.closeChat, this);
          this.safe_on("toCommonChat", this.toCommonChat, this);
          this.safe_on("toChatRecord", this.toChatRecord, this);
          this.safe_on("emClicked", this.emClicked, this);
          this.safe_on("textClicked", this.textClicked, this);
          this.safe_on("sendClicked", this.sendClicked, this);
        }
        onDestroy() {}
        closeChat(event) {
          this.hide();
        }
        toCommonChat(event) {
          this.commonChatPanel.active = true;
          this.chatRecordPanel.active = false;
          this.commonChatScrollView.scrollToTop();
        }
        toChatRecord(event) {
          this.commonChatPanel.active = false;
          this.chatRecordPanel.active = true;
          this.autoScrollChatRecord();
        }
        emClicked(event) {
          let index = event.getUserData();
          let text = "";
          text = index < 10 ? "[EM]0" + index : "[EM]" + index;
          bind_function_1.bf.send_user_chat(text);
          this.hide();
        }
        textClicked(event) {
          let text = event.getUserData();
          text.length > 0 && bind_function_1.bf.send_user_chat(text);
          this.hide();
        }
        sendClicked(event) {
          this.editBox.string.length > 0 && bind_function_1.bf.send_user_chat(this.editBox.string);
          this.hide();
        }
        setCommonChat(array_string) {
          this.commonChatRoot.removeAllChildren();
          for (let s of array_string) {
            let label = utils_1.utils.add_instance_to_root(this.commonChatTextPrefab, this.commonChatRoot, cc.Label);
            label.string = s;
            utils_1.utils.add_instance_to_root(this.commonChatLinePrefab, this.commonChatRoot);
          }
        }
        refreshChatRecord() {
          this.chatRecordRoot.removeAllChildren();
          let array_string = global_data_1.global_data.chat_records;
          for (let s of array_string) try {
            let node = utils_1.utils.add_instance_to_root(this.chatRecordTextPrefab, this.chatRecordRoot, ChatRecordNode_1.default);
            let arr = s.split(":");
            let username = arr[0];
            let text = arr[1];
            node.setText(username, text);
          } catch (e) {
            console.error("append record exception:", e);
          }
          this.autoScrollChatRecord();
        }
        appendChatRecord(s) {
          global_data_1.global_data.chat_records.length > 20 && global_data_1.global_data.chat_records.splice(0, 1);
          global_data_1.global_data.chat_records.push(s);
          if (this.rootNode.active) {
            let node = utils_1.utils.add_instance_to_root(this.chatRecordTextPrefab, this.chatRecordRoot, ChatRecordNode_1.default);
            let arr = s.split(":");
            let username = arr[0];
            let text = arr[1];
            node.setText(username, text);
            this.autoScrollChatRecord();
          }
        }
        autoScrollChatRecord() {
          this.chatRecordScrollView.scrollToBottom();
          this.chatRecordRoot.height > this.chatRecordScrollView.node.height ? this.chatRecordScrollView.scrollToBottom() : this.chatRecordScrollView.scrollToTop();
        }
        onShow() {
          this.commonChatScrollView.scrollToTop();
          this.refreshChatRecord();
          this.editBox.string = "";
          this.node.dispatchEvent(new cc.Event.EventCustom("toCommonChat", true));
          this.toggleCommonChat.isChecked = true;
          this.toggleChatRecord.isChecked = false;
        }
      };
      __decorate([ property(cc.Node) ], GameChat.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], GameChat.prototype, "buttonClose", void 0);
      __decorate([ property(cc.Button) ], GameChat.prototype, "buttonSend", void 0);
      __decorate([ property(cc.EditBox) ], GameChat.prototype, "editBox", void 0);
      __decorate([ property(cc.Toggle) ], GameChat.prototype, "toggleCommonChat", void 0);
      __decorate([ property(cc.Toggle) ], GameChat.prototype, "toggleChatRecord", void 0);
      __decorate([ property(cc.ScrollView) ], GameChat.prototype, "commonEmScrollView", void 0);
      __decorate([ property(cc.Node) ], GameChat.prototype, "commonChatPanel", void 0);
      __decorate([ property(cc.Node) ], GameChat.prototype, "commonChatRoot", void 0);
      __decorate([ property(cc.Prefab) ], GameChat.prototype, "commonChatTextPrefab", void 0);
      __decorate([ property(cc.Prefab) ], GameChat.prototype, "commonChatLinePrefab", void 0);
      __decorate([ property(cc.ScrollView) ], GameChat.prototype, "commonChatScrollView", void 0);
      __decorate([ property(cc.Node) ], GameChat.prototype, "chatRecordPanel", void 0);
      __decorate([ property(cc.Node) ], GameChat.prototype, "chatRecordRoot", void 0);
      __decorate([ property(cc.Prefab) ], GameChat.prototype, "chatRecordTextPrefab", void 0);
      __decorate([ property(cc.ScrollView) ], GameChat.prototype, "chatRecordScrollView", void 0);
      GameChat = __decorate([ ccclass ], GameChat);
      return GameChat;
    })();
    exports.default = GameChat;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./ChatRecordNode": "ChatRecordNode",
    "./PopWindow": "PopWindow"
  } ],
  GameLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2911fQp/cFP44chgNv61b4c", "GameLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const GameButtonPage_1 = require("./GameButtonPage");
    const NoticePage_1 = require("./NoticePage");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GameLayout = (() => {
      let GameLayout = class GameLayout extends cc.Component {
        constructor() {
          super(...arguments);
          this.gamePageView = null;
          this.gameButtonPagePrefab = null;
          this.gameButtonPageRoot = null;
          this.noticePageView = null;
          this.noticePagePrefab = null;
          this.noticePageRoot = null;
          this.leftArrow = null;
          this.rightArrow = null;
          this.currentGamePage = null;
        }
        onLoad() {
          var handler = new cc.Component.EventHandler();
          handler.target = this.node;
          handler.component = "GameLayout";
          handler.handler = "onPageEvent";
          this.gamePageView.pageEvents.push(handler);
          this.hideGameListArrow(this.leftArrow);
          this.hideGameListArrow(this.rightArrow);
        }
        start() {
          this.fetchData();
        }
        update() {
          if (1 == this.gamePageView.getPages().length) {
            this.hideGameListArrow(this.leftArrow);
            this.hideGameListArrow(this.rightArrow);
          } else {
            let padding = 5;
            let x = this.gamePageView.getScrollOffset().x;
            x > 0 - padding ? this.hideGameListArrow(this.leftArrow) : this.showGameListArrow(this.leftArrow);
            x < -(this.gamePageView.content.getContentSize().width - this.gamePageView.content.getComponent(cc.Layout).spacingX - this.gamePageView.node.children[0].width - padding) ? this.hideGameListArrow(this.rightArrow) : this.showGameListArrow(this.rightArrow);
          }
        }
        onEnable() {
          this.schedule(() => {
            let count = this.noticePageView.getPages().length;
            let index = this.noticePageView.getCurrentPageIndex();
            index = index < count && index + 1 !== count ? index + 1 : 0;
            this.noticePageView.scrollToPage(index, 2);
          }, 10);
        }
        onDisable() {
          this.unscheduleAllCallbacks();
        }
        onPageEvent(event) {
          this.refreshGamePageButtons();
        }
        showGameListArrow(arrow) {
          if (false == arrow.active) {
            arrow.active = true;
            arrow.stopAllActions();
            let t = .7;
            arrow.runAction(cc.sequence(cc.scaleTo(t, 1.2).easing(cc.easeQuadraticActionIn()), cc.scaleTo(t, 1).easing(cc.easeQuadraticActionOut())).repeatForever());
          }
        }
        hideGameListArrow(arrow) {
          arrow.active = false;
        }
        refreshGamePageButtons() {
          this.gamePageView.getComponentsInChildren(cc.Button).forEach(btn => {
            btn.interactable = false;
          });
          let page = this.gamePageView.getPages()[this.gamePageView.getCurrentPageIndex()];
          page && page.getComponentsInChildren(cc.Button).forEach(btn => {
            btn.interactable = true;
          });
        }
        AddGameButton(id) {
          if (global_data_1.global_data.game_scene_name.some(function(value) {
            return value.id == id;
          })) {
            if (null == this.currentGamePage || this.currentGamePage.getButtonCount() >= 4) {
              this.currentGamePage = cc.instantiate(this.gameButtonPagePrefab).getComponent(GameButtonPage_1.default);
              this.gamePageView.addPage(this.currentGamePage.node);
            }
            this.currentGamePage.addButton(id);
          }
        }
        AddNoticePage(data) {
          if (null != data) {
            let page = cc.instantiate(this.noticePagePrefab).getComponent(NoticePage_1.default);
            page.setData(data);
            this.noticePageView.addPage(page.node);
          }
        }
        fetchData() {
          this.gamePageView.removeAllPages();
          this.noticePageView.removeAllPages();
          let gamedata = global_data_1.global_data.game_json_data.wechatgame;
          console.log("json wechatgame: ", gamedata);
          console.log("config.json: ", global_data_1.global_data.game_scene_name);
          console.log("have_module_gamelist: ", global_data_1.global_data.have_module_gamelist());
          console.log("vector_game_data: ", global_data_1.global_data.vector_game_data);
          for (let i = 0; i < gamedata.length; ++i) {
            let id = gamedata[i].id;
            console.log(`${id} check_game_available: ${global_data_1.global_data.check_game_available(id)} check_game_valid: ${global_data_1.global_data.check_game_valid(id)}`);
            global_data_1.global_data.check_game_available(id) && this.AddGameButton(id);
          }
          this.refreshGamePageButtons();
          global_data_1.global_data.notices && global_data_1.global_data.notices.forEach(notice => {
            if (0 == notice.need_module || (global_data_1.global_data._uint_module_mask & notice.need_module) > 0) {
              let data = new NoticePage_1.NoticePageData();
              data.imgUrl = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WXGAME_RES) + "/notice/" + notice.imgUrl;
              data.index = notice.id;
              data.command = notice.text;
              data.param = notice.param;
              this.AddNoticePage(data);
            }
          }, this);
        }
      };
      __decorate([ property(cc.PageView) ], GameLayout.prototype, "gamePageView", void 0);
      __decorate([ property(cc.Prefab) ], GameLayout.prototype, "gameButtonPagePrefab", void 0);
      __decorate([ property(cc.Node) ], GameLayout.prototype, "gameButtonPageRoot", void 0);
      __decorate([ property(cc.PageView) ], GameLayout.prototype, "noticePageView", void 0);
      __decorate([ property(cc.Prefab) ], GameLayout.prototype, "noticePagePrefab", void 0);
      __decorate([ property(cc.Node) ], GameLayout.prototype, "noticePageRoot", void 0);
      __decorate([ property(cc.Node) ], GameLayout.prototype, "leftArrow", void 0);
      __decorate([ property(cc.Node) ], GameLayout.prototype, "rightArrow", void 0);
      GameLayout = __decorate([ ccclass ], GameLayout);
      return GameLayout;
    })();
    exports.default = GameLayout;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "./GameButtonPage": "GameButtonPage",
    "./NoticePage": "NoticePage"
  } ],
  GameUserInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a2f1aRYMvBOF4BY/YdK6y0H", "GameUserInfo");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const GiftButton_1 = require("./GiftButton");
    const UserHead_1 = require("./UserHead");
    const ItemDetail_1 = require("./ItemDetail");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GameUserInfo = (() => {
      let GameUserInfo = class GameUserInfo extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.btnClose = null;
          this.userHead = null;
          this.labelGold = null;
          this.labelNickname = null;
          this.labelScore = null;
          this.labelWinRate = null;
          this.labelRecord = null;
          this.btnKick = null;
          this.iconGender = null;
          this.toggleTen = null;
          this.giftItemRoot = null;
          this.giftItemPrefab = null;
          this.splitLineMyItems = null;
          this.splitLineCost = null;
          this.scrollView = null;
          this.leftArrow = null;
          this.rightArrow = null;
          this.hasItemNode = null;
          this.noItemNode = null;
          this.m_ptr_callback_object = null;
          this.m_ptr_callback_fun = null;
          this.m_int_user_id = 0;
          this.m_is_self = false;
          this.m_param = null;
          this.m_prices = [ "1000", "2000", "5000", "1000", "2000" ];
        }
        onLoad() {
          this.giftItemRoot.removeAllChildren();
          utils_1.utils.bind_button_event(this.btnClose, this.node, "GameUserInfo", "onBtnCloseClicked");
          utils_1.utils.bind_button_event(this.btnKick, this.node, "GameUserInfo", "onBtnKickClicked");
          this.safe_on("onGiftButtonClick", this.onGiftButtonClick, this);
          let str_rule = "gift=&quot;1000,2000,5000,1000,2000&quot;;";
          let rule = utils_1.utils.parse_lua_text(str_rule);
          let gift_str = rule.gift ? rule.gift : "1000,2000,5000,1000,2000";
          this.m_prices = gift_str.split(",");
        }
        onDestroy() {}
        start() {}
        update() {
          if (this.rootNode.active) if (this.m_is_self) if (this.giftItemRoot.childrenCount <= 5) {
            this.leftArrow.active = false;
            this.rightArrow.active = false;
          } else {
            let padding = 5;
            let x = this.scrollView.getScrollOffset().x;
            this.leftArrow.active = !(x > 0 - padding);
            x < -(this.scrollView.content.getContentSize().width - this.scrollView.node.children[0].width - padding) ? this.rightArrow.active = false : this.rightArrow.active = true;
          } else {
            this.leftArrow.active = false;
            this.rightArrow.active = false;
          }
        }
        onBtnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          this.m_ptr_callback_fun && this.m_ptr_callback_object && this.m_ptr_callback_fun.call(this.m_ptr_callback_object, this.m_param);
        }
        onBtnKickClicked() {
          sound_manager_1.sound_manager.play_click();
          let userid = global_data_1.global_data.get_the_user_data()._int_user_id;
          let touserid = this.m_int_user_id;
          bind_function_1.bf.send_user_kick(userid, touserid);
          this.hide();
        }
        onGiftButtonClick(event) {
          if (this.m_is_self) {
            let prop_id = event.getUserData();
            let d = global_data_1.global_data.get_prop_data_by_id(prop_id);
            d._bool_can_use ? AppGlobal_1.AppGlobal.getInstance().showItemDetail(prop_id, ItemDetail_1.ItemDetailType.UserInfo) : utils_1.utils.show_message_box({
              content: d._str_caption,
              button_count: 1
            });
          } else {
            this.hide();
            let e = new cc.Event.EventCustom("onSendGift", true);
            e.setUserData({
              index: event.getUserData(),
              userid: this.m_int_user_id,
              count: this.toggleTen.isChecked ? 10 : 1
            });
            this.node.dispatchEvent(e);
          }
        }
        getNextDisabledButton() {
          for (let i = 0; i < this.giftItemRoot.childrenCount; ++i) {
            let item = this.giftItemRoot.children[i];
            if (false == item.active) return item;
          }
          return null;
        }
        addGiftItem(index, prop_id, is_self) {
          if (1025 != prop_id || global_data_1.global_data.have_switch_private_card()) {
            let count = global_data_1.global_data.get_prop_count_by_id(prop_id);
            if (is_self) {
              if (count > 0) {
                this.noItemNode.active = false;
                this.hasItemNode.active = true;
                let item = this.getNextDisabledButton();
                let giftButton = null != item ? item.getComponent(GiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, GiftButton_1.default);
                giftButton.node.active = true;
                let name = global_data_1.global_data.get_prop_data_by_id(prop_id)._str_name;
                giftButton.setData(prop_id, true, name, true, count, true);
              }
            } else {
              this.noItemNode.active = false;
              this.hasItemNode.active = true;
              let item = this.getNextDisabledButton();
              let giftButton = null != item ? item.getComponent(GiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, GiftButton_1.default);
              giftButton.node.active = true;
              giftButton.setData(prop_id, true, this.m_prices[index], true, count, true);
            }
          } else ;
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        setData(bool_report, int_user_id, callback_obj, callback_close, any_param) {
          let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(int_user_id);
          if (null == ptr_user_data) {
            console.error("get GameUserInfo data fail.");
            AppGlobal_1.AppGlobal.getInstance().hideGameUserInfo();
            return;
          }
          this.userHead.setData(100, 100, int_user_id, ptr_user_data.wFaceID, ptr_user_data.cbGender);
          this.userHead.setInteractable(false);
          this.m_ptr_callback_object = callback_obj;
          this.m_ptr_callback_fun = callback_close;
          this.m_param = any_param;
          this.m_int_user_id = int_user_id;
          this.m_is_self = int_user_id == global_data_1.global_data.get_the_user_data()._int_user_id;
          this.btnKick.node.active = !this.m_is_self;
          this.btnKick.node.active = false;
          this.refresh();
        }
        refresh() {
          try {
            this.noItemNode.active = true;
            this.hasItemNode.active = false;
            let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(this.m_int_user_id);
            if (null != ptr_user_data) {
              this.labelNickname.string = ptr_user_data.szName;
              1 == ptr_user_data.cbGender ? this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_male") : this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_female");
              let int_win_count = ptr_user_data.lWinCount;
              let int_total_count = ptr_user_data.lWinCount + ptr_user_data.lLostCount + ptr_user_data.lDrawCount;
              this.labelScore.string = "\u79ef\u5206\uff1a" + ptr_user_data.lScore;
              this.labelWinRate.string = "\u80dc\u7387\uff1a" + (0 != int_total_count ? String(Math.floor(100 * int_win_count / int_total_count)) + "%" : "0%");
              this.labelRecord.string = "\u6218\u7ee9\uff1a" + ptr_user_data.lWinCount + "\u80dc/" + ptr_user_data.lLostCount + "\u8d1f/" + ptr_user_data.lDrawCount + "\u5e73";
              this.labelGold.string = ptr_user_data.lGold.toString();
              this.toggleTen.node.active = !this.m_is_self;
              this.splitLineMyItems.active = this.m_is_self;
              this.splitLineCost.active = !this.m_is_self;
              this.giftItemRoot.children.forEach(item => {
                item.active = false;
              });
              if (this.m_is_self) {
                for (let i = 0; i < global_data_1.global_data.wx_game_prop_list.length; ++i) this.addGiftItem(i, global_data_1.global_data.wx_game_prop_list[i], true);
                this.scrollView.scrollToLeft(.01);
                this.scrollView.horizontal = true;
              } else {
                for (let i = 0; i < 5; ++i) this.addGiftItem(i, utils_1.utils.gift_id_to_resource_id(i), false);
                this.scrollView.scrollToLeft(0);
                this.scrollView.horizontal = false;
              }
            } else console.error("get_user_data_by_user_id fail. id: ", this.m_int_user_id);
          } catch (e) {
            console.log("Refresh Fail.", e);
          }
        }
      };
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], GameUserInfo.prototype, "btnClose", void 0);
      __decorate([ property(UserHead_1.UserHead) ], GameUserInfo.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], GameUserInfo.prototype, "labelGold", void 0);
      __decorate([ property(cc.Label) ], GameUserInfo.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Label) ], GameUserInfo.prototype, "labelScore", void 0);
      __decorate([ property(cc.Label) ], GameUserInfo.prototype, "labelWinRate", void 0);
      __decorate([ property(cc.Label) ], GameUserInfo.prototype, "labelRecord", void 0);
      __decorate([ property(cc.Button) ], GameUserInfo.prototype, "btnKick", void 0);
      __decorate([ property(cc.Sprite) ], GameUserInfo.prototype, "iconGender", void 0);
      __decorate([ property(cc.Toggle) ], GameUserInfo.prototype, "toggleTen", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "giftItemRoot", void 0);
      __decorate([ property(cc.Prefab) ], GameUserInfo.prototype, "giftItemPrefab", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "splitLineMyItems", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "splitLineCost", void 0);
      __decorate([ property(cc.ScrollView) ], GameUserInfo.prototype, "scrollView", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "leftArrow", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "rightArrow", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "hasItemNode", void 0);
      __decorate([ property(cc.Node) ], GameUserInfo.prototype, "noItemNode", void 0);
      GameUserInfo = __decorate([ ccclass ], GameUserInfo);
      return GameUserInfo;
    })();
    exports.default = GameUserInfo;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./GiftButton": "GiftButton",
    "./ItemDetail": "ItemDetail",
    "./PopWindow": "PopWindow",
    "./UserHead": "UserHead"
  } ],
  GetRewardItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9152e4mFVJDhIvesJfgRCnR", "GetRewardItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.GetRewardItemData = void 0;
    const global_define_1 = require("../Framework/lobby/global_define");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class GetRewardItemData {
      constructor(id, count, status) {
        this.id = id;
        this.count = count;
        this.status = status;
      }
    }
    exports.GetRewardItemData = GetRewardItemData;
    let GetRewardItem = (() => {
      let GetRewardItem = class GetRewardItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.image = null;
          this.label = null;
          this.labelname = null;
          this.data = null;
        }
        setData(data) {
          this.data = data;
          if (data.status) {
            let prop_id = global_data_1.global_data.get_prop_id_by_status_id(data.id);
            let sp_path = "Prop-prop_" + prop_id;
            global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            this.label.string = "x" + this.getStatusTimeDesc(data.count);
            this.labelname.string = global_data_1.global_data.get_status_data_by_id(data.id)._str_name;
          } else {
            if (data.id == global_define_1.CONST.ID_PROP_GOLD) {
              this.labelname.string = "\u91d1\u5e01";
              this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Shop-gold_img_4");
            } else if (data.id == global_define_1.CONST.ID_PROP_INGOT) {
              this.labelname.string = "\u5143\u5b9d";
              this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Shop-ingot_img_4");
            } else if (data.id == global_define_1.CONST.ID_PROP_LOTTER) {
              this.labelname.string = "\u5956\u5238";
              let sp_path = "Prop-prop_" + data.id;
              null != global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            } else {
              this.labelname.string = global_data_1.global_data.get_prop_data_by_id(data.id)._str_name;
              let sp_path = "Prop-prop_" + data.id;
              null != global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            }
            this.label.string = "x" + data.count;
          }
        }
        getStatusTimeDesc(count) {
          let days = count / 86400;
          if (0 != days) return days.toFixed(0) + "\u5929";
          let hours = count / 3600;
          if (0 != hours) return hours.toFixed(0) + "\u5c0f\u65f6";
          let minute = count / 60;
          if (0 != minute) return minute.toFixed(0) + "\u5206\u949f";
        }
      };
      __decorate([ property(cc.Sprite) ], GetRewardItem.prototype, "image", void 0);
      __decorate([ property(cc.Label) ], GetRewardItem.prototype, "label", void 0);
      __decorate([ property(cc.Label) ], GetRewardItem.prototype, "labelname", void 0);
      GetRewardItem = __decorate([ ccclass ], GetRewardItem);
      return GetRewardItem;
    })();
    exports.default = GetRewardItem;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define"
  } ],
  GetReward: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a8ac1K+IzxKGZ3Yc3lF2mbJ", "GetReward");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.GetRewardData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const GetRewardItem_1 = require("./GetRewardItem");
    const global_define_1 = require("../Framework/lobby/global_define");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class GetRewardData {
      constructor() {
        this.itemList = null;
      }
    }
    exports.GetRewardData = GetRewardData;
    let GetReward = (() => {
      let GetReward = class GetReward extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.layoutNode = null;
          this.itemPrefab = null;
          this.easeNode = null;
          this.lightNode = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "GetReward", "onCloseBtnClicked");
          this.closeBtn.interactable = false;
        }
        onEnable() {
          this.easeNode.setScale(.1);
        }
        onShow() {
          this.closeBtn.interactable = false;
          let easingDuration = .5;
          this.easeNode.stopAllActions();
          this.easeNode.runAction(cc.sequence(cc.scaleTo(easingDuration, 1).easing(cc.easeElasticOut(easingDuration)), cc.delayTime(1), cc.callFunc(this.afterDelay, this)));
          let rotateDuration = 5;
          utils_1.utils.run_action_rotate_forever(this.lightNode, rotateDuration, true);
        }
        setData(data) {
          this.layoutNode.removeAllChildren();
          this.data = data;
          data.itemList.forEach(i => {
            if (this.validateItemData(i)) {
              let item = utils_1.utils.add_instance_to_root(this.itemPrefab, this.layoutNode, GetRewardItem_1.default);
              item.setData(i);
            }
          });
        }
        validateItemData(data) {
          if (data.status) return global_data_1.global_data.wx_game_status_list.some(x => x == data.id);
          if (data.id == global_define_1.CONST.ID_PROP_GOLD || data.id == global_define_1.CONST.ID_PROP_INGOT) return true;
          if (null == global_data_1.global_data.spriteFrameMap.get("Prop-prop_" + data.id)) return false;
          return true;
        }
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        afterDelay() {
          this.closeBtn.interactable = true;
        }
      };
      __decorate([ property(cc.Button) ], GetReward.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], GetReward.prototype, "layoutNode", void 0);
      __decorate([ property(cc.Prefab) ], GetReward.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Node) ], GetReward.prototype, "easeNode", void 0);
      __decorate([ property(cc.Node) ], GetReward.prototype, "lightNode", void 0);
      GetReward = __decorate([ ccclass ], GetReward);
      return GetReward;
    })();
    exports.default = GetReward;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./GetRewardItem": "GetRewardItem",
    "./PopWindow": "PopWindow"
  } ],
  GiftButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "34961r2snVL8olZsMdc40F9", "GiftButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GiftButton = (() => {
      let GiftButton = class GiftButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.nodeIcon = null;
          this.nodeCount = null;
          this.labelCount = null;
          this.nodePrice = null;
          this.labelPrice = null;
          this.buttonUse = null;
          this.bg = null;
          this.specialBg = null;
          this.propId = 1011;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonUse, this.node, "GiftButton", "onBtnClicked");
        }
        onBtnClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let e = new cc.Event.EventCustom("onGiftButtonClick", true);
          e.setUserData(this.propId);
          this.node.dispatchEvent(e);
        }
        setData(propId, showLabel, label, showCount, count, canClick, specialBg) {
          try {
            this.propId = propId;
            if (showLabel) {
              this.labelPrice.string = label;
              this.nodePrice.active = true;
            } else this.nodePrice.active = false;
            if (showCount) {
              this.nodeCount.active = true;
              this.labelCount.string = count.toString();
            } else this.nodeCount.active = false;
            let sp_path = "Prop-prop_" + propId;
            null != global_data_1.global_data.spriteFrameMap.get(sp_path) ? this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path) : this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.webSpriteFrameCache.get("Exchange_prop_" + propId);
            this.buttonUse.interactable = canClick;
            if (specialBg) {
              this.bg.node.active = false;
              this.specialBg.node.active = true;
            } else {
              this.bg.node.active = true;
              this.specialBg.node.active = false;
            }
          } catch (e) {}
        }
      };
      __decorate([ property(cc.Node) ], GiftButton.prototype, "nodeIcon", void 0);
      __decorate([ property(cc.Node) ], GiftButton.prototype, "nodeCount", void 0);
      __decorate([ property(cc.Label) ], GiftButton.prototype, "labelCount", void 0);
      __decorate([ property(cc.Node) ], GiftButton.prototype, "nodePrice", void 0);
      __decorate([ property(cc.Label) ], GiftButton.prototype, "labelPrice", void 0);
      __decorate([ property(cc.Button) ], GiftButton.prototype, "buttonUse", void 0);
      __decorate([ property(cc.Sprite) ], GiftButton.prototype, "bg", void 0);
      __decorate([ property(cc.Sprite) ], GiftButton.prototype, "specialBg", void 0);
      __decorate([ property ], GiftButton.prototype, "propId", void 0);
      GiftButton = __decorate([ ccclass ], GiftButton);
      return GiftButton;
    })();
    exports.default = GiftButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  GiftPlay: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8eea0SfkypDlq5EhTpYWcaa", "GiftPlay");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GiftPlay = (() => {
      var GiftPlay_1;
      let GiftPlay = GiftPlay_1 = class GiftPlay extends cc.Component {
        constructor() {
          super(...arguments);
          this.animationPrefab = null;
        }
        playMulti(from, to, giftId, count) {
          for (let i = 0; i < count; ++i) this.play(from, to, giftId, .2 * i);
        }
        play(from, to, giftId, delayTime) {
          if (giftId < 0 || giftId > 4) return;
          console.log("giftId : ", giftId);
          let config = GiftPlay_1.config[giftId];
          let int_start_width = config["start_width"];
          let int_start_height = config["start_height"];
          let int_start_count = config["start_count"];
          let float_start_time = config["start_time"];
          float_start_time = 0;
          let int_move_width = config["move_width"];
          let int_move_height = config["move_height"];
          let float_move_time = config["move_time"];
          let int_move_rotation = config["move_rotation"];
          let int_move_turn = config["move_turn"];
          let int_end_width = config["end_width"];
          let int_end_height = config["end_height"];
          let int_end_count = config["end_count"];
          let float_end_time = config["end_time"];
          let animation = utils_1.utils.add_instance_to_root(this.animationPrefab, this.node, cc.Animation);
          if (float_start_time > 0) {
            let sps = new Array();
            for (let i = 0; i <= int_start_count; ++i) {
              let key = utils_1.utils.get_gift_texture_name(giftId, "start", i);
              sps.push(global_data_1.global_data.spriteFrameMap.get(key));
            }
            let clip = cc.AnimationClip.createWithSpriteFrames(sps, int_start_count / float_start_time);
            clip.name = "start";
            clip.wrapMode = cc.WrapMode.Normal;
            animation.addClip(clip);
          }
          {
            let sps = new Array();
            let key = utils_1.utils.get_gift_texture_name(giftId, "duration");
            sps.push(global_data_1.global_data.spriteFrameMap.get(key));
            let clip = cc.AnimationClip.createWithSpriteFrames(sps, 1 / float_move_time);
            clip.name = "duration";
            clip.wrapMode = cc.WrapMode.Normal;
            animation.addClip(clip);
          }
          {
            let sps = new Array();
            for (let i = 0; i <= int_end_count; ++i) {
              let key = utils_1.utils.get_gift_texture_name(giftId, "end", i);
              sps.push(global_data_1.global_data.spriteFrameMap.get(key));
            }
            let clip = cc.AnimationClip.createWithSpriteFrames(sps, int_end_count / float_end_time);
            clip.name = "end";
            clip.wrapMode = cc.WrapMode.Normal;
            animation.addClip(clip);
          }
          let from_local = this.node.convertToNodeSpaceAR(from);
          let to_local = this.node.convertToNodeSpaceAR(to);
          let move_action = null;
          move_action = 1 == int_move_rotation ? cc.spawn(cc.moveTo(float_move_time, to_local), cc.rotateBy(float_move_time, 360 * int_move_turn)) : cc.moveTo(float_move_time, to_local);
          animation.node.setPosition(from_local);
          animation.node.width = int_start_width;
          animation.node.height = int_start_height;
          let action = cc.sequence(cc.show(), cc.delayTime(delayTime), cc.callFunc(this.on_animation_start, animation.node, {
            w: int_start_width,
            h: int_start_height,
            id: giftId
          }), cc.delayTime(float_start_time), cc.callFunc(this.on_animation_move, animation.node, {
            w: int_move_width,
            h: int_move_height
          }), move_action, cc.callFunc(this.on_animation_end, animation.node, {
            w: int_end_width,
            h: int_end_height
          }), cc.delayTime(float_end_time), cc.hide(), cc.callFunc(this.on_animation_finish, animation.node));
          animation.node.runAction(action);
        }
        on_animation_start(target, data) {
          target.getComponent(cc.Animation).play("start");
          target.width = data.w;
          target.height = data.h;
          sound_manager_1.sound_manager.play_sound("resources/Sound/Gift/" + data.id + ".mp3", false);
        }
        on_animation_move(target, data) {
          target.getComponent(cc.Animation).play("duration");
          target.width = data.w;
          target.height = data.h;
        }
        on_animation_end(target, data) {
          target.getComponent(cc.Animation).play("end");
        }
        on_animation_finish(target) {
          target.destroy();
        }
      };
      GiftPlay.config = [ {
        start_width: 85,
        start_height: 105,
        start_count: 9,
        start_time: 1,
        move_width: 51,
        move_height: 68,
        move_time: .5,
        move_rotation: 1,
        move_turn: 2,
        end_width: 487,
        end_height: 320,
        end_count: 10,
        end_time: 1
      }, {
        start_width: 54,
        start_height: 112,
        start_count: 5,
        start_time: .5,
        move_width: 54,
        move_height: 112,
        move_time: .5,
        move_rotation: 1,
        move_turn: 2,
        end_width: 238,
        end_height: 185,
        end_count: 10,
        end_time: 1
      }, {
        start_width: 77,
        start_height: 83,
        start_count: 1,
        start_time: .3,
        move_width: 77,
        move_height: 83,
        move_time: .5,
        move_rotation: 1,
        move_turn: 2,
        end_width: 342,
        end_height: 358,
        end_count: 10,
        end_time: 1
      }, {
        start_width: 133,
        start_height: 107,
        start_count: 11,
        start_time: 1,
        move_width: 83,
        move_height: 100,
        move_time: .5,
        move_rotation: 0,
        move_turn: 0,
        end_width: 230,
        end_height: 203,
        end_count: 15,
        end_time: 1.5
      }, {
        start_width: 247,
        start_height: 164,
        start_count: 12,
        start_time: 1.2,
        move_width: 55,
        move_height: 55,
        move_time: .5,
        move_rotation: 0,
        move_turn: 0,
        end_width: 325,
        end_height: 325,
        end_count: 14,
        end_time: 1.4
      } ];
      __decorate([ property(cc.Prefab) ], GiftPlay.prototype, "animationPrefab", void 0);
      GiftPlay = GiftPlay_1 = __decorate([ ccclass ], GiftPlay);
      return GiftPlay;
    })();
    exports.default = GiftPlay;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  GoldDisplay: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2c0c5lvmwhJUrrcVB8LWBOZ", "GoldDisplay");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let GoldDisplay = (() => {
      let GoldDisplay = class GoldDisplay extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.label = null;
          this.plusNode = null;
        }
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "GoldDisplay";
          clickEventHandler.handler = "onBtnClick";
          this.button.clickEvents.push(clickEventHandler);
          this.label.verticalAlign = cc.Label.VerticalAlign.TOP;
          this.button.node.active = global_data_1.global_data.have_module_shop();
          this.plusNode.active = global_data_1.global_data.have_module_shop();
        }
        onBtnClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showShopLayout("Gold");
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        refresh() {
          let n = global_data_1.global_data.get_the_user_data()._long_gold;
          this.label.string = utils_1.utils.format_gold_string(n);
        }
        start() {
          this.refresh();
        }
      };
      __decorate([ property(cc.Button) ], GoldDisplay.prototype, "button", void 0);
      __decorate([ property(cc.Label) ], GoldDisplay.prototype, "label", void 0);
      __decorate([ property(cc.Node) ], GoldDisplay.prototype, "plusNode", void 0);
      GoldDisplay = __decorate([ ccclass ], GoldDisplay);
      return GoldDisplay;
    })();
    exports.default = GoldDisplay;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  HuaCardEditor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "16befSHDkJHSYydToZ3amSV", "HuaCardEditor");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let HuaCardEditor = (() => {
      let HuaCardEditor = class HuaCardEditor extends cc.Component {
        constructor() {
          super(...arguments);
          this.class_name = "HuaCardEditor";
          this.gray_color = cc.color(120, 120, 120);
          this.white_color = cc.color(255, 255, 255);
          this.brown_color = cc.color(225, 139, 52);
          this.max_select = 16;
          this.node_cancel = null;
          this.node_ok = null;
          this.node_wan = null;
          this.node_tiao = null;
          this.node_tong = null;
          this.node_dnxb = null;
          this.node_zfb = null;
          this.node_hua = null;
        }
        onLoad() {
          this.fetchNode();
        }
        start() {}
        hide() {
          this.node.active = false;
        }
        show(remove = [], selected = []) {
          this.setData(remove, selected);
          this.node.active = true;
        }
        fetchNode() {
          if (!this.node_cancel) {
            let root = this.node.getChildByName("root");
            this.node_cancel = root.getChildByName("btn_cancel");
            this.node_ok = root.getChildByName("btn_ok");
            this.node_wan = root.getChildByName("wan");
            this.node_tiao = root.getChildByName("tiao");
            this.node_tong = root.getChildByName("tong");
            this.node_dnxb = root.getChildByName("dnxb");
            this.node_zfb = root.getChildByName("zfb");
            this.node_hua = root.getChildByName("hua");
            utils_1.utils.bind_button_event(this.node_cancel.addComponent(cc.Button), this.node, this.class_name, "onCancelClick");
            utils_1.utils.bind_button_event(this.node_ok.addComponent(cc.Button), this.node, this.class_name, "onOkClick");
            utils_1.utils.bind_button_event(this.node_wan.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_tiao.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_tong.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_dnxb.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_zfb.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            utils_1.utils.bind_button_event(this.node_hua.getChildByName("btn").addComponent(cc.Button), this.node, this.class_name, "onAllClick");
            [ this.node_wan, this.node_tiao, this.node_tong, this.node_dnxb, this.node_zfb, this.node_hua ].forEach(node => {
              let childs = node.getChildByName("item").children;
              childs.forEach(child => {
                utils_1.utils.bind_button_event(child.addComponent(cc.Button), this.node, this.class_name, "onCardClick");
              });
            });
          }
        }
        updateAllSelected(node) {
          let childs = node.getChildByName("item").children;
          let all_unselected = true;
          for (let i = 0; i < childs.length; ++i) if (true == childs[i].getComponent(cc.Button).interactable) {
            all_unselected = false;
            break;
          }
          let btn = node.getChildByName("btn");
          btn.getComponent(cc.Button).interactable = !all_unselected;
          btn.getChildByName("box").color = all_unselected ? this.gray_color : this.white_color;
          btn.getChildByName("label").color = all_unselected ? this.gray_color : this.brown_color;
          if (all_unselected) {
            btn.getChildByName("check").active = false;
            return;
          }
          let all_selected = true;
          for (let i = 0; i < childs.length; ++i) if (true == childs[i].getComponent(cc.Button).interactable && false == childs[i].getChildByName("check").active) {
            all_selected = false;
            break;
          }
          btn.getChildByName("check").active = all_selected;
        }
        setData(remove, selected) {
          this.fetchNode();
          let wan = this.node_wan.getChildByName("item").children;
          let tiao = this.node_tiao.getChildByName("item").children;
          let tong = this.node_tong.getChildByName("item").children;
          let dnxb = this.node_dnxb.getChildByName("item").children;
          let zfb = this.node_zfb.getChildByName("item").children;
          let hua = this.node_hua.getChildByName("item").children;
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              v2.getChildByName("check").active = false;
              v2.getComponent(cc.Button).interactable = true;
              v2.color = this.white_color;
            });
          });
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              if (remove.some(ele => ele == Number(v2.name))) {
                v2.getChildByName("check").active = false;
                v2.color = this.gray_color;
                v2.getComponent(cc.Button).interactable = false;
              }
            });
          });
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              selected.some(ele => ele == Number(v2.name)) && (v2.getChildByName("check").active = true);
            });
          });
          this.updateAllSelected(this.node_wan);
          this.updateAllSelected(this.node_tiao);
          this.updateAllSelected(this.node_tong);
          this.updateAllSelected(this.node_dnxb);
          this.updateAllSelected(this.node_zfb);
          this.updateAllSelected(this.node_hua);
        }
        getAllSelected() {
          let list = [];
          let wan = this.node_wan.getChildByName("item").children;
          let tiao = this.node_tiao.getChildByName("item").children;
          let tong = this.node_tong.getChildByName("item").children;
          let dnxb = this.node_dnxb.getChildByName("item").children;
          let zfb = this.node_zfb.getChildByName("item").children;
          let hua = this.node_hua.getChildByName("item").children;
          [ wan, tiao, tong, dnxb, zfb, hua ].forEach(v1 => {
            v1.forEach(v2 => {
              v2.getChildByName("check").active && list.push(Number(v2.name));
            });
          });
          return list;
        }
        onCancelClick(event, customEventData) {
          this.hide();
        }
        onOkClick(event, customEventData) {
          let list = this.getAllSelected();
          utils_1.utils.send("HuaCardEditor", list);
          this.hide();
        }
        onAllClick(event, customEventData) {
          let node = event.target;
          let check = node.getChildByName("check");
          let childs = node.parent.getChildByName("item").children;
          if (!check.active) {
            let add_count = 0;
            childs.forEach(child => {
              child.getComponent(cc.Button).interactable && false == child.getChildByName("check").active && ++add_count;
            });
            let list = this.getAllSelected();
            if (list.length + add_count > this.max_select) {
              utils_1.utils.show_hint(`\u6700\u591a\u9009\u62e9${this.max_select}\u5f20\u82b1`);
              return;
            }
          }
          check.active = !check.active;
          childs.forEach(child => {
            child.getComponent(cc.Button).interactable && (child.getChildByName("check").active = check.active);
          });
        }
        onCardClick(event, customEventData) {
          let node = event.target;
          let check = node.getChildByName("check");
          if (!check.active) {
            let list = this.getAllSelected();
            if (list.length >= this.max_select) {
              utils_1.utils.show_hint(`\u6700\u591a\u9009\u62e9${this.max_select}\u5f20\u82b1`);
              return;
            }
          }
          check.active = !check.active;
          this.updateAllSelected(node.parent.parent);
        }
      };
      HuaCardEditor = __decorate([ ccclass ], HuaCardEditor);
      return HuaCardEditor;
    })();
    exports.default = HuaCardEditor;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils"
  } ],
  Iconv: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8c1f2GLrqRNMIe02tSnVrn5", "Iconv");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Iconv = exports.encodings = void 0;
    const bom_handling_1 = require("./bom-handling");
    const util_1 = require("../util/util");
    const dbcsData = require("../encodings/dbcs-data");
    const DBCSCodec = require("../encodings/dbcs-codec");
    let modules = [ DBCSCodec, dbcsData ];
    exports.encodings = {};
    for (let i = 0; i < modules.length; i++) {
      let module = modules[i];
      for (let enc in module) if (Object.prototype.hasOwnProperty.call(module, enc)) if ("object" === typeof module[enc]) for (let item in module[enc]) Object.prototype.hasOwnProperty.call(module[enc], item) && (exports.encodings[item] = module[enc][item]); else exports.encodings[enc] = module[enc];
    }
    class Iconv {
      constructor() {
        this.encodings = null;
        this.defaultCharUnicode = "\ufffd";
        this.defaultCharSingleByte = "?";
        this._codecDataCache = {};
        this.toEncoding = this.encode;
        this.fromEncoding = this.decode;
        false;
      }
      encode(str, encoding, options) {
        str = "" + (str || "");
        let encoder = this.getEncoder(encoding, options);
        let res = encoder.write(str);
        let trail = encoder.end();
        return trail && trail.length > 0 ? util_1.concatBuf([ res, trail ]) : res;
      }
      decode(buf, encoding, options) {
        if ("string" === typeof buf) {
          if (!this.skipDecodeWarning) {
            console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding");
            this.skipDecodeWarning = true;
          }
          buf = util_1.strToBuf("" + (buf || ""));
        }
        let decoder = this.getDecoder(encoding, options);
        let res = decoder.write(buf);
        let trail = decoder.end();
        return trail ? res + trail : res;
      }
      encodingExists(enc) {
        try {
          this.getCodec(enc);
          return true;
        } catch (e) {
          return false;
        }
      }
      getCodec(encoding) {
        this.encodings || (this.encodings = exports.encodings);
        let enc = ("" + encoding).toLowerCase().replace(/[^0-9a-z]|:\d{4}$/g, "");
        let codecOptions = {};
        while (true) {
          let codec = this._codecDataCache[enc];
          if (codec) return codec;
          let codecDef = this.encodings[enc];
          let codecDefType = typeof codecDef;
          if ("string" === codecDefType) enc = codecDef; else {
            if ("object" !== codecDefType) {
              if (codecDef) {
                codecOptions.encodingName || (codecOptions.encodingName = enc);
                codec = new codecDef(codecOptions, this);
                this._codecDataCache[codecOptions.encodingName] = codec;
                return codec;
              }
              throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '" + enc + "')");
            }
            for (let key in codecDef) codecOptions[key] = codecDef[key];
            codecOptions.encodingName || (codecOptions.encodingName = enc);
            enc = codecDef.type;
          }
        }
      }
      getEncoder(encoding, options) {
        let codec = this.getCodec(encoding), encoder = new codec.encoder(options, codec);
        codec.bomAware && options && options.addBOM && (encoder = new bom_handling_1.PrependBOM(encoder, options));
        return encoder;
      }
      getDecoder(encoding, options) {
        let codec = this.getCodec(encoding), decoder = new codec.decoder(options, codec);
        !codec.bomAware || options && false === options.stripBOM || (decoder = new bom_handling_1.StripBOM(decoder, options));
        return decoder;
      }
    }
    exports.Iconv = Iconv;
    cc._RF.pop();
  }, {
    "../encodings/dbcs-codec": "dbcs-codec",
    "../encodings/dbcs-data": "dbcs-data",
    "../util/util": "util",
    "./bom-handling": "bom-handling"
  } ],
  Interface: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2fed5XJk6ZCHZPSD9vHdpdC", "Interface");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.IRoomButton = exports.RoomButtonData = void 0;
    class RoomButtonData {
      constructor(roomLimit, roomDescription, icon, bg, gameid, wxaddress) {
        this.roomLimit = roomLimit;
        this.roomDescription = roomDescription;
        this.icon = icon;
        this.bg = bg;
        this.gameid = gameid;
        this.wxaddress = wxaddress;
      }
    }
    exports.RoomButtonData = RoomButtonData;
    class IRoomButton extends cc.Component {}
    exports.IRoomButton = IRoomButton;
    cc._RF.pop();
  }, {} ],
  InviteRewardButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "17d5acJUs5NI67a0WIq1+tz", "InviteRewardButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let InviteRewardButton = (() => {
      let InviteRewardButton = class InviteRewardButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.redPoint = null;
        }
        start() {
          this.button.interactable = false;
          this.request_data();
        }
        onLoad() {
          utils_1.utils.on("RefreshInviteRewardData", this, this.onEventRefreshInviteRewardData);
        }
        onDestroy() {
          utils_1.utils.off("RefreshInviteRewardData", this, this.onEventRefreshInviteRewardData);
        }
        onEventRefreshInviteRewardData() {
          this.button.interactable = true;
          this.refreshRedPoint();
        }
        request_data() {
          lobby_framework_1.lobby_framework.refresh_invite_reward_data(true);
        }
        refreshRedPoint() {
          this.redPoint.active = !(global_data_1.global_data.invite_reward_data && global_data_1.global_data.invite_reward_data.secret_got);
        }
      };
      __decorate([ property(cc.Button) ], InviteRewardButton.prototype, "button", void 0);
      __decorate([ property(cc.Node) ], InviteRewardButton.prototype, "redPoint", void 0);
      InviteRewardButton = __decorate([ ccclass ], InviteRewardButton);
      return InviteRewardButton;
    })();
    exports.default = InviteRewardButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework"
  } ],
  InviteRewardItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "35586Th9BVLZ4lWsSQsOR+I", "InviteRewardItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.InviteRewardItemData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const UserHead_1 = require("./UserHead");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class InviteRewardItemData {}
    exports.InviteRewardItemData = InviteRewardItemData;
    let InviteRewardItem = (() => {
      let InviteRewardItem = class InviteRewardItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.userHead = null;
          this.label = null;
          this.btn = null;
          this.dataNode = null;
          this.emptyNode = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btn, this.node, "InviteRewardItem", "onBtnClicked");
        }
        setData(data) {
          this.data = data;
          if (data.userid <= 0) {
            this.emptyNode.active = true;
            this.dataNode.active = false;
          } else {
            this.emptyNode.active = false;
            this.dataNode.active = true;
            this.userHead.setData(100, 100, data.userid, data.faceid, data.gender);
            this.userHead.setInteractable(false);
          }
          this.label.string = String(data.gold);
        }
        onBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_invite_friend();
        }
      };
      __decorate([ property(UserHead_1.UserHead) ], InviteRewardItem.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], InviteRewardItem.prototype, "label", void 0);
      __decorate([ property(cc.Button) ], InviteRewardItem.prototype, "btn", void 0);
      __decorate([ property(cc.Node) ], InviteRewardItem.prototype, "dataNode", void 0);
      __decorate([ property(cc.Node) ], InviteRewardItem.prototype, "emptyNode", void 0);
      InviteRewardItem = __decorate([ ccclass ], InviteRewardItem);
      return InviteRewardItem;
    })();
    exports.default = InviteRewardItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./UserHead": "UserHead"
  } ],
  InviteReward: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "caec3IRQkJK5JORtOp+v/hO", "InviteReward");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const InviteRewardItem_1 = require("./InviteRewardItem");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let InviteReward = (() => {
      let InviteReward = class InviteReward extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.itemRoot = null;
          this.itemPrefab = null;
          this.closeBtn = null;
          this.secretBtn = null;
          this.secretGotNode = null;
          this.hintNode = null;
          this.hintGetNode = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "InviteReward", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.secretBtn, this.node, "InviteReward", "onSecretBtnClicked");
          utils_1.utils.on("RefreshInviteRewardData", this, this.onEventRefreshInviteRewardData);
        }
        onDestroy() {
          utils_1.utils.off("RefreshInviteRewardData", this, this.onEventRefreshInviteRewardData);
        }
        onShow() {
          this.fetchData();
          this.fetchReward();
        }
        onEventRefreshInviteRewardData() {
          this.setData(global_data_1.global_data.invite_reward_data);
        }
        fetchData() {
          lobby_framework_1.lobby_framework.refresh_invite_reward_data(false);
        }
        setData(data) {
          global_data_1.global_data.invite_reward_data = data;
          this.itemRoot.removeAllChildren();
          for (let i = 0; i < 5; ++i) {
            let item = utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, InviteRewardItem_1.default);
            let d = new InviteRewardItem_1.InviteRewardItemData();
            let webData = data.items[i];
            d.userid = webData.userid;
            d.faceid = webData.faceid;
            d.gender = webData.gender;
            d.gold = webData.fund_count ? webData.fund_count : 0;
            item.setData(d);
          }
          if (data.secret_got) {
            this.secretGotNode.active = true;
            this.secretBtn.node.active = false;
          } else {
            this.secretGotNode.active = false;
            this.secretBtn.node.active = true;
            if (null != data.items[4].accounts && 0 != data.items[4].userid) {
              this.hintNode.active = false;
              this.hintGetNode.active = true;
              this.hintGetNode.stopAllActions();
              let t = .7;
              this.hintGetNode.runAction(cc.sequence(cc.scaleTo(t, 1.2).easing(cc.easeQuadraticActionIn()), cc.scaleTo(t, 1).easing(cc.easeQuadraticActionOut())).repeatForever());
            } else {
              this.hintGetNode.active = false;
              this.hintNode.active = true;
              this.hintNode.stopAllActions();
              let t = .7;
              this.hintNode.runAction(cc.sequence(cc.scaleTo(t, 1.2).easing(cc.easeQuadraticActionIn()), cc.scaleTo(t, 1).easing(cc.easeQuadraticActionOut())).repeatForever());
            }
          }
        }
        fetchReward() {
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_INVITE_REWARD_GET);
          utils_1.utils.show_loading("", true);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data, message) {
              console.log("HTTP_INVITE_REWARD_GET", data, utils_1.utils.to_json(data));
              cc.isValid(that) && data && data.length > 0 && that.getReward(data);
              lobby_framework_1.lobby_framework.refresh_taskboard_data();
            },
            complete: function() {
              utils_1.utils.hide_loading();
            }
          });
        }
        fetchSecretReward() {
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_INVITE_SECRET_REWARD_GET);
          utils_1.utils.show_loading("", true);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data, message) {
              console.log("HTTP_INVITE_SECRET_REWARD_GET", data, utils_1.utils.to_json(data));
              if (data && data.length > 0) {
                cc.isValid(that) && that.getReward(data);
                lobby_framework_1.lobby_framework.refresh_invite_reward_data(true);
                lobby_framework_1.lobby_framework.refresh_taskboard_data();
                global_data_1.global_data.request_user_data();
              }
            },
            complete: function() {
              utils_1.utils.hide_loading();
            },
            fail: function(message) {
              utils_1.utils.show_hint(message);
            }
          });
        }
        getReward(data) {
          let reward_list = [];
          data.forEach(d => {
            if (reward_list.some((v, i, a) => v.fund_id == d.fund_id)) {
              let item = reward_list.filter(x => x.fund_id == d.fund_id)[0];
              item.fund_count = Number(item.fund_count) + Number(d.fund_count);
            } else reward_list.push(d);
          });
          utils_1.utils.show_get_reward(reward_list);
          global_data_1.global_data.request_user_data();
        }
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onSecretBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.fetchSecretReward();
        }
      };
      __decorate([ property(cc.Node) ], InviteReward.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], InviteReward.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Button) ], InviteReward.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], InviteReward.prototype, "secretBtn", void 0);
      __decorate([ property(cc.Node) ], InviteReward.prototype, "secretGotNode", void 0);
      __decorate([ property(cc.Node) ], InviteReward.prototype, "hintNode", void 0);
      __decorate([ property(cc.Node) ], InviteReward.prototype, "hintGetNode", void 0);
      InviteReward = __decorate([ ccclass ], InviteReward);
      return InviteReward;
    })();
    exports.default = InviteReward;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./InviteRewardItem": "InviteRewardItem",
    "./PopWindow": "PopWindow"
  } ],
  ItemButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1ee4aCSr5pF/5CBBkEKM2iN", "ItemButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ItemButtonData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const AppGlobal_1 = require("../AppGlobal");
    const ShopTabToggle_1 = require("./ShopTabToggle");
    const ItemDetail_1 = require("./ItemDetail");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class ItemButtonData {
      constructor(type, id, name, count, isHot, icon, isAdd, addText, price_desc, price) {
        this.type = type;
        this.id = id;
        this.name = name;
        this.count = count;
        this.isHot = isHot;
        this.icon = icon;
        this.isAdd = isAdd;
        this.addText = addText;
        this.price_desc = price_desc;
        this.price = price;
      }
    }
    exports.ItemButtonData = ItemButtonData;
    let ItemButton = (() => {
      let ItemButton = class ItemButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.itemName = null;
          this.iconHot = null;
          this.iconAdd = null;
          this.textIconAdd = null;
          this.itemIcon = null;
          this.buttonBuy = null;
          this.buttonText = null;
          this.data = null;
        }
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "ItemButton";
          clickEventHandler.handler = "onBuyButtonClicked";
          this.buttonBuy.clickEvents.push(clickEventHandler);
        }
        start() {}
        onBuyButtonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          if (this.data.type == ShopTabToggle_1.ShopType.Item) {
            let id = parseInt(this.data.id);
            AppGlobal_1.AppGlobal.getInstance().showItemDetail(id, ItemDetail_1.ItemDetailType.Shop, this.data);
          } else {
            let price = parseInt(this.data.price);
            price > 0 && lobby_framework_1.lobby_framework.purchase_item(this.data.id, price, this.data.name);
          }
        }
        setData(data) {
          this.data = data;
          this.itemName.string = data.name;
          this.itemIcon.spriteFrame = null;
          this.iconHot.node.active = data.isHot;
          this.iconAdd.node.active = data.isAdd;
          data.isAdd && (this.textIconAdd.string = data.addText);
          "" != data.price_desc ? this.buttonText.string = data.price_desc : this.buttonText.string = "\uffe5" + data.price + "\u5143";
          let sp = data.icon;
          this.itemIcon.spriteFrame = sp;
        }
      };
      __decorate([ property(cc.Label) ], ItemButton.prototype, "itemName", void 0);
      __decorate([ property(cc.Sprite) ], ItemButton.prototype, "iconHot", void 0);
      __decorate([ property(cc.Sprite) ], ItemButton.prototype, "iconAdd", void 0);
      __decorate([ property(cc.Label) ], ItemButton.prototype, "textIconAdd", void 0);
      __decorate([ property(cc.Sprite) ], ItemButton.prototype, "itemIcon", void 0);
      __decorate([ property(cc.Button) ], ItemButton.prototype, "buttonBuy", void 0);
      __decorate([ property(cc.Label) ], ItemButton.prototype, "buttonText", void 0);
      ItemButton = __decorate([ ccclass ], ItemButton);
      return ItemButton;
    })();
    exports.default = ItemButton;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./ItemDetail": "ItemDetail",
    "./ShopTabToggle": "ShopTabToggle"
  } ],
  ItemDetail: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c208fFICwBMWZnQh67xycK+", "ItemDetail");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ItemDetailType = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const GiftButton_1 = require("./GiftButton");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var ItemDetailType;
    (function(ItemDetailType) {
      ItemDetailType[ItemDetailType["UserInfo"] = 0] = "UserInfo";
      ItemDetailType[ItemDetailType["Shop"] = 1] = "Shop";
      ItemDetailType[ItemDetailType["Exchange"] = 2] = "Exchange";
    })(ItemDetailType = exports.ItemDetailType || (exports.ItemDetailType = {}));
    let ItemDetail = (() => {
      let ItemDetail = class ItemDetail extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.giftButton = null;
          this.itemNameLabel = null;
          this.itemCountLabel = null;
          this.itemPriceLabel = null;
          this.itemDescLabel = null;
          this.useButton = null;
          this.buyButton = null;
          this.exchangeButton = null;
          this.closeButton = null;
          this.propId = 0;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.useButton, this.node, "ItemDetail", "onUseClicked");
          utils_1.utils.bind_button_event(this.buyButton, this.node, "ItemDetail", "onBuyClicked");
          utils_1.utils.bind_button_event(this.exchangeButton, this.node, "ItemDetail", "onExchangeClicked");
          utils_1.utils.bind_button_event(this.closeButton, this.node, "ItemDetail", "onCloseClicked");
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        onUseClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.use_prop(this.propId);
          this.hide();
        }
        onBuyClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.buy_prop(this.propId);
          this.hide();
        }
        onExchangeClicked() {
          sound_manager_1.sound_manager.play_click();
          if (0 == this.data.count) {
            utils_1.utils.show_hint("\u5269\u4f59\u5e93\u5b58\u4e0d\u8db3\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5");
            return;
          }
          let quan = global_data_1.global_data.get_prop_count_by_id(global_define_1.CONST.ID_PROP_LOTTER);
          if (quan < this.data.need_prop_count) {
            utils_1.utils.show_hint("\u60a8\u7684\u5956\u5238\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5151\u6362");
            return;
          }
          lobby_framework_1.lobby_framework.request_exchange(this.data.id);
        }
        onCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        setData(prop_id, type, data) {
          this.propId = prop_id;
          this.type = type;
          data && (this.data = data);
          this.refresh();
        }
        refresh() {
          let data = global_data_1.global_data.get_prop_data_by_id(this.propId);
          this.giftButton.setData(this.propId, false, "", false, 0, false, true);
          if (this.type == ItemDetailType.UserInfo) {
            let count = global_data_1.global_data.get_prop_count_by_id(this.propId);
            this.itemNameLabel.string = data._str_name;
            this.itemCountLabel.string = "\u5e93\u5b58\uff1a" + count;
            this.itemDescLabel.string = data._str_caption;
            this.itemPriceLabel.node.active = false;
            this.useButton.node.active = data._bool_can_use;
            this.buyButton.node.active = false;
            this.exchangeButton.node.active = false;
          } else if (this.type == ItemDetailType.Shop) {
            this.itemNameLabel.string = this.data.name;
            this.itemCountLabel.string = "\u6570\u91cf\uff1a" + this.data.count;
            this.itemDescLabel.string = data._str_caption;
            this.itemPriceLabel.node.active = true;
            this.itemPriceLabel.string = "\u4ef7\u683c\uff1a" + this.data.price_desc;
            this.useButton.node.active = false;
            this.buyButton.node.active = true;
            this.exchangeButton.node.active = false;
          } else {
            this.itemNameLabel.string = this.data.name;
            this.itemCountLabel.string = "\u5e93\u5b58\uff1a" + this.data.count;
            this.itemDescLabel.string = data && data._str_caption ? data._str_caption : "";
            this.itemPriceLabel.node.active = true;
            this.itemPriceLabel.string = "\u4ef7\u683c\uff1a" + this.data.need_prop_name;
            this.useButton.node.active = false;
            this.buyButton.node.active = false;
            this.exchangeButton.node.active = true;
          }
        }
      };
      __decorate([ property(GiftButton_1.default) ], ItemDetail.prototype, "giftButton", void 0);
      __decorate([ property(cc.Label) ], ItemDetail.prototype, "itemNameLabel", void 0);
      __decorate([ property(cc.Label) ], ItemDetail.prototype, "itemCountLabel", void 0);
      __decorate([ property(cc.Label) ], ItemDetail.prototype, "itemPriceLabel", void 0);
      __decorate([ property(cc.Label) ], ItemDetail.prototype, "itemDescLabel", void 0);
      __decorate([ property(cc.Button) ], ItemDetail.prototype, "useButton", void 0);
      __decorate([ property(cc.Button) ], ItemDetail.prototype, "buyButton", void 0);
      __decorate([ property(cc.Button) ], ItemDetail.prototype, "exchangeButton", void 0);
      __decorate([ property(cc.Button) ], ItemDetail.prototype, "closeButton", void 0);
      ItemDetail = __decorate([ ccclass ], ItemDetail);
      return ItemDetail;
    })();
    exports.default = ItemDetail;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./GiftButton": "GiftButton",
    "./PopWindow": "PopWindow"
  } ],
  LoadingScreen: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6ea673UTTZHyLYZmtFKHfR9", "LoadingScreen");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LoadingScreen = void 0;
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LoadingScreen = (() => {
      let LoadingScreen = class LoadingScreen extends cc.Component {
        constructor() {
          super(...arguments);
          this.theLabel = null;
          this.theBg = null;
          this.loadingSprite = null;
          this.cancelBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.cancelBtn, this.node, "LoadingScreen", "onCancelClicked");
        }
        start() {}
        onCancelClicked() {
          this.hide();
        }
        setText(text) {
          this.theLabel.string = text;
          null == text || "" == text ? this.loadingSprite.node.setPosition(cc.v2(0, 0)) : this.loadingSprite.node.setPosition(cc.v2(0, 46));
        }
        showBg(b) {
          this.theBg.node.active = b;
        }
        showSprite(b) {
          this.loadingSprite.node.active = b;
          utils_1.utils.run_action_rotate_forever(this.loadingSprite.node, 2, true);
        }
        showCancel(b) {
          this.cancelBtn.node.active = b;
        }
        show() {
          this.node.active = true;
        }
        hide() {
          this.node.active = false;
        }
      };
      __decorate([ property(cc.Label) ], LoadingScreen.prototype, "theLabel", void 0);
      __decorate([ property(cc.Sprite) ], LoadingScreen.prototype, "theBg", void 0);
      __decorate([ property(cc.Sprite) ], LoadingScreen.prototype, "loadingSprite", void 0);
      __decorate([ property(cc.Button) ], LoadingScreen.prototype, "cancelBtn", void 0);
      LoadingScreen = __decorate([ ccclass ], LoadingScreen);
      return LoadingScreen;
    })();
    exports.LoadingScreen = LoadingScreen;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils"
  } ],
  LobbyBottomButtonLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5405bSNYtFLWrCHj7AtdrEF", "LobbyBottomButtonLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyBottomButtonLayout = (() => {
      var LobbyBottomButtonLayout_1;
      let LobbyBottomButtonLayout = LobbyBottomButtonLayout_1 = class LobbyBottomButtonLayout extends cc.Component {
        constructor() {
          super(...arguments);
          this.moreButton = null;
          this.moreNode = null;
          this.moreButtonRedPoint = null;
          this.initialized = false;
          this.MAX_BUTTON_NUMBER = 4;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.moreButton, this.node, "LobbyBottomButtonLayout", "onMoreButtonClicked");
          this.initialized = false;
          LobbyBottomButtonLayout_1.inst = this;
          this.safe_on("redPointRefreshed", this.onRedPointRefreshed, this);
          utils_1.utils.on("AnyButtonClicked", this, this.anyButtonClicked);
        }
        onDestroy() {
          LobbyBottomButtonLayout_1.inst = null;
          utils_1.utils.off("AnyButtonClicked", this, this.anyButtonClicked);
        }
        anyButtonClicked(event, customEventData) {
          event.target != LobbyBottomButtonLayout_1.inst.moreButton.node && LobbyBottomButtonLayout_1.inst.hideMoreNode();
        }
        start() {
          this.initLayout();
        }
        initLayout() {
          if (this.initialized) this.moreNode.active = false; else {
            this.moreButton.node.active = false;
            let visibleChildren = this.node.children.filter(child => true == child.active);
            if (visibleChildren.length > this.MAX_BUTTON_NUMBER) {
              this.moreButton.node.active = true;
              let number = visibleChildren.length - (this.MAX_BUTTON_NUMBER - 1);
              let moveList = [ "RuleButton", "SettingButton", "NoticeButton", "ServiceButton" ];
              for (let i = 0; i < moveList.length && number > 0; ++i) this.moveToMore(moveList[i]) && (number -= 1);
            } else this.moreButton.node.active = false;
            this.initialized = true;
          }
        }
        moveToMore(moveButton) {
          let node = this.node.getChildByName(moveButton);
          if (cc.isValid(node) && node.active) {
            node.setParent(this.moreNode);
            node.setPosition(0, 8.5);
            return true;
          }
          return false;
        }
        onMoreButtonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.moreNode.active = !this.moreNode.active;
        }
        onRedPointRefreshed() {
          let v = this.moreNode.children.some(node => node.getChildByName("RedPoint") && node.getChildByName("RedPoint").active);
          this.moreButtonRedPoint.active = v;
        }
        hideMoreNode() {
          this.moreNode.active = false;
        }
      };
      LobbyBottomButtonLayout.inst = null;
      __decorate([ property(cc.Button) ], LobbyBottomButtonLayout.prototype, "moreButton", void 0);
      __decorate([ property(cc.Node) ], LobbyBottomButtonLayout.prototype, "moreNode", void 0);
      __decorate([ property(cc.Node) ], LobbyBottomButtonLayout.prototype, "moreButtonRedPoint", void 0);
      LobbyBottomButtonLayout = LobbyBottomButtonLayout_1 = __decorate([ ccclass ], LobbyBottomButtonLayout);
      return LobbyBottomButtonLayout;
    })();
    exports.default = LobbyBottomButtonLayout;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  LobbyMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2cf6btJEjVCI5w/GKQcdLHu", "LobbyMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LobbyState = void 0;
    const AppGlobal_1 = require("../AppGlobal");
    const BackButton_1 = require("./BackButton");
    const ShareWindow_1 = require("./ShareWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const GameButton_1 = require("./GameButton");
    const RoomLayout_1 = require("./RoomLayout");
    const NoticeButton_1 = require("./NoticeButton");
    const game_auxi_1 = require("../Framework/lobby/game/game_auxi");
    const TaskBoardButton_1 = require("./TaskBoardButton");
    const InviteRewardButton_1 = require("./InviteRewardButton");
    const AddFavoriteButton_1 = require("./AddFavoriteButton");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var LobbyState;
    (function(LobbyState) {
      LobbyState[LobbyState["GameLayout"] = 0] = "GameLayout";
      LobbyState[LobbyState["RoomLayout"] = 1] = "RoomLayout";
    })(LobbyState = exports.LobbyState || (exports.LobbyState = {}));
    let LobbyMain = (() => {
      let LobbyMain = class LobbyMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.backButton = null;
          this.playerHead = null;
          this.modeSelect = null;
          this.roomLayout = null;
          this.gameLayout = null;
          this.bg = null;
          this.shopButton = null;
          this.serviceButton = null;
          this.withdrawButton = null;
          this.settingButton = null;
          this.ruleButton = null;
          this.taskButton = null;
          this.mailButton = null;
          this.daliyLuckyLotteryButton = null;
          this.taskButtonRedPoint = null;
          this.quickStartButton = null;
          this.safeButton = null;
          this.bindWechatBtn = null;
          this.shareWindow = null;
          this.shopButtonBgNode = null;
          this.topNode = null;
          this.bottomNode = null;
          this.centerNode = null;
          this.leftNode = null;
          this.noticeButton = null;
          this.taskboardBtn = null;
          this.inviteRewardBtn = null;
          this.videoBtn = null;
          this.addFavoriteBtn = null;
          this.screenBlocker = null;
          this._state = LobbyState.GameLayout;
        }
        onLoad() {
          this.bg.spriteFrame = global_data_1.global_data.spriteFrameMap.get("lr_mainbg");
          utils_1.utils.bind_button_event(this.taskboardBtn.button, this.node, "LobbyMain", "onTaskboardBtnClicked");
          utils_1.utils.bind_button_event(this.inviteRewardBtn.button, this.node, "LobbyMain", "onInviteRewardBtnClicked");
          utils_1.utils.bind_button_event(this.videoBtn, this.node, "LobbyMain", "onVideoBtnClicked");
          utils_1.utils.bind_button_event(this.addFavoriteBtn.button, this.node, "LobbyMain", "onAddFavoriteBtnClicked");
          this.leftNode.getComponent(cc.Widget).isAlignLeft = true;
          let getResolutionConfig = function() {
            let w = cc.game.canvas.width;
            let h = cc.game.canvas.height;
            let ratio = w / h;
            return {
              width: w,
              height: h,
              ratio: ratio
            };
          };
          let config = getResolutionConfig();
          if (config.width / config.height > 16 / 9) {
            cc.Canvas.instance.fitHeight = true;
            cc.Canvas.instance.fitWidth = false;
          } else {
            cc.Canvas.instance.fitHeight = false;
            cc.Canvas.instance.fitWidth = true;
          }
          this.roomLayout.getComponent(cc.Widget).alignMode = cc.Widget.AlignMode.ONCE;
          if (cc.winSize.width >= 1520) {
            this.leftNode.getComponent(cc.Widget).left = 80;
            this.roomLayout.getComponent(cc.Widget).left = 230;
            this.roomLayout.getComponent(cc.Widget).right = 230;
          } else {
            this.leftNode.getComponent(cc.Widget).left = 0;
            this.roomLayout.getComponent(cc.Widget).left = 150;
            this.roomLayout.getComponent(cc.Widget).right = 150;
          }
        }
        start() {
          this.safe_on("backButtonClicked", this.backButtonClicked, this);
          this.safe_on("gameButtonClicked", this.gameButtonClicked, this);
          utils_1.utils.on("RefreshTaskButtonRedPoint", this, this.onEventRefreshTaskButtonRedPoint);
          utils_1.utils.on("EnterAuxiResult", this, this.onEventEnterAuxiResult);
          utils_1.utils.on("ToRoomLayout", this, this.onEventToRoomLayout);
          utils_1.utils.on("RefreshMailData", this, this.onEventRefreshMailData);
          utils_1.utils.on("PushTask", this, this.onEventPushTask);
          this._state = LobbyState.GameLayout;
          this.roomLayout.active = false;
          this.modeSelect.active = false;
          this.backButton.node.active = false;
          this.playerHead.active = true;
          this.gameLayout.active = true;
          this.serviceButton.node.active = true;
          this.settingButton.node.active = true;
          this.withdrawButton.node.active = global_data_1.global_data.have_module_exchange();
          this.ruleButton.node.active = global_data_1.global_data.have_module_gamelist();
          this.taskButton.node.active = true;
          this.noticeButton.node.active = true;
          this.mailButton.node.active = global_data_1.global_data.have_module_notice();
          this.daliyLuckyLotteryButton.node.active = global_data_1.global_data.have_module_activity();
          this.taskboardBtn.node.active = global_data_1.global_data.have_module_wechat_share();
          this.inviteRewardBtn.node.active = false;
          this.refreshRedPoint();
          if (!utils_1.utils.is_wechat()) {
            if (utils_1.utils.is_oppo()) {
              this.inviteRewardBtn.node.active = false;
              this.taskboardBtn.node.active = true;
              this.addFavoriteBtn.node.active = true;
            }
            if (utils_1.utils.is_mi()) {
              this.inviteRewardBtn.node.active = false;
              this.taskboardBtn.node.active = true;
              this.addFavoriteBtn.node.active = true;
              this.serviceButton.node.active = false;
            } else {
              this.inviteRewardBtn.node.active = false;
              this.taskboardBtn.node.active = true;
              this.addFavoriteBtn.node.active = false;
            }
          }
          utils_1.utils.bind_button_event(this.shopButton, this.node, "LobbyMain", "onShopButtonClicked");
          utils_1.utils.bind_button_event(this.serviceButton, this.node, "LobbyMain", "onServiceButtonClicked");
          utils_1.utils.bind_button_event(this.withdrawButton, this.node, "LobbyMain", "onWithdrawButtonClicked");
          utils_1.utils.bind_button_event(this.settingButton, this.node, "LobbyMain", "onSettingButtonClicked");
          utils_1.utils.bind_button_event(this.ruleButton, this.node, "LobbyMain", "onRuleButtonClicked");
          utils_1.utils.bind_button_event(this.quickStartButton, this.node, "LobbyMain", "onQuickStartButtonClicked");
          utils_1.utils.bind_button_event(this.safeButton, this.node, "LobbyMain", "onSafeButtonClicked");
          utils_1.utils.bind_button_event(this.taskButton, this.node, "LobbyMain", "onTaskButtonClicked");
          utils_1.utils.bind_button_event(this.mailButton, this.node, "LobbyMain", "onMailButtonClicked");
          utils_1.utils.bind_button_event(this.daliyLuckyLotteryButton, this.node, "LobbyMain", "onDaliyLuckyLotteryButtonClicked");
          utils_1.utils.bind_button_event(this.noticeButton.button, this.node, "LobbyMain", "onNoticeBtnClicked");
          if (utils_1.utils.is_wechat() && cc.isValid(this.safeButton) && !global_data_1.global_data.check_bind_wechat()) {
            let that = this;
            utils_1.utils.load_simple_button({
              name: "bindWechatButton",
              sprite: "wx/bind_button",
              complete: btn => {
                that.bindWechatBtn = btn;
                that.bindWechatBtn.node.setParent(that.safeButton.node.parent);
                that.bindWechatBtn.node.setPosition(cc.v2(that.safeButton.node.x + 120, that.safeButton.node.y - 20));
                utils_1.utils.bind_button_event(btn, that.node, "LobbyMain", "onBindButtonClicked");
              }
            });
          }
          this.shopButton.node.active = global_data_1.global_data.have_module_shop();
          this.shopButtonBgNode.active = global_data_1.global_data.have_module_shop();
          AppGlobal_1.AppGlobal.getInstance().lobbyMain = this;
          global_data_1.global_data.single_game_mode() ? this.setRoomLayout(global_data_1.global_data.game_id) : null != global_data_1.global_data.last_room_data && this.setRoomLayout(global_data_1.global_data.last_room_data._int_game_id);
        }
        onDestroy() {
          utils_1.utils.off("RefreshTaskButtonRedPoint", this, this.onEventRefreshTaskButtonRedPoint);
          utils_1.utils.off("EnterAuxiResult", this, this.onEventEnterAuxiResult);
          utils_1.utils.off("ToRoomLayout", this, this.onEventToRoomLayout);
          utils_1.utils.off("RefreshMailData", this, this.onEventRefreshMailData);
          utils_1.utils.off("PushTask", this, this.onEventPushTask);
        }
        onEventRefreshTaskButtonRedPoint() {
          this.refreshRedPoint();
        }
        onEventRefreshMailData() {
          if (!global_data_1.global_data.mail_data || 0 == global_data_1.global_data.mail_data.length) return;
          this.mailButton.node.getChildByName("RedPoint").active = global_data_1.global_data.mail_data.some(function(value) {
            return false == value.read || value.items.length > 0 && false == value.received;
          });
        }
        onEventToRoomLayout(gameId) {
          this.toRoomLayout(gameId);
        }
        onEventEnterAuxiResult(param) {
          if (cc.isValid(AppGlobal_1.AppGlobal.getInstance().privatePanel)) AppGlobal_1.AppGlobal.getInstance().privatePanel.on_enter_auxi_result(param); else {
            let int_code = param.int_code;
            let str_result = param.str_result;
            if (int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20) {
              let cmd = "enter_private_room:";
              cmd += 1e3 * game_auxi_1.game_auxi._int_enter_game_id + game_auxi_1.game_auxi._int_enter_room_id;
              cmd += "|";
              cmd += game_auxi_1.game_auxi._enter_private_code;
              lobby_framework_1.lobby_framework.do_command(cmd, "");
            } else utils_1.utils.show_hint(str_result);
          }
        }
        onEventPushTask(any) {
          cc.isValid(this.taskButtonRedPoint) && !this.taskButtonRedPoint.active && (this.taskButtonRedPoint.active = true);
        }
        refreshRedPoint() {
          if (cc.isValid(this.taskButtonRedPoint)) {
            let v1 = global_data_1.global_data.new_task_data.forever_tasks.some(x => 2 == x.status);
            let v2 = global_data_1.global_data.new_task_data.day_tasks.some(x => 2 == x.status);
            let v3 = global_data_1.global_data.new_task_data.week_tasks.some(x => 2 == x.status);
            this.taskButtonRedPoint.active = !!(v1 || v2 || v3);
          }
        }
        setRoomLayout(gameID) {
          this._state = LobbyState.RoomLayout;
          this.gameLayout.active = false;
          this.modeSelect.active = false;
          if (global_data_1.global_data.single_game_mode()) {
            this.backButton.node.active = false;
            this.playerHead.active = true;
          } else {
            this.backButton.node.active = true;
            this.backButton.setBack(gameID);
            this.playerHead.active = false;
          }
          this.roomLayout.active = true;
          this.roomLayout.getComponent(RoomLayout_1.default).init(gameID);
          utils_1.utils.is_baidu() || utils_1.utils.is_mi() ? global_data_1.global_data.have_module_gamelist() && !global_data_1.global_data.single_game_mode() && (this.leftNode.active = false) : utils_1.utils.is_wechat() && (this.leftNode.active = false);
        }
        toRoomLayout(gameId, move_duration) {
          this.screenAction(null != move_duration ? move_duration : .25, function() {
            this.screenBlocker.active = true;
          }, function() {
            this.setRoomLayout(gameId);
          }, function() {
            this.screenBlocker.active = false;
          });
        }
        toGameLayout(move_duration) {
          this.screenAction(null != move_duration ? move_duration : .25, function() {
            this.screenBlocker.active = true;
          }, function() {
            this._state = LobbyState.GameLayout;
            this.roomLayout.active = false;
            this.modeSelect.active = false;
            this.backButton.node.active = false;
            this.playerHead.active = true;
            this.gameLayout.active = true;
            this.leftNode.active = true;
          }, function() {
            this.screenBlocker.active = false;
          });
        }
        screenAction(move_duration, begin_func, main_func, end_func) {
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.callFunc(begin_func, this), cc.callFunc(this.moveOut, this, move_duration), cc.delayTime(move_duration), cc.callFunc(main_func, this), cc.callFunc(this.moveIn, this, move_duration), cc.delayTime(move_duration), cc.callFunc(end_func, this)));
        }
        moveIn(target, move_duration) {
          this.leftNode.runAction(cc.fadeIn(move_duration));
          this.topNode.runAction(cc.moveBy(move_duration, cc.v2(0, -100)));
          this.bottomNode.runAction(cc.moveBy(move_duration, cc.v2(0, 100)));
          this.centerNode.runAction(cc.fadeIn(move_duration));
        }
        moveOut(target, move_duration) {
          this.leftNode.runAction(cc.fadeOut(move_duration));
          this.topNode.runAction(cc.moveBy(move_duration, cc.v2(0, 100)));
          this.bottomNode.runAction(cc.moveBy(move_duration, cc.v2(0, -100)));
          this.centerNode.runAction(cc.fadeOut(move_duration));
        }
        backButtonClicked(event) {
          this._state == LobbyState.RoomLayout && this.toGameLayout();
        }
        onShopButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showShopLayout("Gold");
        }
        onServiceButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          platform_1.platform.inst.openCustomerServiceConversation({});
        }
        onWithdrawButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showExchangePanel();
        }
        onSettingButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showSettingBox();
        }
        onRuleButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showRules();
        }
        onTaskButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showTasksNew();
        }
        onMailButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showMailPanel();
        }
        onDaliyLuckyLotteryButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showDaliyLuckyLotteryPanel();
        }
        onSafeButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showSafePanel();
        }
        onBindButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showBindWechat();
        }
        onQuickStartButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          try {
            if (this._state == LobbyState.RoomLayout) lobby_framework_1.lobby_framework.quick_enter_game(this.roomLayout.getComponent(RoomLayout_1.default).gameId); else if (null == global_data_1.global_data.last_room_data) {
              let game_id = global_data_1.global_data.game_json_data.wechatgame.filter(x => x.id == global_data_1.global_data.game_id)[0].list[0];
              lobby_framework_1.lobby_framework.quick_enter_game(game_id);
            } else lobby_framework_1.lobby_framework.quick_enter_game(global_data_1.global_data.last_room_data._int_game_id);
          } catch (e) {
            utils_1.utils.show_hint("\u5feb\u901f\u5f00\u59cb\u6e38\u620f\u5931\u8d25");
            console.log("\u5feb\u901f\u5f00\u59cb\u6e38\u620f\u5931\u8d25", e);
          }
        }
        gameButtonClicked(event) {
          let gameid = event.target.getComponent(GameButton_1.default).data.gameid;
          console.log("gameid", gameid);
          this.toRoomLayout(gameid);
        }
        onTaskboardBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showTaskBoard();
        }
        onInviteRewardBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showInviteReward();
        }
        onVideoBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
        }
        onAddFavoriteBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.do_task(lobby_types_1.lobby_types.RewardWebType.AddFavorite);
        }
        onNoticeBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().showNoticePanel();
        }
      };
      __decorate([ property(BackButton_1.default) ], LobbyMain.prototype, "backButton", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "playerHead", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "modeSelect", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "roomLayout", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "gameLayout", void 0);
      __decorate([ property(cc.Sprite) ], LobbyMain.prototype, "bg", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "shopButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "serviceButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "withdrawButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "settingButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "ruleButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "taskButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "mailButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "daliyLuckyLotteryButton", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "taskButtonRedPoint", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "quickStartButton", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "safeButton", void 0);
      __decorate([ property(ShareWindow_1.default) ], LobbyMain.prototype, "shareWindow", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "shopButtonBgNode", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "topNode", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "bottomNode", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "centerNode", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "leftNode", void 0);
      __decorate([ property(NoticeButton_1.default) ], LobbyMain.prototype, "noticeButton", void 0);
      __decorate([ property(TaskBoardButton_1.default) ], LobbyMain.prototype, "taskboardBtn", void 0);
      __decorate([ property(InviteRewardButton_1.default) ], LobbyMain.prototype, "inviteRewardBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyMain.prototype, "videoBtn", void 0);
      __decorate([ property(AddFavoriteButton_1.default) ], LobbyMain.prototype, "addFavoriteBtn", void 0);
      __decorate([ property(cc.Node) ], LobbyMain.prototype, "screenBlocker", void 0);
      LobbyMain = __decorate([ ccclass ], LobbyMain);
      return LobbyMain;
    })();
    exports.default = LobbyMain;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/game/game_auxi": "game_auxi",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./AddFavoriteButton": "AddFavoriteButton",
    "./BackButton": "BackButton",
    "./GameButton": "GameButton",
    "./InviteRewardButton": "InviteRewardButton",
    "./NoticeButton": "NoticeButton",
    "./RoomLayout": "RoomLayout",
    "./ShareWindow": "ShareWindow",
    "./TaskBoardButton": "TaskBoardButton"
  } ],
  LobbyRuleLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0e567DveLRA5oGlgwJ5x80M", "LobbyRuleLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MaPai = exports.TiCaiShen = exports.Chi = exports.PlayerCount = exports.CardsCount = exports.CaiShenType = exports.CaiShen = exports.EditorType = void 0;
    const DropDown_1 = require("./DropDown");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const CardPoolEditor_1 = require("./CardPoolEditor");
    const HuaCardEditor_1 = require("./HuaCardEditor");
    const CaiShenCardEditor_1 = require("./CaiShenCardEditor");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var EditorType;
    (function(EditorType) {
      EditorType[EditorType["NO"] = 1] = "NO";
      EditorType[EditorType["NEW"] = 2] = "NEW";
      EditorType[EditorType["OLD"] = 3] = "OLD";
    })(EditorType = exports.EditorType || (exports.EditorType = {}));
    var CaiShen;
    (function(CaiShen) {
      CaiShen[CaiShen["NO"] = 1] = "NO";
      CaiShen[CaiShen["HAVE"] = 2] = "HAVE";
    })(CaiShen = exports.CaiShen || (exports.CaiShen = {}));
    var CaiShenType;
    (function(CaiShenType) {
      CaiShenType[CaiShenType["SAN"] = 1] = "SAN";
      CaiShenType[CaiShenType["SI"] = 2] = "SI";
      CaiShenType[CaiShenType["BAIBAN"] = 3] = "BAIBAN";
      CaiShenType[CaiShenType["HONGZHONG"] = 4] = "HONGZHONG";
      CaiShenType[CaiShenType["CUSTOM"] = 99] = "CUSTOM";
    })(CaiShenType = exports.CaiShenType || (exports.CaiShenType = {}));
    var CardsCount;
    (function(CardsCount) {
      CardsCount[CardsCount["SHISI"] = 1] = "SHISI";
      CardsCount[CardsCount["SHIQI"] = 2] = "SHIQI";
    })(CardsCount = exports.CardsCount || (exports.CardsCount = {}));
    var PlayerCount;
    (function(PlayerCount) {
      PlayerCount[PlayerCount["SI"] = 1] = "SI";
      PlayerCount[PlayerCount["SAN"] = 2] = "SAN";
      PlayerCount[PlayerCount["ER"] = 3] = "ER";
    })(PlayerCount = exports.PlayerCount || (exports.PlayerCount = {}));
    var Chi;
    (function(Chi) {
      Chi[Chi["HAVE"] = 1] = "HAVE";
      Chi[Chi["NO"] = 2] = "NO";
    })(Chi = exports.Chi || (exports.Chi = {}));
    var TiCaiShen;
    (function(TiCaiShen) {
      TiCaiShen[TiCaiShen["NO"] = 1] = "NO";
      TiCaiShen[TiCaiShen["HAVE"] = 2] = "HAVE";
    })(TiCaiShen = exports.TiCaiShen || (exports.TiCaiShen = {}));
    var MaPai;
    (function(MaPai) {
      MaPai[MaPai["NO"] = 1] = "NO";
      MaPai[MaPai["HAVE"] = 2] = "HAVE";
    })(MaPai = exports.MaPai || (exports.MaPai = {}));
    let LobbyRuleLayout = (() => {
      let LobbyRuleLayout = class LobbyRuleLayout extends cc.Component {
        constructor() {
          super(...arguments);
          this.ruleLayout = null;
          this.tip_200 = null;
          this.tip_600 = null;
          this.tip_900 = null;
          this.ruleBg = null;
          this.cptCardPoolEditor = null;
          this.cptHuaCardEditor = null;
          this.cptCaiShenCardEditor = null;
          this.editor_id = null;
          this.editor_name = null;
          this.drop_item_height = 66;
          this.drop_item_space = 15;
        }
        onLoad() {
          utils_1.utils.on("DropDownItemToggle", this, this.onDropDownItemToggleClicked);
          utils_1.utils.on("HideAllDropDown", this, this.onHideAllDropDown);
          utils_1.utils.on("HideDropDown", this, this.onHideDropDown);
          utils_1.utils.on("ShowDropDown", this, this.onShowDropDown);
          utils_1.utils.on("CardPoolEditor", this, this.onCardPoolEditor);
          utils_1.utils.on("HuaCardEditor", this, this.onHuaCardEditor);
          utils_1.utils.on("CaiShenCardEditor", this, this.onCaiShenCardEditor);
          utils_1.utils.bind_button_event(this.tip_200, this.node, "LobbyRuleLayout", "onTip200Clicked");
          utils_1.utils.bind_button_event(this.tip_600, this.node, "LobbyRuleLayout", "onTip600Clicked");
          utils_1.utils.bind_button_event(this.tip_900, this.node, "LobbyRuleLayout", "onTip900Clicked");
          utils_1.utils.bind_button_event(this.ruleBg, this.node, "LobbyRuleLayout", "onRuleBgClicked");
          utils_1.utils.bind_button_event(this.ruleLayout.getChildByName("100").getChildByName("zidingyi").addComponent(cc.Button), this.node, "LobbyRuleLayout", "onCustom100Clicked");
          utils_1.utils.bind_button_event(this.ruleLayout.getChildByName("200").getChildByName("zidingyi").addComponent(cc.Button), this.node, "LobbyRuleLayout", "onCustom200Clicked");
          utils_1.utils.bind_button_event(this.ruleLayout.getChildByName("600").getChildByName("700").getChildByName("DropDownBox").getChildByName("zidingyi").addComponent(cc.Button), this.node, "LobbyRuleLayout", "onCustom700Clicked");
        }
        start() {
          this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
          this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
          this.ruleLayout.parent.getComponent(cc.ScrollView).inertia = false;
          this.ruleLayout.parent.getComponent(cc.ScrollView).elastic = false;
        }
        onTip200Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.ruleLayout.getChildByName("200").setSiblingIndex(this.ruleLayout.childrenCount + 1);
          this.closeOtherTip(200);
          this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        onTip600Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.ruleLayout.getChildByName("600").setSiblingIndex(this.ruleLayout.childrenCount + 1);
          this.closeOtherTip(600);
          this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        onTip900Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.ruleLayout.getChildByName("900").setSiblingIndex(this.ruleLayout.childrenCount + 1);
          this.closeOtherTip(900);
          this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        closeOtherTip(tipID) {
          if (200 == tipID) {
            this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = false;
          } else if (600 == tipID) {
            this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = false;
          } else if (900 == tipID) {
            this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
          }
        }
        onRuleBgClicked() {
          this.hideAllDropDown();
          this.refreshLayoutChildPosition(null);
          this.hideTips();
        }
        onCustom100Clicked() {
          this.hideAllDropDown();
          this.refreshLayoutChildPosition(null);
          this.hideTips();
          this.cptCardPoolEditor.show(custom_lobby_1.custom_lobby.current_player_rule.remove.remove);
        }
        onCustom200Clicked() {
          this.hideAllDropDown();
          this.refreshLayoutChildPosition(null);
          this.hideTips();
          this.cptHuaCardEditor.show(custom_lobby_1.custom_lobby.current_player_rule.remove.remove, custom_lobby_1.custom_lobby.current_player_rule.buhua);
        }
        onCustom700Clicked() {
          this.hideAllDropDown();
          this.refreshLayoutChildPosition(null);
          this.hideTips();
          this.cptCaiShenCardEditor.show(custom_lobby_1.custom_lobby.current_player_rule.remove.remove);
        }
        hideTips() {
          this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
          this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
        }
        showCreateLayout() {
          custom_lobby_1.custom_lobby.fetch_game_config_new();
          custom_lobby_1.custom_lobby.create_default_player_rule_new();
          custom_lobby_1.custom_lobby.editor_type = EditorType.NEW;
          this.setData_100();
          custom_lobby_1.custom_lobby.reset_hua_config();
          this.filter_200();
          this.setData_300();
          this.setData_400();
          this.setData_500();
          let _600 = custom_lobby_1.custom_lobby.have_caishen() ? 0 : 1;
          this.setData_600(_600);
          this.setData_700(0, custom_lobby_1.custom_lobby.have_caishen());
          this.setData_800(0, custom_lobby_1.custom_lobby.have_caishen());
          this.setData_900();
          this.refreshLayoutChildPosition();
          tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_2_1, .1);
        }
        showEditorLayout() {
          custom_lobby_1.custom_lobby.fetch_game_config_new();
          custom_lobby_1.custom_lobby.editor_type = EditorType.OLD;
          this.editor_id = custom_lobby_1.custom_lobby.current_player_rule.id;
          this.editor_name = custom_lobby_1.custom_lobby.current_player_rule.name;
          custom_lobby_1.custom_lobby.location_province_id = custom_lobby_1.custom_lobby.current_player_rule.province_id;
          custom_lobby_1.custom_lobby.location_city_id = custom_lobby_1.custom_lobby.current_player_rule.city_id;
          let id_100 = custom_lobby_1.custom_lobby.current_player_rule.rule_id;
          let _100 = custom_lobby_1.custom_lobby.get_config_index_by_id(id_100);
          this.setData_100(_100);
          custom_lobby_1.custom_lobby.reset_hua_config();
          this.filter_200();
          let id_200 = custom_lobby_1.custom_lobby.current_player_rule.hua_id;
          let _200 = custom_lobby_1.custom_lobby.get_config_index_by_id(id_200);
          this.setData_200(_200);
          let id_300 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 1 == x.id).op[0];
          let _300 = id_300 - 1;
          this.setData_300(_300);
          let id_400 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 2 == x.id).op[0];
          let _400 = id_400 - 1;
          this.setData_400(_400);
          let id_500 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 4 == x.id).op[0];
          let _500 = id_500 - 1;
          this.setData_500(_500);
          let id_600 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 3 == x.id).op[0];
          let _600 = 0;
          _600 = id_600 == CaiShen.HAVE ? 0 : 1;
          this.setData_600(_600);
          if (custom_lobby_1.custom_lobby.have_caishen()) {
            custom_lobby_1.custom_lobby.reset_caishen_type_config();
            this.filter_700(0, false);
            let id_700 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0];
            let _700 = id_700 - 1;
            this.setData_700(_700);
          } else this.setData_700(0, false);
          if (custom_lobby_1.custom_lobby.have_baiban()) {
            let id_800 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 102 == x.id).op[0];
            let _800 = id_800 - 1;
            this.setData_800(_800);
          } else this.setData_800(0, false);
          let rule_5 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 5 == x.id);
          if (rule_5) {
            let id_900 = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 5 == x.id).op[0];
            let _900 = id_900 - 1;
            this.setData_900(_900);
          } else this.setData_900(0, false);
          this.refreshLayoutChildPosition();
        }
        setData_100(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("100", visabel);
          if (!visabel) return;
          let config_line_100 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 100 == value.id);
          this.ruleLayout.getChildByName("100").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_100, index);
          -1 == index && this.ruleLayout.getChildByName("100").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_card_pool_desc(custom_lobby_1.custom_lobby.current_player_rule.remove.remove));
        }
        setData_200(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("200", visabel);
          if (!visabel) return;
          let config_line_200 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 200 == value.id);
          console.log("setData_200 : ", config_line_200);
          this.ruleLayout.getChildByName("200").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_200, index);
          -1 == index && this.ruleLayout.getChildByName("200").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_hua_card_desc(custom_lobby_1.custom_lobby.current_player_rule.buhua));
        }
        setData_300(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("300", visabel);
          if (!visabel) return;
          let config_line_300 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 300 == value.id);
          this.ruleLayout.getChildByName("300").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_300, index);
        }
        setData_400(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("400", visabel);
          if (!visabel) return;
          let config_line_400 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 400 == value.id);
          this.ruleLayout.getChildByName("300").getChildByName("400").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_400, index);
        }
        setData_500(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("500", visabel);
          if (!visabel) return;
          let config_line_500 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 500 == value.id);
          this.ruleLayout.getChildByName("500").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_500, index);
        }
        setData_600(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("600", visabel);
          if (!visabel) return;
          let config_line_600 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 600 == value.id);
          this.ruleLayout.getChildByName("600").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_600, index);
        }
        setData_700(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("700", visabel);
          if (!visabel) return;
          let config_line_700 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 700 == value.id);
          this.ruleLayout.getChildByName("600").getChildByName("700").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_700, index);
          index + 1 == CaiShenType.CUSTOM && this.ruleLayout.getChildByName("600").getChildByName("700").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_caishen_card_desc(custom_lobby_1.custom_lobby.current_player_rule.custom_caishen));
        }
        setData_800(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("800", visabel);
          if (!visabel) return;
          let config_line_800 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 800 == value.id);
          this.ruleLayout.getChildByName("800").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_800, index);
        }
        setData_900(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("900", visabel);
          if (!visabel) return;
          let config_line_900 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 900 == value.id);
          this.ruleLayout.getChildByName("900").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_900, index);
        }
        refresh_200(ID_100) {
          custom_lobby_1.custom_lobby.current_player_rule.rule_id = ID_100;
          custom_lobby_1.custom_lobby.current_player_rule.hua_id = 201;
          custom_lobby_1.custom_lobby.reset_hua_config();
          this.filter_200();
        }
        filter_200(index = 0) {
          this.setRuleLayoutChildVisable("200", true);
          let config_line_200 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 200 == value.id);
          let data = custom_lobby_1.custom_lobby.current_player_rule.remove.remove;
          let hua = custom_lobby_1.custom_lobby.get_hua_rule_config();
          for (let i = 0; i < data.length; i++) for (let j = 0; j < hua.length; j++) {
            let hua_l = hua[j].list;
            for (let k = 0; k < hua_l.length; k++) if (data[i] == hua_l[k]) {
              let remove_id = hua[j].id;
              config_line_200.list = config_line_200.list.filter((v, i) => v.id != remove_id);
              break;
            }
          }
          this.ruleLayout.getChildByName("200").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_200, index);
        }
        filter_700(index = 0, refresh = true) {
          let config_line_700 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 700 == value.id);
          let num = 0;
          let list = [];
          if (custom_lobby_1.custom_lobby.have_caishen()) {
            let data = custom_lobby_1.custom_lobby.current_player_rule.remove.remove;
            for (let i = 0; i < data.length; i++) if (47 == data[i]) {
              if (!list.contains(47)) {
                list.push(47);
                config_line_700.list = config_line_700.list.filter((v, i) => 703 != v.id);
              }
            } else if (45 == data[i] && !list.contains(45)) {
              list.push(45);
              config_line_700.list = config_line_700.list.filter((v, i) => 704 != v.id);
            }
            this.ruleLayout.getChildByName("600").getChildByName("700").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_700, index);
            if (refresh) {
              custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.SAN;
              custom_lobby_1.custom_lobby.current_player_rule.custom_caishen = [];
            }
            this.setRuleLayoutChildVisable("700", true);
          } else this.setRuleLayoutChildVisable("700", false);
          return num;
        }
        refresh_300() {
          custom_lobby_1.custom_lobby.reset_player_count_config();
          this.setRuleLayoutChildVisable("300");
          let config_line_300 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 300 == value.id);
          this.ruleLayout.getChildByName("300").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_300, 0);
        }
        refresh_400() {
          custom_lobby_1.custom_lobby.reset_hanc_card_count_config();
          this.setRuleLayoutChildVisable("400");
          let config_line_400 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 400 == value.id);
          this.ruleLayout.getChildByName("300").getChildByName("400").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_400, 0);
        }
        refresh_500() {
          custom_lobby_1.custom_lobby.reset_handle_config();
          this.setRuleLayoutChildVisable("500");
          let config_line_500 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 500 == value.id);
          this.ruleLayout.getChildByName("500").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_500, 0);
        }
        refresh_600(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("600", visabel);
          if (!visabel) return;
          custom_lobby_1.custom_lobby.reset_caishen_config();
          let config_line_600 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 600 == value.id);
          this.ruleLayout.getChildByName("600").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_600, index);
        }
        refresh_700(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("700", visabel);
          if (!visabel) return;
          custom_lobby_1.custom_lobby.reset_caishen_type_config();
          this.filter_700();
        }
        refresh_800(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("800", visabel);
          if (!visabel) return;
          custom_lobby_1.custom_lobby.reset_baiban_config();
          let config_line_800 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 800 == value.id);
          custom_lobby_1.custom_lobby.have_baiban() ? this.ruleLayout.getChildByName("800").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_800, 0) : this.setRuleLayoutChildVisable("800", false);
          custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 102 == x.id).op[0] = TiCaiShen.NO;
        }
        refresh_900(index = 0, visabel = true) {
          this.setRuleLayoutChildVisable("900", visabel);
          if (!visabel) return;
          custom_lobby_1.custom_lobby.reset_mapai_config();
          let config_line_900 = custom_lobby_1.custom_lobby.default_game_config.config.find((value, index) => 900 == value.id);
          this.ruleLayout.getChildByName("900").getChildByName("DropDownBox").getComponent(DropDown_1.default).setData(config_line_900, index);
        }
        setRuleLayoutChildVisable(name, visabel = true) {
          "400" == name ? this.ruleLayout.getChildByName("300").getChildByName(name).getChildByName("DropDownBox").active = visabel : "700" == name ? this.ruleLayout.getChildByName("600").getChildByName(name).getChildByName("DropDownBox").active = visabel : this.ruleLayout.getChildByName(name).getChildByName("DropDownBox").active = visabel;
        }
        onDropDownItemToggleClicked(toggleID) {
          console.log("onDropDownItemToggleClicked : ", toggleID);
          if (100 * Math.floor(toggleID / 100) == 100) {
            custom_lobby_1.custom_lobby.current_player_rule = null;
            custom_lobby_1.custom_lobby.create_default_player_rule_new();
            this.editor_name && (custom_lobby_1.custom_lobby.current_player_rule.name = this.editor_name);
            this.editor_id && (custom_lobby_1.custom_lobby.current_player_rule.id = this.editor_id);
            custom_lobby_1.custom_lobby.current_player_rule.remove.remove = custom_lobby_1.custom_lobby.get_remove_card_rule_config(toggleID);
            this.refresh_200(toggleID);
            this.refresh_300();
            this.refresh_400();
            this.refresh_500();
            let _600 = custom_lobby_1.custom_lobby.have_caishen() ? 0 : 1;
            this.refresh_600(_600);
            this.refresh_700(0, custom_lobby_1.custom_lobby.have_caishen());
            this.refresh_800(0, custom_lobby_1.custom_lobby.have_caishen());
            this.refresh_900();
          } else if (100 * Math.floor(toggleID / 100) == 200) {
            custom_lobby_1.custom_lobby.current_player_rule.hua_id = toggleID;
            custom_lobby_1.custom_lobby.current_player_rule.buhua = custom_lobby_1.custom_lobby.get_hua_rule_single_config(toggleID);
          } else if (100 * Math.floor(toggleID / 100) == 300) 301 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 1 == x.id).op[0] = PlayerCount.SI : 302 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 1 == x.id).op[0] = PlayerCount.SAN : 303 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 1 == x.id).op[0] = PlayerCount.ER); else if (100 * Math.floor(toggleID / 100) == 400) 401 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 2 == x.id).op[0] = CardsCount.SHISI : 402 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 2 == x.id).op[0] = CardsCount.SHIQI); else if (100 * Math.floor(toggleID / 100) == 500) 501 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 4 == x.id).op[0] = Chi.HAVE : 502 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 4 == x.id).op[0] = Chi.NO); else if (100 * Math.floor(toggleID / 100) == 600) {
            601 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 3 == x.id).op[0] = CaiShen.HAVE : 602 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 3 == x.id).op[0] = CaiShen.NO);
            this.refresh_700();
            this.refresh_800();
          } else if (100 * Math.floor(toggleID / 100) == 700) {
            701 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.SAN : 702 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.SI : 703 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.BAIBAN : 704 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.HONGZHONG);
            custom_lobby_1.custom_lobby.current_player_rule.custom_caishen = [];
            this.refresh_800();
          } else 100 * Math.floor(toggleID / 100) == 800 ? 801 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 102 == x.id).op[0] = TiCaiShen.NO : 802 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 102 == x.id).op[0] = TiCaiShen.HAVE) : 100 * Math.floor(toggleID / 100) == 900 && (901 == toggleID ? custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 5 == x.id).op[0] = MaPai.NO : 902 == toggleID && (custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 5 == x.id).op[0] = MaPai.HAVE));
          this.refreshLayoutChildPosition(false, 100 * Math.floor(toggleID / 100));
        }
        onCardPoolEditor(arr) {
          let toggleID = 199;
          custom_lobby_1.custom_lobby.current_player_rule = null;
          custom_lobby_1.custom_lobby.create_default_player_rule_new();
          this.editor_name && (custom_lobby_1.custom_lobby.current_player_rule.name = this.editor_name);
          this.editor_id && (custom_lobby_1.custom_lobby.current_player_rule.id = this.editor_id);
          custom_lobby_1.custom_lobby.current_player_rule.remove.remove = arr;
          this.refresh_200(toggleID);
          this.refresh_300();
          this.refresh_400();
          this.refresh_500();
          let _600 = custom_lobby_1.custom_lobby.have_caishen() ? 0 : 1;
          this.refresh_600(_600);
          this.refresh_700(0, custom_lobby_1.custom_lobby.have_caishen());
          this.refresh_800(0, custom_lobby_1.custom_lobby.have_caishen());
          this.refresh_900();
          this.refreshLayoutChildPosition(false, 100 * Math.floor(toggleID / 100));
          this.ruleLayout.getChildByName("100").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_card_pool_desc(arr));
        }
        onHuaCardEditor(arr) {
          custom_lobby_1.custom_lobby.current_player_rule.hua_id = 299;
          custom_lobby_1.custom_lobby.current_player_rule.buhua = arr;
          this.ruleLayout.getChildByName("200").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_hua_card_desc(arr));
        }
        onCaiShenCardEditor(arr) {
          let toggleID = 799;
          this.cptCaiShenCardEditor.hide();
          custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0] = CaiShenType.CUSTOM;
          custom_lobby_1.custom_lobby.current_player_rule.custom_caishen = arr;
          this.refresh_800();
          this.refreshLayoutChildPosition(false, 100 * Math.floor(toggleID / 100));
          this.ruleLayout.getChildByName("600").getChildByName("700").getChildByName("DropDownBox").getComponent(DropDown_1.default).setCustomValue("\u81ea\u5b9a\u4e49", custom_lobby_1.custom_lobby.get_caishen_card_desc(arr));
        }
        hideAllDropDown() {
          for (let i = 1; i < 10; i++) {
            let name = 100 * i + "";
            let dropList = null;
            dropList = "400" == name ? this.ruleLayout.getChildByName("300").getChildByName(name).getChildByName("DropDownBox").getComponent(DropDown_1.default) : "700" == name ? this.ruleLayout.getChildByName("600").getChildByName(name).getChildByName("DropDownBox").getComponent(DropDown_1.default) : this.ruleLayout.getChildByName(name).getChildByName("DropDownBox").getComponent(DropDown_1.default);
            dropList.node.active && dropList.hide();
          }
        }
        onHideAllDropDown(dropDownID) {
          this.hideAllDropDown();
        }
        onHideDropDown(dropDownID) {
          this.refreshLayoutChildPosition(false, dropDownID);
        }
        onShowDropDown(dropDownID, childCount) {
          this.refreshLayoutChildPosition(true, dropDownID, childCount);
        }
        refreshLayoutChildPosition(refreshDrop = false, dropDownID = null, childCount = 0) {
          let show_count = 0;
          for (let i = 1; i < 10; i++) {
            if (4 == i || 7 == i) continue;
            this.getRuleLayoutChildVisableByName(`${100 * i}`) && show_count++;
          }
          let layout_width = this.ruleLayout.getContentSize().width;
          let layout_hight = this.drop_item_height * show_count + this.drop_item_space * (show_count - 1);
          this.ruleLayout.setContentSize(layout_width, layout_hight);
          show_count = 0;
          let pos_x = 68;
          let start_pos_y = this.ruleLayout.getChildByName("100").getPosition().y;
          for (let i = 1; i < 10; i++) {
            if (4 == i || 7 == i) continue;
            let name = `${100 * i}`;
            if (this.getRuleLayoutChildVisableByName(name)) {
              show_count++;
              let pos_y = start_pos_y - (show_count - 1) * (this.drop_item_height + this.drop_item_space);
              this.resetLayoutChildPosition(name, new cc.Vec2(pos_x, pos_y));
            }
          }
          if (refreshDrop && dropDownID && dropDownID >= 500) {
            let last_dropDown_node = this.ruleLayout.getChildByName("900");
            let last_layout_node_pos_y = last_dropDown_node.getPosition().y - .5 * last_dropDown_node.getContentSize().height;
            let current_child = this.getRuleLayoutChildByName(`${dropDownID}`);
            let all_item_hight = 56 * childCount + .5 * current_child.getContentSize().height;
            let last_dropdown_node_pos_y = current_child.getPosition().y - all_item_hight;
            let space_y = last_layout_node_pos_y - last_dropdown_node_pos_y;
            if (space_y > 0) {
              this.ruleLayout.setContentSize(layout_width, layout_hight + space_y);
              this.ruleLayout.parent.getComponent(cc.ScrollView).scrollToBottom();
            }
          }
        }
        getRuleLayoutChildVisableByName(name) {
          let visabel = false;
          visabel = "400" == name ? this.ruleLayout.getChildByName("300").getChildByName(name).getChildByName("DropDownBox").active : "700" == name ? this.ruleLayout.getChildByName("600").getChildByName(name).getChildByName("DropDownBox").active : this.ruleLayout.getChildByName(name).getChildByName("DropDownBox").active;
          return visabel;
        }
        getRuleLayoutChildByName(name) {
          let node = null;
          node = "400" == name ? this.ruleLayout.getChildByName("300") : "700" == name ? this.ruleLayout.getChildByName("600") : this.ruleLayout.getChildByName(name);
          return node;
        }
        resetLayoutChildPosition(name, vec) {
          if ("400" == name || "700" == name) return;
          this.ruleLayout.getChildByName(name).setPosition(vec);
        }
        onDestroy() {
          utils_1.utils.off("DropDownItemToggle", this, this.onDropDownItemToggleClicked);
          utils_1.utils.off("HideAllDropDown", this, this.onHideAllDropDown);
          utils_1.utils.off("HideDropDown", this, this.onHideDropDown);
          utils_1.utils.off("ShowDropDown", this, this.onShowDropDown);
          utils_1.utils.off("CardPoolEditor", this, this.onCardPoolEditor);
          utils_1.utils.off("HuaCardEditor", this, this.onHuaCardEditor);
          utils_1.utils.off("CaiShenCardEditor", this, this.onCaiShenCardEditor);
        }
        update(dt) {}
        onDisable() {}
      };
      __decorate([ property(cc.Node) ], LobbyRuleLayout.prototype, "ruleLayout", void 0);
      __decorate([ property(cc.Button) ], LobbyRuleLayout.prototype, "tip_200", void 0);
      __decorate([ property(cc.Button) ], LobbyRuleLayout.prototype, "tip_600", void 0);
      __decorate([ property(cc.Button) ], LobbyRuleLayout.prototype, "tip_900", void 0);
      __decorate([ property(cc.Button) ], LobbyRuleLayout.prototype, "ruleBg", void 0);
      __decorate([ property(CardPoolEditor_1.default) ], LobbyRuleLayout.prototype, "cptCardPoolEditor", void 0);
      __decorate([ property(HuaCardEditor_1.default) ], LobbyRuleLayout.prototype, "cptHuaCardEditor", void 0);
      __decorate([ property(CaiShenCardEditor_1.default) ], LobbyRuleLayout.prototype, "cptCaiShenCardEditor", void 0);
      LobbyRuleLayout = __decorate([ ccclass ], LobbyRuleLayout);
      return LobbyRuleLayout;
    })();
    exports.default = LobbyRuleLayout;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./CaiShenCardEditor": "CaiShenCardEditor",
    "./CardPoolEditor": "CardPoolEditor",
    "./DropDown": "DropDown",
    "./HuaCardEditor": "HuaCardEditor"
  } ],
  LobbyUserHeadWindow: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "432bco4a7lMg55MmBNTFfFw", "LobbyUserHeadWindow");
    cc._RF.pop();
  }, {} ],
  LobbyUserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f4443OtTABCLoXUjIT2Ptvs", "LobbyUserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const UserHead_1 = require("./UserHead");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyUserHead = (() => {
      let LobbyUserHead = class LobbyUserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.userHead = null;
          this.labelNickname = null;
          this.labelRedPackage = null;
          this.iconRedPackage = null;
          this.buttonArea = null;
        }
        start() {
          utils_1.utils.bind_button_event(this.buttonArea, this.node, "LobbyUserHead", "buttonClicked");
          this.updateData();
          this.labelRedPackage.verticalAlign = cc.Label.VerticalAlign.TOP;
          this.labelRedPackage.node.active = global_data_1.global_data.have_module_exchange() && global_data_1.global_data.have_module_redpacket();
          this.iconRedPackage.active = global_data_1.global_data.have_module_exchange() && global_data_1.global_data.have_module_redpacket();
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.updateData);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.updateData);
        }
        updateData() {
          let data = global_data_1.global_data.get_the_user_data();
          if (global_data_1.global_data.have_module_exchange()) {
            let s = (data._int_red_packet / 100).toFixed(2);
            if ("0" == s.charAt(s.length - 1)) {
              s = s.substring(0, s.length - 1);
              "0" == s.charAt(s.length - 1) && (s = s.substring(0, s.length - 2));
            }
            this.labelRedPackage.string = s;
          }
          this.labelNickname.string = utils_1.utils.clamp_nickname(data._str_nick_name);
          this.userHead.setData(100, 100, data._int_user_id, data._int_face_id, data._int_sex);
        }
        buttonClicked(event) {
          AppGlobal_1.AppGlobal.getInstance().showLobbyUserInfo();
        }
      };
      __decorate([ property(UserHead_1.UserHead) ], LobbyUserHead.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], LobbyUserHead.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Label) ], LobbyUserHead.prototype, "labelRedPackage", void 0);
      __decorate([ property(cc.Node) ], LobbyUserHead.prototype, "iconRedPackage", void 0);
      __decorate([ property(cc.Button) ], LobbyUserHead.prototype, "buttonArea", void 0);
      LobbyUserHead = __decorate([ ccclass ], LobbyUserHead);
      return LobbyUserHead;
    })();
    exports.default = LobbyUserHead;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "./UserHead": "UserHead"
  } ],
  LobbyUserInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2dcc0l2Ij5KrJEGnguN4CxF", "LobbyUserInfo");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const GiftButton_1 = require("./GiftButton");
    const UserHead_1 = require("./UserHead");
    const ItemDetail_1 = require("./ItemDetail");
    const PopWindow_1 = require("./PopWindow");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyUserInfo = (() => {
      let LobbyUserInfo = class LobbyUserInfo extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.btnClose = null;
          this.userHead = null;
          this.labelNickname = null;
          this.labelID = null;
          this.iconGender = null;
          this.scrollView = null;
          this.itemRoot = null;
          this.itemPrefab = null;
          this.toggleMyItem = null;
          this.toggleMyRight = null;
          this.btnPayForItem = null;
          this.btnPayForRight = null;
          this.nodeNoItems = null;
          this.nodeNoRights = null;
          this.bindWechatNode = null;
          this.bindWechatDone = null;
          this.bindWechatButton = null;
          this.onItemPage = true;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btnClose, this.node, "LobbyUserInfo", "onBtnCloseClicked");
          utils_1.utils.bind_toggle_event(this.toggleMyItem, this.node, "LobbyUserInfo", "onToggleMyItemClicked");
          utils_1.utils.bind_toggle_event(this.toggleMyRight, this.node, "LobbyUserInfo", "onToggleMyRightClicked");
          utils_1.utils.bind_button_event(this.btnPayForItem, this.node, "LobbyUserInfo", "onPayForItemClicked");
          utils_1.utils.bind_button_event(this.btnPayForRight, this.node, "LobbyUserInfo", "onPayForItemClicked");
          utils_1.utils.bind_button_event(this.bindWechatButton, this.node, "LobbyUserInfo", "onBindWechatClicked");
          this.itemRoot.removeAllChildren();
        }
        onDestroy() {}
        start() {
          this.safe_on("onGiftButtonClick", this.onGiftButtonClick, this);
          if (utils_1.utils.is_wechat()) {
            this.bindWechatNode.active = true;
            if (global_data_1.global_data.check_bind_wechat()) {
              this.bindWechatDone.active = true;
              this.bindWechatButton.node.active = false;
            } else {
              this.bindWechatDone.active = false;
              this.bindWechatButton.node.active = true;
            }
          } else this.bindWechatNode.active = false;
        }
        onBtnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onBindWechatClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          AppGlobal_1.AppGlobal.getInstance().showBindWechat();
        }
        onPayForItemClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          AppGlobal_1.AppGlobal.getInstance().showShopLayout("Item");
        }
        onToggleMyItemClicked() {
          sound_manager_1.sound_manager.play_click();
          this.onItemPage = true;
          this.switchToItems();
        }
        onToggleMyRightClicked() {
          sound_manager_1.sound_manager.play_click();
          this.onItemPage = false;
          this.switchToRights();
        }
        getNextDisabledButton() {
          return null;
        }
        addItem(propId) {
          let item = this.getNextDisabledButton();
          let giftButton = null != item ? item.getComponent(GiftButton_1.default) : utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, GiftButton_1.default);
          giftButton.node.active = true;
          let name = global_data_1.global_data.get_prop_data_by_id(propId)._str_name;
          let count = global_data_1.global_data.get_prop_count_by_id(propId);
          giftButton.setData(propId, true, name, true, count, true, false);
        }
        addStatus(statusId) {
          let item = this.getNextDisabledButton();
          let giftButton = null != item ? item.getComponent(GiftButton_1.default) : utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, GiftButton_1.default);
          giftButton.node.active = true;
          let time = global_data_1.global_data.get_status_time_by_id(statusId);
          let servertime = global_data_1.global_data.get_server_time();
          let propId = global_data_1.global_data.get_prop_id_by_status_id(statusId);
          if (servertime < time) {
            let days = ((time - servertime) / 86400).toFixed(0);
            let desc = "\u5269\u4f59" + days + "\u5929";
            giftButton.setData(propId, true, desc, false, 0, false, false);
          } else giftButton.setData(propId, true, "\u5df2\u8fc7\u671f", false, 0, false, false);
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        refresh() {
          let user_data = global_data_1.global_data.get_the_user_data();
          this.labelNickname.string = utils_1.utils.clamp_nickname(user_data._str_nick_name);
          this.labelID.string = user_data._int_user_id.toString();
          1 == user_data._int_sex ? this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_male") : this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_female");
          this.userHead.setData(-1, -1, user_data._int_user_id, user_data._int_face_id, user_data._int_sex);
          this.userHead.setInteractable(false);
          this.onItemPage ? this.switchToItems() : this.switchToRights();
        }
        switchToItems() {
          this.toggleMyItem.check();
          this.itemRoot.removeAllChildren();
          this.btnPayForRight.node.active = false;
          this.nodeNoRights.active = false;
          let found = false;
          global_data_1.global_data.wx_game_prop_list.forEach(propId => {
            if (1025 != propId || global_data_1.global_data.have_switch_private_card()) {
              let count = global_data_1.global_data.get_prop_count_by_id(propId);
              if (count > 0) {
                this.addItem(propId);
                found = true;
              }
            } else ;
          });
          if (found) {
            this.btnPayForItem.node.active = false;
            this.nodeNoItems.active = false;
          } else if (global_data_1.global_data.have_module_shop()) {
            this.btnPayForItem.node.active = true;
            this.nodeNoItems.active = false;
          } else {
            this.btnPayForItem.node.active = false;
            this.nodeNoItems.active = true;
          }
          this.scrollView.scrollToTop(.01, true);
        }
        switchToRights() {
          this.toggleMyRight.check();
          this.itemRoot.removeAllChildren();
          this.btnPayForItem.node.active = false;
          this.nodeNoItems.active = false;
          let found = false;
          global_data_1.global_data.wx_game_status_list.forEach(statusId => {
            let time = global_data_1.global_data.get_status_time_by_id(statusId);
            if (0 != time) {
              this.addStatus(statusId);
              found = true;
            }
          });
          if (found) {
            this.btnPayForRight.node.active = false;
            this.nodeNoRights.active = false;
          } else if (global_data_1.global_data.have_module_shop()) {
            this.btnPayForRight.node.active = true;
            this.nodeNoRights.active = false;
          } else {
            this.btnPayForRight.node.active = false;
            this.nodeNoRights.active = true;
          }
          this.scrollView.scrollToTop(.01, true);
        }
        onGiftButtonClick(event) {
          let prop_id = event.getUserData();
          AppGlobal_1.AppGlobal.getInstance().showItemDetail(prop_id, ItemDetail_1.ItemDetailType.UserInfo);
        }
      };
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], LobbyUserInfo.prototype, "btnClose", void 0);
      __decorate([ property(UserHead_1.UserHead) ], LobbyUserInfo.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], LobbyUserInfo.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Label) ], LobbyUserInfo.prototype, "labelID", void 0);
      __decorate([ property(cc.Sprite) ], LobbyUserInfo.prototype, "iconGender", void 0);
      __decorate([ property(cc.ScrollView) ], LobbyUserInfo.prototype, "scrollView", void 0);
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], LobbyUserInfo.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Toggle) ], LobbyUserInfo.prototype, "toggleMyItem", void 0);
      __decorate([ property(cc.Toggle) ], LobbyUserInfo.prototype, "toggleMyRight", void 0);
      __decorate([ property(cc.Button) ], LobbyUserInfo.prototype, "btnPayForItem", void 0);
      __decorate([ property(cc.Button) ], LobbyUserInfo.prototype, "btnPayForRight", void 0);
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "nodeNoItems", void 0);
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "nodeNoRights", void 0);
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "bindWechatNode", void 0);
      __decorate([ property(cc.Node) ], LobbyUserInfo.prototype, "bindWechatDone", void 0);
      __decorate([ property(cc.Button) ], LobbyUserInfo.prototype, "bindWechatButton", void 0);
      LobbyUserInfo = __decorate([ ccclass ], LobbyUserInfo);
      return LobbyUserInfo;
    })();
    exports.default = LobbyUserInfo;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./GiftButton": "GiftButton",
    "./ItemDetail": "ItemDetail",
    "./PopWindow": "PopWindow",
    "./UserHead": "UserHead"
  } ],
  LobbyYiFuFeedback: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e927boYC4RJV6dsq/nj8hQr", "LobbyYiFuFeedback");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const global_define_1 = require("../../Framework/lobby/global_define");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuFeedback = (() => {
      let LobbyYiFuFeedback = class LobbyYiFuFeedback extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.submitBtn = null;
          this.content = null;
          this.contact = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuFeedback", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.submitBtn, this.node, "LobbyYiFuFeedback", "OnSubmitClicked");
        }
        onDestroy() {}
        onEnable() {
          this.content.string = utils_1.utils.getLocalStorage("FeedbackContentCache");
          this.contact.string = utils_1.utils.getLocalStorage("FeedbackContactCache");
        }
        onDisable() {
          utils_1.utils.setLocalStorage("FeedbackContentCache", this.content.string);
          utils_1.utils.setLocalStorage("FeedbackContactCache", this.contact.string);
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        check() {
          if (this.content.string.length < 10) {
            utils_1.utils.show_hint("\u5b57\u6570\u4e0d\u8db3");
            return false;
          }
          if (this.content.string.length >= 100 && 0 == this.contact.string.length) {
            utils_1.utils.show_hint("\u4e3a\u4e86\u8ddf\u60a8\u4fdd\u6301\u6c9f\u901a\uff0c\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u60a8\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u5341\u5206\u611f\u8c22\uff01");
            return false;
          }
          return true;
        }
        OnSubmitClicked() {
          sound_manager_1.sound_manager.play_click();
          if (this.check()) {
            utils_1.utils.show_loading("\u6b63\u5728\u63d0\u4ea4\u53cd\u9988...");
            let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_FEEDBACK);
            url = utils_1.utils.string_replace_any(url, "&text={TEXT}&contact={CONTACT}", "");
            let that = this;
            let data = {
              text: this.content.string,
              contact: this.contact.string
            };
            utils_1.utils.send_http_request({
              url: url,
              method: "POST",
              data: utils_1.utils.to_json(data),
              success: () => {
                utils_1.utils.show_hint("\u611f\u8c22\u60a8\u7684\u6765\u4fe1\uff0c\u5bf9\u4e8e\u60a8\u53cd\u9988\u7684\u95ee\u9898\u6211\u4eec\u5c06\u8ba4\u771f\u68c0\u67e5\uff01");
                this.clear();
                that.hide();
              },
              fail: errMsg => {
                utils_1.utils.show_hint(errMsg);
              },
              complete: () => {
                utils_1.utils.hide_loading();
              }
            });
          }
        }
        clear() {
          this.content.string = "";
          this.contact.string = "";
        }
      };
      __decorate([ property(cc.Button) ], LobbyYiFuFeedback.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuFeedback.prototype, "submitBtn", void 0);
      __decorate([ property(cc.EditBox) ], LobbyYiFuFeedback.prototype, "content", void 0);
      __decorate([ property(cc.EditBox) ], LobbyYiFuFeedback.prototype, "contact", void 0);
      LobbyYiFuFeedback = __decorate([ ccclass ], LobbyYiFuFeedback);
      return LobbyYiFuFeedback;
    })();
    exports.default = LobbyYiFuFeedback;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/global_define": "global_define",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b0917S0Y4tDmon3Z3WdhIQV", "LobbyYiFuMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const CreateAndEditor_1 = require("./CreateAndEditor");
    const LobbyYiFuFeedback_1 = require("./LobbyYiFuFeedback");
    const game_auxi_1 = require("../../Framework/lobby/game/game_auxi");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const LobbyYiFuMatchNotice_1 = require("./LobbyYiFuMatchNotice");
    const LobbyYiFuSeven_1 = require("./LobbyYiFuSeven");
    const LobbyYiFuRuleAward_1 = require("./LobbyYiFuRuleAward");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuMain = (() => {
      let LobbyYiFuMain = class LobbyYiFuMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.ruleEditor = null;
          this.feedbackPrefab = null;
          this.feedback = null;
          this.ruleAwardprefab = null;
          this.ruleAward = null;
          this.matchNoticePrefab = null;
          this.match_notice = null;
          this.matchSevenPrefab = null;
          this.match_seven = null;
          this.prefab_matchFake = null;
          this.match_fake = null;
          this.passportButton = null;
          this.tutorialButton = null;
          this.codeInput = null;
          this.ptr_left_node = null;
          this.ptr_head_node = null;
          this.ptr_create_panel_node = null;
          this.tutorialResetButton = null;
          this.feedbackButton = null;
          this.experienceOfficerBtn = null;
          this.copyBtn = null;
          this.maskBtn = null;
          this.experienceOfficerNode = null;
          this.experienceOfficerTipNode = null;
          this.shareButton = null;
          this.lunchGame = null;
          this.dragon = null;
          this.m_screen_offset = 40;
          this.m_view_size = null;
          this.m_redpack_wechat = "laojiayou588";
        }
        onLoad() {
          this.m_view_size = cc.winSize;
          utils_1.utils.on("ShowLobbyRulePanel", this, this.onEventShowLobbyRulePanel);
          utils_1.utils.on("ShowFeedback", this, this.onEventShowFeedback);
          utils_1.utils.on("EnterAuxiResult", this, this.onEventEnterAuxiResult);
          utils_1.utils.on("AuxiOperation", this, this.onEventAuxiOperation);
          utils_1.utils.on("refreshTeachAndFeedbackVisable", this, this.refreshTeachAndFeedbackVisable);
          utils_1.utils.on("show_fake_match", this, this.onEventShowMatchSeven);
          utils_1.utils.on("showMatchNotice", this, this.onEventShowMatchNotice);
          utils_1.utils.on("showMatchRuleAward", this, this.ShowMatchRuleAward);
          utils_1.utils.bind_button_event(this.passportButton, this.node, "LobbyYiFuMain", "onPassportButtonClicked");
          utils_1.utils.bind_button_event(this.tutorialButton, this.node, "LobbyYiFuMain", "onTutorialButtonClicked");
          utils_1.utils.bind_button_event(this.experienceOfficerBtn, this.node, "LobbyYiFuMain", "onExperienceOfficerButtonClicked");
          utils_1.utils.bind_button_event(this.copyBtn, this.node, "LobbyYiFuMain", "onCopyButtonClicked");
          utils_1.utils.bind_button_event(this.maskBtn, this.node, "LobbyYiFuMain", "onMaskButtonClicked");
          utils_1.utils.bind_button_event(this.tutorialResetButton, this.node, "LobbyYiFuMain", "onTutorialResetButtonClicked");
          utils_1.utils.bind_button_event(this.feedbackButton, this.node, "LobbyYiFuMain", "onFeedbackButtonClicked");
          utils_1.utils.bind_button_event(this.lunchGame, this.node, "LobbyYiFuMain", "launchGameTest");
          utils_1.utils.bind_button_event(this.shareButton, this.node, "LobbyYiFuMain", "onShareAward");
          this.passportButton.node.active = !global_data_1.global_data.is_online;
          this.tutorialButton.node.active = !global_data_1.global_data.is_online;
          this.lunchGame.node.active = false;
          let handler = new cc.Component.EventHandler();
          handler.target = this.node;
          handler.component = "LobbyYiFuMain";
          handler.handler = "onCodeInputChanged";
          this.codeInput.textChanged = [];
          this.codeInput.textChanged.push(handler);
          this.codeInput.node.active = !global_data_1.global_data.is_online;
          let getResolutionConfig = function() {
            let w = cc.game.canvas.width;
            let h = cc.game.canvas.height;
            let ratio = w / h;
            return {
              width: w,
              height: h,
              ratio: ratio
            };
          };
          let config = getResolutionConfig();
          if (config.width / config.height > 16 / 9) {
            cc.Canvas.instance.fitHeight = true;
            cc.Canvas.instance.fitWidth = false;
          } else {
            cc.Canvas.instance.fitHeight = false;
            cc.Canvas.instance.fitWidth = true;
          }
          this.init();
        }
        start() {
          this.dragon.playAnimation("hall_nv", 0);
          this.onShowRedPackBtn();
          this.showMatchFake();
        }
        init() {
          this.ptr_left_node.active = true;
          this.ptr_head_node.active = true;
          this.ptr_create_panel_node.active = true;
          this.feedbackButton.node.active = true;
          this.tutorialResetButton.node.active = true;
          this.ptr_left_node.active = false;
          this.screenFit();
        }
        screenFit() {
          this.ptr_left_node.getComponent(cc.Widget).isAlignLeft = true;
          this.ptr_head_node.getComponent(cc.Widget).isAlignLeft = true;
          this.ptr_create_panel_node.getComponent(cc.Widget).isAlignRight = true;
          if (this.m_view_size.width > 1520) {
            this.ptr_left_node.getComponent(cc.Widget).left += this.m_screen_offset;
            this.ptr_head_node.getComponent(cc.Widget).left += this.m_screen_offset;
            this.ptr_create_panel_node.getComponent(cc.Widget).right += this.m_screen_offset;
          }
        }
        onDestroy() {
          utils_1.utils.off("ShowLobbyRulePanel", this, this.onEventShowLobbyRulePanel);
          utils_1.utils.off("ShowFeedback", this, this.onEventShowFeedback);
          utils_1.utils.off("EnterAuxiResult", this, this.onEventEnterAuxiResult);
          utils_1.utils.off("AuxiOperation", this, this.onEventAuxiOperation);
          utils_1.utils.off("refreshTeachAndFeedbackVisable", this, this.refreshTeachAndFeedbackVisable);
          utils_1.utils.off("show_fake_match", this, this.onEventShowMatchSeven);
          utils_1.utils.off("showMatchNotice", this, this.onEventShowMatchNotice);
          utils_1.utils.off("showMatchRuleAward", this, this.ShowMatchRuleAward);
        }
        onShowRedPackBtn() {
          this.experienceOfficerNode.active = false;
          this.experienceOfficerBtn.node.active = global_data_1.global_data._int_show_privilege > 0;
          this.checkExperienceOfficerTip();
        }
        checkExperienceOfficerTip() {
          let date = new Date();
          let str = utils_1.utils.getLocalStorage("ExperienceOfficerTip");
          let show = false;
          show = !str || Math.floor(Number(str) / 100) != date.getMonth() + 1 || Number(str) % 100 != date.getDate();
          this.setExperienceOfficerTipNodeActive(show);
        }
        markExperienceOfficerTip() {
          let date = new Date();
          utils_1.utils.setLocalStorage("ExperienceOfficerTip", `${100 * (date.getMonth() + 1) + date.getDate()}`);
        }
        onExperienceOfficerButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.setExperienceOfficerTipNodeActive(false);
          this.setExperienceOfficerNodeActive(true);
          this.markExperienceOfficerTip();
        }
        onCopyButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          platform_1.platform.inst.setClipboardData({
            data: this.m_redpack_wechat,
            success: () => {
              utils_1.utils.show_hint("\u590d\u5236\u6210\u529f");
            }
          });
        }
        onMaskButtonClicked() {
          this.setExperienceOfficerNodeActive(false);
        }
        setExperienceOfficerNodeActive(show) {
          this.experienceOfficerNode.active = show;
        }
        setExperienceOfficerTipNodeActive(show) {
          this.experienceOfficerTipNode.active = show;
          this.experienceOfficerTipNode.stopAllActions();
          if (show) {
            this.experienceOfficerTipNode.setScale(1);
            this.experienceOfficerTipNode.runAction(cc.sequence(cc.scaleTo(.5, .9), cc.delayTime(.1), cc.scaleTo(1, 1.1), cc.delayTime(.1), cc.scaleTo(.5, 1)).repeatForever());
          }
        }
        onBtnService() {
          platform_1.platform.inst.openCustomerServiceConversation({});
        }
        onEventShowLobbyRulePanel() {
          this.ruleEditor.node.active = true;
          this.ruleEditor.showCreatePanel();
        }
        onTutorialResetButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.show_message_box({
            content: "\u60a8\u5c06\u91cd\u7f6e\u5927\u5385\u53ca\u6e38\u620f\u5185\u7684\u65b0\u624b\u6559\u7a0b\uff0c\u662f\u5426\u7ee7\u7eed\uff1f",
            button_count: 2,
            onClick: n => {
              if (0 == n) {
                this.resetTutorial();
                tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_1_1, .2);
              }
            }
          });
        }
        onFeedbackButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.send("ShowFeedback");
        }
        onEventShowFeedback(param) {
          cc.isValid(this.feedback) || (this.feedback = utils_1.utils.add_instance_to_root(this.feedbackPrefab, cc.Canvas.instance.node, LobbyYiFuFeedback_1.default));
          if (cc.isValid(this.feedback)) {
            this.feedback.node.setSiblingIndex(this.feedback.node.getParent().childrenCount + 1);
            this.feedback.node.zIndex = cc.macro.MAX_ZINDEX;
            this.feedback.show();
          }
        }
        ShowMatchRuleAward() {
          cc.isValid(this.ruleAward) || (this.ruleAward = utils_1.utils.add_instance_to_root(this.ruleAwardprefab, cc.Canvas.instance.node, LobbyYiFuRuleAward_1.default));
          if (cc.isValid(this.ruleAward)) {
            this.ruleAward.node.setSiblingIndex(this.ruleAward.node.getParent().childrenCount + 1);
            this.ruleAward.node.zIndex = cc.macro.MAX_ZINDEX;
            this.ruleAward.show();
          }
        }
        showMatchFake() {
          let curTime = Math.floor(new Date().getTime() / 1e3);
          let curDate = Math.floor(curTime / 86400);
          let flag = utils_1.utils.getLocalStorage(`matchfake_${curDate}`);
          if (flag && "1" == flag) return;
          utils_1.utils.setLocalStorage(`matchfake_${curDate}`, "1");
          if (!cc.isValid(this.match_fake)) {
            this.match_fake = cc.instantiate(this.prefab_matchFake);
            cc.Canvas.instance.node.addChild(this.match_fake);
          }
          if (cc.isValid(this.match_fake)) {
            this.match_fake.setSiblingIndex(this.match_fake.getParent().childrenCount + 1);
            this.match_fake.zIndex = cc.macro.MAX_ZINDEX;
            this.match_fake.active = true;
          }
        }
        onEventShowMatchSeven(param) {
          let curTime = Math.floor(new Date().getTime() / 1e3);
          let curDate = Math.floor(curTime / 86400);
          if (cc.isValid(this.match_fake) && this.match_fake.active) return;
          if (!param || !param.start_time || curTime >= param.end_time) return;
          if (Math.floor(param.start_time / 86400) != Math.floor(curTime / 86400)) return;
          let flag = utils_1.utils.getLocalStorage(`matchseven_${curDate}`);
          if (flag && "1" == flag) return;
          utils_1.utils.setLocalStorage(`matchseven_${curDate}`, "1");
          cc.isValid(this.match_seven) || (this.match_seven = utils_1.utils.add_instance_to_root(this.matchSevenPrefab, cc.Canvas.instance.node, LobbyYiFuSeven_1.default));
          if (cc.isValid(this.match_seven)) {
            this.match_seven.node.setSiblingIndex(this.match_seven.node.getParent().childrenCount + 1);
            this.match_seven.node.zIndex = cc.macro.MAX_ZINDEX;
            this.match_seven.setMatchSeven(param.status);
            this.match_seven.show();
          }
        }
        onEventShowMatchNotice(param) {
          let curTime = Math.floor(new Date().getTime() / 1e3);
          let curDate = Math.floor(curTime / 86400);
          let flag10 = utils_1.utils.getLocalStorage(`matchNotice_10_${curDate}`);
          let flag1 = utils_1.utils.getLocalStorage(`matchNotice_1_${curDate}`);
          if (10 == param) {
            if (flag10 && "1" == flag10) return;
            utils_1.utils.setLocalStorage(`matchNotice_10_${curDate}`, "1");
          }
          if (1 == param) {
            if (flag1 && "1" == flag1) return;
            utils_1.utils.setLocalStorage(`matchNotice_1_${curDate}`, "1");
          }
          cc.isValid(this.match_notice) || (this.match_notice = utils_1.utils.add_instance_to_root(this.matchNoticePrefab, cc.Canvas.instance.node, LobbyYiFuMatchNotice_1.default));
          if (cc.isValid(this.match_notice)) {
            this.match_notice.node.setSiblingIndex(this.match_notice.node.getParent().childrenCount + 1);
            this.match_notice.node.zIndex = cc.macro.MAX_ZINDEX;
            this.match_notice.refreshLabelTime(param);
            this.match_notice.show();
          }
        }
        refreshTeachAndFeedbackVisable(visable) {
          this.ptr_left_node.active = visable > 0;
          if (visable) {
            let timer = .5;
            let dis = 30;
            this.ptr_left_node.opacity = 0;
            let pos_x = this.ptr_left_node.getPosition().x;
            let pos_y = this.ptr_left_node.getPosition().y;
            this.ptr_left_node.setPosition(cc.v2(pos_x - dis, pos_y));
            this.ptr_left_node.runAction(cc.spawn(cc.fadeIn(timer), cc.moveBy(timer, cc.v2(dis, 0))));
          } else {
            let timer = .2;
            let dis = -20;
            this.ptr_left_node.opacity = 255;
            let that = this;
            this.ptr_left_node.runAction(cc.sequence(cc.spawn(cc.fadeOut(timer), cc.moveBy(timer, cc.v2(dis, 0))), cc.callFunc(function() {
              let pos_x = that.ptr_left_node.getPosition().x;
              let pos_y = that.ptr_left_node.getPosition().y;
              that.ptr_left_node.setPosition(cc.v2(pos_x - dis, pos_y));
            })));
          }
        }
        onEventEnterAuxiResult(param) {
          utils_1.utils.hide_loading();
          if (param.int_code == game_auxi_1.game_auxi.SUB_AUXI_CREATE_TABLE_SUCCESS_V20 || param.int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20) {
            let cmd = "enter_private_room:";
            cmd += 1e3 * game_auxi_1.game_auxi._int_enter_game_id + game_auxi_1.game_auxi._int_enter_room_id;
            cmd += "|";
            cmd += game_auxi_1.game_auxi._enter_private_code;
            lobby_framework_1.lobby_framework.do_command(cmd, "");
          } else utils_1.utils.show_hint(param.str_result);
        }
        onEventAuxiOperation(param) {
          param.type == game_auxi_1.game_auxi.PRI_ROOM_TYPE_CREATE ? utils_1.utils.show_loading("\u6b63\u5728\u521b\u5efa\u6e38\u620f") : param.type == game_auxi_1.game_auxi.PRI_ROOM_TYPE_ENTER ? utils_1.utils.show_loading("\u6b63\u5728\u8fdb\u5165\u6e38\u620f") : param.type == game_auxi_1.game_auxi.PRI_ROOM_TYPE_DISMISS ? utils_1.utils.show_loading("\u6b63\u5728\u89e3\u6563\u6e38\u620f") : param.type == game_auxi_1.game_auxi.PRI_ROOM_TYPE_SELECT && utils_1.utils.show_loading("\u6b63\u5728\u67e5\u8be2\u6e38\u620f");
        }
        onPassportButtonClicked() {
          cc.director.loadScene("relogon", () => {});
        }
        onTutorialButtonClicked() {
          utils_1.utils.show_message_box({
            content: "\u60a8\u5c06\u91cd\u7f6e\u5927\u5385\u53ca\u6e38\u620f\u5185\u7684\u65b0\u624b\u6559\u7a0b\uff0c\u662f\u5426\u7ee7\u7eed\uff1f",
            button_count: 2,
            onClick: n => {
              if (0 == n) {
                this.resetTutorial();
                tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_1_1, .2);
              }
            }
          });
        }
        resetTutorial() {
          utils_1.utils.setLocalStorage("TutorialMask", "0");
          utils_1.utils.setLocalStorage("CheckGameTutorialFinished", "0");
        }
        onCodeInputChanged(input, target) {
          6 == input.length && game_auxi_1.game_auxi.enter_private_room(input);
        }
        onShareAward() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_match_invite();
        }
        launchGameTest() {
          return;
        }
      };
      __decorate([ property(CreateAndEditor_1.default) ], LobbyYiFuMain.prototype, "ruleEditor", void 0);
      __decorate([ property(cc.Prefab) ], LobbyYiFuMain.prototype, "feedbackPrefab", void 0);
      __decorate([ property(cc.Prefab) ], LobbyYiFuMain.prototype, "ruleAwardprefab", void 0);
      __decorate([ property(cc.Prefab) ], LobbyYiFuMain.prototype, "matchNoticePrefab", void 0);
      __decorate([ property(cc.Prefab) ], LobbyYiFuMain.prototype, "matchSevenPrefab", void 0);
      __decorate([ property(cc.Prefab) ], LobbyYiFuMain.prototype, "prefab_matchFake", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "passportButton", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "tutorialButton", void 0);
      __decorate([ property(cc.EditBox) ], LobbyYiFuMain.prototype, "codeInput", void 0);
      __decorate([ property(cc.Node) ], LobbyYiFuMain.prototype, "ptr_left_node", void 0);
      __decorate([ property(cc.Node) ], LobbyYiFuMain.prototype, "ptr_head_node", void 0);
      __decorate([ property(cc.Node) ], LobbyYiFuMain.prototype, "ptr_create_panel_node", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "tutorialResetButton", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "feedbackButton", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "experienceOfficerBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "copyBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "maskBtn", void 0);
      __decorate([ property(cc.Node) ], LobbyYiFuMain.prototype, "experienceOfficerNode", void 0);
      __decorate([ property(cc.Node) ], LobbyYiFuMain.prototype, "experienceOfficerTipNode", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "shareButton", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMain.prototype, "lunchGame", void 0);
      __decorate([ property(dragonBones.ArmatureDisplay) ], LobbyYiFuMain.prototype, "dragon", void 0);
      LobbyYiFuMain = __decorate([ ccclass ], LobbyYiFuMain);
      return LobbyYiFuMain;
    })();
    exports.default = LobbyYiFuMain;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/game/game_auxi": "game_auxi",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./CreateAndEditor": "CreateAndEditor",
    "./LobbyYiFuFeedback": "LobbyYiFuFeedback",
    "./LobbyYiFuMatchNotice": "LobbyYiFuMatchNotice",
    "./LobbyYiFuRuleAward": "LobbyYiFuRuleAward",
    "./LobbyYiFuSeven": "LobbyYiFuSeven"
  } ],
  LobbyYiFuMatchFake: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "19dc8zhHXFOSI+Rs8+1mIGC", "LobbyYiFuMatchFake");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuMatchFake = (() => {
      let LobbyYiFuMatchFake = class LobbyYiFuMatchFake extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuMatchFake", "OnCloseClicked");
          this.hide_callback = () => {
            custom_lobby_1.custom_lobby.fetch_fake_match_config();
          };
        }
        onDestroy() {}
        onEnable() {}
        onDisable() {}
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Button) ], LobbyYiFuMatchFake.prototype, "closeBtn", void 0);
      LobbyYiFuMatchFake = __decorate([ ccclass ], LobbyYiFuMatchFake);
      return LobbyYiFuMatchFake;
    })();
    exports.default = LobbyYiFuMatchFake;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuMatchNotice: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d726a/SOnVCGbPWlzJF3ieY", "LobbyYiFuMatchNotice");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuMatchNotice = (() => {
      let LobbyYiFuMatchNotice = class LobbyYiFuMatchNotice extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.labelTime = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuMatchNotice", "OnCloseClicked");
          utils_1.utils.on("match_notice", this.node, this.refreshLabelTime);
        }
        onDestroy() {
          utils_1.utils.off("match_notice", this.node, this.refreshLabelTime);
        }
        onEnable() {}
        onDisable() {}
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        refreshLabelTime(param) {
          param && param > 0 && (this.labelTime.string = param);
        }
      };
      __decorate([ property(cc.Button) ], LobbyYiFuMatchNotice.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuMatchNotice.prototype, "labelTime", void 0);
      LobbyYiFuMatchNotice = __decorate([ ccclass ], LobbyYiFuMatchNotice);
      return LobbyYiFuMatchNotice;
    })();
    exports.default = LobbyYiFuMatchNotice;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuMatch: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "555f3rixOlEGY8b2HedWKtv", "LobbyYiFuMatch");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuMatch = (() => {
      let LobbyYiFuMatch = class LobbyYiFuMatch extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.submitBtn = null;
          this.shartBtn = null;
          this.labelStart = null;
          this.labelTime = null;
          this.fake_match_data = null;
          this._is_long_subscribe = false;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuMatch", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.submitBtn, this.node, "LobbyYiFuMatch", "OnSubmitClicked");
          utils_1.utils.bind_button_event(this.shartBtn, this.node, "LobbyYiFuMatch", "OnShareClicked");
        }
        onDisable() {}
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        OnSubmitClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!this.fake_match_data) return;
          if (this._is_long_subscribe) {
            lobby_framework_1.lobby_framework.push_match_subscribe(this.fake_match_data.start_time, this.fake_match_data.name, this.fake_match_data.describe);
            utils_1.utils.show_hint("\u8ba2\u9605\u6210\u529f");
          } else platform_1.platform.inst.requestSubscribe({
            id: "H6z6ji5Jp1uzEAVQ8m7_nG9l3CAZO-5EuoZ2omiJmQQ",
            success: () => {
              utils_1.utils.show_hint("\u8ba2\u9605\u6210\u529f");
              lobby_framework_1.lobby_framework.push_match_subscribe(this.fake_match_data.start_time, this.fake_match_data.name, this.fake_match_data.describe);
            },
            fail: res => {
              utils_1.utils.show_hint("\u8ba2\u9605\u5931\u8d25");
              console.log(res);
            },
            complete: () => {}
          });
        }
        check_subscribe() {
          let that = this;
          platform_1.platform.inst.checkSubscribe({
            id: "H6z6ji5Jp1uzEAVQ8m7_nG9l3CAZO-5EuoZ2omiJmQQ",
            success: () => {
              console.log("\u5df2\u957f\u671f\u8ba2\u9605");
              that._is_long_subscribe = true;
            },
            fail: res => {
              console.log("check_subscribe" + res);
            }
          });
        }
        OnShareClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_match_invite();
        }
        refresh(data) {
          this.fake_match_data = data;
          let curTime = Math.floor(new Date().getTime() / 1e3);
          if (data.starttime <= curTime || Math.floor(curTime / 86400) != Math.floor(data.starttime / 86400)) return;
          let sHour = new Date(1e3 * data.starttime).getHours();
          this.labelStart.string = `${sHour}\uff1a00`;
          let differTime = data.starttime - curTime;
          this.labelTime.string = `${Math.floor(differTime / 3600)}\u5c0f\u65f6${Math.floor(differTime % 3600 / 60)}\u5206\u949f`;
        }
      };
      __decorate([ property(cc.Button) ], LobbyYiFuMatch.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMatch.prototype, "submitBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuMatch.prototype, "shartBtn", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuMatch.prototype, "labelStart", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuMatch.prototype, "labelTime", void 0);
      LobbyYiFuMatch = __decorate([ ccclass ], LobbyYiFuMatch);
      return LobbyYiFuMatch;
    })();
    exports.default = LobbyYiFuMatch;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuRoomButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2d1f8ZxO6ZCc4BenCc5wk6B", "LobbyYiFuRoomButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LobbyYiFuRoomButton = void 0;
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuRoomButton = (() => {
      let LobbyYiFuRoomButton = class LobbyYiFuRoomButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.editorButton = null;
          this.deleteButton = null;
          this.buttonNodes = [];
          this.roomName = null;
          this.m_start_time = 0;
          this.m_end_time = 0;
          this.m_stay_time = 0;
          this.m_start_bool = false;
          this.data = null;
        }
        onLoad() {
          let that = this;
          this.safe_on(cc.Node.EventType.TOUCH_START, function(event) {
            that.m_start_time = new Date().getTime();
            that.m_start_bool = true;
            that.m_stay_time = 0;
            that.node.setScale(.95);
          }, this);
          this.safe_on(cc.Node.EventType.TOUCH_MOVE, function(event) {}, this);
          this.safe_on(cc.Node.EventType.TOUCH_CANCEL, function(event) {
            that.m_start_time = 0;
            that.m_start_bool = false;
            that.m_stay_time = 0;
            that.node.setScale(1);
          }, this);
          this.safe_on(cc.Node.EventType.TOUCH_END, function(event) {
            that.m_start_bool = false;
            that.m_stay_time = 0;
            that.m_end_time = new Date().getTime();
            that.node.setScale(1);
            that.onRoomButtonClicked();
          }, this);
        }
        update(dt) {
          if (this.m_start_bool) {
            this.m_stay_time += dt;
            if (this.m_stay_time > .4) {
              this.m_start_bool = false;
              this.m_stay_time = 0;
              console.log("\u957f\u6309\u4e86...");
              tutorial_1.tutorial.close_tutorial();
              platform_1.platform.inst.vibrateShort({
                degree: 1
              });
              this.updateButton(true);
            }
          }
        }
        updateButton(show) {
          this.deleteButton.node.active = show;
          this.editorButton.node.active = show;
        }
        onRoomButtonClicked() {
          let interval = this.m_end_time - this.m_start_time;
          if (interval > 0 && interval < 200) {
            this.m_start_time = 0;
            tutorial_1.tutorial.close_tutorial();
            sound_manager_1.sound_manager.play_click();
            custom_lobby_1.custom_lobby.current_player_rule = this.data;
            custom_lobby_1.custom_lobby.launch_game(150);
          }
        }
        onEditoButtonClicked() {}
        onDeleteButtonClicked() {}
        setData(data) {
          this.data = data;
          this.init();
          this.data.id % 3 == 1 ? this.buttonNodes[0].active = true : this.data.id % 3 == 2 ? this.buttonNodes[1].active = true : this.buttonNodes[2].active = true;
        }
        init() {
          this.buttonNodes[0].active = false;
          this.buttonNodes[1].active = false;
          this.buttonNodes[2].active = false;
        }
        start() {}
        onDestroy() {}
      };
      __decorate([ property(cc.Button) ], LobbyYiFuRoomButton.prototype, "editorButton", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuRoomButton.prototype, "deleteButton", void 0);
      __decorate([ property([ cc.Node ]) ], LobbyYiFuRoomButton.prototype, "buttonNodes", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuRoomButton.prototype, "roomName", void 0);
      LobbyYiFuRoomButton = __decorate([ ccclass ], LobbyYiFuRoomButton);
      return LobbyYiFuRoomButton;
    })();
    exports.LobbyYiFuRoomButton = LobbyYiFuRoomButton;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial"
  } ],
  LobbyYiFuRuleAward: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1151eSCyWlMoJVbg7m9VAq9", "LobbyYiFuRuleAward");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuRuleAward = (() => {
      let LobbyYiFuRuleAward = class LobbyYiFuRuleAward extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.toggle_rule = null;
          this.toggle_award = null;
          this.closeBtn = null;
          this.scroll_view1 = null;
          this.scroll_view2 = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuRuleAward", "OnCloseClicked");
          utils_1.utils.bind_toggle_event(this.toggle_rule, this.node, "LobbyYiFuRuleAward", "onToggleRule");
          utils_1.utils.bind_toggle_event(this.toggle_award, this.node, "LobbyYiFuRuleAward", "onToggleAward");
        }
        onDestroy() {}
        onEnable() {}
        onDisable() {}
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onToggleRule() {
          sound_manager_1.sound_manager.play_click();
          this.scroll_view1.node.active = true;
          this.scroll_view2.node.active = false;
        }
        onToggleAward() {
          sound_manager_1.sound_manager.play_click();
          this.scroll_view1.node.active = false;
          this.scroll_view2.node.active = true;
        }
      };
      __decorate([ property(cc.Toggle) ], LobbyYiFuRuleAward.prototype, "toggle_rule", void 0);
      __decorate([ property(cc.Toggle) ], LobbyYiFuRuleAward.prototype, "toggle_award", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuRuleAward.prototype, "closeBtn", void 0);
      __decorate([ property(cc.ScrollView) ], LobbyYiFuRuleAward.prototype, "scroll_view1", void 0);
      __decorate([ property(cc.ScrollView) ], LobbyYiFuRuleAward.prototype, "scroll_view2", void 0);
      LobbyYiFuRuleAward = __decorate([ ccclass ], LobbyYiFuRuleAward);
      return LobbyYiFuRuleAward;
    })();
    exports.default = LobbyYiFuRuleAward;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuSeven: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6be89pSBBJJFJqxKX6gyWc0", "LobbyYiFuSeven");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const PopWindow_1 = require("../PopWindow");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuSeven = (() => {
      let LobbyYiFuSeven = class LobbyYiFuSeven extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.submitBtn = null;
          this.inviteBtn = null;
          this.ruleBtn = null;
          this.sp_remain = null;
          this.sp_go = null;
          this._match_status = -1;
          this.fake_match_data = null;
          this._is_long_subscribe = false;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "LobbyYiFuSeven", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.submitBtn, this.node, "LobbyYiFuSeven", "OnSubmitClicked");
          utils_1.utils.bind_button_event(this.inviteBtn, this.node, "LobbyYiFuSeven", "OnInviteClicked");
          utils_1.utils.bind_button_event(this.ruleBtn, this.node, "LobbyYiFuSeven", "OnRuleClicked");
        }
        onDestroy() {}
        onEnable() {
          utils_1.utils.on("show_fake_match", this, this.refreshMatchSeven);
        }
        onDisable() {
          utils_1.utils.off("show_fake_match", this, this.refreshMatchSeven);
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        OnSubmitClicked() {
          sound_manager_1.sound_manager.play_click();
          0 == this._match_status ? this.setPhoneRemain() : this.enterToGame();
        }
        OnInviteClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_to_match_invite();
        }
        OnRuleClicked() {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.send("showMatchRuleAward");
        }
        enterToGame() {
          let target_room_data = new global_data_1.global_data.struct_room_data();
          let gameId = 152;
          console.log("global_data._vector_room_data. : ", global_data_1.global_data._vector_room_data);
          let rooms = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == gameId && -1 != x._str_rule.indexOf("match_start"));
          rooms && rooms.length > 0 && (target_room_data = rooms[0]);
          console.log("target_room_data : ", target_room_data);
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Game, {
            room: target_room_data
          });
        }
        setPhoneRemain() {
          if (!this.fake_match_data) return;
          if (this._is_long_subscribe) {
            lobby_framework_1.lobby_framework.push_match_subscribe(this.fake_match_data.start_time, this.fake_match_data.name, this.fake_match_data.describe);
            utils_1.utils.show_hint("\u8ba2\u9605\u6210\u529f");
          } else platform_1.platform.inst.requestSubscribe({
            id: "H6z6ji5Jp1uzEAVQ8m7_nG9l3CAZO-5EuoZ2omiJmQQ",
            success: () => {
              utils_1.utils.show_hint("\u8ba2\u9605\u6210\u529f");
              lobby_framework_1.lobby_framework.push_match_subscribe(this.fake_match_data.start_time, this.fake_match_data.name, this.fake_match_data.describe);
            },
            fail: res => {
              utils_1.utils.show_hint("\u8ba2\u9605\u5931\u8d25");
              console.log(res);
            },
            complete: () => {}
          });
        }
        check_subscribe() {
          let that = this;
          platform_1.platform.inst.checkSubscribe({
            id: "H6z6ji5Jp1uzEAVQ8m7_nG9l3CAZO-5EuoZ2omiJmQQ",
            success: () => {
              console.log("\u5df2\u957f\u671f\u8ba2\u9605");
              that._is_long_subscribe = true;
            },
            fail: res => {
              console.log("check_subscribe" + res);
            }
          });
        }
        setMatchSeven(data) {
          this._match_status = data;
          this.submitBtn.getComponent(cc.Sprite).spriteFrame = 0 == data ? this.sp_remain : this.sp_go;
        }
        refreshMatchSeven(data) {
          this.fake_match_data = data;
          data && this.setMatchSeven(data.status);
        }
      };
      __decorate([ property(cc.Button) ], LobbyYiFuSeven.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuSeven.prototype, "submitBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuSeven.prototype, "inviteBtn", void 0);
      __decorate([ property(cc.Button) ], LobbyYiFuSeven.prototype, "ruleBtn", void 0);
      __decorate([ property(cc.SpriteFrame) ], LobbyYiFuSeven.prototype, "sp_remain", void 0);
      __decorate([ property(cc.SpriteFrame) ], LobbyYiFuSeven.prototype, "sp_go", void 0);
      LobbyYiFuSeven = __decorate([ ccclass ], LobbyYiFuSeven);
      return LobbyYiFuSeven;
    })();
    exports.default = LobbyYiFuSeven;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  LobbyYiFuTip: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b45c82b7xBKwJdYj68WfBLE", "LobbyYiFuTip");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LobbyYiFuTip = void 0;
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuTip = (() => {
      let LobbyYiFuTip = class LobbyYiFuTip extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
        }
        start() {}
        setData(msg) {}
      };
      __decorate([ property(cc.Label) ], LobbyYiFuTip.prototype, "label", void 0);
      LobbyYiFuTip = __decorate([ ccclass ], LobbyYiFuTip);
      return LobbyYiFuTip;
    })();
    exports.LobbyYiFuTip = LobbyYiFuTip;
    cc._RF.pop();
  }, {} ],
  LobbyYiFuUserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7a532Gev7pIzI2AyOWNh/wh", "LobbyYiFuUserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LobbyYiFuUserHead = void 0;
    const global_data_1 = require("../../Framework/lobby/global_data");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const utils_1 = require("../../Framework/common/utils");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let LobbyYiFuUserHead = (() => {
      let LobbyYiFuUserHead = class LobbyYiFuUserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.userFace = null;
          this.faceFrames = [];
          this.labelNickname = null;
          this.labelUserID = null;
          this.labelUserLocation = null;
          this.m_have_init = false;
        }
        onLoad() {
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_1_1, cc.find("CreateAndEditor", cc.find("Canvas/LobbyYiFuMain")));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Lobby_1_2, cc.find("CreateAndEditor", cc.find("Canvas/LobbyYiFuMain")));
        }
        start() {
          this.init();
          this.updateData();
        }
        init() {
          if (this.m_have_init) return;
          this.m_have_init = true;
          this.labelUserLocation.string = "";
          platform_1.platform.inst.checkAndGetLocation({
            success: () => {
              let location = global_data_1.global_data.user_location.split(",");
              let _location = "";
              _location = custom_lobby_1.custom_lobby.check_in_china() ? location[location.length - 1] : "\u6d77\u5916\u5730\u533a";
              cc.isValid(this.labelUserLocation) && (this.labelUserLocation.string = utils_1.utils.clamp_nickname(_location, 4));
              console.log("checkAndGetLocation success", _location);
            },
            fail: res => {
              cc.isValid(this.labelUserLocation) && (this.labelUserLocation.string = "\u672a\u77e5");
              console.log("checkAndGetLocation fail", res.errMsg);
            },
            complete: () => {
              console.log("checkAndGetLocation complete");
            }
          });
        }
        updateData() {
          let data = global_data_1.global_data.get_the_user_data();
          this.labelNickname.string = utils_1.utils.clamp_nickname(data._str_nick_name);
          this.labelUserID.string = "(ID:" + data._int_user_id + ")";
          let userId = data._int_user_id;
          let faceId = data._int_face_id;
          let sexId = data._int_sex;
          this.userFace.spriteFrame = 0 == sexId ? this.faceFrames[0] : 1 == sexId ? this.faceFrames[1] : this.faceFrames[2];
          0 != faceId && lobby_framework_1.lobby_framework.fetch_user_head_image(userId, faceId, this.userFace);
        }
      };
      __decorate([ property(cc.Sprite) ], LobbyYiFuUserHead.prototype, "userFace", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], LobbyYiFuUserHead.prototype, "faceFrames", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuUserHead.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuUserHead.prototype, "labelUserID", void 0);
      __decorate([ property(cc.Label) ], LobbyYiFuUserHead.prototype, "labelUserLocation", void 0);
      LobbyYiFuUserHead = __decorate([ ccclass ], LobbyYiFuUserHead);
      return LobbyYiFuUserHead;
    })();
    exports.LobbyYiFuUserHead = LobbyYiFuUserHead;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/tutorial": "tutorial"
  } ],
  MailPanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "da3cfQzRh1P1oqHMR6iqcDE", "MailPanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const utils_1 = require("../Framework/common/utils");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const MailTabItem_1 = require("./MailTabItem");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const MailRewardItem_1 = require("./MailRewardItem");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let MailPanel = (() => {
      let MailPanel = class MailPanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.exchangeBtn = null;
          this.receiveBtn = null;
          this.deleteBtn = null;
          this.mailListNode = null;
          this.nomessageNode = null;
          this.mailTabScrollView = null;
          this.rewardItemScrollView2 = null;
          this.mailTabItemPrefab = null;
          this.mailRewadItemPrefab = null;
          this.mailTabRoot = null;
          this.mailRewardRoot2 = null;
          this.rewardReceive = null;
          this.mailTitleLabel = null;
          this.mailMainLabel = null;
          this.defaultMailTabItem = null;
          this.currentTabData = null;
          this.jumpIndex = -1;
          this._btn_name = null;
          this._btn_action = null;
          this._btn_id = null;
        }
        onLoad() {
          utils_1.utils.on("RefreshMailData", this, this.onRefreshMailData);
          this.safe_on("mailTabItemClicked", this.onMailTabItemClicked, this);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "MailPanel", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.receiveBtn, this.node, "MailPanel", "OnReceiveClicked");
          utils_1.utils.bind_button_event(this.exchangeBtn, this.node, "MailPanel", "OnExchangeClicked");
          utils_1.utils.bind_button_event(this.deleteBtn, this.node, "MailPanel", "OnDeleteClicked");
        }
        start() {
          this.mailTabRoot.removeAllChildren();
          this.mailRewardRoot2.removeAllChildren();
          this.disableButton();
        }
        onRefreshMailData(arg) {
          "get" == arg.action ? this.fillReceiveRefeshData(arg.id) : "delete" == arg.action || "refresh" == arg.action ? this.fillData() : "read" == arg.action && this.markRead(arg.id);
        }
        onMailTabItemClicked(event) {
          let data = event.target.getComponent(MailTabItem_1.default).data;
          if (this.currentTabData != data) {
            this.currentTabData = data;
            event.target.getComponent(cc.Toggle).check();
            this.mailTitleLabel.string = data.title;
            this.mailMainLabel.string = data.content;
            lobby_framework_1.lobby_framework.mark_mail_read(data.id);
            this.disabledRewardChild();
            null != data && data.items && data.items.length > 0 && this.displayItemRewards(data.items);
            let haveReward = null != data && data.items && data.items.length > 0;
            this.showBtn(data.btn_name, data.btn_action, data.id, data.received, haveReward);
          }
        }
        showBtn(btn_name, btn_action, btn_id, receive, haveReward) {
          this.disableButton();
          this._btn_name = btn_name;
          this._btn_action = btn_action;
          this._btn_id = btn_id;
          if (null != this._btn_name && "" != this._btn_name) {
            this.exchangeBtn.node.active = true;
            this.exchangeBtn.getComponentInChildren(cc.Label).string = btn_name;
          }
          this.rewardReceive.node.active = receive;
          haveReward && !receive ? this.receiveBtn.node.active = true : this.deleteBtn.node.active = true;
        }
        displayItemRewards(data) {
          if (data.length > 0) for (let i = 0; i < data.length; ++i) if (i < this.mailRewardRoot2.childrenCount) {
            let mailRewardItem = this.mailRewardRoot2.children[i].getComponent(MailRewardItem_1.default);
            mailRewardItem.node.active = true;
            mailRewardItem.setData(data[i]);
          } else {
            let mailRewardItem = utils_1.utils.add_instance_to_root(this.mailRewadItemPrefab, this.mailRewardRoot2, MailRewardItem_1.default);
            mailRewardItem.setData(data[i]);
          }
          this.rewardItemScrollView2.scrollToPercentHorizontal(.01);
        }
        disabledRootChild() {
          this.mailTabRoot.children.forEach(c => {
            c.active = false;
          });
          this.disabledRewardChild();
        }
        disabledRewardChild() {
          this.mailRewardRoot2.children.forEach(d => d.active = false);
        }
        disableButton() {
          this.exchangeBtn.node.active = false;
          this.deleteBtn.node.active = false;
          this.receiveBtn.node.active = false;
        }
        fetchData() {
          lobby_framework_1.lobby_framework.fetch_mail_data();
        }
        fillData() {
          this.defaultMailTabItem = null;
          this.currentTabData = null;
          let defaultData;
          let data = global_data_1.global_data.mail_data;
          this.disableButton();
          this.disabledRootChild();
          if (data) if (data.length > 0) {
            this.mailListNode.active = true;
            this.nomessageNode.active = false;
            for (let i = 0; i < data.length; ++i) {
              let mailTabItem = null;
              if (i < this.mailTabRoot.childrenCount) {
                mailTabItem = this.mailTabRoot.children[i].getComponent(MailTabItem_1.default);
                mailTabItem.node.active = true;
              } else mailTabItem = utils_1.utils.add_instance_to_root(this.mailTabItemPrefab, this.mailTabRoot, MailTabItem_1.default);
              mailTabItem.setData(data[i]);
              if (null == this.defaultMailTabItem && !data[i].read) {
                this.jumpIndex = i + 1;
                this.defaultMailTabItem = mailTabItem;
                defaultData = data[i];
              }
            }
            if (null == this.defaultMailTabItem) {
              this.jumpIndex = 1;
              this.defaultMailTabItem = this.mailTabRoot.children[0].getComponent(MailTabItem_1.default);
              defaultData = data[0];
            }
          } else {
            this.mailListNode.active = false;
            this.nomessageNode.active = true;
          }
          if (null != this.defaultMailTabItem && null != this.defaultMailTabItem.node) {
            utils_1.utils.dispatchEvent(this.defaultMailTabItem.node, "mailTabItemClicked", defaultData);
            if (this.jumpIndex > 5) {
              let p = (this.jumpIndex - 5) / data.length;
              this.mailTabScrollView.scrollToPercentVertical(p);
            }
          }
        }
        fillReceiveRefeshData(receiveID) {
          let data = global_data_1.global_data.mail_data;
          let refeshData = data.filter(d => d.id == receiveID)[0];
          this.rewardReceive.node.active = true;
          let tabnode = this.mailTabRoot.children.filter(v => v.getComponent(MailTabItem_1.default).data.id == receiveID)[0];
          tabnode.getComponent(MailTabItem_1.default).setData(refeshData);
          this.showBtn(refeshData.btn_name, refeshData.btn_action, refeshData.id, refeshData.received, true);
        }
        markRead(id) {
          let data = global_data_1.global_data.mail_data.filter(x => x.id == id);
          let comp = this.mailTabRoot.children.filter(x => x.getComponent(MailTabItem_1.default).data.id == id);
          data.length > 0 && comp.length > 0 && comp[0].getComponent(MailTabItem_1.default).setData(data[0]);
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        OnReceiveClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.get_mail_item(this._btn_id);
        }
        OnExchangeClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.do_command(this._btn_action, "");
        }
        OnDeleteClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.delete_mail(this._btn_id);
        }
        onDestroy() {
          utils_1.utils.off("RefreshMailData", this, this.onRefreshMailData);
        }
      };
      __decorate([ property(cc.Button) ], MailPanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], MailPanel.prototype, "exchangeBtn", void 0);
      __decorate([ property(cc.Button) ], MailPanel.prototype, "receiveBtn", void 0);
      __decorate([ property(cc.Button) ], MailPanel.prototype, "deleteBtn", void 0);
      __decorate([ property(cc.Node) ], MailPanel.prototype, "mailListNode", void 0);
      __decorate([ property(cc.Node) ], MailPanel.prototype, "nomessageNode", void 0);
      __decorate([ property(cc.ScrollView) ], MailPanel.prototype, "mailTabScrollView", void 0);
      __decorate([ property(cc.ScrollView) ], MailPanel.prototype, "rewardItemScrollView2", void 0);
      __decorate([ property(cc.Prefab) ], MailPanel.prototype, "mailTabItemPrefab", void 0);
      __decorate([ property(cc.Prefab) ], MailPanel.prototype, "mailRewadItemPrefab", void 0);
      __decorate([ property(cc.Node) ], MailPanel.prototype, "mailTabRoot", void 0);
      __decorate([ property(cc.Node) ], MailPanel.prototype, "mailRewardRoot2", void 0);
      __decorate([ property(cc.Sprite) ], MailPanel.prototype, "rewardReceive", void 0);
      __decorate([ property(cc.Label) ], MailPanel.prototype, "mailTitleLabel", void 0);
      __decorate([ property(cc.Label) ], MailPanel.prototype, "mailMainLabel", void 0);
      MailPanel = __decorate([ ccclass ], MailPanel);
      return MailPanel;
    })();
    exports.default = MailPanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./MailRewardItem": "MailRewardItem",
    "./MailTabItem": "MailTabItem",
    "./PopWindow": "PopWindow"
  } ],
  MailRewardItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "51507NCZ0hJS4hRCvS8w2mc", "MailRewardItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let MailRewardItem = (() => {
      let MailRewardItem = class MailRewardItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.icon = null;
          this.count = null;
        }
        onLoad() {}
        start() {}
        setData(data) {
          let status = void 0 != data.status_id;
          if (status) {
            let prop_id = global_data_1.global_data.get_prop_id_by_status_id(data.status_id);
            let sp_path = "Prop-prop_" + prop_id;
            global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.icon.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            this.count.string = "x" + this.getStatusTimeDesc(data.count);
          } else {
            let count = data.count >= 1e4 ? data.count / 1e4 + "\u4e07" : data.count + "";
            this.count.string = "x" + count;
            if (data.prop_id == global_define_1.CONST.ID_PROP_GOLD) this.icon.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Shop-gold_img_4"); else if (data.prop_id == global_define_1.CONST.ID_PROP_INGOT) this.icon.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Shop-ingot_img_4"); else if (data.prop_id == global_define_1.CONST.ID_PROP_LOTTER) {
              let sp_path = "Prop-prop_" + data.prop_id;
              null != global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.icon.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            } else {
              let sp_path = "Prop-prop_" + data.prop_id;
              null != global_data_1.global_data.spriteFrameMap.get(sp_path) && (this.icon.spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path));
            }
          }
          this.icon.node.scale = .6;
        }
        getStatusTimeDesc(count) {
          let days = count / 86400;
          if (0 != days) return days.toFixed(0) + "\u5929";
          let hours = count / 3600;
          if (0 != hours) return hours.toFixed(0) + "\u5c0f\u65f6";
          let minute = count / 60;
          if (0 != minute) return minute.toFixed(0) + "\u5206\u949f";
        }
      };
      __decorate([ property(cc.Sprite) ], MailRewardItem.prototype, "icon", void 0);
      __decorate([ property(cc.Label) ], MailRewardItem.prototype, "count", void 0);
      MailRewardItem = __decorate([ ccclass ], MailRewardItem);
      return MailRewardItem;
    })();
    exports.default = MailRewardItem;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define"
  } ],
  MailTabItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ee174mgkNFAGa6zhZIq2DqS", "MailTabItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let MailTabItem = (() => {
      let MailTabItem = class MailTabItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.titleText = null;
          this.dateText = null;
          this.readNode = null;
          this.unreadNode = null;
          this.receiveNode = null;
          this.unreceiveNode = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.getComponent(cc.Toggle), this.node, "MailTabItem", "onMailTabItemClicked");
        }
        onMailTabItemClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "mailTabItemClicked", this.data);
        }
        getData() {
          return this.data;
        }
        setData(data) {
          this.readNode.active = false;
          this.unreadNode.active = false;
          this.receiveNode.active = false;
          this.unreceiveNode.active = false;
          this.data = data;
          this.titleText.string = data.title;
          this.dateText.string = data.date;
          if (data.items && data.items.length > 0) data.read ? data.received ? this.readNode.active = data.read : this.unreceiveNode.active = !data.received : this.unreadNode.active = !data.read; else {
            this.readNode.active = data.read;
            this.unreadNode.active = !data.read;
          }
        }
      };
      __decorate([ property(cc.Label) ], MailTabItem.prototype, "titleText", void 0);
      __decorate([ property(cc.Label) ], MailTabItem.prototype, "dateText", void 0);
      __decorate([ property(cc.Node) ], MailTabItem.prototype, "readNode", void 0);
      __decorate([ property(cc.Node) ], MailTabItem.prototype, "unreadNode", void 0);
      __decorate([ property(cc.Node) ], MailTabItem.prototype, "receiveNode", void 0);
      __decorate([ property(cc.Node) ], MailTabItem.prototype, "unreceiveNode", void 0);
      MailTabItem = __decorate([ ccclass ], MailTabItem);
      return MailTabItem;
    })();
    exports.default = MailTabItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  MessageBoxButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2924fAj2mBA46W5ea5sLUYD", "MessageBoxButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MessageBoxButtonData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class MessageBoxButtonData {
      constructor(id, text) {
        this.id = id;
        this.text = text;
      }
    }
    exports.MessageBoxButtonData = MessageBoxButtonData;
    let MessageBoxButton = (() => {
      let MessageBoxButton = class MessageBoxButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "MessageBoxButton", "callback");
        }
        callback(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("messageBoxButtonClicked", true));
        }
        setData(data) {
          this.data = data;
          this.label.string = data.text;
        }
        start() {}
      };
      __decorate([ property(cc.Label) ], MessageBoxButton.prototype, "label", void 0);
      MessageBoxButton = __decorate([ ccclass ], MessageBoxButton);
      return MessageBoxButton;
    })();
    exports.default = MessageBoxButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  MessageBoxCommon: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "62de8CLyLxI6btdeQ1TjXRh", "MessageBoxCommon");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MessageBoxCommonData = void 0;
    const MessageBoxButton_1 = require("./MessageBoxButton");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class MessageBoxCommonData {
      constructor() {
        this.title = "";
        this.content = "";
        this.button_count = 1;
      }
    }
    exports.MessageBoxCommonData = MessageBoxCommonData;
    let MessageBoxCommon = (() => {
      var MessageBoxCommon_1;
      let MessageBoxCommon = MessageBoxCommon_1 = class MessageBoxCommon extends cc.Component {
        constructor() {
          super(...arguments);
          this.contentLabel = null;
          this.buttonClose = null;
          this.button0 = null;
          this.button1 = null;
          this.button2 = null;
          this.onButtonClicked = null;
        }
        onLoad() {
          this.safe_on("messageBoxButtonClicked", this.messageBoxButtonClicked, this);
          utils_1.utils.bind_button_event(this.buttonClose, this.node, "MessageBoxCommon", "onClose");
        }
        start() {}
        setButton(id, btn, visible, text) {
          if (cc.isValid(btn)) {
            btn.node.active = visible;
            visible && btn.setData(new MessageBoxButton_1.MessageBoxButtonData(id, text || ""));
          }
        }
        setMessageBoxData(data) {
          this.contentLabel.string = null != data.content ? data.content : "";
          this.button0.node.active = false;
          this.button1.node.active = false;
          this.button2.node.active = false;
          if (1 == data.button_count) this.setButton(0, this.button0, true, ""); else if (2 == data.button_count) {
            this.setButton(0, this.button0, true, "");
            this.setButton(1, this.button1, true, "");
          }
        }
        messageBoxButtonClicked(event) {
          let btn = event.target.getComponent(MessageBoxButton_1.default);
          let msgbox = this.getComponent(MessageBoxCommon_1);
          cc.isValid(msgbox.onButtonClicked) && msgbox.onButtonClicked(btn.data.id, btn.data.text);
        }
        onClose() {
          sound_manager_1.sound_manager.play_click();
          cc.isValid(this.onButtonClicked) && this.onButtonClicked(-1, "");
        }
      };
      __decorate([ property(cc.Label) ], MessageBoxCommon.prototype, "contentLabel", void 0);
      __decorate([ property(cc.Button) ], MessageBoxCommon.prototype, "buttonClose", void 0);
      __decorate([ property(MessageBoxButton_1.default) ], MessageBoxCommon.prototype, "button0", void 0);
      __decorate([ property(MessageBoxButton_1.default) ], MessageBoxCommon.prototype, "button1", void 0);
      __decorate([ property(MessageBoxButton_1.default) ], MessageBoxCommon.prototype, "button2", void 0);
      MessageBoxCommon = MessageBoxCommon_1 = __decorate([ ccclass ], MessageBoxCommon);
      return MessageBoxCommon;
    })();
    exports.default = MessageBoxCommon;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./MessageBoxButton": "MessageBoxButton"
  } ],
  MessageHint: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7c4b88xRuNBeJrWHFOKcq4G", "MessageHint");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let MessageHint = (() => {
      let MessageHint = class MessageHint extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelText = null;
          this.startPosition = null;
          this.fadeInTime = 0;
          this.stayTime = 0;
          this.fadeOutTime = 0;
        }
        start() {}
        play(text) {
          this.labelText.string = text;
          this.node.setPosition(this.startPosition);
          this.node.opacity = 0;
          this.node.stopAllActions();
          let steps = cc.sequence(cc.spawn([ cc.moveTo(this.fadeInTime, cc.v2(0, 150)).easing(cc.easeQuadraticActionOut()), cc.fadeIn(this.fadeInTime).easing(cc.easeQuadraticActionOut()) ]), cc.delayTime(this.stayTime), cc.fadeOut(this.fadeOutTime).easing(cc.easeQuadraticActionIn()));
          this.node.runAction(steps);
        }
        onDestroy() {
          AppGlobal_1.AppGlobal.getInstance().currentMessageHint = null;
        }
      };
      __decorate([ property(cc.Label) ], MessageHint.prototype, "labelText", void 0);
      __decorate([ property(cc.Vec2) ], MessageHint.prototype, "startPosition", void 0);
      __decorate([ property ], MessageHint.prototype, "fadeInTime", void 0);
      __decorate([ property ], MessageHint.prototype, "stayTime", void 0);
      __decorate([ property ], MessageHint.prototype, "fadeOutTime", void 0);
      MessageHint = __decorate([ ccclass ], MessageHint);
      return MessageHint;
    })();
    exports.default = MessageHint;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal"
  } ],
  ModeButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6dd37UIP+BGhZauecLSTxJk", "ModeButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ModeButton = (() => {
      let ModeButton = class ModeButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelTitle = null;
          this.labelSubtitle = null;
          this.labelDescription = null;
          this.labelBottom = null;
          this.iconIsOpen = null;
          this.data = null;
        }
        onLoad() {
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "ModeButton";
          clickEventHandler.handler = "modeButtonClicked";
          var button = this.getComponent(cc.Button);
          button.clickEvents.push(clickEventHandler);
        }
        modeButtonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let param = new lobby_types_1.lobby_types.LaunchGameParams();
          param.isRedPackageGame = true;
          param.gameId = this.data._int_game_id;
          param.kindId = this.data._int_kind;
          param.limit_min = this.data._int_limit;
          lobby_framework_1.lobby_framework.launchGame(param);
        }
        start() {}
        getKind() {
          return this.data._int_kind;
        }
        setData(data) {
          this.data = data;
          this.labelTitle.string = "3\u5c401\u7ea2\u5305";
          data._int_kind == global_define_1.CONST.ROOM_KIND_MAX_BEANS && (this.labelTitle.string = "1\u5c401\u7ea2\u5305");
          let max = 0;
          for (let i = 0; i < data._int_money.length; ++i) {
            let n = data._int_money[i];
            void 0 != n && n > max && (max = n);
          }
          this.labelSubtitle.string = "\u6700\u5927\u7ea2\u5305" + max / 100 + "\u5143";
          this.labelDescription.string = data._str_desc;
          this.labelBottom.string = data._str_base_desc + "\n" + data._str_tax_desc;
          let l_find_room = false;
          for (let the_room_data of global_data_1.global_data._vector_room_data) {
            if (the_room_data._int_room_mode != global_define_1.CONST.ROOM_MODE_REDPACKET) continue;
            if (the_room_data._int_game_id != data._int_game_id) continue;
            if (the_room_data._int_room_kind != data._int_kind) continue;
            l_find_room = true;
          }
          if (l_find_room) {
            this.iconIsOpen.node.active = false;
            this.getComponent(cc.Button).interactable = true;
          } else {
            this.iconIsOpen.node.active = true;
            this.getComponent(cc.Button).interactable = false;
          }
        }
      };
      __decorate([ property(cc.Label) ], ModeButton.prototype, "labelTitle", void 0);
      __decorate([ property(cc.Label) ], ModeButton.prototype, "labelSubtitle", void 0);
      __decorate([ property(cc.Label) ], ModeButton.prototype, "labelDescription", void 0);
      __decorate([ property(cc.Label) ], ModeButton.prototype, "labelBottom", void 0);
      __decorate([ property(cc.Sprite) ], ModeButton.prototype, "iconIsOpen", void 0);
      ModeButton = __decorate([ ccclass ], ModeButton);
      return ModeButton;
    })();
    exports.default = ModeButton;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ModeSelect: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "066b27lnIxCEIbYcG6rwsaN", "ModeSelect");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const ModeButton_1 = require("./ModeButton");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ModeSelect = (() => {
      let ModeSelect = class ModeSelect extends cc.Component {
        constructor() {
          super(...arguments);
          this.buttonLeft = null;
          this.buttonRight = null;
        }
        fetchData() {
          global_data_1.global_data._vector_red_packet.forEach(the_red_packet => {
            the_red_packet._int_game_id == global_data_1.global_data.game_id && the_red_packet._vector_main_item.forEach(the_packet_item => {
              the_packet_item._int_kind == global_define_1.CONST.ROOM_KIND_MIN_BEANS && this.buttonLeft.setData(the_packet_item);
              the_packet_item._int_kind == global_define_1.CONST.ROOM_KIND_MAX_BEANS && this.buttonRight.setData(the_packet_item);
            });
          });
        }
        start() {
          this.fetchData();
        }
      };
      __decorate([ property(ModeButton_1.default) ], ModeSelect.prototype, "buttonLeft", void 0);
      __decorate([ property(ModeButton_1.default) ], ModeSelect.prototype, "buttonRight", void 0);
      ModeSelect = __decorate([ ccclass ], ModeSelect);
      return ModeSelect;
    })();
    exports.default = ModeSelect;
    cc._RF.pop();
  }, {
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "./ModeButton": "ModeButton"
  } ],
  MoneyRain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "897f2spg+JPGoA30bEcT6xU", "MoneyRain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var ShowType;
    (function(ShowType) {
      ShowType[ShowType["rain_only"] = 0] = "rain_only";
      ShowType[ShowType["big_red_packet"] = 1] = "big_red_packet";
      ShowType[ShowType["two_both"] = 2] = "two_both";
    })(ShowType || (ShowType = {}));
    let MoneyRain = (() => {
      let MoneyRain = class MoneyRain extends cc.Component {
        constructor() {
          super(...arguments);
          this.pre_small_packet = null;
          this.pre_big_packet = null;
          this.pre_redpacket_ani = null;
          this.m_rain_time = 2;
          this.ptr_bg_img = null;
          this.ptr_redpacket_img = null;
          this.ptr_count_tips_sprite = null;
          this.ptr_time_bg_sprite = null;
          this.m_grade_label = null;
          this.m_grade_label_2 = null;
          this.m_time_label = null;
          this.m_grade_btn = null;
          this.m_big_redpacket = null;
          this.m_all_grade_count = 0;
          this.m_curr_grade_count = 0;
          this.m_bool_can_click = false;
          this.m_temp_rain_time = 0;
          this.m_temp_money = 0;
          this.m_schedule_time_dt = 0;
          this.m_temp_update_time = 1;
        }
        onLoad() {
          this.unschedule(this.scheduleGradeLabel);
          this.schedule(this.scheduleGradeLabel, 5);
          this.m_grade_btn.node.zIndex = 200;
          utils_1.utils.on("RedpacketCountUpdate", this, this.onEventRedpacketCountUpdate);
          utils_1.utils.on("RedpacketInfoUpdate", this, this.onEventRedpacketInfoUpdate);
          utils_1.utils.on("RedpacketMoneyUpdate", this, this.onEventRedpacketMoneyUpdate);
          utils_1.utils.on("RedpacketShowTimeLabel", this, this.onEventRedpacketShowTimeLabel);
        }
        onDestroy() {
          utils_1.utils.off("RedpacketCountUpdate", this, this.onEventRedpacketCountUpdate);
          utils_1.utils.off("RedpacketInfoUpdate", this, this.onEventRedpacketInfoUpdate);
          utils_1.utils.off("RedpacketMoneyUpdate", this, this.onEventRedpacketMoneyUpdate);
          utils_1.utils.off("RedpacketShowTimeLabel", this, this.onEventRedpacketShowTimeLabel);
        }
        onEventRedpacketShowTimeLabel(show) {
          this.showTimeLabel(show);
        }
        onEventRedpacketCountUpdate(param_int_curr, param_int_total, param_int_time) {
          this.update_redpacket_count(param_int_curr, param_int_total);
          this.update_redpacket_time(param_int_time);
        }
        onEventRedpacketInfoUpdate(ptr_user_redpacket) {
          ptr_user_redpacket.pass_time < .01 && this.showMoneyRainLayer();
          ptr_user_redpacket.pass_time = ptr_user_redpacket.pass_time + Math.floor((new Date().getTime() - ptr_user_redpacket.sendtime) / 1e3);
          this.update_redpacket_count(ptr_user_redpacket.finish_count, ptr_user_redpacket.totle_count);
          this.set_redpacket_time(ptr_user_redpacket.interval - ptr_user_redpacket.pass_time);
        }
        onEventRedpacketMoneyUpdate(redpack) {
          this.setMoney(redpack);
        }
        newRedPacket(dt) {
          this.m_temp_rain_time = this.m_temp_rain_time - dt;
          if (this.m_temp_rain_time < 0) {
            this.unschedule(this.newRedPacket);
            this.scheduleOnce(this.hideMoneyRainLayer, 2);
            return;
          }
          var newMoney = cc.instantiate(this.pre_small_packet);
          this.node.addChild(newMoney, 1);
          newMoney.setPosition(this.getRedPacketPos());
          newMoney.setScale(this.getRedPacketScale());
          newMoney.angle = -this.getRedPacketRotation();
          var move2 = cc.moveTo(utils_1.utils.random_int(0, 1e3) / 1e3 * 1.2 + .5, cc.v2(newMoney.position.x, -this.node.height / 2 - 50));
          var finish = cc.callFunc(newMoney.removeFromParent, newMoney);
          var myAction = cc.sequence(move2, finish);
          newMoney.runAction(myAction);
        }
        getRedPacketPos() {
          var randX = utils_1.utils.random_int(0, 1e3) / 1e3 * this.node.width - this.node.width / 2;
          var randY = this.node.height / 2 + 100;
          return cc.v2(randX, randY);
        }
        getRedPacketScale() {
          return utils_1.utils.random_int(0, 1e3) / 1e3 * .4 + .4;
        }
        getRedPacketRotation() {
          return utils_1.utils.random_int(0, 1e3) / 1e3 * 60 - 30;
        }
        showMonenyRain() {
          this.m_temp_rain_time = this.m_rain_time;
          this.schedule(this.newRedPacket, .01);
        }
        showBigRedPacket() {
          this.ptr_bg_img.node.active = true;
          if (null == this.m_big_redpacket) {
            this.m_big_redpacket = cc.instantiate(this.pre_big_packet).getComponent("BigRedPacket");
            this.m_big_redpacket.setDelegate(this);
          }
          this.m_big_redpacket.setMoney(this.m_temp_money);
          this.m_big_redpacket.node.active = false;
          this.m_big_redpacket.node.zIndex = 20;
          this.m_big_redpacket.showBigRedPacket();
          this.m_big_redpacket.node.setPosition(0, 0);
          this.node.addChild(this.m_big_redpacket.node, 2);
          this.ptr_bg_img.getComponent(cc.Button).interactable = true;
          this.m_temp_money = 0;
        }
        clickBtnEvent() {
          if (0 == this.m_temp_money) return;
          if (false == this.m_bool_can_click) return;
          this.unschedule(this.shutDownBtnAniSchedule);
          this.m_bool_can_click = false;
          this.m_grade_btn.interactable = false;
          this.showBigRedPacket();
          this.unschedule(this.hideMoneyRainLayer);
          this.shutDownBtnAniSchedule();
        }
        hideMoneyRainLayer() {
          if (this.m_big_redpacket && true == this.m_big_redpacket.node.active) return;
          this.ptr_bg_img.node.active = false;
          this.clearData();
        }
        set_redpacket_time(param_int_time) {
          this.m_schedule_time_dt = param_int_time;
          this.schedule(this.scheduleUpdateTime, .1);
          this.updateTimeLabelText();
        }
        scheduleUpdateTime(dt) {
          this.m_temp_update_time = this.m_temp_update_time - dt;
          if (this.m_temp_update_time <= 0) {
            this.m_temp_update_time = 1;
            this.m_schedule_time_dt = this.m_schedule_time_dt - 1;
            this.updateTimeLabelText();
            this.m_schedule_time_dt <= 0 && this.unschedule(this.scheduleUpdateTime);
          }
        }
        scheduleGradeLabel() {
          this.ptr_count_tips_sprite.node.runAction(cc.sequence(cc.scaleTo(.2, 0, 1), cc.callFunc(function() {
            if (false == this.m_grade_label.node.active) {
              this.m_grade_label.node.active = true;
              this.m_grade_label_2.node.active = false;
            } else {
              this.m_grade_label.node.active = false;
              this.m_grade_label_2.node.active = true;
            }
          }, this), cc.scaleTo(.2, 1, 1)));
        }
        updateTimeLabelText() {
          let l_mins = Math.floor(this.m_schedule_time_dt / 60);
          let l_sec = this.m_schedule_time_dt % 60;
          this.m_time_label.string = l_sec < 10 ? l_mins + ":0" + l_sec : l_mins + ":" + l_sec;
        }
        clearData() {
          if (this.m_big_redpacket) {
            this.m_big_redpacket.ptr_top.getComponent(cc.Button).interactable = true;
            this.m_big_redpacket.getComponent(cc.Button).interactable = false;
          }
          this.m_grade_btn.interactable = true;
          this.ptr_bg_img.getComponent(cc.Button).interactable = false;
        }
        showBtnAni(bool_show) {
          this.ptr_redpacket_img.node.active = !bool_show;
          this.pre_redpacket_ani.active = bool_show;
          bool_show && this.pre_redpacket_ani.getComponent(cc.Animation).play();
          this.ptr_count_tips_sprite.node.active = !bool_show;
          this.ptr_time_bg_sprite.node.active = !bool_show;
        }
        shutDownBtnAniSchedule() {
          this.showBtnAni(false);
          this.m_bool_can_click = false;
        }
        setGradeData(all_grade_count, param_int_time) {
          this.m_grade_btn.node.active = true;
          this.m_all_grade_count = all_grade_count;
          this.m_grade_label.string = all_grade_count + "\u5c40\u9886\u7ea2\u5305";
          this.set_redpacket_time(param_int_time);
        }
        showMoneyRainLayer(param_money) {
          null != param_money && this.setMoney(param_money);
          this.showMonenyRain();
        }
        update_redpacket_count(param_int_curr, param_int_total) {
          this.m_grade_btn.node.active = true;
          this.m_all_grade_count = param_int_total;
          this.m_curr_grade_count = param_int_curr;
          this.m_grade_label.string = param_int_total + "\u5c40\u9886\u7ea2\u5305";
          this.m_grade_label_2.string = "\u5c40\u6570:" + param_int_curr + "/" + param_int_total;
        }
        update_redpacket_time(param_int_time) {
          this.unschedule(this.scheduleUpdateTime);
          this.set_redpacket_time(param_int_time);
        }
        showTimeLabel(bool_show) {
          this.ptr_time_bg_sprite.node.active = bool_show;
        }
        setMoney(money) {
          this.m_temp_money = money;
          this.showBtnAni(true);
          this.m_bool_can_click = true;
          this.scheduleOnce(this.shutDownBtnAniSchedule, 30);
        }
      };
      __decorate([ property(cc.Prefab) ], MoneyRain.prototype, "pre_small_packet", void 0);
      __decorate([ property(cc.Prefab) ], MoneyRain.prototype, "pre_big_packet", void 0);
      __decorate([ property(cc.Node) ], MoneyRain.prototype, "pre_redpacket_ani", void 0);
      __decorate([ property(cc.Float) ], MoneyRain.prototype, "m_rain_time", void 0);
      __decorate([ property(cc.Sprite) ], MoneyRain.prototype, "ptr_bg_img", void 0);
      __decorate([ property(cc.Sprite) ], MoneyRain.prototype, "ptr_redpacket_img", void 0);
      __decorate([ property(cc.Sprite) ], MoneyRain.prototype, "ptr_count_tips_sprite", void 0);
      __decorate([ property(cc.Sprite) ], MoneyRain.prototype, "ptr_time_bg_sprite", void 0);
      __decorate([ property(cc.Label) ], MoneyRain.prototype, "m_grade_label", void 0);
      __decorate([ property(cc.Label) ], MoneyRain.prototype, "m_grade_label_2", void 0);
      __decorate([ property(cc.Label) ], MoneyRain.prototype, "m_time_label", void 0);
      __decorate([ property(cc.Button) ], MoneyRain.prototype, "m_grade_btn", void 0);
      MoneyRain = __decorate([ ccclass ], MoneyRain);
      return MoneyRain;
    })();
    exports.default = MoneyRain;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils"
  } ],
  MyPrivateRoom: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "85abem2EfVD/6+H1oxyFOq2", "MyPrivateRoom");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const game_auxi_1 = require("../../Framework/lobby/game/game_auxi");
    const PrivateRoomItem_1 = require("./PrivateRoomItem");
    const AppGlobal_1 = require("../../AppGlobal");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let MyPrivateRoom = (() => {
      let MyPrivateRoom = class MyPrivateRoom extends cc.Component {
        constructor() {
          super(...arguments);
          this.noRoomNode = null;
          this.hasRoomNode = null;
          this.roomItemPrefab = null;
          this.roomItemRoot = null;
          this.roomItemScrollView = null;
          this.noRoomButton = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.noRoomButton, this.node, "MyPrivateRoom", "onNoRoomButtonClicked");
        }
        setData() {
          game_auxi_1.game_auxi.select_private_room();
        }
        fetchData() {
          this.roomItemRoot.removeAllChildren();
          let rooms = game_auxi_1.game_auxi._vector_my_private_room;
          if (rooms && rooms.length > 0) {
            this.hasRoomNode.active = true;
            this.noRoomNode.active = false;
            rooms.forEach(room => {
              let d = new PrivateRoomItem_1.PrivateRoomItemData();
              d.roomId = room.code;
              d.gameName = global_data_1.global_data.get_game_name_by_gameid(room.gameid);
              d.type = room.kind_name;
              d.code = room.code;
              let item = utils_1.utils.add_instance_to_root(this.roomItemPrefab, this.roomItemRoot, PrivateRoomItem_1.default);
              item.setData(d);
              utils_1.utils.bind_button_event(item.btnEnter, this.node, "MyPrivateRoom", "onItemEnterClicked");
              utils_1.utils.bind_button_event(item.btnDismiss, this.node, "MyPrivateRoom", "onItemDismissClicked");
            });
          } else {
            this.hasRoomNode.active = false;
            this.noRoomNode.active = true;
          }
        }
        onItemEnterClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
          let data = event.target.getParent().getComponent(PrivateRoomItem_1.default).data;
          console.log("onItemEnterClicked", data);
          game_auxi_1.game_auxi.enter_private_room(data.code);
        }
        onItemDismissClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let data = event.target.getParent().getComponent(PrivateRoomItem_1.default).data;
          console.log("onItemDismissClicked", data);
          utils_1.utils.show_message_box({
            content: "\u60a8\u786e\u5b9a\u8981\u89e3\u6563\u623f\u95f4\u3010" + data.code + "\u3011\u5417\uff1f",
            button_count: 2,
            onClick: index => {
              if (0 == index) {
                utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
                game_auxi_1.game_auxi.dismiss_private_room(data.code);
              }
            }
          });
        }
        onNoRoomButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "switchToCreateRoom");
        }
        on_enter_auxi_result(param) {
          let int_code = param.int_code;
          let str_result = param.str_result;
          if (int_code == game_auxi_1.game_auxi.SUB_AUXI_QUERY_TABLE_SUCCESS_V20) this.fetchData(); else if (int_code == game_auxi_1.game_auxi.SUB_AUXI_DISMISS_TABLE_SUCCESS_V20) {
            this.setData();
            global_data_1.global_data.request_user_data();
            utils_1.utils.show_hint(str_result);
          } else int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20 ? AppGlobal_1.AppGlobal.getInstance().showPrivateDetail() : utils_1.utils.show_hint(str_result);
        }
      };
      __decorate([ property(cc.Node) ], MyPrivateRoom.prototype, "noRoomNode", void 0);
      __decorate([ property(cc.Node) ], MyPrivateRoom.prototype, "hasRoomNode", void 0);
      __decorate([ property(cc.Prefab) ], MyPrivateRoom.prototype, "roomItemPrefab", void 0);
      __decorate([ property(cc.Node) ], MyPrivateRoom.prototype, "roomItemRoot", void 0);
      __decorate([ property(cc.ScrollView) ], MyPrivateRoom.prototype, "roomItemScrollView", void 0);
      __decorate([ property(cc.Button) ], MyPrivateRoom.prototype, "noRoomButton", void 0);
      MyPrivateRoom = __decorate([ ccclass ], MyPrivateRoom);
      return MyPrivateRoom;
    })();
    exports.default = MyPrivateRoom;
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/game/game_auxi": "game_auxi",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./PrivateRoomItem": "PrivateRoomItem"
  } ],
  NeedGold: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1fe80EZ+pFNG5wF8vjkuPwR", "NeedGold");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NeedGold = (() => {
      var NeedGold_1;
      let NeedGold = NeedGold_1 = class NeedGold extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.shopNode = null;
          this.shopBtn = null;
          this.shopLabel = null;
          this.shopLabelAdd = null;
          this.shopLabelPrice = null;
          this.watchNode = null;
          this.watchBtn = null;
          this.count = 0;
          this.pzcode = "";
          this.goodData = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "NeedGold", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.shopBtn, this.node, "NeedGold", "onShopBtnClicked");
          utils_1.utils.bind_button_event(this.watchBtn, this.node, "NeedGold", "onWatchBtnClicked");
        }
        onShow() {
          NeedGold_1.inst = this;
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_DAILY_REWARD_STATUS);
          url = utils_1.utils.string_replace_key_with_integer(url, "{ACTID}", 2021);
          utils_1.utils.show_loading("\u6b63\u5728\u83b7\u53d6\u5956\u52b1\u72b6\u6001", true);
          utils_1.utils.send_http_request({
            url: url,
            success: function(data) {
              if (data && NeedGold_1.inst) {
                console.log("HTTP_MINIGAME_DAILY_REWARD_STATUS", data, utils_1.utils.to_json(data));
                NeedGold_1.inst.count = data.count;
                NeedGold_1.inst.pzcode = data.pzcode;
              }
            },
            fail: function(message) {
              utils_1.utils.show_hint(message);
              console.log("\u83b7\u53d6\u5956\u52b1\u72b6\u6001\u5931\u8d25: " + message);
            },
            complete: function() {
              utils_1.utils.hide_loading();
            },
            progress: function(timeLeft) {
              utils_1.utils.show_loading_text(`\u6b63\u5728\u83b7\u53d6\u5956\u52b1\u72b6\u6001...(${timeLeft}s)`);
            }
          });
        }
        onHide() {}
        onCloseBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onShopBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          lobby_framework_1.lobby_framework.purchase_item(this.goodData.id, this.goodData.price, this.goodData.name);
        }
        onWatchBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.playRewardVideo();
        }
        setData(data) {
          this.shopNode.active = data.showShop;
          if (data.showShop) {
            let cz = 1e4 * data.goodData.price;
            let zs = data.goodData.gold - cz;
            let pay = data.goodData.price.toFixed(0) + "\u5143";
            let gold = (cz / 1e4).toFixed(0) + "\u4e07\u91d1\u5e01";
            let giftgold = (zs / 1e4).toFixed(0) + "\u4e07\u91d1\u5e01";
            this.shopLabel.string = gold;
            this.shopLabelAdd.string = giftgold;
            this.shopLabelPrice.string = pay;
            this.goodData = data.goodData;
          }
          this.watchNode.active = data.showWatch;
        }
        playRewardVideo() {
          let ret = platform_1.platform.inst.checkRewardedVideoAdSync();
          if (!ret.available) {
            utils_1.utils.show_hint(ret.reason);
            return;
          }
          if (NeedGold_1.inst.count < 1) {
            utils_1.utils.show_hint("\u4eca\u65e5\u89c6\u9891\u5df2\u5168\u90e8\u770b\u5b8c\uff0c\u8bf7\u660e\u65e5\u518d\u6765");
            return;
          }
          utils_1.utils.show_loading("", true);
          utils_1.utils.send("RewardAd", "begin");
          platform_1.platform.inst.playRewardedVideoAd({
            success: () => {
              if (NeedGold_1.inst && NeedGold_1.inst.pzcode) {
                let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_DAILY_REWARD_GET);
                url = utils_1.utils.string_replace_any(url, "{PZCODE}", NeedGold_1.inst.pzcode);
                utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
                utils_1.utils.send_http_request({
                  url: url,
                  success: data => {
                    if (data) {
                      NeedGold_1.inst.count = data.count;
                      let change = data.fundchange[0];
                      utils_1.utils.show_get_reward([ {
                        fund_id: change.id,
                        fund_count: change.cnt
                      } ]);
                    }
                    global_data_1.global_data.request_user_data();
                    NeedGold_1.inst.hide();
                  },
                  fail: message => {
                    utils_1.utils.show_hint(message);
                    console.log("\u89c6\u9891\u64ad\u653e\u6210\u529f\uff0c\u5956\u52b1\u9886\u53d6\u5931\u8d25: " + message);
                  },
                  complete: () => {
                    utils_1.utils.hide_loading();
                    utils_1.utils.send("RewardAd", "end");
                  },
                  progress: function(timeLeft) {
                    utils_1.utils.show_loading_text(`\u6b63\u5728\u52a0\u8f7d...(${timeLeft}s)`);
                  }
                });
              } else utils_1.utils.show_hint("\u5956\u52b1\u72b6\u6001\u83b7\u53d6\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5");
            },
            fail: res => {
              utils_1.utils.show_hint(res.errMsg);
              utils_1.utils.hide_loading();
            }
          });
        }
      };
      NeedGold.inst = null;
      __decorate([ property(cc.Button) ], NeedGold.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], NeedGold.prototype, "shopNode", void 0);
      __decorate([ property(cc.Button) ], NeedGold.prototype, "shopBtn", void 0);
      __decorate([ property(cc.Label) ], NeedGold.prototype, "shopLabel", void 0);
      __decorate([ property(cc.Label) ], NeedGold.prototype, "shopLabelAdd", void 0);
      __decorate([ property(cc.Label) ], NeedGold.prototype, "shopLabelPrice", void 0);
      __decorate([ property(cc.Node) ], NeedGold.prototype, "watchNode", void 0);
      __decorate([ property(cc.Button) ], NeedGold.prototype, "watchBtn", void 0);
      NeedGold = NeedGold_1 = __decorate([ ccclass ], NeedGold);
      return NeedGold;
    })();
    exports.default = NeedGold;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  NoNetworkScreen: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5bc09CsMDFIoa4uDUz+spyy", "NoNetworkScreen");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.NoNetworkScreen = void 0;
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NoNetworkScreen = (() => {
      let NoNetworkScreen = class NoNetworkScreen extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.showTime = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "NoNetworkScreen", "onCloseClicked");
        }
        onEnable() {
          this.showTime = 0;
        }
        onCloseClicked() {
          if (this.showTime > 1) {
            sound_manager_1.sound_manager.play_click();
            this.hide();
          }
        }
        update(dt) {
          this.showTime += dt;
        }
      };
      __decorate([ property(cc.Button) ], NoNetworkScreen.prototype, "closeBtn", void 0);
      NoNetworkScreen = __decorate([ ccclass ], NoNetworkScreen);
      return NoNetworkScreen;
    })();
    exports.NoNetworkScreen = NoNetworkScreen;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  NoticeButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6ea63EpnFhM7o4KvOROhJfo", "NoticeButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NoticeButton = (() => {
      let NoticeButton = class NoticeButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.redPoint = null;
        }
        onLoad() {
          utils_1.utils.on("NoticeDataRefresh", this, this.onEventNoticeDataRefresh);
        }
        onDestroy() {
          utils_1.utils.off("NoticeDataRefresh", this, this.onEventNoticeDataRefresh);
        }
        start() {
          this.refreshRedPoint();
        }
        onEventNoticeDataRefresh() {
          this.refreshRedPoint();
        }
        refreshRedPoint() {
          if (!global_data_1.global_data.notice_data || 0 == global_data_1.global_data.notice_data.length) return false;
          this.redPoint.active = global_data_1.global_data.notice_data.some(function(value) {
            return false == value.read;
          });
          utils_1.utils.dispatchEvent(this.node, "redPointRefreshed");
          return true;
        }
      };
      __decorate([ property(cc.Button) ], NoticeButton.prototype, "button", void 0);
      __decorate([ property(cc.Node) ], NoticeButton.prototype, "redPoint", void 0);
      NoticeButton = __decorate([ ccclass ], NoticeButton);
      return NoticeButton;
    })();
    exports.default = NoticeButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data"
  } ],
  NoticeDetail: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a0cebiCmUNDEYmQRss6Rd0U", "NoticeDetail");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NoticeDetail = (() => {
      let NoticeDetail = class NoticeDetail extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.titleText = null;
          this.contentText = null;
          this.closeBtn = null;
          this.okBtn = null;
          this.okLabel = null;
          this.action = "";
          this.auto = false;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "NoticeDetail", "onCloseClicked");
          utils_1.utils.bind_button_event(this.okBtn, this.node, "NoticeDetail", "onOkClicked");
        }
        onCloseClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          this.auto && (this.hide_callback = function() {
            lobby_framework_1.lobby_framework.auto_popup_notice_detail();
          });
        }
        onOkClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          lobby_framework_1.lobby_framework.do_command(this.action, "");
        }
        setData(data, auto) {
          this.titleText.string = data.title;
          this.contentText.string = data.content;
          this.okLabel.string = data.btn_name && "" != data.btn_name ? data.btn_name : "\u6211\u77e5\u9053\u4e86";
          this.action = data.btn_action;
          this.auto = auto;
        }
      };
      __decorate([ property(cc.Label) ], NoticeDetail.prototype, "titleText", void 0);
      __decorate([ property(cc.Label) ], NoticeDetail.prototype, "contentText", void 0);
      __decorate([ property(cc.Button) ], NoticeDetail.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], NoticeDetail.prototype, "okBtn", void 0);
      __decorate([ property(cc.Label) ], NoticeDetail.prototype, "okLabel", void 0);
      NoticeDetail = __decorate([ ccclass ], NoticeDetail);
      return NoticeDetail;
    })();
    exports.default = NoticeDetail;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  NoticeItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d74b8DSvuVHTa81pRUlilyR", "NoticeItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NoticeItem = (() => {
      let NoticeItem = class NoticeItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.titleText = null;
          this.dateText = null;
          this.contentText = null;
          this.readNode = null;
          this.unreadNode = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "NoticeItem", "onNoticeItemClicked");
        }
        onNoticeItemClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "noticeItemClicked", this.data);
        }
        getData() {
          return this.data;
        }
        setData(data) {
          this.data = data;
          this.titleText.string = data.title;
          this.dateText.string = data.date;
          this.contentText.string = data.content;
          this.readNode.active = data.read;
          this.unreadNode.active = !data.read;
        }
      };
      __decorate([ property(cc.Label) ], NoticeItem.prototype, "titleText", void 0);
      __decorate([ property(cc.Label) ], NoticeItem.prototype, "dateText", void 0);
      __decorate([ property(cc.Label) ], NoticeItem.prototype, "contentText", void 0);
      __decorate([ property(cc.Node) ], NoticeItem.prototype, "readNode", void 0);
      __decorate([ property(cc.Node) ], NoticeItem.prototype, "unreadNode", void 0);
      NoticeItem = __decorate([ ccclass ], NoticeItem);
      return NoticeItem;
    })();
    exports.default = NoticeItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  NoticePage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fc8c7clbN1GLI75tHKXDL8o", "NoticePage");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.NoticePageData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class NoticePageData {
      constructor(index, imgUrl, command, param) {
        this.index = index;
        this.imgUrl = imgUrl;
        this.command = command;
        this.param = param;
      }
    }
    exports.NoticePageData = NoticePageData;
    let NoticePage = (() => {
      let NoticePage = class NoticePage extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.sprite = null;
          this.loadingNode = null;
          this.loadingSprite = null;
          this.img = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "NoticePage", "onButtonClicked");
          this.loadingNode.active = true;
          utils_1.utils.run_action_rotate_forever(this.loadingSprite.node, 2, true);
        }
        setData(data) {
          this.data = data;
          if (this.data) {
            let that = this;
            if (null == this.img && null != this.data.imgUrl) {
              console.log("LOAD_TEX_RES:", this.data.imgUrl);
              cc.assetManager.loadRemote(this.data.imgUrl, function(err, tex) {
                if (err) {
                  console.error(err, tex);
                  return;
                }
                if (cc.isValid(that) && cc.isValid(that.sprite)) {
                  that.img = new cc.SpriteFrame(tex);
                  that.sprite.spriteFrame = that.img;
                  that.loadingNode.active = false;
                }
              });
            }
          }
        }
        onButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.do_command(this.data.command, this.data.param);
        }
      };
      __decorate([ property(cc.Button) ], NoticePage.prototype, "button", void 0);
      __decorate([ property(cc.Sprite) ], NoticePage.prototype, "sprite", void 0);
      __decorate([ property(cc.Node) ], NoticePage.prototype, "loadingNode", void 0);
      __decorate([ property(cc.Sprite) ], NoticePage.prototype, "loadingSprite", void 0);
      NoticePage = __decorate([ ccclass ], NoticePage);
      return NoticePage;
    })();
    exports.default = NoticePage;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  NoticePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "32469TWL49Gl6lBUh88RfxQ", "NoticePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const NoticeItem_1 = require("./NoticeItem");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let NoticePanel = (() => {
      let NoticePanel = class NoticePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.messageListNode = null;
          this.nomessageNode = null;
          this.noticeItemScrollView = null;
          this.noticeItemPrefab = null;
          this.noticeItemRoot = null;
        }
        onLoad() {
          this.safe_on("noticeItemClicked", this.onNoticeItemClicked, this);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "NoticePanel", "OnCloseClicked");
          this.noticeItemRoot.removeAllChildren();
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onNoticeItemClicked(event) {
          let data = event.target.getComponent(NoticeItem_1.default).data;
          console.log("onNoticeItemClicked", data);
          this.markRead(data.id);
          utils_1.utils.send("ShowNoticeDetail", data.id, false);
        }
        fetchData() {
          this.noticeItemRoot.children.forEach(c => {
            c.active = false;
          });
          this.fillData();
        }
        fillData() {
          let data = global_data_1.global_data.notice_data;
          if (data) if (data.length > 0) {
            this.messageListNode.active = true;
            this.nomessageNode.active = false;
            for (let i = 0; i < data.length; ++i) if (i < this.noticeItemRoot.childrenCount) {
              let noticeItem = this.noticeItemRoot.children[i].getComponent(NoticeItem_1.default);
              noticeItem.node.active = true;
              noticeItem.setData(data[i]);
            } else {
              let noticeItem = utils_1.utils.add_instance_to_root(this.noticeItemPrefab, this.noticeItemRoot, NoticeItem_1.default);
              noticeItem.setData(data[i]);
            }
          } else {
            this.messageListNode.active = false;
            this.nomessageNode.active = true;
          }
          this.noticeItemScrollView.scrollToTop(.01);
        }
        markRead(id) {
          lobby_framework_1.lobby_framework.mark_notice_read(id);
          let data = global_data_1.global_data.notice_data.filter(x => x.id == id);
          let comp = this.noticeItemRoot.children.filter(x => x.getComponent(NoticeItem_1.default).data.id == id);
          data.length > 0 && comp.length > 0 && comp[0].getComponent(NoticeItem_1.default).setData(data[0]);
        }
      };
      __decorate([ property(cc.Button) ], NoticePanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], NoticePanel.prototype, "messageListNode", void 0);
      __decorate([ property(cc.Node) ], NoticePanel.prototype, "nomessageNode", void 0);
      __decorate([ property(cc.ScrollView) ], NoticePanel.prototype, "noticeItemScrollView", void 0);
      __decorate([ property(cc.Prefab) ], NoticePanel.prototype, "noticeItemPrefab", void 0);
      __decorate([ property(cc.Node) ], NoticePanel.prototype, "noticeItemRoot", void 0);
      NoticePanel = __decorate([ ccclass ], NoticePanel);
      return NoticePanel;
    })();
    exports.default = NoticePanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./NoticeItem": "NoticeItem",
    "./PopWindow": "PopWindow"
  } ],
  PopWindow: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "21ff2YPwolO4rgcPX4PeFhA", "PopWindow");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let PopWindow = (() => {
      let PopWindow = class PopWindow extends cc.Component {
        constructor() {
          super(...arguments);
          this.show_callback = null;
          this.hide_callback = null;
        }
        onShow() {}
        onHide() {}
        show() {
          this.node.scale = .1;
          this.node.active = true;
          let that = this;
          this.node.runAction(cc.sequence(cc.scaleTo(.1, 1), cc.callFunc(function() {
            that.show_callback && that.show_callback();
            that.onShow && that.onShow();
          }, this)));
        }
        hide() {
          let that = this;
          cc.isValid(that.node) && this.node.runAction(cc.sequence(cc.scaleTo(.1, .1), cc.callFunc(function() {
            this.node.active = false;
            that.hide_callback && that.hide_callback();
            that.onHide && that.onHide();
          }, this)));
        }
      };
      PopWindow = __decorate([ ccclass ], PopWindow);
      return PopWindow;
    })();
    exports.default = PopWindow;
    cc._RF.pop();
  }, {} ],
  PrivateDetail: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9b4e2YWM0xGqYMA6XhRfLyo", "PrivateDetail");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("../PopWindow");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const utils_1 = require("../../Framework/common/utils");
    const game_auxi_1 = require("../../Framework/lobby/game/game_auxi");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let PrivateDetail = (() => {
      let PrivateDetail = class PrivateDetail extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.ownerLabel = null;
          this.gameLabel = null;
          this.typeLabel = null;
          this.enterBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "PrivateDetail", "onCloseClicked");
          utils_1.utils.bind_button_event(this.enterBtn, this.node, "PrivateDetail", "onEnterClicked");
        }
        onEnable() {
          this.fetchData();
        }
        onCloseClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onEnterClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          let cmd = "enter_private_room:";
          cmd += 1e3 * game_auxi_1.game_auxi._int_enter_game_id + game_auxi_1.game_auxi._int_enter_room_id;
          cmd += "|";
          cmd += game_auxi_1.game_auxi._enter_private_code;
          lobby_framework_1.lobby_framework.do_command(cmd, "");
        }
        fetchData() {
          let data = game_auxi_1.game_auxi._struct_enter_private_data;
          this.setData(data.nickname, global_data_1.global_data.get_game_name_by_gameid(data.gameid), data.kind_name);
        }
        setData(owner, game, type) {
          this.ownerLabel.string = owner;
          this.gameLabel.string = game;
          this.typeLabel.string = type;
        }
      };
      __decorate([ property(cc.Button) ], PrivateDetail.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Label) ], PrivateDetail.prototype, "ownerLabel", void 0);
      __decorate([ property(cc.Label) ], PrivateDetail.prototype, "gameLabel", void 0);
      __decorate([ property(cc.Label) ], PrivateDetail.prototype, "typeLabel", void 0);
      __decorate([ property(cc.Button) ], PrivateDetail.prototype, "enterBtn", void 0);
      PrivateDetail = __decorate([ ccclass ], PrivateDetail);
      return PrivateDetail;
    })();
    exports.default = PrivateDetail;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/game/game_auxi": "game_auxi",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow"
  } ],
  PrivatePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ec79d1cWv5JS70drzan42uC", "PrivatePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CreatePrivateData = exports.CreateMainPrivateData = exports.CreatePrivateItemData = void 0;
    const PopWindow_1 = require("../PopWindow");
    const CreatePrivate_1 = require("./CreatePrivate");
    const MyPrivateRoom_1 = require("./MyPrivateRoom");
    const EnterPrivate_1 = require("./EnterPrivate");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    class CreatePrivateItemData {
      constructor(_int_id, _int_kind, _int_prop, _str_desc, _int_count, _kindcount) {
        this._int_id = _int_id;
        this._int_kind = _int_kind;
        this._int_prop = _int_prop;
        this._str_desc = _str_desc;
        this._int_count = _int_count;
        this._kindcount = _kindcount;
      }
    }
    exports.CreatePrivateItemData = CreatePrivateItemData;
    class CreateMainPrivateData {}
    exports.CreateMainPrivateData = CreateMainPrivateData;
    class CreatePrivateData {}
    exports.CreatePrivateData = CreatePrivateData;
    const {ccclass: ccclass, property: property} = cc._decorator;
    let PrivatePanel = (() => {
      let PrivatePanel = class PrivatePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.toggle1 = null;
          this.toggle2 = null;
          this.toggle3 = null;
          this.createPrivate = null;
          this.enterPrivate = null;
          this.myPrivateRoom = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "PrivatePanel", "onCloseClicked");
          utils_1.utils.bind_toggle_event(this.toggle1, this.node, "PrivatePanel", "switchToCreateRoom");
          utils_1.utils.bind_toggle_event(this.toggle2, this.node, "PrivatePanel", "switchToEnterRoom");
          utils_1.utils.bind_toggle_event(this.toggle3, this.node, "PrivatePanel", "switchToMyRoom");
          this.safe_on("switchToCreateRoom", this.switchToCreateRoom, this);
        }
        onCloseClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        on_enter_auxi_result(param) {
          utils_1.utils.hide_loading();
          this.createPrivate.active && this.createPrivate.getComponent(CreatePrivate_1.default).on_enter_auxi_result(param);
          this.enterPrivate.active && this.enterPrivate.getComponent(EnterPrivate_1.default).on_enter_auxi_result(param);
          this.myPrivateRoom.active && this.myPrivateRoom.getComponent(MyPrivateRoom_1.default).on_enter_auxi_result(param);
        }
        setData(gameid, panel) {
          this.gameid = gameid;
          panel && "create" != panel ? "enter" == panel ? this.switchToEnterRoom() : "myRoom" == panel && this.switchToMyRoom() : this.switchToCreateRoom();
        }
        switchToCreateRoom() {
          this.toggle1.check();
          this.createPrivate.active = true;
          this.enterPrivate.active = false;
          this.myPrivateRoom.active = false;
          this.createPrivate.getComponent(CreatePrivate_1.default).setData(this.gameid);
        }
        switchToEnterRoom() {
          this.toggle2.check();
          this.createPrivate.active = false;
          this.enterPrivate.active = true;
          this.myPrivateRoom.active = false;
          this.enterPrivate.getComponent(EnterPrivate_1.default).setData();
        }
        switchToMyRoom() {
          this.toggle3.check();
          this.createPrivate.active = false;
          this.enterPrivate.active = false;
          this.myPrivateRoom.active = true;
          this.myPrivateRoom.getComponent(MyPrivateRoom_1.default).setData();
        }
      };
      __decorate([ property(cc.Button) ], PrivatePanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Toggle) ], PrivatePanel.prototype, "toggle1", void 0);
      __decorate([ property(cc.Toggle) ], PrivatePanel.prototype, "toggle2", void 0);
      __decorate([ property(cc.Toggle) ], PrivatePanel.prototype, "toggle3", void 0);
      __decorate([ property(cc.Node) ], PrivatePanel.prototype, "createPrivate", void 0);
      __decorate([ property(cc.Node) ], PrivatePanel.prototype, "enterPrivate", void 0);
      __decorate([ property(cc.Node) ], PrivatePanel.prototype, "myPrivateRoom", void 0);
      PrivatePanel = __decorate([ ccclass ], PrivatePanel);
      return PrivatePanel;
    })();
    exports.default = PrivatePanel;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../PopWindow": "PopWindow",
    "./CreatePrivate": "CreatePrivate",
    "./EnterPrivate": "EnterPrivate",
    "./MyPrivateRoom": "MyPrivateRoom"
  } ],
  PrivateRoomItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "55f48ai1ytCC7GppZZZz1Vz", "PrivateRoomItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PrivateRoomItemData = void 0;
    const {ccclass: ccclass, property: property} = cc._decorator;
    class PrivateRoomItemData {
      constructor(roomId, gameName, type, code) {
        this.roomId = roomId;
        this.gameName = gameName;
        this.type = type;
        this.code = code;
      }
    }
    exports.PrivateRoomItemData = PrivateRoomItemData;
    let PrivateRoomItem = (() => {
      let PrivateRoomItem = class PrivateRoomItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelRoomId = null;
          this.labelGameName = null;
          this.labelType = null;
          this.btnEnter = null;
          this.btnDismiss = null;
          this.data = null;
        }
        onLoad() {}
        setData(data) {
          this.data = data;
          this.labelRoomId.string = data.roomId;
          this.labelGameName.string = data.gameName;
          this.labelType.string = data.type;
        }
      };
      __decorate([ property(cc.Label) ], PrivateRoomItem.prototype, "labelRoomId", void 0);
      __decorate([ property(cc.Label) ], PrivateRoomItem.prototype, "labelGameName", void 0);
      __decorate([ property(cc.Label) ], PrivateRoomItem.prototype, "labelType", void 0);
      __decorate([ property(cc.Button) ], PrivateRoomItem.prototype, "btnEnter", void 0);
      __decorate([ property(cc.Button) ], PrivateRoomItem.prototype, "btnDismiss", void 0);
      PrivateRoomItem = __decorate([ ccclass ], PrivateRoomItem);
      return PrivateRoomItem;
    })();
    exports.default = PrivateRoomItem;
    cc._RF.pop();
  }, {} ],
  PrivateRoomResultItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ecde0lKmrVHp5wTzzG/pJpH", "PrivateRoomResultItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PrivateRoomResultItemData = void 0;
    const {ccclass: ccclass, property: property} = cc._decorator;
    class PrivateRoomResultItemData {}
    exports.PrivateRoomResultItemData = PrivateRoomResultItemData;
    let PrivateRoomResultItem = (() => {
      let PrivateRoomResultItem = class PrivateRoomResultItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.rankLabel = null;
          this.nicknameLabel = null;
          this.scoreLabel = null;
          this.data = null;
        }
        setData(data) {
          this.data = data;
          this.rankLabel.string = String(data.rank);
          this.nicknameLabel.string = data.nickname;
          this.scoreLabel.string = data.score > 0 ? "+" + String(data.score) : String(data.score);
        }
      };
      __decorate([ property(cc.Label) ], PrivateRoomResultItem.prototype, "rankLabel", void 0);
      __decorate([ property(cc.Label) ], PrivateRoomResultItem.prototype, "nicknameLabel", void 0);
      __decorate([ property(cc.Label) ], PrivateRoomResultItem.prototype, "scoreLabel", void 0);
      PrivateRoomResultItem = __decorate([ ccclass ], PrivateRoomResultItem);
      return PrivateRoomResultItem;
    })();
    exports.default = PrivateRoomResultItem;
    cc._RF.pop();
  }, {} ],
  PrivateRoomResult: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "89e43FELMJGHKZCo6pSKjev", "PrivateRoomResult");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PrivateRoomResultData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const PrivateRoomResultItem_1 = require("./PrivateRoomResultItem");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class PrivateRoomResultData {}
    exports.PrivateRoomResultData = PrivateRoomResultData;
    let PrivateRoomResult = (() => {
      let PrivateRoomResult = class PrivateRoomResult extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.roomIDLabel = null;
          this.gameTimeLabel = null;
          this.itemRoot = null;
          this.itemPrefab = null;
          this.scrollView = null;
          this.closeBtn = null;
          this.shareBtn = null;
          this.data = null;
          this.str_share = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "PrivateRoomResult", "onCloseBtnClicked");
          utils_1.utils.bind_button_event(this.shareBtn, this.node, "PrivateRoomResult", "onShareBtnClicked");
          this.shareBtn.node.active = global_data_1.global_data.have_module_wechat_share();
        }
        setData(data, str_share) {
          this.itemRoot.removeAllChildren();
          this.data = data;
          this.str_share = str_share;
          if (data && data.grade_list && data.grade_list.length > 0) {
            this.roomIDLabel.string = "\u623f\u95f4\u53f7\uff1a" + data.room_code;
            if (null == this.data.game_time || void 0 == this.data.game_time || "" == this.data.game_time) {
              let time = new Date();
              this.data.game_time = time.getFullYear() + "/" + (time.getMonth() + 1) + "/" + time.getDate() + " " + time.getHours() + ":" + (time.getMinutes() < 10 ? "0" + time.getMinutes() : time.getMinutes());
            }
            this.gameTimeLabel.string = "\u6e38\u620f\u65f6\u95f4\uff1a" + data.game_time;
            data.grade_list.sort((a, b) => b.grade - a.grade);
            for (let i = 0; i < data.grade_list.length; ++i) {
              let item = utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, PrivateRoomResultItem_1.default);
              let itemData = new PrivateRoomResultItem_1.PrivateRoomResultItemData();
              itemData.rank = i + 1;
              itemData.nickname = data.grade_list[i].name;
              itemData.score = data.grade_list[i].grade;
              item.setData(itemData);
            }
            this.scrollView.scrollToTop(.01);
          }
        }
        onCloseBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onShareBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          let result = encodeURIComponent(utils_1.utils.to_json(this.data));
          platform_1.platform.inst.share({
            title: this.str_share ? this.str_share : "\u70b9\u51fb\u5373\u53ef\u8fdb\u5165\u6e38\u620f\u67e5\u770b\u6218\u7ee9\u8be6\u60c5\uff01",
            imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url),
            query: "privateResult=" + result + "&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id)
          });
        }
      };
      __decorate([ property(cc.Label) ], PrivateRoomResult.prototype, "roomIDLabel", void 0);
      __decorate([ property(cc.Label) ], PrivateRoomResult.prototype, "gameTimeLabel", void 0);
      __decorate([ property(cc.Node) ], PrivateRoomResult.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], PrivateRoomResult.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.ScrollView) ], PrivateRoomResult.prototype, "scrollView", void 0);
      __decorate([ property(cc.Button) ], PrivateRoomResult.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], PrivateRoomResult.prototype, "shareBtn", void 0);
      PrivateRoomResult = __decorate([ ccclass ], PrivateRoomResult);
      return PrivateRoomResult;
    })();
    exports.default = PrivateRoomResult;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow",
    "./PrivateRoomResultItem": "PrivateRoomResultItem"
  } ],
  PrivateToggleItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "71251Y19rVBQ6c8l+3JWal1", "PrivateToggleItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let PrivateToggleItem = (() => {
      let PrivateToggleItem = class PrivateToggleItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
          this.data = null;
        }
        onLoad() {}
        isMainPrivateData(data) {
          return void 0 !== data._str_name;
        }
        setData(data) {
          this.data = data;
          this.isMainPrivateData(data) ? this.label.string = data._str_name : this.label.string = data._str_desc;
        }
      };
      __decorate([ property(cc.Label) ], PrivateToggleItem.prototype, "label", void 0);
      PrivateToggleItem = __decorate([ ccclass ], PrivateToggleItem);
      return PrivateToggleItem;
    })();
    exports.default = PrivateToggleItem;
    cc._RF.pop();
  }, {} ],
  ReLoginMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "273907C7+hO1olRSNXK3Mnh", "ReLoginMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var LOCAL_CONFIG_PATH = "config";
    let ReLoginMain = (() => {
      let ReLoginMain = class ReLoginMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.ac = null;
          this.pw = null;
          this.toggleTest = null;
          this.toggleDemo = null;
          this.toggleOpen = null;
          this.toggleWechatLogon = null;
          this.btnGO = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btnGO, this.node, "ReLoginMain", "onGo");
        }
        onGo() {
          let ac = this.ac.string;
          let pw = "" == this.pw.string ? "111111" : this.pw.string;
          utils_1.utils.load_json_res({
            path: LOCAL_CONFIG_PATH,
            success: json => {
              let js = json.json;
              let server_str = "";
              server_str = this.toggleTest.isChecked ? "Test" : this.toggleDemo.isChecked ? "Demo" : "Online";
              global_data_1.global_data.logon_param = new lobby_types_1.lobby_types.LogonParams();
              if (this.toggleWechatLogon.isChecked) {
                utils_1.utils.is_wechat() ? global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Wechat : global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Channel;
                global_data_1.global_data.force_passport_logon = false;
              } else {
                global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Passport;
                global_data_1.global_data.force_passport_logon = true;
              }
              global_data_1.global_data.logon_param.user_decide = true;
              global_data_1.global_data.logon_param.account = ac;
              global_data_1.global_data.logon_param.password = pw;
              lobby_framework_1.lobby_framework.apply_server_by_type(js, server_str);
              lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Logon);
            }
          });
        }
      };
      __decorate([ property(cc.EditBox) ], ReLoginMain.prototype, "ac", void 0);
      __decorate([ property(cc.EditBox) ], ReLoginMain.prototype, "pw", void 0);
      __decorate([ property(cc.Toggle) ], ReLoginMain.prototype, "toggleTest", void 0);
      __decorate([ property(cc.Toggle) ], ReLoginMain.prototype, "toggleDemo", void 0);
      __decorate([ property(cc.Toggle) ], ReLoginMain.prototype, "toggleOpen", void 0);
      __decorate([ property(cc.Toggle) ], ReLoginMain.prototype, "toggleWechatLogon", void 0);
      __decorate([ property(cc.Button) ], ReLoginMain.prototype, "btnGO", void 0);
      ReLoginMain = __decorate([ ccclass ], ReLoginMain);
      return ReLoginMain;
    })();
    exports.default = ReLoginMain;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types"
  } ],
  RedPackageButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2b14c9EmuZHqbvRUWCN4AOb", "RedPackageButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RedPackageButtonData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class RedPackageButtonData {
      constructor(info) {
        this._int_id = info.fundid;
        this._str_name = info.fund_name;
        this._int_count = info.left_num;
        this._int_need_prop_id = info.need_fundid;
        this._int_need_prop_count = info.need_num;
        this._str_need_prop_name = info.need_fund_name;
      }
    }
    exports.RedPackageButtonData = RedPackageButtonData;
    let RedPackageButton = (() => {
      let RedPackageButton = class RedPackageButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelValue = null;
          this.labelRemain = null;
          this.data = null;
        }
        start() {}
        setData(data) {
          this.data = data;
          this.labelValue.string = data._str_name;
          data._int_count < 10 ? this.labelRemain.string = "\u5e93\u5b58\uff1a" + data._int_count : this.labelRemain.string = "\u5e93\u5b58\uff1a\u5145\u8db3";
        }
        updateLeft(left) {
          this.data._int_count = left;
          this.data._int_count < 10 ? this.labelRemain.string = "\u5e93\u5b58\uff1a" + this.data._int_count : this.labelRemain.string = "\u5e93\u5b58\uff1a\u5145\u8db3";
        }
        onClick() {
          sound_manager_1.sound_manager.play_click();
          let event = new cc.Event.EventCustom("redPackageButtonClicked", true);
          event.setUserData(this.data);
          this.node.dispatchEvent(event);
        }
      };
      __decorate([ property(cc.Label) ], RedPackageButton.prototype, "labelValue", void 0);
      __decorate([ property(cc.Label) ], RedPackageButton.prototype, "labelRemain", void 0);
      RedPackageButton = __decorate([ ccclass ], RedPackageButton);
      return RedPackageButton;
    })();
    exports.default = RedPackageButton;
    cc._RF.pop();
  }, {
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  RedPackageExchange: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "98453jR3YdNEqZPwzsWQ4Ak", "RedPackageExchange");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const RedPackageButton_1 = require("./RedPackageButton");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RedPackageExchange = (() => {
      var RedPackageExchange_1;
      let RedPackageExchange = RedPackageExchange_1 = class RedPackageExchange extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelQuantity = null;
          this.redPackageButtonPrefab = null;
          this.redPackageNode = null;
          this.hasData = false;
        }
        onLoad() {
          utils_1.utils.on("RefreshRedPackageButton", this, this.onEventRefreshRedPackageButton);
        }
        onDestroy() {
          utils_1.utils.off("RefreshRedPackageButton", this, this.onEventRefreshRedPackageButton);
        }
        start() {
          this.safe_on("redPackageButtonClicked", this.onRedPackageButtonClicked, this);
        }
        onEnable() {
          this.requestData();
          this.updateData();
          utils_1.utils.on("UserUpdate", this, this.updateData);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.updateData);
        }
        updateData() {
          let n = global_data_1.global_data.get_the_user_data()._int_red_packet / 100;
          this.labelQuantity.string = n.toFixed(2) + "\u5143";
        }
        addRedPackageButton(data) {
          let btn = utils_1.utils.add_instance_to_root(this.redPackageButtonPrefab, this.redPackageNode, RedPackageButton_1.default);
          btn.setData(new RedPackageButton_1.RedPackageButtonData(data));
        }
        onEventRefreshRedPackageButton(count, left) {
          let comps = this.redPackageNode.getComponentsInChildren(RedPackageButton_1.default);
          comps && comps.length > 0 && comps.forEach(comp => {
            if (comp.data._int_need_prop_count == count) {
              comp.updateLeft(left);
              return;
            }
          });
        }
        onRedPackageButtonClicked(event) {
          let data = event.getUserData();
          if (data._int_count < 1) {
            utils_1.utils.show_hint("\u5269\u4f59\u5e93\u5b58\u4e0d\u8db3\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5");
            return;
          }
          if (global_data_1.global_data.get_the_user_data()._int_red_packet < data._int_need_prop_count) {
            utils_1.utils.show_hint("\u60a8\u7684\u4f59\u989d\u672a\u8fbe\u5230\u5151\u6362\u8981\u6c42\uff0c\u8bf7\u7ee7\u7eed\u6e38\u620f\u79ef\u7d2f\u7ea2\u5305\u54e6~");
            return;
          }
          event.currentTarget.getComponent(RedPackageExchange_1).requestExchange(data._int_id);
        }
        requestData() {
          if (this.hasData) return;
          utils_1.utils.show_loading("", true);
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_EXCHANGE_REDPACKET_LIST);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data) {
              if (cc.isValid(that)) {
                that.showData(data.fund_all);
                that.hasData = true;
              }
            },
            complete: function() {
              utils_1.utils.hide_loading();
            }
          });
        }
        showData(data) {
          this.redPackageNode.removeAllChildren();
          for (let i = 0; i < 4; ++i) i < data.length && this.addRedPackageButton(data[i]);
        }
        requestExchange(id) {
          lobby_framework_1.lobby_framework.request_red_package_exchange(id);
        }
      };
      __decorate([ property(cc.Label) ], RedPackageExchange.prototype, "labelQuantity", void 0);
      __decorate([ property(cc.Prefab) ], RedPackageExchange.prototype, "redPackageButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], RedPackageExchange.prototype, "redPackageNode", void 0);
      RedPackageExchange = RedPackageExchange_1 = __decorate([ ccclass ], RedPackageExchange);
      return RedPackageExchange;
    })();
    exports.default = RedPackageExchange;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "./RedPackageButton": "RedPackageButton"
  } ],
  RedPackageRecordItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e46c66faQdLy4609N21An1D", "RedPackageRecordItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RedPackageRecordData = exports.RecordStatus = void 0;
    const platform_1 = require("../Framework/lobby/platform/platform");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var RecordStatus;
    (function(RecordStatus) {
      RecordStatus[RecordStatus["DSH"] = 1] = "DSH";
      RecordStatus[RecordStatus["YFF"] = 2] = "YFF";
      RecordStatus[RecordStatus["Available"] = 111] = "Available";
      RecordStatus[RecordStatus["Received"] = 222] = "Received";
      RecordStatus[RecordStatus["Expired"] = 333] = "Expired";
    })(RecordStatus = exports.RecordStatus || (exports.RecordStatus = {}));
    class RedPackageRecordData {
      constructor(time, item, code, status) {
        this.time = time;
        this.item = item;
        this.code = code;
        this.status = status;
      }
    }
    exports.RedPackageRecordData = RedPackageRecordData;
    let RedPackageRecordItem = (() => {
      let RedPackageRecordItem = class RedPackageRecordItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.colorAvailable = null;
          this.colorReceived = null;
          this.colorExpired = null;
          this.labelTime = null;
          this.labelItem = null;
          this.labelCode = null;
          this.btnCopy = null;
          this.labelStatus = null;
        }
        onLoad() {}
        btnCopyClicked(event, customEventData) {
          platform_1.platform.inst.setClipboardData({
            data: this.labelCode.string
          });
        }
        start() {}
        setData(data) {
          this.labelTime.string = data.time.split(" ")[0];
          this.labelItem.string = data.item;
          this.labelCode.string = data.code;
          switch (data.status) {
           case RecordStatus.DSH:
            this.labelStatus.node.color = this.colorReceived;
            this.labelStatus.string = "\u5f85\u5ba1\u6838";
            this.btnCopy.node.active = false;
            break;

           case RecordStatus.YFF:
            this.labelStatus.node.color = this.colorAvailable;
            this.labelStatus.string = "\u5df2\u53d1\u653e";
            "E" == data.code.substring(0, 1) ? this.btnCopy.node.active = false : this.btnCopy.node.active = true;
            break;

           case RecordStatus.Available:
            this.labelStatus.node.color = this.colorAvailable;
            this.labelStatus.string = "\u5f85\u9886\u53d6";
            "E" == data.code.substring(0, 1) ? this.btnCopy.node.active = false : this.btnCopy.node.active = true;
            break;

           case RecordStatus.Received:
            this.labelStatus.node.color = this.colorReceived;
            this.labelStatus.string = "\u5df2\u9886\u53d6";
            this.btnCopy.node.active = false;
            break;

           case RecordStatus.Expired:
            this.labelStatus.node.color = this.colorExpired;
            this.labelStatus.string = "\u5df2\u8fc7\u671f";
            this.btnCopy.node.active = false;
            break;

           default:
            this.labelStatus.node.color = this.colorExpired;
            this.labelStatus.string = "\u672a\u77e5";
            this.btnCopy.node.active = false;
          }
        }
      };
      __decorate([ property(cc.Color) ], RedPackageRecordItem.prototype, "colorAvailable", void 0);
      __decorate([ property(cc.Color) ], RedPackageRecordItem.prototype, "colorReceived", void 0);
      __decorate([ property(cc.Color) ], RedPackageRecordItem.prototype, "colorExpired", void 0);
      __decorate([ property(cc.Label) ], RedPackageRecordItem.prototype, "labelTime", void 0);
      __decorate([ property(cc.Label) ], RedPackageRecordItem.prototype, "labelItem", void 0);
      __decorate([ property(cc.Label) ], RedPackageRecordItem.prototype, "labelCode", void 0);
      __decorate([ property(cc.Button) ], RedPackageRecordItem.prototype, "btnCopy", void 0);
      __decorate([ property(cc.Label) ], RedPackageRecordItem.prototype, "labelStatus", void 0);
      RedPackageRecordItem = __decorate([ ccclass ], RedPackageRecordItem);
      return RedPackageRecordItem;
    })();
    exports.default = RedPackageRecordItem;
    cc._RF.pop();
  }, {
    "../Framework/lobby/platform/platform": "platform"
  } ],
  RedPackageRecord: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d4d10bhlXxOx4mEdyFgz2QK", "RedPackageRecord");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const RedPackageRecordItem_1 = require("./RedPackageRecordItem");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const global_define_1 = require("../Framework/lobby/global_define");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RedPackageRecord = (() => {
      let RedPackageRecord = class RedPackageRecord extends cc.Component {
        constructor() {
          super(...arguments);
          this.itemRoot = null;
          this.itemPrefab = null;
          this.scrollView = null;
          this.noRecordNode = null;
        }
        start() {
          var scrollViewEventHandler = new cc.Component.EventHandler();
          scrollViewEventHandler.target = this.node;
          scrollViewEventHandler.component = "RedPackageRecord";
          scrollViewEventHandler.handler = "onScrollEvent";
          this.scrollView.scrollEvents.push(scrollViewEventHandler);
        }
        logEvent(eventType) {
          switch (eventType) {
           case cc.ScrollView.EventType.SCROLL_TO_TOP:
            console.log("onScrollEvent", "SCROLL_TO_TOP");
            break;

           case cc.ScrollView.EventType.SCROLL_TO_BOTTOM:
            console.log("onScrollEvent", "SCROLL_TO_BOTTOM");
            break;

           case cc.ScrollView.EventType.SCROLL_TO_LEFT:
            console.log("onScrollEvent", "SCROLL_TO_LEFT");
            break;

           case cc.ScrollView.EventType.SCROLL_TO_RIGHT:
            console.log("onScrollEvent", "SCROLL_TO_RIGHT");
            break;

           case cc.ScrollView.EventType.SCROLLING:
            console.log("onScrollEvent", "SCROLLING");
            break;

           case cc.ScrollView.EventType.BOUNCE_TOP:
            console.log("onScrollEvent", "BOUNCE_TOP");
            break;

           case cc.ScrollView.EventType.BOUNCE_BOTTOM:
            console.log("onScrollEvent", "BOUNCE_BOTTOM");
            break;

           case cc.ScrollView.EventType.BOUNCE_LEFT:
            console.log("onScrollEvent", "BOUNCE_LEFT");
            break;

           case cc.ScrollView.EventType.BOUNCE_RIGHT:
            console.log("onScrollEvent", "BOUNCE_RIGHT");
            break;

           case cc.ScrollView.EventType.SCROLL_ENDED:
            console.log("onScrollEvent", "SCROLL_ENDED");
            break;

           case cc.ScrollView.EventType.TOUCH_UP:
            console.log("onScrollEvent", "TOUCH_UP");
            break;

           case cc.ScrollView.EventType.AUTOSCROLL_ENDED_WITH_THRESHOLD:
            console.log("onScrollEvent", "AUTOSCROLL_ENDED_WITH_THRESHOLD");
            break;

           case cc.ScrollView.EventType.SCROLL_BEGAN:
            console.log("onScrollEvent", "SCROLL_BEGAN");
          }
        }
        onScrollEvent(scrollview, eventType, customEventData) {
          if (eventType == cc.ScrollView.EventType.BOUNCE_TOP) {
            if (this.m_int_curr_page > 1) {
              this.m_int_curr_page--;
              this.requestData();
            }
          } else if (eventType == cc.ScrollView.EventType.BOUNCE_BOTTOM && this.m_int_curr_page * this.m_int_curr_page_count < this.m_int_total_count) {
            this.m_int_curr_page++;
            this.requestData();
          }
        }
        onEnable() {
          this.m_int_curr_page = 1;
          this.m_int_curr_page_count = 20;
          this.m_int_total_count = 0;
          this.requestData();
        }
        addRecordItem(data) {
          var comp = utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, RedPackageRecordItem_1.default);
          comp.setData(data);
        }
        requestData() {
          this.itemRoot.removeAllChildren();
          utils_1.utils.show_loading("", true);
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_EXCHANGE_RECORD);
          url = utils_1.utils.string_replace_key_with_integer(url, "{PAGENO}", this.m_int_curr_page);
          url = utils_1.utils.string_replace_key_with_integer(url, "{PAGESIZE}", this.m_int_curr_page_count);
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data) {
              cc.isValid(that) && that.showData(data);
            },
            complete: function() {
              utils_1.utils.hide_loading();
            },
            fail: function(message) {
              utils_1.utils.show_hint(message);
            }
          });
        }
        showData(data) {
          console.log("RedPackageRecord", data);
          this.m_int_total_count = data.count;
          let list = data.list;
          if (list && list.length > 0) {
            list.forEach(e => {
              this.addRecordItem(new RedPackageRecordItem_1.RedPackageRecordData(e.create_time, e.fund_name, e.order_no, e.status));
            });
            this.noRecordNode.active = false;
          } else this.noRecordNode.active = true;
          this.scrollView.stopAutoScroll();
          this.scrollView.setContentPosition(cc.Vec2.ZERO);
          this.scrollView.scrollToTop();
        }
      };
      __decorate([ property(cc.Node) ], RedPackageRecord.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], RedPackageRecord.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.ScrollView) ], RedPackageRecord.prototype, "scrollView", void 0);
      __decorate([ property(cc.Node) ], RedPackageRecord.prototype, "noRecordNode", void 0);
      RedPackageRecord = __decorate([ ccclass ], RedPackageRecord);
      return RedPackageRecord;
    })();
    exports.default = RedPackageRecord;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "./RedPackageRecordItem": "RedPackageRecordItem"
  } ],
  RedPackageRules: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "57dc5JX2Q1B0ZS6hageeMUG", "RedPackageRules");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RedPackageRuleState = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var RedPackageRuleState;
    (function(RedPackageRuleState) {
      RedPackageRuleState[RedPackageRuleState["Closed"] = 0] = "Closed";
      RedPackageRuleState[RedPackageRuleState["Opening"] = 1] = "Opening";
      RedPackageRuleState[RedPackageRuleState["Open"] = 2] = "Open";
      RedPackageRuleState[RedPackageRuleState["Closing"] = 3] = "Closing";
    })(RedPackageRuleState = exports.RedPackageRuleState || (exports.RedPackageRuleState = {}));
    let RedPackageRules = (() => {
      let RedPackageRules = class RedPackageRules extends cc.Component {
        constructor() {
          super(...arguments);
          this.dragRoot = null;
          this.buttonRule = null;
          this.labelRule = null;
          this.blockComp = null;
          this.buttonBg = null;
          this.openTime = 2;
          this.closeTime = 2;
          this.moveOffest = 413;
        }
        start() {
          this.blockComp.enabled = false;
          this.buttonBg.enabled = false;
          this._state = RedPackageRuleState.Closed;
          this._openAction = cc.sequence(cc.callFunc(this.beginOpen, this), cc.moveBy(this.openTime, new cc.Vec2(-this.moveOffest, 0)).easing(cc.easeQuadraticActionOut()), cc.callFunc(this.endOpen, this));
          this._closeAction = cc.sequence(cc.callFunc(this.beginClose, this), cc.moveBy(this.openTime, new cc.Vec2(this.moveOffest, 0)).easing(cc.easeQuadraticActionOut()), cc.callFunc(this.endClose, this));
          var clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "RedPackageRules";
          clickEventHandler.handler = "ruleButtonClicked";
          this.buttonRule.clickEvents.push(clickEventHandler);
          clickEventHandler = new cc.Component.EventHandler();
          clickEventHandler.target = this.node;
          clickEventHandler.component = "RedPackageRules";
          clickEventHandler.handler = "bgClicked";
          this.buttonBg.clickEvents.push(clickEventHandler);
          this.labelRule.string = "";
        }
        ruleButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this._state == RedPackageRuleState.Closed ? this.onShow() : this._state == RedPackageRuleState.Open && this.onHide();
        }
        bgClicked(event) {
          this._state == RedPackageRuleState.Open && this.onHide();
        }
        onShow() {
          this.dragRoot.stopAllActions();
          this.dragRoot.runAction(this._openAction);
        }
        onHide() {
          this.dragRoot.stopAllActions();
          this.dragRoot.runAction(this._closeAction);
        }
        beginOpen(event, args) {
          this.blockComp.enabled = true;
          this._state = RedPackageRuleState.Opening;
        }
        endOpen(event, args) {
          this._state = RedPackageRuleState.Open;
          this.buttonBg.enabled = true;
        }
        beginClose(event, args) {
          this._state = RedPackageRuleState.Closing;
        }
        endClose(event, args) {
          this.blockComp.enabled = false;
          this._state = RedPackageRuleState.Closed;
          this.buttonBg.enabled = false;
        }
      };
      __decorate([ property(cc.Node) ], RedPackageRules.prototype, "dragRoot", void 0);
      __decorate([ property(cc.Button) ], RedPackageRules.prototype, "buttonRule", void 0);
      __decorate([ property(cc.Label) ], RedPackageRules.prototype, "labelRule", void 0);
      __decorate([ property(cc.BlockInputEvents) ], RedPackageRules.prototype, "blockComp", void 0);
      __decorate([ property(cc.Button) ], RedPackageRules.prototype, "buttonBg", void 0);
      __decorate([ property ], RedPackageRules.prototype, "openTime", void 0);
      __decorate([ property ], RedPackageRules.prototype, "closeTime", void 0);
      __decorate([ property ], RedPackageRules.prototype, "moveOffest", void 0);
      RedPackageRules = __decorate([ ccclass ], RedPackageRules);
      return RedPackageRules;
    })();
    exports.default = RedPackageRules;
    cc._RF.pop();
  }, {
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ReliefMessageBox: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d7a86pra1ZOx7z7EkONJGCs", "ReliefMessageBox");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const AppGlobal_1 = require("../AppGlobal");
    const global_data_1 = require("../Framework/lobby/global_data");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ReliefMessageBox = (() => {
      let ReliefMessageBox = class ReliefMessageBox extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
          this.buttonShare = null;
          this.buttonPay = null;
          this.buttonClose = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonShare, this.node, "ReliefMessageBox", "onShareClick");
          utils_1.utils.bind_button_event(this.buttonPay, this.node, "ReliefMessageBox", "onPayClick");
          utils_1.utils.bind_button_event(this.buttonClose, this.node, "ReliefMessageBox", "onCloseClick");
        }
        onShareClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.share();
        }
        onPayClick(event, customEventData) {}
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          AppGlobal_1.AppGlobal.getInstance().hideReliefMessageBox();
        }
        share() {
          platform_1.platform.inst.share({
            title: global_data_1.global_data._str_relief_share_img_text,
            imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url),
            query: "fromShare=2&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
            success: () => {},
            fail: () => {
              utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
            }
          });
        }
        start() {
          this.label.string = "\u5269\u4f59" + global_data_1.global_data.get_the_user_data()._int_relief_gold + "\u6b21\uff0c\u6bcf\u6b211000\u91d1\u5e01";
        }
      };
      __decorate([ property(cc.Label) ], ReliefMessageBox.prototype, "label", void 0);
      __decorate([ property(cc.Button) ], ReliefMessageBox.prototype, "buttonShare", void 0);
      __decorate([ property(cc.Button) ], ReliefMessageBox.prototype, "buttonPay", void 0);
      __decorate([ property(cc.Button) ], ReliefMessageBox.prototype, "buttonClose", void 0);
      ReliefMessageBox = __decorate([ ccclass ], ReliefMessageBox);
      return ReliefMessageBox;
    })();
    exports.default = ReliefMessageBox;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/platform/platform": "platform",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  RoomButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "079a2o1gVZAMJIaDS/i6CrX", "RoomButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const Interface_1 = require("../Common/Interface");
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RoomButton = (() => {
      let RoomButton = class RoomButton extends Interface_1.IRoomButton {
        constructor() {
          super(...arguments);
          this.roomLimit = null;
          this.roomDescription = null;
          this.goldIcon = null;
          this.ingotIcon = null;
          this.button = null;
          this.iconBg = null;
          this.data = null;
        }
        getData() {
          return this.data;
        }
        setData(data) {
          this.data = data;
          this.roomLimit.string = data.roomLimit || "";
          this.roomDescription.string = data.roomDescription || "";
          if (data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Friend) {
            this.goldIcon.active = false;
            this.ingotIcon.active = false;
            this.roomLimit.node.active = false;
            this.roomDescription.node.active = false;
          } else if (data.icon == lobby_types_1.lobby_types.RoomButtonIconType.Gold) {
            this.goldIcon.active = true;
            this.ingotIcon.active = false;
          } else {
            this.goldIcon.active = false;
            this.ingotIcon.active = true;
          }
          let bgName = "";
          data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Friend ? bgName = "lr_room_friend" : data.bg == lobby_types_1.lobby_types.RoomButtonBgType.RedPackage ? bgName = "lr_room_redpackage" : data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Beginner ? bgName = "lr_room_beginner" : data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Medium ? bgName = "lr_room_medium" : data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Expert ? bgName = "lr_room_expert" : data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Master && (bgName = "lr_room_master");
          this.iconBg && (this.iconBg.spriteFrame = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(this.data.gameid, bgName)));
        }
      };
      __decorate([ property(cc.Label) ], RoomButton.prototype, "roomLimit", void 0);
      __decorate([ property(cc.Label) ], RoomButton.prototype, "roomDescription", void 0);
      __decorate([ property(cc.Node) ], RoomButton.prototype, "goldIcon", void 0);
      __decorate([ property(cc.Node) ], RoomButton.prototype, "ingotIcon", void 0);
      __decorate([ property(cc.Button) ], RoomButton.prototype, "button", void 0);
      __decorate([ property(cc.Sprite) ], RoomButton.prototype, "iconBg", void 0);
      RoomButton = __decorate([ ccclass ], RoomButton);
      return RoomButton;
    })();
    exports.default = RoomButton;
    cc._RF.pop();
  }, {
    "../Common/Interface": "Interface",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_types": "lobby_types"
  } ],
  RoomLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07526j2bpxL2qCrtC9gFyKI", "RoomLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const TabButton_1 = require("./TabButton");
    const Interface_1 = require("../Common/Interface");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const AppGlobal_1 = require("../AppGlobal");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RoomLayout = (() => {
      var RoomLayout_1;
      let RoomLayout = RoomLayout_1 = class RoomLayout extends cc.Component {
        constructor() {
          super(...arguments);
          this.roomButtonPrefab = null;
          this.roomButtonRoot = null;
          this.tabButtonPrefab = null;
          this.tabButtonRoot = null;
          this.roomScrollView = null;
          this.bg = null;
          this._defaultTab = null;
          this.currentTabData = null;
          this.gameId = 0;
        }
        onLoad() {
          this.clearAllRoomButtons();
          this.clearAllTabButtons();
          this.safe_on("tabClick", this.onSwitchTab, this);
        }
        start() {
          this.roomButtonRoot.getComponent(cc.Widget).updateAlignment();
          this.roomButtonRoot.getComponent(cc.Layout).spacingX = (this.roomButtonRoot.width - 984) / 2;
        }
        init(id) {
          this.gameId = id;
          this.fetchData();
        }
        clearAllRoomButtons() {
          this.roomButtonRoot.removeAllChildren();
        }
        clearAllTabButtons() {
          this.tabButtonRoot.removeAllChildren();
        }
        verifyRoomButton(node) {
          node.width = 328;
          node.height = 220;
          node.setScale(1);
          node.setAnchorPoint(.5, .5);
          let btn = node.getComponent(cc.Button);
          if (null == btn) {
            btn = node.addComponent(cc.Button);
            btn.target = node;
            btn.interactable = true;
            btn.transition = cc.Button.Transition.SCALE;
            btn.duration = .1;
            btn.zoomScale = .9;
          }
          utils_1.utils.bind_button_event(btn, this.node, "RoomLayout", "onRoomButtonClicked");
          let sp = node.getComponent(cc.Sprite);
          if (null == sp) {
            sp = node.addComponent(cc.Sprite);
            sp.spriteFrame = null;
            sp.sizeMode = cc.Sprite.SizeMode.CUSTOM;
            sp.trim = false;
            sp.type = cc.Sprite.Type.SIMPLE;
          }
        }
        onRoomButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let roomButton = event.target.getComponent(Interface_1.IRoomButton);
          let data = roomButton ? roomButton.getData() : null;
          if (null != data) if (data.bg == lobby_types_1.lobby_types.RoomButtonBgType.RedPackage) this.node.dispatchEvent(new cc.Event.EventCustom("toModeSelect", true)); else if (data.bg == lobby_types_1.lobby_types.RoomButtonBgType.Friend) AppGlobal_1.AppGlobal.getInstance().showPrivatePanel(data.gameid); else {
            let param = new lobby_types_1.lobby_types.LaunchGameParams();
            param.isRedPackageGame = false;
            param.gameId = data.gameid;
            param.siteId = data.bg;
            lobby_framework_1.lobby_framework.launchGame(param);
          }
        }
        addRoomButton(data) {
          let name = utils_1.utils.get_game_res_name(data.gameid, "lr_btn_room");
          let that = this;
          cc.resources.load(name, function(err, prefab) {
            if (cc.isValid(that)) {
              err && (prefab = that.roomButtonPrefab);
              var btn = utils_1.utils.add_instance_to_root(prefab, that.roomButtonRoot, Interface_1.IRoomButton);
              that.verifyRoomButton(btn.node);
              if (null != data) {
                btn.setData(data);
                let children = that.roomButtonRoot.children;
                for (let i = 0; i < children.length; ++i) {
                  let b = children[i].getComponent(Interface_1.IRoomButton);
                  let bg = b.getData().bg;
                  if (data.bg < bg) {
                    btn.node.setSiblingIndex(b.node.getSiblingIndex());
                    break;
                  }
                }
              }
            }
          });
        }
        addTab(data) {
          var tab = utils_1.utils.add_instance_to_root(this.tabButtonPrefab, this.tabButtonRoot, TabButton_1.default);
          tab.setData(data);
          return tab;
        }
        addTabByGameID(id) {
          if (!global_data_1.global_data.game_scene_name.some(function(value) {
            return value.id == id;
          })) return;
          let data = new TabButton_1.TabButtonData();
          data.data = new Array();
          data.tabId = id;
          let rooms = global_data_1.global_data.gamelist_json_data.room;
          rooms = rooms.filter((value, index, array) => value.gameid == id);
          let filteredRooms = [];
          function addOrAppend(type, data) {
            if (null == filteredRooms[type]) {
              filteredRooms[type] = {};
              filteredRooms[type].data = data;
              filteredRooms[type].gameid = id;
              filteredRooms[type].id = [ data.id ];
              filteredRooms[type].port = [ data.port ];
              filteredRooms[type].wxaddress = [ data.wxaddress ];
            } else {
              filteredRooms[type].id.push(data.id);
              filteredRooms[type].port.push(data.port);
              filteredRooms[type].wxaddress.push(data.wxaddress);
            }
          }
          rooms.forEach(r => {
            r.mode & global_define_1.CONST.ROOM_MODE_REDPACKET || (r.mode & global_define_1.CONST.ROOM_MODE_FRIEND ? global_data_1.global_data.have_module_friend() && (global_data_1.global_data.force_no_friend_game.filter(x => x == id).length > 0 || addOrAppend(lobby_types_1.lobby_types.RoomButtonBgType.Friend, r)) : r.roomid >= 100 && r.roomid < 200 ? addOrAppend(lobby_types_1.lobby_types.RoomButtonBgType.Beginner, r) : r.roomid >= 200 && r.roomid < 300 ? addOrAppend(lobby_types_1.lobby_types.RoomButtonBgType.Medium, r) : r.roomid >= 300 && r.roomid < 400 ? addOrAppend(lobby_types_1.lobby_types.RoomButtonBgType.Expert, r) : r.roomid >= 400 && r.roomid < 500 ? addOrAppend(lobby_types_1.lobby_types.RoomButtonBgType.Master, r) : r.roomid >= 500 && r.roomid < 600);
          });
          function generateRoomButtonData(bgType) {
            if (filteredRooms[bgType]) {
              let roomData = new Interface_1.RoomButtonData();
              let r = filteredRooms[bgType].data;
              let rule = utils_1.utils.parse_lua_text(r.rule);
              bgType != lobby_types_1.lobby_types.RoomButtonBgType.RedPackage || rule.caption ? roomData.roomLimit = rule.caption : roomData.roomLimit = "200\u4ee5\u4e0a";
              roomData.bg = bgType;
              rule.caption_ex && 0 != rule.caption_ex.length ? roomData.roomDescription = rule.caption_ex : bgType == lobby_types_1.lobby_types.RoomButtonBgType.Beginner ? roomData.roomDescription = "\u65b0\u624b\u5165\u95e8\u573a" : bgType == lobby_types_1.lobby_types.RoomButtonBgType.Medium ? roomData.roomDescription = "\u65b0\u624b\u8fdb\u9636\u573a" : bgType == lobby_types_1.lobby_types.RoomButtonBgType.Expert ? roomData.roomDescription = "\u9ad8\u624b\u5bf9\u6218\u573a" : bgType == lobby_types_1.lobby_types.RoomButtonBgType.Master ? roomData.roomDescription = "\u5927\u5e08\u5bf9\u6218\u573a" : roomData.roomDescription = "";
              roomData.icon = r.type & global_define_1.CONST.ROOM_KIND_MIN_BEANS || r.type & global_define_1.CONST.ROOM_KIND_MAX_BEANS ? lobby_types_1.lobby_types.RoomButtonIconType.Bean : lobby_types_1.lobby_types.RoomButtonIconType.Gold;
              roomData.gameid = filteredRooms[bgType].gameid;
              roomData.id ? roomData.id.push(filteredRooms[bgType].id) : roomData.id = [ filteredRooms[bgType].id ];
              roomData.port ? roomData.port.push(filteredRooms[bgType].port) : roomData.port = [ filteredRooms[bgType].port ];
              roomData.wxaddress ? roomData.wxaddress.push(filteredRooms[bgType].wxaddress) : roomData.wxaddress = [ filteredRooms[bgType].wxaddress ];
              data.data.push(roomData);
            }
          }
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.RedPackage] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.RedPackage);
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.Beginner] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.Beginner);
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.Medium] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.Medium);
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.Expert] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.Expert);
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.Master] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.Master);
          filteredRooms[lobby_types_1.lobby_types.RoomButtonBgType.Friend] && generateRoomButtonData(lobby_types_1.lobby_types.RoomButtonBgType.Friend);
          let ret = this.addTab(data);
          null == this._defaultTab && (this._defaultTab = ret);
          return ret;
        }
        onSwitchTab(event) {
          let roomLayout = event.currentTarget.getComponent(RoomLayout_1);
          let tab = event.target.getComponent(TabButton_1.default);
          global_data_1.global_data.current_room_tab_id = tab.tabId;
          let data = tab.getData();
          if (this.currentTabData != data) {
            roomLayout.clearAllRoomButtons();
            data && data.forEach(element => {
              roomLayout.addRoomButton(element);
            });
            this.currentTabData = data;
            roomLayout.roomScrollView.scrollToTop(0);
          }
          event.stopPropagation();
        }
        fetchData() {
          this.clearAllRoomButtons();
          this.clearAllTabButtons();
          this._defaultTab = null;
          let list = global_data_1.global_data.get_game_list_by_gameid(this.gameId);
          if (null == list || 0 == list.length) return;
          for (let i = 0; i < list.length; ++i) this.addTabByGameID(list[i]);
          this._defaultTab && this._defaultTab.node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
        }
      };
      __decorate([ property(cc.Prefab) ], RoomLayout.prototype, "roomButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], RoomLayout.prototype, "roomButtonRoot", void 0);
      __decorate([ property(cc.Prefab) ], RoomLayout.prototype, "tabButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], RoomLayout.prototype, "tabButtonRoot", void 0);
      __decorate([ property(cc.ScrollView) ], RoomLayout.prototype, "roomScrollView", void 0);
      __decorate([ property(cc.Node) ], RoomLayout.prototype, "bg", void 0);
      RoomLayout = RoomLayout_1 = __decorate([ ccclass ], RoomLayout);
      return RoomLayout;
    })();
    exports.default = RoomLayout;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Common/Interface": "Interface",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./TabButton": "TabButton"
  } ],
  RuleButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3008bdjMJ5OyIiJg3uUsWcB", "RuleButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RuleButtonData = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class RuleButtonData {
      constructor(disableSprite, enableSprite, data) {
        this.disableSprite = disableSprite;
        this.enableSprite = enableSprite;
        this.data = data;
      }
    }
    exports.RuleButtonData = RuleButtonData;
    let RuleButton = (() => {
      let RuleButton = class RuleButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.disableSprite = null;
          this.enableSprite = null;
          this.index = -1;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.getComponent(cc.Toggle), this.node, "RuleButton", "OnButtonClicked");
        }
        start() {}
        OnButtonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("buttonClick", true));
        }
        setData(data) {
          this.data = data.data;
          this.enableSprite.spriteFrame = global_data_1.global_data.spriteFrameMap.get(data.enableSprite);
          this.disableSprite.spriteFrame = global_data_1.global_data.spriteFrameMap.get(data.disableSprite);
        }
        getData() {
          return this.data;
        }
      };
      __decorate([ property(cc.Sprite) ], RuleButton.prototype, "disableSprite", void 0);
      __decorate([ property(cc.Sprite) ], RuleButton.prototype, "enableSprite", void 0);
      RuleButton = __decorate([ ccclass ], RuleButton);
      return RuleButton;
    })();
    exports.default = RuleButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  RuleEditorNew: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "448e2km1ntGC57IjEh+rrw3", "RuleEditorNew");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const custom_lobby_1 = require("../../Framework/lobby/custom_lobby");
    const LobbyRuleLayout_1 = require("./LobbyRuleLayout");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const global_define_1 = require("../../Framework/lobby/global_define");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const DropDownLocation_1 = require("./DropDownLocation");
    const task_1 = require("../../Framework/common/task");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RuleEditorNew = (() => {
      let RuleEditorNew = class RuleEditorNew extends cc.Component {
        constructor() {
          super(...arguments);
          this.ruleNode = null;
          this.previewNode = null;
          this.ruleSpriteEnable = null;
          this.ruleSpriteDisenable = null;
          this.previewSpriteEnable = null;
          this.previewSpriteDisenable = null;
          this.ruleBack = null;
          this.ruleNext = null;
          this.previewBack = null;
          this.previewNext = null;
          this.previewBg = null;
          this.label_name = null;
          this.card_rule_des = null;
          this.preViewLayout = null;
          this.preViewEditBox = null;
          this.preViewSuggestEditBox = null;
          this.tip_200 = null;
          this.tip_600 = null;
          this.tip_900 = null;
          this.location = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ruleBack, this.node, "RuleEditorNew", "onRuleBackClicked");
          utils_1.utils.bind_button_event(this.ruleNext, this.node, "RuleEditorNew", "onRuleNextClicked");
          utils_1.utils.bind_button_event(this.previewBack, this.node, "RuleEditorNew", "onPreviewBackClicked");
          utils_1.utils.bind_button_event(this.previewNext, this.node, "RuleEditorNew", "onPreviewNextClicked");
          utils_1.utils.bind_button_event(this.previewBg, this.node, "RuleEditorNew", "onPrevieBgClicked");
          utils_1.utils.on("DropDownItemToggleLocation", this, this.onDropDownItemToggleLocation);
          utils_1.utils.on("DropDownLocation", this, this.onHideDropDownLocation);
          utils_1.utils.on("Delay_Interactable_Lobby_3_2", this, this.Delay_Interactable_Lobby_3_2);
          utils_1.utils.bind_button_event(this.tip_200, this.node, "RuleEditorNew", "onTip200Clicked");
          utils_1.utils.bind_button_event(this.tip_600, this.node, "RuleEditorNew", "onTip600Clicked");
          utils_1.utils.bind_button_event(this.tip_900, this.node, "RuleEditorNew", "onTip900Clicked");
          this.bindHandler();
        }
        onEnable() {}
        bindHandler() {
          let handler_1 = new cc.Component.EventHandler();
          handler_1.target = this.node;
          handler_1.component = "RuleEditorNew";
          handler_1.handler = "onEditingDidBegan";
          this.preViewEditBox.editingDidBegan = [];
          this.preViewEditBox.editingDidBegan.push(handler_1);
          let handler_2 = new cc.Component.EventHandler();
          handler_2.target = this.node;
          handler_2.component = "RuleEditorNew";
          handler_2.handler = "onEditingDidEnded";
          this.preViewEditBox.editingDidEnded = [];
          this.preViewEditBox.editingDidEnded.push(handler_2);
        }
        onDestroy() {
          utils_1.utils.off("DropDownItemToggleLocation", this, this.onDropDownItemToggleLocation);
          utils_1.utils.off("DropDownLocation", this, this.onHideDropDownLocation);
          utils_1.utils.off("Delay_Interactable_Lobby_3_2", this, this.Delay_Interactable_Lobby_3_2);
        }
        start() {
          this.init();
        }
        init() {
          this.updateNodeVisable(true, false);
          this.updateTabStatus(true);
          this.hideTips();
        }
        onRuleBackClicked() {
          sound_manager_1.sound_manager.play_click();
          this.resetEditorNameAndId();
          this.node.active = false;
        }
        onRuleNextClicked() {
          sound_manager_1.sound_manager.play_click();
          this.updateNodeVisable(false, true);
          this.updateTabStatus(false);
          this.PreViewGetData();
          this.preViewSetData();
          this.setGameName();
          this.refreshLocation();
          this.checkPlace() ? this.checkProvincePlace(custom_lobby_1.custom_lobby.location_province_id) ? this.label_name.string = `${this.filter(custom_lobby_1.custom_lobby.get_config_city_name_by_id(custom_lobby_1.custom_lobby.location_city_id))}\u9ebb\u5c06` : this.label_name.string = `${this.filter(custom_lobby_1.custom_lobby.get_config_province_name_by_id(custom_lobby_1.custom_lobby.location_province_id))}\u9ebb\u5c06` : this.label_name.string = "\u8bf7\u8bf7\u5148\u9009\u62e9\u5730\u533a";
          tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_3_1);
        }
        Delay_Interactable_Lobby_3_2() {
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          } catch (e) {
            return false;
          }
          if (mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_3_2) return true;
          this.previewBack.interactable = false;
          this.previewNext.interactable = false;
          setTimeout(() => {
            this.previewBack.interactable = true;
            this.previewNext.interactable = true;
          }, 1e3);
        }
        rule_tutorial_button() {
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          } catch (e) {
            return false;
          }
          if (mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_2_1) return true;
          this.ruleBack.interactable = false;
          this.ruleNext.interactable = false;
          setTimeout(() => {
            this.ruleBack.interactable = true;
            this.ruleNext.interactable = true;
          }, 1e3);
        }
        refreshLocation() {
          let p_index;
          let c_index;
          if (custom_lobby_1.custom_lobby.editor_type == LobbyRuleLayout_1.EditorType.NEW) if (custom_lobby_1.custom_lobby.check_in_china()) {
            let locations = global_data_1.global_data.user_location.split(",");
            let p = "";
            let c = "";
            if (locations.length > 1) {
              p = locations[1];
              locations.length > 2 && (c = locations[2]);
            }
            p_index = custom_lobby_1.custom_lobby.get_config_province_index_by_name(p);
            c_index = custom_lobby_1.custom_lobby.get_config_city_index_by_name(c);
          } else {
            p_index = -1;
            c_index = -1;
          } else if (custom_lobby_1.custom_lobby.editor_type == LobbyRuleLayout_1.EditorType.OLD) {
            p_index = custom_lobby_1.custom_lobby.current_player_rule.province_id - 2001;
            custom_lobby_1.custom_lobby.current_player_rule.city_id && (c_index = custom_lobby_1.custom_lobby.current_player_rule.city_id - 1001);
          }
          if (-1 != p_index) this.refreshLocationPrivence(p_index); else {
            this.refreshLocationPrivence(34);
            custom_lobby_1.custom_lobby.location_province_id = 2035;
          }
          if (-1 != p_index && -1 != c_index) this.refreshLocationCity(p_index + 2001, c_index); else {
            this.node.getChildByName("preViewRoot").getChildByName("City").getChildByName("DropDownBox").active = false;
            custom_lobby_1.custom_lobby.location_city_id = null;
          }
        }
        refreshLocationPrivence(index = 0) {
          let l_node = this.node.getChildByName("preViewRoot").getChildByName("Province").getChildByName("DropDownBox");
          l_node.active = true;
          l_node.getComponent(DropDownLocation_1.default).setData(custom_lobby_1.custom_lobby.default_location_config, index);
        }
        refreshLocationCity(id, index = 0) {
          this.node.getChildByName("preViewRoot").getChildByName("City").getChildByName("DropDownBox").active = this.checkProvincePlace(id);
          this.checkProvincePlace(id) && this.node.getChildByName("preViewRoot").getChildByName("City").getChildByName("DropDownBox").getComponent(DropDownLocation_1.default).setData(custom_lobby_1.custom_lobby.get_config_citys_by_id(id), index);
        }
        resetEditorNameAndId() {
          this.ruleNode.getComponent(LobbyRuleLayout_1.default).editor_name = null;
          this.ruleNode.getComponent(LobbyRuleLayout_1.default).editor_id = null;
        }
        PreViewGetData() {
          let cards_rule = "";
          let hua_rule = "";
          let player_count = "";
          let hand_count = "";
          let chi_type = "";
          let caishen = "";
          let caishen_type = "";
          let baiban = "";
          let zhuama = "";
          if (199 != custom_lobby_1.custom_lobby.current_player_rule.rule_id) {
            this.card_rule_des = custom_lobby_1.custom_lobby.default_game_config.config.find((v, i) => 100 == v.id).list.find((v, i) => v.id == custom_lobby_1.custom_lobby.current_player_rule.rule_id);
            cards_rule = this.card_rule_des.name + " (" + this.card_rule_des.desc + ")";
          } else cards_rule = "\u81ea\u5b9a\u4e49 (" + custom_lobby_1.custom_lobby.get_card_pool_desc(custom_lobby_1.custom_lobby.current_player_rule.remove.remove) + ")";
          if (299 != custom_lobby_1.custom_lobby.current_player_rule.hua_id) {
            this.card_rule_des = custom_lobby_1.custom_lobby.default_game_config.config.find((v, i) => 200 == v.id).list.find((v, i) => v.id == custom_lobby_1.custom_lobby.current_player_rule.hua_id);
            hua_rule = this.card_rule_des.desc ? this.card_rule_des.name + " (" + this.card_rule_des.desc + ")" : this.card_rule_des.name;
          } else hua_rule = "\u81ea\u5b9a\u4e49 (" + custom_lobby_1.custom_lobby.get_hua_card_desc(custom_lobby_1.custom_lobby.current_player_rule.buhua) + ")";
          let count_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 1 == v.id).op[0];
          player_count = custom_lobby_1.custom_lobby.get_player_count_by_id(count_id) + "\u4eba";
          count_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 2 == v.id).op[0];
          hand_count = custom_lobby_1.custom_lobby.get_card_count_by_id(count_id) + "\u5f20/\u4eba";
          count_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 4 == v.id).op[0];
          chi_type = custom_lobby_1.custom_lobby.get_chi_type_by_id(count_id);
          let caishen_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 3 == v.id).op[0];
          caishen = custom_lobby_1.custom_lobby.get_caishen_by_id(caishen_id);
          let caishen_type_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 101 == v.id).op[0];
          caishen_type = caishen_type_id != LobbyRuleLayout_1.CaiShenType.CUSTOM ? custom_lobby_1.custom_lobby.get_caishen_type_by_id(caishen_type_id) : custom_lobby_1.custom_lobby.get_caishen_card_desc(custom_lobby_1.custom_lobby.current_player_rule.custom_caishen);
          LobbyRuleLayout_1.CaiShen.HAVE == caishen_id && (caishen = caishen_type);
          caishen_type = "";
          if (custom_lobby_1.custom_lobby.have_baiban()) {
            let banban_id = custom_lobby_1.custom_lobby.current_player_rule.config.find(x => 102 == x.id).op[0];
            baiban = custom_lobby_1.custom_lobby.get_baiban_type_by_id(banban_id);
          } else baiban = "";
          let rule_5 = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 5 == v.id);
          if (rule_5) {
            count_id = custom_lobby_1.custom_lobby.current_player_rule.config.find((v, i) => 5 == v.id).op[0];
            zhuama = custom_lobby_1.custom_lobby.get_zhuama_by_id(count_id);
          } else zhuama = "";
          console.log(`cards_rule:  ${cards_rule}\t,hua_rule:  ${hua_rule}\t,player_count:  ${player_count}\t,hand_count:  ${hand_count}\t,chi_type:  ${chi_type}\t,caishen:  ${caishen}\t,caishen_type:  ${caishen_type}\t,baiban:  ${baiban}\t,zhuama:  ${zhuama}`);
          custom_lobby_1.custom_lobby.setGameDetail(cards_rule, hua_rule, player_count, hand_count, chi_type, caishen, caishen_type, baiban, zhuama);
        }
        onPreviewBackClicked() {
          sound_manager_1.sound_manager.play_click();
          this.updateNodeVisable(true, false);
          this.updateTabStatus(true);
          this.label_name.string = "\u8bf7\u8bf7\u5148\u9009\u62e9\u5730\u533a";
        }
        onPreviewNextClicked() {
          sound_manager_1.sound_manager.play_click();
          let name = this.label_name.string;
          if (name) if (name.length > 15) utils_1.utils.show_hint("\u73a9\u6cd5\u540d\u8fc7\u957f"); else {
            if (!this.checkPlace()) return;
            this.goToGame(name);
          } else utils_1.utils.show_hint("\u8bf7\u8f93\u5165\u73a9\u6cd5\u540d\u79f0");
        }
        checkTutorial() {
          let mask = null;
          try {
            mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          } catch (e) {
            return false;
          }
          if (!(mask & 1 << tutorial_1.tutorial.TutorialID.Lobby_3_3)) {
            utils_1.utils.show_hint("\u8bf7\u5148\u9009\u62e9\u5730\u533a...");
            return false;
          }
          return true;
        }
        checkProvincePlace(id) {
          if (id > 2004 && id < 2033) return true;
          return false;
        }
        checkPlace() {
          let name_p = custom_lobby_1.custom_lobby.get_config_province_name_by_id(custom_lobby_1.custom_lobby.location_province_id);
          if (!custom_lobby_1.custom_lobby.location_province_id || "-\u8bf7\u9009\u62e9\u7701\u4efd-" == name_p) {
            utils_1.utils.show_hint("\u8bf7\u9009\u62e9\u7701\u4efd~");
            return false;
          }
          if (this.checkProvincePlace(custom_lobby_1.custom_lobby.location_province_id)) {
            let name_c = custom_lobby_1.custom_lobby.get_config_city_name_by_id(custom_lobby_1.custom_lobby.location_city_id);
            if (!custom_lobby_1.custom_lobby.location_city_id || "-\u8bf7\u9009\u62e9\u5730\u533a-" == name_c) {
              utils_1.utils.show_hint("\u8bf7\u9009\u62e9\u5730\u533a~");
              return false;
            }
          }
          return true;
        }
        onPrevieBgClicked() {
          this.hideTips();
          this.hideDropDown();
        }
        onDropDownItemToggleLocation(id) {
          if (id > 2e3) {
            custom_lobby_1.custom_lobby.location_province_id = id;
            custom_lobby_1.custom_lobby.location_city_id = null;
            let _index = 0;
            this.checkProvincePlace(id) && (_index = custom_lobby_1.custom_lobby.get_config_city_last_index_by_id(id));
            this.refreshLocationCity(id, _index);
          } else id > 1e3 && (custom_lobby_1.custom_lobby.location_city_id = id);
          this.checkPlace() ? this.checkProvincePlace(custom_lobby_1.custom_lobby.location_province_id) ? this.label_name.string = `${this.filter(custom_lobby_1.custom_lobby.get_config_city_name_by_id(custom_lobby_1.custom_lobby.location_city_id))}\u9ebb\u5c06` : this.label_name.string = `${this.filter(custom_lobby_1.custom_lobby.get_config_province_name_by_id(custom_lobby_1.custom_lobby.location_province_id))}\u9ebb\u5c06` : this.label_name.string = "\u8bf7\u8bf7\u5148\u9009\u62e9\u5730\u533a";
        }
        filter(name) {
          if (name.endsWith("\u7279\u522b\u884c\u653f\u533a")) return name.substring(0, name.length - 5);
          if (name.endsWith("\u5730\u533a")) return name.substring(0, name.length - 2);
          if (name.endsWith("\u533a")) return name.substring(0, name.length - 1);
          if (name.endsWith("\u5e02")) return name.substring(0, name.length - 1);
          if (name.endsWith("\u76df")) return name.substring(0, name.length - 1);
          if (name.endsWith("\u5dde")) return name.substring(0, name.length - 1);
          return name;
        }
        onHideDropDownLocation() {
          this.hideDropDown();
        }
        hideTips() {
          this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
          this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
        }
        hideDropDown() {
          this.node.getChildByName("preViewRoot").getChildByName("City").getChildByName("DropDownBox").getComponent(DropDownLocation_1.default).hide();
          this.node.getChildByName("preViewRoot").getChildByName("Province").getChildByName("DropDownBox").getComponent(DropDownLocation_1.default).hide();
        }
        updateNodeVisable(rule, preview) {
          this.ruleNode.active = rule;
          this.previewNode.active = preview;
          rule && this.rule_tutorial_button();
          preview;
        }
        updateTabStatus(showRule) {
          this.ruleSpriteEnable.node.active = showRule;
          this.ruleSpriteDisenable.node.active = !showRule;
          this.previewSpriteEnable.node.active = !showRule;
          this.previewSpriteDisenable.node.active = showRule;
        }
        preViewSetData() {
          if (custom_lobby_1.custom_lobby.game_cards_rule) {
            let lab = this.preViewLayout.getChildByName("100").getChildByName("Des").getComponent(cc.Label);
            lab.string = custom_lobby_1.custom_lobby.game_cards_rule;
          }
          this.preViewLayout.getChildByName("100").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_cards_rule);
          custom_lobby_1.custom_lobby.game_hua_rule && (this.preViewLayout.getChildByName("200").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_hua_rule);
          this.preViewLayout.getChildByName("200").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_hua_rule);
          custom_lobby_1.custom_lobby.game_player_count && (this.preViewLayout.getChildByName("300").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_player_count);
          this.preViewLayout.getChildByName("300").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_player_count);
          custom_lobby_1.custom_lobby.game_hand_count && (this.preViewLayout.getChildByName("400").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_hand_count);
          this.preViewLayout.getChildByName("400").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_hand_count);
          custom_lobby_1.custom_lobby.game_chi_type && (this.preViewLayout.getChildByName("500").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_chi_type);
          this.preViewLayout.getChildByName("500").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_chi_type);
          custom_lobby_1.custom_lobby.game_caishen && (this.preViewLayout.getChildByName("600").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_caishen);
          this.preViewLayout.getChildByName("600").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_caishen);
          custom_lobby_1.custom_lobby.game_caishen_type && (this.preViewLayout.getChildByName("700").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_caishen_type);
          this.preViewLayout.getChildByName("700").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_caishen_type);
          custom_lobby_1.custom_lobby.game_baiban && (this.preViewLayout.getChildByName("800").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_baiban);
          this.preViewLayout.getChildByName("800").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_baiban);
          custom_lobby_1.custom_lobby.game_zhuama && (this.preViewLayout.getChildByName("900").getChildByName("Des").getComponent(cc.Label).string = custom_lobby_1.custom_lobby.game_zhuama);
          this.preViewLayout.getChildByName("900").active = this.previewItemVisable(custom_lobby_1.custom_lobby.game_zhuama);
        }
        previewItemVisable(str) {
          return !!str;
        }
        onTip200Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.closeOtherTip(200);
          this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        onTip600Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.closeOtherTip(600);
          this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        onTip900Clicked() {
          sound_manager_1.sound_manager.play_click();
          this.closeOtherTip(900);
          this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = !this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active;
        }
        closeOtherTip(tipID) {
          if (200 == tipID) {
            this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = false;
          } else if (600 == tipID) {
            this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_900.node.parent.getChildByName("LobbyYiFuTip").active = false;
          } else if (900 == tipID) {
            this.tip_200.node.parent.getChildByName("LobbyYiFuTip").active = false;
            this.tip_600.node.parent.getChildByName("LobbyYiFuTip").active = false;
          }
        }
        setGameName() {
          this.label_name.string = custom_lobby_1.custom_lobby.current_player_rule.name.length > 0 ? custom_lobby_1.custom_lobby.current_player_rule.name : "\u8bf7\u5148\u9009\u62e9\u5730\u533a";
          let locations = global_data_1.global_data.user_location.split(",");
          let _location = "";
          for (let i = 1; i < locations.length; i++) _location += locations[i];
          this.location.string = _location;
        }
        onEditingDidBegan() {
          tutorial_1.tutorial.close_tutorial();
        }
        onEditingDidEnded() {
          tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Lobby_3_3);
        }
        goToGame(name) {
          utils_1.utils.show_loading("\u6b63\u5728\u9a8c\u8bc1...");
          let check_task = new task_1.strict_task("logon_task");
          check_task.add_sub_task(new task_1.task("check_name").do((done, fail) => {
            let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_NAME_CHECK);
            url = utils_1.utils.string_replace_any(url, "{WECHATID}", global_data_1.global_data.appid);
            url = utils_1.utils.string_replace_any(url, "{OPTIONNAME}", encodeURIComponent(name));
            utils_1.utils.send_http_request({
              url: url,
              hint: true,
              success: () => {
                done();
              },
              fail: () => {
                fail();
              },
              complete: () => {
                utils_1.utils.hide_loading();
              }
            });
          }));
          check_task.add_sub_task(new task_1.task("check_suggest").do((done, fail) => {
            let suggest = this.preViewSuggestEditBox.string;
            if (suggest) {
              let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_NAME_CHECK);
              url = utils_1.utils.string_replace_any(url, "{WECHATID}", global_data_1.global_data.appid);
              url = utils_1.utils.string_replace_any(url, "{OPTIONNAME}", encodeURIComponent(suggest));
              utils_1.utils.send_http_request({
                url: url,
                hint: true,
                success: () => {
                  done();
                },
                fail: () => {
                  fail();
                },
                complete: () => {
                  utils_1.utils.hide_loading();
                }
              });
            } else done();
          }));
          check_task.on({
            success: () => {
              custom_lobby_1.custom_lobby.insert_current_player_rule(name);
              custom_lobby_1.custom_lobby.insert_current_player_rule_location();
              custom_lobby_1.custom_lobby.save_player_rules_local({
                success: () => {
                  this.resetEditorNameAndId();
                  this.node.active = false;
                  custom_lobby_1.custom_lobby.launch_game(150);
                }
              });
            },
            fail: () => {
              console.log("check_task fail");
            }
          });
          check_task.run();
        }
      };
      __decorate([ property(cc.Node) ], RuleEditorNew.prototype, "ruleNode", void 0);
      __decorate([ property(cc.Node) ], RuleEditorNew.prototype, "previewNode", void 0);
      __decorate([ property(cc.Sprite) ], RuleEditorNew.prototype, "ruleSpriteEnable", void 0);
      __decorate([ property(cc.Sprite) ], RuleEditorNew.prototype, "ruleSpriteDisenable", void 0);
      __decorate([ property(cc.Sprite) ], RuleEditorNew.prototype, "previewSpriteEnable", void 0);
      __decorate([ property(cc.Sprite) ], RuleEditorNew.prototype, "previewSpriteDisenable", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "ruleBack", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "ruleNext", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "previewBack", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "previewNext", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "previewBg", void 0);
      __decorate([ property(cc.Label) ], RuleEditorNew.prototype, "label_name", void 0);
      __decorate([ property(cc.Node) ], RuleEditorNew.prototype, "preViewLayout", void 0);
      __decorate([ property(cc.EditBox) ], RuleEditorNew.prototype, "preViewEditBox", void 0);
      __decorate([ property(cc.EditBox) ], RuleEditorNew.prototype, "preViewSuggestEditBox", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "tip_200", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "tip_600", void 0);
      __decorate([ property(cc.Button) ], RuleEditorNew.prototype, "tip_900", void 0);
      __decorate([ property(cc.Label) ], RuleEditorNew.prototype, "location", void 0);
      RuleEditorNew = __decorate([ ccclass ], RuleEditorNew);
      return RuleEditorNew;
    })();
    exports.default = RuleEditorNew;
    cc._RF.pop();
  }, {
    "../../Framework/common/task": "task",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/custom_lobby": "custom_lobby",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/global_define": "global_define",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./DropDownLocation": "DropDownLocation",
    "./LobbyRuleLayout": "LobbyRuleLayout"
  } ],
  RuleImage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fcba964WthFbr+e0Dssc9ZS", "RuleImage");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let RuleImage = (() => {
      let RuleImage = class RuleImage extends cc.Component {
        constructor() {
          super(...arguments);
          this.sprite = null;
        }
        onLoad() {}
        start() {}
        setData(data) {
          this.sprite.spriteFrame = data;
        }
      };
      __decorate([ property(cc.Sprite) ], RuleImage.prototype, "sprite", void 0);
      RuleImage = __decorate([ ccclass ], RuleImage);
      return RuleImage;
    })();
    exports.default = RuleImage;
    cc._RF.pop();
  }, {} ],
  RuleLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "dc2c6aAAYhJPKydpBuCd3Cr", "RuleLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.GameRuleData = exports.SingleRuleData = void 0;
    const ShopTabToggle_1 = require("./ShopTabToggle");
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const RuleButton_1 = require("./RuleButton");
    const RuleImage_1 = require("./RuleImage");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class SingleRuleData {
      constructor(enableSprite, disableSprite, images) {
        this.enableSprite = enableSprite;
        this.disableSprite = disableSprite;
        this.images = images;
      }
    }
    exports.SingleRuleData = SingleRuleData;
    class GameRuleData {
      constructor(index, id, enableSprite, disableSprite, rules) {
        this.index = index;
        this.id = id;
        this.enableSprite = enableSprite;
        this.disableSprite = disableSprite;
        this.rules = rules;
      }
    }
    exports.GameRuleData = GameRuleData;
    let RuleLayout = (() => {
      var RuleLayout_1;
      let RuleLayout = RuleLayout_1 = class RuleLayout extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.ruleButtonPrefab = null;
          this.ruleButtonRoot = null;
          this.tabButtonPrefab = null;
          this.tabButtonRoot = null;
          this.ruleImagePrefab = null;
          this.ruleImageRoot = null;
          this.itemScrollView = null;
          this.tabScrollView = null;
          this.bg = null;
          this.closeButton = null;
          this.ruleData = null;
          this.defaultTab = null;
          this.currentTabData = null;
          this.defaultButton = null;
          this.currentButtonData = null;
        }
        onLoad() {
          this.clearAll();
          this.safe_on("tabClick", this.onSwitchTab, this);
          this.safe_on("buttonClick", this.onSwitchButton, this);
          utils_1.utils.bind_button_event(this.closeButton, this.node, "RuleLayout", "onCloseClick");
        }
        start() {}
        clearAll() {
          this.clearAllRuleImages();
          this.clearAllRuleButtons();
          this.clearAllTabButtons();
          this.currentTabData = null;
          this.currentButtonData = null;
        }
        clearAllRuleImages() {
          this.ruleImageRoot.removeAllChildren();
        }
        clearAllRuleButtons() {
          this.ruleButtonRoot.removeAllChildren();
        }
        clearAllTabButtons() {
          this.tabButtonRoot.removeAllChildren();
        }
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        addRuleButton(data) {
          var btn = utils_1.utils.add_instance_to_root(this.ruleButtonPrefab, this.ruleButtonRoot, RuleButton_1.default);
          btn.setData(data);
          null == this.defaultButton && (this.defaultButton = btn);
          return btn;
        }
        addTab(data) {
          var tab = utils_1.utils.add_instance_to_root(this.tabButtonPrefab, this.tabButtonRoot, ShopTabToggle_1.default);
          tab.setData(data);
          null == this.defaultTab && (this.defaultTab = tab);
          return tab;
        }
        addImage(sp) {
          var image = utils_1.utils.add_instance_to_root(this.ruleImagePrefab, this.ruleImageRoot, RuleImage_1.default);
          image.setData(sp);
        }
        onSwitchTab(event) {
          let ruleLayout = event.currentTarget.getComponent(RuleLayout_1);
          let tab = event.target.getComponent(ShopTabToggle_1.default);
          let data = tab.data;
          if (ruleLayout.currentTabData != data) {
            ruleLayout.clearAllRuleImages();
            ruleLayout.clearAllRuleButtons();
            ruleLayout.defaultButton = null;
            data && data.rules.forEach(rule => {
              ruleLayout.addRuleButton(new RuleButton_1.RuleButtonData(rule.disableSprite.name, rule.enableSprite.name, rule));
            });
            ruleLayout.defaultButton && ruleLayout.defaultButton.node.dispatchEvent(new cc.Event.EventCustom("buttonClick", true));
            ruleLayout.currentTabData = data;
          }
          event.stopPropagation();
        }
        onSwitchButton(event) {
          let ruleLayout = event.currentTarget.getComponent(RuleLayout_1);
          let btn = event.target.getComponent(RuleButton_1.default);
          let data = btn.data;
          if (ruleLayout.currentButtonData != data) {
            ruleLayout.currentButtonData = data;
            ruleLayout.clearAllRuleImages();
            data && data.images.forEach(image => {
              ruleLayout.addImage(image);
            });
            ruleLayout.itemScrollView.scrollToTop(.01, true);
          }
          event.stopPropagation();
        }
        fetchData() {
          this.clearAll();
          if (null == this.ruleData) {
            this.ruleData = new Array();
            let index = 0;
            global_data_1.global_data.game_scene_name.forEach(game => {
              if (null != global_data_1.global_data.get_game_list_by_gameid(game.id) && !global_data_1.global_data.force_no_rule.some(x => x == game.id)) {
                let tab0 = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(game.id, "lr_rule_tab_0"));
                let tab1 = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(game.id, "lr_rule_tab_1"));
                if (null != tab0 || null != tab1) {
                  let data = new GameRuleData();
                  data.index = index++;
                  data.id = game.id;
                  data.disableSprite = tab0;
                  data.enableSprite = tab1;
                  data.rules = new Array();
                  let custom_rule = global_data_1.global_data.game_rule_tab_order.filter(g => g.id == game.id);
                  let rule_names = custom_rule.length > 0 ? custom_rule[0].order : [ "rule_basic_", "rule_special_", "rule_fan_", "rule_score_" ];
                  rule_names.forEach(name => {
                    let ruleImage = null;
                    let i = 0;
                    let ruleTab = new SingleRuleData();
                    ruleTab.images = new Array();
                    while (true) {
                      ruleImage = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(game.id, "lr_" + name + i.toString()));
                      if (null == ruleImage) break;
                      ruleTab.images.push(ruleImage);
                      i += 1;
                    }
                    if (ruleTab.images.length > 0) {
                      ruleTab.disableSprite = global_data_1.global_data.spriteFrameMap.get("Rules-" + name + "btn_0");
                      ruleTab.enableSprite = global_data_1.global_data.spriteFrameMap.get("Rules-" + name + "btn_1");
                      data.rules.push(ruleTab);
                    }
                  });
                  this.ruleData.push(data);
                }
              }
            });
          }
          this.defaultTab = null;
          this.ruleData && this.ruleData.length > 0 && this.ruleData.forEach(rule => {
            this.addTab(new ShopTabToggle_1.ShopTabToggleData(rule.index, ShopTabToggle_1.ShopType.Gold, rule.disableSprite, rule.enableSprite, rule));
          });
          this.defaultTab && this.defaultTab.node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
          cc.isValid(this.tabScrollView) && this.tabScrollView.scrollToTop(.01);
        }
      };
      __decorate([ property(cc.Prefab) ], RuleLayout.prototype, "ruleButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], RuleLayout.prototype, "ruleButtonRoot", void 0);
      __decorate([ property(cc.Prefab) ], RuleLayout.prototype, "tabButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], RuleLayout.prototype, "tabButtonRoot", void 0);
      __decorate([ property(cc.Prefab) ], RuleLayout.prototype, "ruleImagePrefab", void 0);
      __decorate([ property(cc.Node) ], RuleLayout.prototype, "ruleImageRoot", void 0);
      __decorate([ property(cc.ScrollView) ], RuleLayout.prototype, "itemScrollView", void 0);
      __decorate([ property(cc.ScrollView) ], RuleLayout.prototype, "tabScrollView", void 0);
      __decorate([ property(cc.Node) ], RuleLayout.prototype, "bg", void 0);
      __decorate([ property(cc.Button) ], RuleLayout.prototype, "closeButton", void 0);
      RuleLayout = RuleLayout_1 = __decorate([ ccclass ], RuleLayout);
      return RuleLayout;
    })();
    exports.default = RuleLayout;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow",
    "./RuleButton": "RuleButton",
    "./RuleImage": "RuleImage",
    "./ShopTabToggle": "ShopTabToggle"
  } ],
  SafePanel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b6764I7+ltPfoCJx0vq15rP", "SafePanel");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let SafePanel = (() => {
      let SafePanel = class SafePanel extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.panelCloseBtn = null;
          this.currLabel = null;
          this.bankLabel = null;
          this.quickBtn = null;
          this.quickPanel = null;
          this.quick20wBtn = null;
          this.quick100wBtn = null;
          this.quick1000wBtn = null;
          this.addBtn = null;
          this.subBtn = null;
          this.resetBtn = null;
          this.inBtn = null;
          this.outBtn = null;
          this.closeBtn = null;
          this.slider = null;
          this.progressBar = null;
          this.hintLabel = null;
          this.m_int_interval_unit = 0;
          this.m_long_total_gold = 0;
          this.m_long_self_gold = 0;
          this.m_long_bank_gold = 0;
          this.m_long_records_gold = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.panelCloseBtn, this.node, "SafePanel", "onPanelCloseBtnClicked");
          utils_1.utils.bind_button_event(this.quickBtn, this.node, "SafePanel", "onQuickBtnClicked");
          utils_1.utils.bind_button_event(this.quick20wBtn, this.node, "SafePanel", "onQuick20wBtnClicked");
          utils_1.utils.bind_button_event(this.quick100wBtn, this.node, "SafePanel", "onQuick100wBtnClicked");
          utils_1.utils.bind_button_event(this.quick1000wBtn, this.node, "SafePanel", "onQuick1000wBtnClicked");
          utils_1.utils.bind_button_event(this.addBtn, this.node, "SafePanel", "onAddBtnClicked");
          utils_1.utils.bind_button_event(this.subBtn, this.node, "SafePanel", "onSubBtnClicked");
          utils_1.utils.bind_button_event(this.resetBtn, this.node, "SafePanel", "onResetBtnClicked");
          utils_1.utils.bind_button_event(this.inBtn, this.node, "SafePanel", "onInBtnClicked");
          utils_1.utils.bind_button_event(this.outBtn, this.node, "SafePanel", "onOutBtnClicked");
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "SafePanel", "onCloseBtnClicked");
          utils_1.utils.bind_slider_event(this.slider, this.node, "SafePanel", "onSliderChanged");
          this.currLabel.verticalAlign = cc.Label.VerticalAlign.TOP;
          this.bankLabel.verticalAlign = cc.Label.VerticalAlign.TOP;
          utils_1.utils.on("RefreshBankData", this, this.onEventRefreshBankData);
        }
        onDestroy() {
          utils_1.utils.off("RefreshBankData", this, this.onEventRefreshBankData);
        }
        onPanelCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onQuickBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.quickPanel.active = !this.quickPanel.active;
          this.on_judge_bank_gold();
        }
        onQuick20wBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.quickOut(2e5);
        }
        onQuick100wBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.quickOut(1e6);
        }
        onQuick1000wBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.quickOut(1e7);
        }
        quickOut(unit) {
          let l_long_interval_unit = unit;
          let long_change_gold = l_long_interval_unit - this.m_long_self_gold % l_long_interval_unit;
          long_change_gold > this.m_long_bank_gold && (long_change_gold = this.m_long_bank_gold);
          this.m_long_self_gold += long_change_gold;
          this.m_long_bank_gold -= long_change_gold;
          this.update_gold();
          if (this.m_long_total_gold > 0) {
            let float_value = this.m_long_bank_gold / this.m_long_total_gold;
            this.setProgress(float_value);
          }
          this.on_judge_bank_gold();
        }
        setProgress(value) {
          this.slider.progress = value;
          this.progressBar.progress = value < .2 ? value + .1 : value;
        }
        onAddBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let l_long_interval_unit = 0;
          l_long_interval_unit = this.m_int_interval_unit > 0 ? this.m_int_interval_unit : 1e4;
          let long_change_gold = this.m_long_self_gold % l_long_interval_unit;
          0 == long_change_gold && (long_change_gold = l_long_interval_unit);
          long_change_gold > this.m_long_self_gold && (long_change_gold = this.m_long_self_gold);
          this.m_long_self_gold -= long_change_gold;
          this.m_long_bank_gold += long_change_gold;
          this.update_gold();
          if (this.m_long_total_gold > 0) {
            let float_value = this.m_long_bank_gold / this.m_long_total_gold;
            this.setProgress(float_value);
          }
        }
        onSubBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          let l_long_interval_unit = 0;
          l_long_interval_unit = this.m_int_interval_unit > 0 ? this.m_int_interval_unit : 1e4;
          let long_change_gold = l_long_interval_unit - this.m_long_self_gold % l_long_interval_unit;
          long_change_gold > this.m_long_bank_gold && (long_change_gold = this.m_long_bank_gold);
          this.m_long_self_gold += long_change_gold;
          this.m_long_bank_gold -= long_change_gold;
          this.update_gold();
          if (this.m_long_total_gold > 0) {
            let float_value = this.m_long_bank_gold / this.m_long_total_gold;
            this.setProgress(float_value);
          }
        }
        onResetBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.m_long_self_gold = this.m_long_records_gold;
          this.m_long_bank_gold = this.m_long_total_gold - this.m_long_self_gold;
          this.update_gold();
          if (this.m_long_total_gold > 0) {
            let float_value = this.m_long_bank_gold / this.m_long_total_gold;
            this.setProgress(float_value);
          }
          this.on_judge_bank_gold();
        }
        onInBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.on_btn_ok();
        }
        onOutBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.on_btn_ok();
        }
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onSliderChanged(event) {
          this.m_long_bank_gold = Math.floor(this.m_long_total_gold * event.progress);
          this.m_long_self_gold = this.m_long_total_gold - this.m_long_bank_gold;
          if (this.m_int_interval_unit > 0) {
            this.m_long_self_gold = this.m_long_self_gold - this.m_long_self_gold % this.m_int_interval_unit;
            this.m_long_bank_gold = this.m_long_total_gold - this.m_long_self_gold;
          } else {
            this.m_long_bank_gold = Math.floor(this.m_long_total_gold * event.progress);
            this.m_long_self_gold = this.m_long_total_gold - this.m_long_bank_gold;
          }
          if (0 == event.progress) {
            this.m_long_self_gold = this.m_long_total_gold;
            this.m_long_bank_gold = 0;
          }
          event.progress < .2 ? this.progressBar.progress = event.progress + .1 : this.progressBar.progress = event.progress;
          this.update_gold();
        }
        setSprite(btn, enable) {
          btn.getComponent(cc.Sprite).spriteFrame = enable ? btn.normalSprite : btn.disabledSprite;
          btn.interactable = enable;
        }
        on_btn_ok() {
          if (this.m_long_self_gold > this.m_long_records_gold) {
            let long_tran_gold = this.m_long_self_gold - this.m_long_records_gold;
            this.request_access_gold(long_tran_gold, 1);
          } else if (this.m_long_self_gold < this.m_long_records_gold) {
            let long_tran_gold = this.m_long_records_gold - this.m_long_self_gold;
            this.request_access_gold(long_tran_gold, 0);
          } else this.hide();
          this.on_judge_bank_gold();
        }
        show_bank() {
          this.currLabel.string = "0";
          this.bankLabel.string = "0";
          this.quickPanel.active = false;
          lobby_framework_1.lobby_framework.request_bank_data();
        }
        onEventRefreshBankData(data) {
          this.m_long_records_gold = data.bodygold;
          this.m_long_bank_gold = data.gold;
          if (null != data.limit) {
            this.m_int_interval_unit = data.limit;
            let l_str = '1.\u5de6\u6ed1\u52a8\u4e3a\u53d6\u51fa,\u53f3\u6ed1\u52a8\u4e3a\u5b58\u5165\n2.\u901a\u8fc7"+"\u3001"-"\u4ee5{UNIT}\u4e3a\u5355\u4f4d\u8fdb\u884c\u8c03\u6574';
            l_str = utils_1.utils.string_replace_key_with_integer(l_str, "{UNIT}", this.m_int_interval_unit);
            this.hintLabel.string = l_str;
          } else {
            this.m_int_interval_unit = 0;
            this.hintLabel.string = '1.\u5de6\u6ed1\u52a8\u4e3a\u53d6\u51fa,\u53f3\u6ed1\u52a8\u4e3a\u5b58\u5165\n2.\u901a\u8fc7"+"\u3001"-"\u4ee5 "\u4e07" \u4e3a\u5355\u4f4d\u8fdb\u884c\u8c03\u6574';
          }
          this.m_long_self_gold = this.m_long_records_gold;
          this.m_long_total_gold = this.m_long_records_gold + this.m_long_bank_gold;
          global_data_1.global_data.set_self_gold(this.m_long_self_gold);
          this.update_gold();
          if (this.m_long_total_gold > 0) {
            let float_value = this.m_long_bank_gold / this.m_long_total_gold;
            this.setProgress(float_value);
          }
        }
        request_access_gold(op_gold, op_type) {
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_ACCESS_GOLD);
          url = utils_1.utils.string_replace_key_with_integer(url, "{OPGOLD}", op_gold);
          url = utils_1.utils.string_replace_key_with_integer(url, "{OPTYPE}", op_type);
          console.log("request_access_gold", url);
          utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
          let that = this;
          utils_1.utils.send_http_request({
            url: url,
            success: function(data, message) {
              cc.isValid(that) && that.on_http_access_gold(data, message);
            },
            complete: function() {
              utils_1.utils.hide_loading();
            },
            fail: function(message) {
              utils_1.utils.show_hint(message);
            },
            progress: function(timeLeft) {
              utils_1.utils.show_loading_text(`\u6b63\u5728\u52a0\u8f7d...(${timeLeft}s)`);
            }
          });
        }
        on_http_access_gold(ptr_data, message) {
          this.m_long_records_gold = this.m_long_self_gold;
          utils_1.utils.show_hint(message);
          global_data_1.global_data.get_the_user_data()._long_bank_gold = this.m_long_bank_gold;
          global_data_1.global_data.set_self_gold(this.m_long_self_gold);
          this.update_gold();
        }
        format_gold_string(n) {
          let s = "";
          let ns = String(n);
          while (ns.length > 0) {
            let nnn = ns.length > 4 ? ns.substr(ns.length - 4, 4) : ns;
            s = nnn + ("" == s ? "" : ",") + s;
            ns = ns.length > 4 ? ns.substr(0, ns.length - 4) : "";
          }
          return s;
        }
        update_gold() {
          this.currLabel.string = this.format_gold_string(this.m_long_self_gold);
          this.bankLabel.string = this.format_gold_string(this.m_long_bank_gold);
          if (this.m_long_self_gold > this.m_long_records_gold) {
            this.outBtn.node.active = true;
            this.inBtn.node.active = false;
            this.closeBtn.node.active = false;
          } else if (this.m_long_self_gold < this.m_long_records_gold) {
            this.outBtn.node.active = false;
            this.inBtn.node.active = true;
            this.closeBtn.node.active = false;
          } else {
            this.outBtn.node.active = false;
            this.inBtn.node.active = false;
            this.closeBtn.node.active = true;
          }
        }
        on_judge_bank_gold() {
          this.setSprite(this.quick20wBtn, this.m_long_bank_gold >= 2e5);
          this.setSprite(this.quick100wBtn, this.m_long_bank_gold >= 1e6);
          this.setSprite(this.quick1000wBtn, this.m_long_bank_gold > 1e7);
        }
      };
      __decorate([ property(cc.Button) ], SafePanel.prototype, "panelCloseBtn", void 0);
      __decorate([ property(cc.Label) ], SafePanel.prototype, "currLabel", void 0);
      __decorate([ property(cc.Label) ], SafePanel.prototype, "bankLabel", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "quickBtn", void 0);
      __decorate([ property(cc.Node) ], SafePanel.prototype, "quickPanel", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "quick20wBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "quick100wBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "quick1000wBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "addBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "subBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "resetBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "inBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "outBtn", void 0);
      __decorate([ property(cc.Button) ], SafePanel.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Slider) ], SafePanel.prototype, "slider", void 0);
      __decorate([ property(cc.ProgressBar) ], SafePanel.prototype, "progressBar", void 0);
      __decorate([ property(cc.Label) ], SafePanel.prototype, "hintLabel", void 0);
      SafePanel = __decorate([ ccclass ], SafePanel);
      return SafePanel;
    })();
    exports.default = SafePanel;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  SettingBox: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2b494EBy2FAnKqHUzIUWgEL", "SettingBox");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let SettingBox = (() => {
      let SettingBox = class SettingBox extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.musicToggle = null;
          this.musicOffGreenPoint = null;
          this.soundToggle = null;
          this.soundOffGreenPoint = null;
          this.closeButton = null;
        }
        start() {
          utils_1.utils.bind_button_event(this.closeButton, this.node, "SettingBox", "OnCloseClicked");
          this.musicToggle.node.on("toggle", toggle => {
            console.log(`toggle music ${toggle.isChecked}`);
            lobby_framework_1.lobby_framework.set_music(toggle.isChecked);
            this.musicOffGreenPoint.active = !toggle.isChecked;
          }, this);
          this.soundToggle.node.on("toggle", toggle => {
            console.log(`toggle sound ${toggle.isChecked}`);
            lobby_framework_1.lobby_framework.set_sound(toggle.isChecked);
            this.soundOffGreenPoint.active = !toggle.isChecked;
          }, this);
          if (lobby_framework_1.lobby_framework.get_music()) {
            console.log("GetMusic true");
            this.musicToggle.check();
            this.musicOffGreenPoint.active = false;
          } else {
            console.log("GetMusic false");
            this.musicToggle.uncheck();
            this.musicOffGreenPoint.active = true;
          }
          if (lobby_framework_1.lobby_framework.get_sound()) {
            console.log("GetSound true");
            this.soundToggle.check();
            this.soundOffGreenPoint.active = false;
          } else {
            console.log("GetSound false");
            this.soundToggle.uncheck();
            this.soundOffGreenPoint.active = true;
          }
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Toggle) ], SettingBox.prototype, "musicToggle", void 0);
      __decorate([ property(cc.Node) ], SettingBox.prototype, "musicOffGreenPoint", void 0);
      __decorate([ property(cc.Toggle) ], SettingBox.prototype, "soundToggle", void 0);
      __decorate([ property(cc.Node) ], SettingBox.prototype, "soundOffGreenPoint", void 0);
      __decorate([ property(cc.Button) ], SettingBox.prototype, "closeButton", void 0);
      SettingBox = __decorate([ ccclass ], SettingBox);
      return SettingBox;
    })();
    exports.default = SettingBox;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  ShareButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c4b74q5Jn9MPaE5ESUL2nl4", "ShareButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ShareButton = (() => {
      let ShareButton = class ShareButton extends cc.Component {
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "ShareButton", "buttonClicked");
        }
        buttonClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          lobby_framework_1.lobby_framework.share_lobby_button();
        }
      };
      ShareButton = __decorate([ ccclass ], ShareButton);
      return ShareButton;
    })();
    exports.default = ShareButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  ShareWindow: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ee6e0BU+4xAHaw9Cu2rN2GU", "ShareWindow");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ShareWindow = (() => {
      let ShareWindow = class ShareWindow extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.btnClose = null;
          this.labelText = null;
          this.btnShare = null;
        }
        onLoad() {
          utils_1.utils.on("RefreshShareWindowButton", this, this.onEventRefreshShareWindowButton);
        }
        onDestroy() {
          utils_1.utils.off("RefreshShareWindowButton", this, this.onEventRefreshShareWindowButton);
        }
        onEventRefreshShareWindowButton() {
          this.refreshButton();
        }
        start() {
          utils_1.utils.bind_button_event(this.btnShare, this.node, "ShareWindow", "shareButtonClicked");
        }
        shareButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          switch (global_data_1.global_data.share_window_state) {
           case lobby_types_1.lobby_types.ShareState.Available:
            lobby_framework_1.lobby_framework.share_window_share();
            break;

           case lobby_types_1.lobby_types.ShareState.Shared:
            lobby_framework_1.lobby_framework.get_share_window_award();
            break;

           case lobby_types_1.lobby_types.ShareState.Rewarded:
          }
        }
        refreshButton() {
          if (global_data_1.global_data.share_window_state == lobby_types_1.lobby_types.ShareState.Available) {
            this.btnShare.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get("Share-share_to_group");
            this.btnShare.interactable = true;
          } else if (global_data_1.global_data.share_window_state == lobby_types_1.lobby_types.ShareState.Shared) {
            this.btnShare.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get("Share-get_gold");
            this.btnShare.interactable = true;
          } else {
            this.btnShare.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get("Share-already_got");
            this.btnShare.interactable = false;
          }
        }
        onBtnClose() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Button) ], ShareWindow.prototype, "btnClose", void 0);
      __decorate([ property(cc.RichText) ], ShareWindow.prototype, "labelText", void 0);
      __decorate([ property(cc.Button) ], ShareWindow.prototype, "btnShare", void 0);
      ShareWindow = __decorate([ ccclass ], ShareWindow);
      return ShareWindow;
    })();
    exports.default = ShareWindow;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  ShopLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ead41qbwjFGBriDp+Uq4Ag0", "ShopLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const ItemButton_1 = require("./ItemButton");
    const ShopTabToggle_1 = require("./ShopTabToggle");
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let ShopLayout = (() => {
      var ShopLayout_1;
      let ShopLayout = ShopLayout_1 = class ShopLayout extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.itemButtonPrefab = null;
          this.itemButtonRoot = null;
          this.tabButtonPrefab = null;
          this.tabButtonRoot = null;
          this.itemScrollView = null;
          this.bg = null;
          this.closeButton = null;
          this.defaultTab = null;
          this.currentTabData = null;
          this.hasData = false;
        }
        onLoad() {
          this.clearAllItemButtons();
          this.clearAllTabButtons();
          this.hasData = false;
          this.safe_on("tabClick", this.onSwitchTab, this);
          utils_1.utils.bind_button_event(this.closeButton, this.node, "ShopLayout", "onCloseClick");
        }
        start() {}
        clearAllItemButtons() {
          this.itemButtonRoot.removeAllChildren();
        }
        clearAllTabButtons() {
          this.tabButtonRoot.removeAllChildren();
        }
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        addItemButton(data) {
          if ("1025" != data.id || global_data_1.global_data.have_switch_private_card()) {
            var btn = utils_1.utils.add_instance_to_root(this.itemButtonPrefab, this.itemButtonRoot, ItemButton_1.default);
            null != data && btn.setData(data);
            return btn;
          }
          return null;
        }
        addTab(data) {
          var tab = utils_1.utils.add_instance_to_root(this.tabButtonPrefab, this.tabButtonRoot, ShopTabToggle_1.default);
          tab.setData(data);
          null == this.defaultTab && (this.defaultTab = tab);
          return tab;
        }
        onSwitchTab(event) {
          let shopLayout = event.currentTarget.getComponent(ShopLayout_1);
          let tab = event.target.getComponent(ShopTabToggle_1.default);
          let data = tab.getData();
          if (this.currentTabData != data) {
            shopLayout.clearAllItemButtons();
            data && data.forEach(element => {
              shopLayout.addItemButton(element);
            });
            this.currentTabData = data;
            shopLayout.itemScrollView.scrollToTop(.01, true);
          }
          event.stopPropagation();
        }
        fetchData() {
          if (this.hasData) return;
          this.clearAllItemButtons();
          this.clearAllTabButtons();
          let shopData = global_data_1.global_data.game_json_data[global_data_1.global_data.keyword][global_data_1.global_data.area_id];
          this.defaultTab = null;
          if (shopData.products && shopData.products.length > 0) {
            let array = new Array();
            shopData.products.forEach(element => {
              let sp_name = element.icon >= 1 && element.icon <= 6 ? "Shop-gold_img_" + element.icon : "Shop-gold_img_1";
              let sp = global_data_1.global_data.spriteFrameMap.get(sp_name);
              null != sp && array.push(new ItemButton_1.ItemButtonData(0, element.id, element.name, 1, element.type, sp, element.desc && element.desc.length > 0, element.desc, "", element.price));
            });
            this.addTab(new ShopTabToggle_1.ShopTabToggleData(0, ShopTabToggle_1.ShopType.Gold, global_data_1.global_data.spriteFrameMap.get("Lobby-tab_gold_mall_0"), global_data_1.global_data.spriteFrameMap.get("Lobby-tab_gold_mall_1"), array));
          }
          if (shopData.products_ingot && shopData.products_ingot.length > 0) {
            let array = new Array();
            shopData.products_ingot.forEach(element => {
              let sp_name = element.icon >= 1 && element.icon <= 6 ? "Shop-ingot_img_" + element.icon : "Shop-ingot_img_1";
              let sp = global_data_1.global_data.spriteFrameMap.get(sp_name);
              null != sp && array.push(new ItemButton_1.ItemButtonData(2, element.id, element.name, 1, element.type, sp, element.desc && element.desc.length > 0, element.desc, "", element.price));
            });
            this.addTab(new ShopTabToggle_1.ShopTabToggleData(1, ShopTabToggle_1.ShopType.Ingot, global_data_1.global_data.spriteFrameMap.get("Lobby-tab_ingot_mall_0"), global_data_1.global_data.spriteFrameMap.get("Lobby-tab_ingot_mall_1"), array));
          }
          shopData = global_data_1.global_data.common_json_data;
          if (shopData.prop_shop && shopData.prop_shop.length > 0) {
            let array = new Array();
            shopData.prop_shop.forEach(element => {
              let sp_name = "Prop-prop_" + element.logo;
              let sp = global_data_1.global_data.spriteFrameMap.get(sp_name);
              null != sp && array.push(new ItemButton_1.ItemButtonData(1, element.id, element.prop_name, element.prop_count, element.pay_type, sp, element.fund_desc && element.fund_desc.length > 0, element.fund_desc, element.fund_name, element.price));
            });
            this.addTab(new ShopTabToggle_1.ShopTabToggleData(2, ShopTabToggle_1.ShopType.Item, global_data_1.global_data.spriteFrameMap.get("Lobby-tab_prop_mall_0"), global_data_1.global_data.spriteFrameMap.get("Lobby-tab_prop_mall_1"), array));
          }
          this.defaultTab && this.defaultTab.node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
          this.hasData = true;
        }
      };
      __decorate([ property(cc.Prefab) ], ShopLayout.prototype, "itemButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], ShopLayout.prototype, "itemButtonRoot", void 0);
      __decorate([ property(cc.Prefab) ], ShopLayout.prototype, "tabButtonPrefab", void 0);
      __decorate([ property(cc.Node) ], ShopLayout.prototype, "tabButtonRoot", void 0);
      __decorate([ property(cc.ScrollView) ], ShopLayout.prototype, "itemScrollView", void 0);
      __decorate([ property(cc.Node) ], ShopLayout.prototype, "bg", void 0);
      __decorate([ property(cc.Button) ], ShopLayout.prototype, "closeButton", void 0);
      ShopLayout = ShopLayout_1 = __decorate([ ccclass ], ShopLayout);
      return ShopLayout;
    })();
    exports.default = ShopLayout;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./ItemButton": "ItemButton",
    "./PopWindow": "PopWindow",
    "./ShopTabToggle": "ShopTabToggle"
  } ],
  ShopTabToggle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a191fsv8M1EiJB6e4eM6KYA", "ShopTabToggle");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ShopTabToggleData = exports.ShopType = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var ShopType;
    (function(ShopType) {
      ShopType[ShopType["Gold"] = 0] = "Gold";
      ShopType[ShopType["Item"] = 1] = "Item";
      ShopType[ShopType["Ingot"] = 2] = "Ingot";
    })(ShopType = exports.ShopType || (exports.ShopType = {}));
    class ShopTabToggleData {
      constructor(index, type, disableSprite, enableSprite, data) {
        this.index = index;
        this.type = type;
        this.disableSprite = disableSprite;
        this.enableSprite = enableSprite;
        this.data = data;
      }
    }
    exports.ShopTabToggleData = ShopTabToggleData;
    let ShopTabToggle = (() => {
      let ShopTabToggle = class ShopTabToggle extends cc.Component {
        constructor() {
          super(...arguments);
          this.disableSprite = null;
          this.enableSprite = null;
          this.index = -1;
          this.type = 0;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.getComponent(cc.Toggle), this.node, "ShopTabToggle", "OnTabClicked");
        }
        start() {}
        OnTabClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("tabClick", true));
        }
        setData(data) {
          this.index = data.index;
          this.data = data.data;
          this.enableSprite.spriteFrame = data.enableSprite;
          this.disableSprite.spriteFrame = data.disableSprite;
        }
        getData() {
          return this.data;
        }
        getResName() {
          return "";
        }
      };
      __decorate([ property(cc.Sprite) ], ShopTabToggle.prototype, "disableSprite", void 0);
      __decorate([ property(cc.Sprite) ], ShopTabToggle.prototype, "enableSprite", void 0);
      ShopTabToggle = __decorate([ ccclass ], ShopTabToggle);
      return ShopTabToggle;
    })();
    exports.default = ShopTabToggle;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  SimpleShop: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2b425wj6LJEKJ8ty+uZ4BFR", "SimpleShop");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let SimpleShop = (() => {
      let SimpleShop = class SimpleShop extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.title = null;
          this.labelPay = null;
          this.labelGold = null;
          this.labelGiftGold = null;
          this.closeButton = null;
          this.payButton = null;
          this.productData = null;
        }
        start() {
          utils_1.utils.bind_button_event(this.closeButton, this.node, "SimpleShop", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.payButton, this.node, "SimpleShop", "OnPayClicked");
        }
        setData(title, pay, gold, giftgold, productData) {
          this.title.string = title;
          this.labelPay.string = pay;
          this.labelGold.string = gold;
          this.labelGiftGold.string = giftgold;
          this.productData = productData;
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        OnPayClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
          lobby_framework_1.lobby_framework.purchase_item(this.productData.id, this.productData.price, this.productData.name);
        }
      };
      __decorate([ property(cc.Label) ], SimpleShop.prototype, "title", void 0);
      __decorate([ property(cc.Label) ], SimpleShop.prototype, "labelPay", void 0);
      __decorate([ property(cc.Label) ], SimpleShop.prototype, "labelGold", void 0);
      __decorate([ property(cc.Label) ], SimpleShop.prototype, "labelGiftGold", void 0);
      __decorate([ property(cc.Button) ], SimpleShop.prototype, "closeButton", void 0);
      __decorate([ property(cc.Button) ], SimpleShop.prototype, "payButton", void 0);
      SimpleShop = __decorate([ ccclass ], SimpleShop);
      return SimpleShop;
    })();
    exports.default = SimpleShop;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow"
  } ],
  StartMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d55d8YUQkpAQrIvHPKR4FtB", "StartMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../Framework/common/utils");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const task_1 = require("../Framework/common/task");
    const platform_1 = require("../Framework/lobby/platform/platform");
    const global_data_1 = require("../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let StartMain = (() => {
      let StartMain = class StartMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.loadingBar = null;
          this.loadingLabel = null;
          this.ptr_sprite_wechat = null;
          this.dragon = null;
          this.button_reg = null;
          this.button_wechat = null;
          this.button_common = null;
          this.button_test_passport = null;
          this.btn_service = null;
          this.btn_fix = null;
          this.load_task = null;
          this.button_pos_y = -190;
        }
        onLoad() {
          let that = this;
          this.load_task = new task_1.parallel_task("StartMain loader");
          utils_1.utils.is_mi() || this.load_task.add_sub_task(new task_1.task("service").do(done => {
            utils_1.utils.load_simple_button({
              name: "service",
              sprite: "wx/service",
              complete: btn => {
                that.btn_service = btn;
                that.btn_service.node.setParent(that.node);
                that.btn_service.node.setPosition(cc.v2(-cc.Canvas.instance.node.width / 2 + 100, cc.Canvas.instance.node.height / 2 - 50));
                utils_1.utils.bind_button_event(btn, that.node, "StartMain", "onServiceClicked");
                done();
              }
            });
          }));
          this.load_task.add_sub_task(new task_1.task("fix").do(done => {
            utils_1.utils.load_simple_button({
              name: "fix",
              sprite: "wx/fix",
              complete: btn => {
                that.btn_fix = btn;
                that.btn_fix.node.setParent(that.node);
                that.btn_fix.node.setPosition(cc.v2(-cc.Canvas.instance.node.width / 2 + 280, cc.Canvas.instance.node.height / 2 - 50));
                utils_1.utils.bind_button_event(btn, that.node, "StartMain", "onFixClicked");
                done();
              }
            });
          }));
          this.load_task.add_sub_task(new task_1.task("wx_login_button").do(done => {
            utils_1.utils.load_simple_button({
              name: "wx_login_button",
              sprite: "wx/new_wx_login_button",
              complete: btn => {
                that.button_wechat = btn;
                that.button_wechat.node.setParent(that.node);
                that.button_wechat.node.active = false;
                done();
              }
            });
          }));
          this.load_task.add_sub_task(new task_1.task("reg_login_button").do(done => {
            utils_1.utils.load_simple_button({
              name: "reg_login_button",
              sprite: "wx/reg_login_button",
              complete: btn => {
                that.button_reg = btn;
                that.button_reg.node.setParent(that.node);
                that.button_reg.node.active = false;
                utils_1.utils.bind_button_event(btn, that.node, "StartMain", "onRegLoginClicked");
                done();
              }
            });
          }));
          this.load_task.add_sub_task(new task_1.task("common_login_button").do(done => {
            utils_1.utils.load_simple_button({
              name: "common_login_button",
              sprite: "wx/common_login_button",
              complete: btn => {
                that.button_common = btn;
                that.button_common.node.setParent(that.node);
                that.button_common.node.active = false;
                utils_1.utils.bind_button_event(btn, that.node, "StartMain", "onCommonLoginClicked");
                done();
              }
            });
          }));
          this.load_task.add_sub_task(new task_1.task("test_passport_login_button").do(done => {
            utils_1.utils.load_simple_button({
              name: "test_passport_login_button",
              sprite: "wx/service",
              complete: btn => {
                that.button_test_passport = btn;
                that.button_test_passport.node.setParent(that.node);
                that.button_test_passport.node.active = false;
                that.button_test_passport.node.setPosition(cc.v2(-cc.Canvas.instance.node.width / 2 + 460, cc.Canvas.instance.node.height / 2 - 50));
                utils_1.utils.bind_button_event(btn, that.node, "StartMain", "onTestPassportLoginClicked");
                done();
              }
            });
          }));
          this.load_task.on({
            success: () => {
              console.log("StartMainLoadDone");
              utils_1.utils.send("StartMainLoadDone");
            }
          });
          this.load_task.run();
          this.loadingBar.node.setPosition(0, -293);
          this.loadingLabel.node.setPosition(0, 29);
          utils_1.utils.on("SetLoadingProgress", this, this.onEventSetLoadingProgress);
          utils_1.utils.on("ShowAuthButtons", this, this.onEventShowAuthButtons);
          utils_1.utils.on("ShowTestPassportButton", this, this.onEventShowTestPassportButton);
        }
        start() {
          this.dragon.playAnimation("denglu", 0);
        }
        onDestroy() {
          utils_1.utils.off("SetLoadingProgress", this, this.onEventSetLoadingProgress);
          utils_1.utils.off("ShowAuthButtons", this, this.onEventShowAuthButtons);
          utils_1.utils.off("ShowTestPassportButton", this, this.onEventShowTestPassportButton);
        }
        onEventSetLoadingProgress(percent, text) {
          console.log("onEventSetLoadingProgress", percent, text);
          if (percent > 0) {
            this.button_reg.node.active = false;
            this.button_common.node.active = false;
            this.button_wechat.node.active = false;
            this.loadingBar.node.active = true;
            this.loadingLabel.node.active = true;
            this.loadingBar.progress = percent;
            this.loadingLabel.string = text + ":" + (100 * percent).toString() + "%";
          } else {
            this.loadingBar.node.active = false;
            this.loadingLabel.node.active = false;
          }
        }
        onEventShowTestPassportButton() {
          this.button_test_passport.node.active = true;
        }
        onEventShowAuthButtons(types) {
          if (!types) return;
          this.button_reg.node.active = false;
          this.button_common.node.active = false;
          this.button_wechat.node.active = false;
          let count = types.length > 1 ? 2 : 1;
          if (1 == count) {
            if (types[0] == lobby_types_1.lobby_types.LogonType.Wechat) {
              this.button_wechat.node.active = true;
              this.button_wechat.node.setPosition(cc.v2(0, this.button_pos_y));
              this.CreateWxButton(this.button_wechat.node);
            } else if (types[0] == lobby_types_1.lobby_types.LogonType.Register) {
              this.button_reg.node.active = true;
              this.button_reg.node.setPosition(cc.v2(0, this.button_pos_y));
            } else if (types[0] == lobby_types_1.lobby_types.LogonType.Channel) {
              this.button_common.node.active = true;
              this.button_common.node.setPosition(cc.v2(0, this.button_pos_y));
            }
          } else if (2 == count) {
            let pos_x = [ -240, 240 ];
            for (let i = 0; i < 2; ++i) if (types[i] == lobby_types_1.lobby_types.LogonType.Wechat) {
              this.button_wechat.node.active = true;
              this.button_wechat.node.setPosition(cc.v2(pos_x[i], this.button_pos_y));
              this.CreateWxButton(this.button_wechat.node);
            } else if (types[i] == lobby_types_1.lobby_types.LogonType.Register) {
              this.button_reg.node.active = true;
              this.button_reg.node.setPosition(cc.v2(pos_x[i], this.button_pos_y));
            } else if (types[i] == lobby_types_1.lobby_types.LogonType.Channel) {
              this.button_common.node.active = true;
              this.button_common.node.setPosition(cc.v2(pos_x[i], this.button_pos_y));
            }
          }
        }
        CreateWxButton(node) {
          platform_1.platform.inst.createUserInfoButton({
            node: node,
            onAccept: () => {
              global_data_1.global_data.logon_param.user_decide = false;
              global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Wechat;
              utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param);
            },
            onReject: () => {
              utils_1.utils.send("LogonFailByUser", {
                reason: "\u7528\u6237\u62d2\u7edd\u6388\u6743"
              });
            }
          });
        }
        onServiceClicked() {
          platform_1.platform.inst.openCustomerServiceConversation({});
        }
        onFixClicked() {
          utils_1.utils.show_loading("\u6b63\u5728\u4fee\u590d...");
          platform_1.platform.inst.cleanAllCaches({
            success: () => {
              utils_1.utils.show_message_box({
                content: "\u4fee\u590d\u6210\u529f\uff0c\u8bf7\u91cd\u65b0\u6253\u5f00\u5ba2\u6237\u7aef",
                button_count: 1,
                onClick: () => {
                  platform_1.platform.inst.exitMiniProgram({});
                }
              });
            },
            fail: res => {
              console.log(`cleanAllAssets failed: ${res.errMsg}`);
            },
            complete: () => {
              utils_1.utils.hide_loading();
            }
          });
        }
        onRegLoginClicked() {
          global_data_1.global_data.logon_param.user_decide = true;
          global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Register;
          utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param);
        }
        onCommonLoginClicked() {
          console.log("onCommonLoginClicked =>");
          utils_1.utils.is_huawei() ? platform_1.platform.inst.login({
            success: () => {
              global_data_1.global_data.logon_param.user_decide = true;
              global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Channel;
              utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param);
            }
          }) : console.log("\u672a\u5b9a\u4e49\u767b\u9646\u6309\u94ae\u56de\u8c03");
        }
        onTestPassportLoginClicked() {
          console.log("onCommonLoginClicked =>");
          cc.director.loadScene("relogon", () => {});
        }
      };
      __decorate([ property(cc.ProgressBar) ], StartMain.prototype, "loadingBar", void 0);
      __decorate([ property(cc.Label) ], StartMain.prototype, "loadingLabel", void 0);
      __decorate([ property(cc.Sprite) ], StartMain.prototype, "ptr_sprite_wechat", void 0);
      __decorate([ property(dragonBones.ArmatureDisplay) ], StartMain.prototype, "dragon", void 0);
      StartMain = __decorate([ ccclass ], StartMain);
      return StartMain;
    })();
    exports.default = StartMain;
    cc._RF.pop();
  }, {
    "../Framework/common/task": "task",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/platform/platform": "platform"
  } ],
  Start: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "72ce8+AL3ZGn5qw+KOVUtDT", "Start");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../common/utils");
    const lobby_framework_1 = require("../lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let Start = (() => {
      let Start = class Start extends cc.Component {
        constructor() {
          super(...arguments);
          this.waitingLabel = null;
          this.waitingSprite = null;
        }
        onLoad() {
          console.log("Start.onLoad");
          utils_1.utils.on("InitLoadingText", this, this.onEventInitLoadingText);
          this.waitingLabel = new cc.Node("Label").addComponent(cc.Label);
          this.waitingLabel.node.setParent(this.node);
          this.waitingLabel.node.setPosition(60, -170);
          this.waitingLabel.node.color = new cc.Color().fromHEX("#FFFFFF");
          this.waitingLabel.string = "\u6b63\u5728\u542f\u52a8\uff0c\u8bf7\u7a0d\u7b49...";
          this.waitingLabel.fontSize = 28;
          this.waitingLabel.horizontalAlign = cc.Label.HorizontalAlign.LEFT;
          this.waitingSprite = new cc.Node("Sprite").addComponent(cc.Sprite);
          this.waitingSprite.node.setParent(this.node);
          this.waitingSprite.node.setPosition(-120, -168);
          lobby_framework_1.lobby_framework.init();
          let that = this;
          cc.resources.load("wx/loading", cc.SpriteFrame, (err, sp) => {
            if (err) {
              cc.error(err.message || err);
              return;
            }
            that.waitingSprite.spriteFrame = sp;
            that.waitingSprite.sizeMode = cc.Sprite.SizeMode.RAW;
            that.waitingSprite.trim = false;
            utils_1.utils.run_action_rotate_forever(that.waitingSprite.node, 1, true);
          });
        }
        onDestroy() {
          utils_1.utils.off("InitLoadingText", this, this.onEventInitLoadingText);
        }
        onEventInitLoadingText(text) {
          this.waitingLabel.string = text;
        }
      };
      Start = __decorate([ ccclass ], Start);
      return Start;
    })();
    exports.default = Start;
    cc._RF.pop();
  }, {
    "../common/utils": "utils",
    "../lobby/lobby_framework": "lobby_framework"
  } ],
  TabButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2ffb7SgaLpElofQprNczwl1", "TabButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TabButtonData = void 0;
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    class TabButtonData {
      constructor(tabId, data) {
        this.tabId = tabId;
        this.data = data;
      }
    }
    exports.TabButtonData = TabButtonData;
    let TabButton = (() => {
      let TabButton = class TabButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.tabSprite = null;
          this.tabId = 0;
          this.data = null;
        }
        onLoad() {}
        start() {}
        setData(data) {
          this.data = data.data;
          this.tabId = data.tabId;
          if (this.tabSprite) if (global_data_1.global_data.single_game_mode()) {
            this.tabSprite.enabled = true;
            this.tabSprite.spriteFrame = global_data_1.global_data.spriteFrameMap.get(utils_1.utils.get_game_res_name(this.tabId, "lr_label_1"));
          } else this.tabSprite.enabled = false;
        }
        getData() {
          return this.data;
        }
      };
      __decorate([ property(cc.Sprite) ], TabButton.prototype, "tabSprite", void 0);
      TabButton = __decorate([ ccclass ], TabButton);
      return TabButton;
    })();
    exports.default = TabButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data"
  } ],
  TaskBoardButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "02a94PJD9JPuo+7u3cAhrdH", "TaskBoardButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskBoardButton = (() => {
      let TaskBoardButton = class TaskBoardButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.button = null;
          this.redPoint = null;
        }
        onLoad() {
          utils_1.utils.on("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        onDestroy() {
          utils_1.utils.off("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        start() {
          this.refreshRedPoint();
        }
        onEventTaskboardDataUpdated() {
          this.refreshRedPoint();
        }
        checkRewardRemain(data) {
          if (null == data) return false;
          if (data.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.Invite) return 1 == data.webData.unreceive;
          return 0 != data.webData.last_times;
        }
        refreshRedPoint() {
          let that = this;
          this.redPoint.active = global_data_1.global_data.taskboard_data && global_data_1.global_data.taskboard_data.items.some(function(value) {
            return lobby_framework_1.lobby_framework.check_task_board_item_available(value.webData.reward_type) && that.checkRewardRemain(value);
          });
        }
      };
      __decorate([ property(cc.Button) ], TaskBoardButton.prototype, "button", void 0);
      __decorate([ property(cc.Node) ], TaskBoardButton.prototype, "redPoint", void 0);
      TaskBoardButton = __decorate([ ccclass ], TaskBoardButton);
      return TaskBoardButton;
    })();
    exports.default = TaskBoardButton;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types"
  } ],
  TaskBoardItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "04cd5ROnlBI/6rhTLr7yFlO", "TaskBoardItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskBoardItem = (() => {
      let TaskBoardItem = class TaskBoardItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.titleImage = null;
          this.image = null;
          this.rewardLabel = null;
          this.btn = null;
          this.dataNode = null;
          this.emptyNode = null;
          this.maskNode = null;
          this.animation = null;
          this.timeNode = null;
          this.timeLabel = null;
          this.nextVideoAvailableTime = Number.MAX_VALUE;
          this.nextShareAvailableTime = Number.MAX_VALUE;
          this.data = null;
          this.clip = null;
          this._playAnimation = false;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btn, this.node, "TaskBoardItem", "onItemBtnClicked");
          this.loadAnimation();
          this.refreshCD();
          utils_1.utils.on("TaskBoardItemUpdated", this, this.onEventTaskBoardItemUpdated);
        }
        onDestroy() {
          utils_1.utils.off("TaskBoardItemUpdated", this, this.onEventTaskBoardItemUpdated);
        }
        onEventTaskBoardItemUpdated(type, times) {
          if (this.data.webData.reward_type == type) {
            this.data.webData.last_times = times;
            this.setData(this.data);
          }
        }
        loadAnimation() {
          if (null == this.clip) {
            let resourcePath = "FrameAnimation/weixingdating_ljbtx";
            let that = this;
            cc.resources.load(resourcePath, cc.SpriteAtlas, (error, atlas) => {
              if (error) {
                console.error(error);
                return;
              }
              let sps = atlas.getSpriteFrames();
              that.clip = cc.AnimationClip.createWithSpriteFrames(sps, 20);
              that.clip.name = "main";
              that.clip.wrapMode = cc.WrapMode.Loop;
              that.animation.addClip(that.clip);
              that._playAnimation && that.play();
            });
          }
        }
        setData(data) {
          this.data = data;
          if (null == data) {
            this.emptyNode.active = true;
            this.dataNode.active = false;
          } else {
            this.emptyNode.active = false;
            this.dataNode.active = true;
            this.titleImage.spriteFrame = global_data_1.global_data.spriteFrameMap.get(data.titleImage);
            this.image.spriteFrame = global_data_1.global_data.spriteFrameMap.get(data.image);
            if (data.webData) {
              if (data.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.Invite) this.rewardLabel.string = "10000\u91d1\u5e01"; else if (data.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.Share) {
                this.rewardLabel.string = "";
                utils_1.utils.is_wechat() ? this.rewardLabel.string = "5000\u91d1\u5e01" : (utils_1.utils.is_huawei() || utils_1.utils.is_baidu()) && (this.rewardLabel.string = "8500\u91d1\u5e01");
              } else {
                let next_reward = data.webData.reward.length > data.webData.reward_num ? data.webData.reward[data.webData.reward_num] : data.webData.reward[0];
                this.rewardLabel.string = utils_1.utils.reward_label_text(next_reward.id, next_reward.cnt);
              }
              let alldone = 0 == data.webData.last_times;
              this.maskNode.active = !!alldone;
            } else if (data.type == lobby_types_1.lobby_types.RewardWebType.BindWechat) {
              this.rewardLabel.string = "1000\u91d1\u5e01";
              this.maskNode.active = false;
            } else {
              this.rewardLabel.string = "";
              this.maskNode.active = false;
            }
          }
          this.checkAnimation() ? this.play() : this.stop();
          this.refreshCD();
        }
        refreshCD() {
          if (this.data && this.data.webData && this.data.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.Video) {
            let time = utils_1.utils.getLocalStorage("nextVideoAvailableTime");
            this.nextVideoAvailableTime = null != time ? Number(time) : 0;
          }
        }
        updateCD() {
          if (this.data && this.data.webData && this.data.webData.reward_type == lobby_types_1.lobby_types.RewardWebType.Video && false == this.maskNode.active && false == this.animation.node.active) {
            let currentTime = new Date().getTime();
            if (currentTime > this.nextVideoAvailableTime) this.timeNode.active = false; else {
              this.timeNode.active = true;
              let interval = Math.floor((this.nextVideoAvailableTime - currentTime) / 1e3);
              let min = Math.floor(interval / 60);
              let sec = interval % 60;
              this.timeLabel.string = String(min) + ":" + (sec < 10 ? "0" + String(sec) : String(sec));
            }
          } else this.timeNode.active = false;
        }
        update(dt) {
          this.updateCD();
        }
        checkAnimation() {
          if (null == this.data) return false;
          if (this.data.type == lobby_types_1.lobby_types.RewardWebType.Invite) return 1 == this.data.webData.unreceive;
          if (this.data.jumpOther) return false;
          if (this.maskNode.active) return false;
          return lobby_framework_1.lobby_framework.get_local_task(this.data.type);
        }
        onItemBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          !this.data.jumpOther && lobby_framework_1.lobby_framework.get_local_task(this.data.type) ? lobby_framework_1.lobby_framework.check_get_local_task_reward(this.data.type) : lobby_framework_1.lobby_framework.do_task(this.data.type);
        }
        play() {
          this._playAnimation = true;
          if (null != this.animation && this.animation.getClips().length > 0) {
            this.animation.node.active = true;
            this.animation.stop();
            this.animation.play("main");
          }
        }
        stop() {
          this._playAnimation = false;
          if (this.animation) {
            this.animation.stop();
            this.animation.node.active = false;
          }
        }
      };
      __decorate([ property(cc.Sprite) ], TaskBoardItem.prototype, "titleImage", void 0);
      __decorate([ property(cc.Sprite) ], TaskBoardItem.prototype, "image", void 0);
      __decorate([ property(cc.Label) ], TaskBoardItem.prototype, "rewardLabel", void 0);
      __decorate([ property(cc.Button) ], TaskBoardItem.prototype, "btn", void 0);
      __decorate([ property(cc.Node) ], TaskBoardItem.prototype, "dataNode", void 0);
      __decorate([ property(cc.Node) ], TaskBoardItem.prototype, "emptyNode", void 0);
      __decorate([ property(cc.Node) ], TaskBoardItem.prototype, "maskNode", void 0);
      __decorate([ property(cc.Animation) ], TaskBoardItem.prototype, "animation", void 0);
      __decorate([ property(cc.Node) ], TaskBoardItem.prototype, "timeNode", void 0);
      __decorate([ property(cc.Label) ], TaskBoardItem.prototype, "timeLabel", void 0);
      TaskBoardItem = __decorate([ ccclass ], TaskBoardItem);
      return TaskBoardItem;
    })();
    exports.default = TaskBoardItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  TaskBoard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ab914/jolFHCIy+shxbJU7B", "TaskBoard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const PopWindow_1 = require("./PopWindow");
    const TaskBoardItem_1 = require("./TaskBoardItem");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const lobby_types_1 = require("../Framework/lobby/lobby_types");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let displayRewardList = [ {
      webtype: lobby_types_1.lobby_types.RewardWebType.Invite,
      jumpOther: true,
      title_img: "Task-label_invite",
      img: "Task-img_invite"
    }, {
      webtype: lobby_types_1.lobby_types.RewardWebType.AddFavorite,
      jumpOther: false,
      title_img: "Task-label_addfavorite",
      img: "Task-img_addfavorite"
    }, {
      webtype: lobby_types_1.lobby_types.RewardWebType.Video,
      jumpOther: false,
      title_img: "Task-label_video",
      img: "Task-img_video"
    }, {
      webtype: lobby_types_1.lobby_types.RewardWebType.Share,
      jumpOther: true,
      title_img: "Task-label_share",
      img: "Task-img_share"
    } ];
    let TaskBoard = (() => {
      let TaskBoard = class TaskBoard extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.itemRoot = null;
          this.itemPrefab = null;
          this.layout = null;
          this.closeBtn = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "TaskBoard", "onCloseBtnClicked");
        }
        onEnable() {
          utils_1.utils.on("OnShow", this, this.onEventOnShow);
          utils_1.utils.on("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        onDisable() {
          utils_1.utils.off("OnShow", this, this.onEventOnShow);
          utils_1.utils.off("TaskboardDataUpdated", this, this.onEventTaskboardDataUpdated);
        }
        onShow() {
          this.fetchData();
        }
        onEventOnShow() {
          this.fetchData();
        }
        onEventTaskboardDataUpdated() {
          this.refresh();
        }
        fetchData() {
          lobby_framework_1.lobby_framework.refresh_taskboard_data(true);
        }
        refresh() {
          this.itemRoot.removeAllChildren();
          if (utils_1.utils.is_huawei()) {
            displayRewardList = displayRewardList.filter(x => x.webtype == lobby_types_1.lobby_types.RewardWebType.Share);
            displayRewardList[0].title_img = "Task-label_sign";
          } else if (utils_1.utils.is_baidu()) displayRewardList = [ {
            webtype: lobby_types_1.lobby_types.RewardWebType.Video,
            jumpOther: false,
            title_img: "Task-label_video",
            img: "Task-img_video"
          }, {
            webtype: lobby_types_1.lobby_types.RewardWebType.Share,
            jumpOther: false,
            title_img: "Task-label_sign",
            img: "Task-img_share"
          } ]; else if (utils_1.utils.is_oppo()) displayRewardList = [ {
            webtype: lobby_types_1.lobby_types.RewardWebType.AddFavorite,
            jumpOther: false,
            title_img: "Task-label_addfavorite",
            img: "Task-img_addfavorite"
          }, {
            webtype: lobby_types_1.lobby_types.RewardWebType.Video,
            jumpOther: false,
            title_img: "Task-label_video",
            img: "Task-img_video"
          }, {
            webtype: lobby_types_1.lobby_types.RewardWebType.Share,
            jumpOther: false,
            title_img: "Task-label_sign",
            img: "Task-img_share"
          } ]; else if (utils_1.utils.is_mi()) displayRewardList = [ {
            webtype: lobby_types_1.lobby_types.RewardWebType.AddFavorite,
            jumpOther: false,
            title_img: "Task-label_addfavorite",
            img: "Task-img_addfavorite"
          }, {
            webtype: lobby_types_1.lobby_types.RewardWebType.Video,
            jumpOther: false,
            title_img: "Task-label_video",
            img: "Task-img_video"
          }, {
            webtype: lobby_types_1.lobby_types.RewardWebType.Share,
            jumpOther: false,
            title_img: "Task-label_sign",
            img: "Task-img_share"
          } ]; else if (utils_1.utils.is_qq()) {
            displayRewardList = displayRewardList.filter(x => x.webtype == lobby_types_1.lobby_types.RewardWebType.Share);
            displayRewardList[0].title_img = "Task-label_sign";
          } else if (utils_1.utils.is_wechat()) {
            displayRewardList.filter(x => x.webtype == lobby_types_1.lobby_types.RewardWebType.Share)[0].title_img = "Task-label_sign";
            displayRewardList = displayRewardList.filter(x => x.webtype != lobby_types_1.lobby_types.RewardWebType.Invite);
            global_data_1.global_data.check_bind_wechat() ? displayRewardList = displayRewardList.filter(x => x.webtype != lobby_types_1.lobby_types.RewardWebType.BindWechat) : 0 == displayRewardList.filter(x => x.webtype == lobby_types_1.lobby_types.RewardWebType.BindWechat).length && displayRewardList.push({
              webtype: lobby_types_1.lobby_types.RewardWebType.BindWechat,
              jumpOther: false,
              title_img: "Task-label_bindwechat",
              img: "Task-img_bindwechat"
            });
          }
          let displayOrder = [];
          for (let i = 0; i < displayRewardList.length; ++i) {
            let item = displayRewardList[i];
            lobby_framework_1.lobby_framework.check_task_board_item_available(item.webtype) && displayOrder.push(item);
          }
          for (let i = 0; i < 8; ++i) {
            let item = utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, TaskBoardItem_1.default);
            if (i < displayOrder.length) {
              let d = global_data_1.global_data.get_taskboard_item_data(displayOrder[i].webtype);
              d || (d = new lobby_types_1.lobby_types.TaskBoardItemData());
              d.type = displayOrder[i].webtype;
              d.titleImage = displayOrder[i].title_img;
              d.image = displayOrder[i].img;
              d.jumpOther = displayOrder[i].jumpOther;
              item.setData(d);
            } else item.setData(null);
          }
        }
        getDataByType(type) {
          let data = global_data_1.global_data.taskboard_data;
          for (let i = 0; i < data.items.length; ++i) if (data.items[i].webData.reward_type == type) return data.items[i];
          return null;
        }
        onCloseBtnClicked(event) {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
      };
      __decorate([ property(cc.Node) ], TaskBoard.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], TaskBoard.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Layout) ], TaskBoard.prototype, "layout", void 0);
      __decorate([ property(cc.Button) ], TaskBoard.prototype, "closeBtn", void 0);
      TaskBoard = __decorate([ ccclass ], TaskBoard);
      return TaskBoard;
    })();
    exports.default = TaskBoard;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/lobby_types": "lobby_types",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow",
    "./TaskBoardItem": "TaskBoardItem"
  } ],
  TaskItemNew: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "175a9dcAHZPIYzNs2xOzQIA", "TaskItemNew");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskItemNew = (() => {
      let TaskItemNew = class TaskItemNew extends cc.Component {
        constructor() {
          super(...arguments);
          this.taskText = null;
          this.logo = null;
          this.progress = null;
          this.progressText = null;
          this.rewardText = null;
          this.doButtonText = null;
          this.doButton = null;
          this.getButton = null;
          this.logoList = [];
          this.data = null;
          this.type = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.doButton, this.node, "TaskItemNew", "onDoButtonClicked");
          utils_1.utils.bind_button_event(this.getButton, this.node, "TaskItemNew", "onGetButtonClicked");
        }
        onDestroy() {}
        onDoButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "doTaskClicked", this.data);
        }
        onGetButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "getTaskClicked", this.data);
        }
        getData() {
          return this.data;
        }
        setData(data, taskType) {
          this.data = data;
          this.type = taskType;
          this.taskText.string = data.task_name;
          this.progressText.string = data.curr_count + "/" + data.complete_count;
          this.progress.progress = data.curr_count / data.complete_count;
          this.rewardText.string = data.reward_name.replace("\\\\n", ",").replace("\\n", ",").replace("\\n", ",").replace("\\n", ",");
          utils_1.utils.load_web_task_spriteframe(this.logo, data.task_logo_url);
          this.doButton.node.active = false;
          this.getButton.node.active = false;
          if (1 == data.status) {
            this.doButton.node.active = true;
            this.doButtonText.string = "" == data.btn_name ? "\u505a\u4efb\u52a1" : data.btn_name;
          } else 2 == data.status ? this.getButton.node.active = true : 4 == data.status && (this.node.active = false);
        }
      };
      __decorate([ property(cc.Label) ], TaskItemNew.prototype, "taskText", void 0);
      __decorate([ property(cc.Sprite) ], TaskItemNew.prototype, "logo", void 0);
      __decorate([ property(cc.ProgressBar) ], TaskItemNew.prototype, "progress", void 0);
      __decorate([ property(cc.Label) ], TaskItemNew.prototype, "progressText", void 0);
      __decorate([ property(cc.Label) ], TaskItemNew.prototype, "rewardText", void 0);
      __decorate([ property(cc.Label) ], TaskItemNew.prototype, "doButtonText", void 0);
      __decorate([ property(cc.Button) ], TaskItemNew.prototype, "doButton", void 0);
      __decorate([ property(cc.Button) ], TaskItemNew.prototype, "getButton", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], TaskItemNew.prototype, "logoList", void 0);
      TaskItemNew = __decorate([ ccclass ], TaskItemNew);
      return TaskItemNew;
    })();
    exports.default = TaskItemNew;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  TaskItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "37cffHVXcFKK57JuVfOMlX3", "TaskItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskItem = (() => {
      let TaskItem = class TaskItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.taskText = null;
          this.itemButton = null;
          this.logo = null;
          this.descNode = null;
          this.descText = null;
          this.progress = null;
          this.progressText = null;
          this.rewardText = null;
          this.doButton = null;
          this.doneButton = null;
          this.getButton = null;
          this.logoList = [];
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.itemButton, this.node, "TaskItem", "onItemButtonClicked");
          utils_1.utils.bind_button_event(this.doButton, this.node, "TaskItem", "onDoButtonClicked");
          utils_1.utils.bind_button_event(this.doneButton, this.node, "TaskItem", "onDoneButtonClicked");
          utils_1.utils.bind_button_event(this.getButton, this.node, "TaskItem", "onGetButtonClicked");
          utils_1.utils.on("TaskItemDataUpdated", this, this.onEventTaskItemDataUpdated);
        }
        onDestroy() {
          utils_1.utils.off("TaskItemDataUpdated", this, this.onEventTaskItemDataUpdated);
        }
        onEventTaskItemDataUpdated(old_id, new_id) {
          if (this.data.task_id == old_id) {
            let list = global_data_1.global_data.task_data.filter(x => x.task_id == new_id);
            list.length > 0 && this.setData(list[0]);
            utils_1.utils.send("RefreshTaskButtonRedPoint");
          }
        }
        onItemButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "doItemClicked", this.data);
        }
        onDoButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "doTaskClicked", this.data);
        }
        onDoneButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "doneTaskClicked", this.data);
        }
        onGetButtonClicked(event) {
          sound_manager_1.sound_manager.play_click();
          utils_1.utils.dispatchEvent(this.node, "getTaskClicked", this.data);
        }
        getData() {
          return this.data;
        }
        hideDesc() {
          this.descNode.active = false;
        }
        showDesc() {
          this.descNode.active = true;
        }
        toggleDesc() {
          this.descNode.active = !this.descNode.active;
        }
        getTaskSpriteByName(name) {
          let sp = this.logoList.filter(x => x.name + ".png" == "Tasks-" + name);
          if (sp && sp.length > 0) return sp[0];
          return null;
        }
        setData(data) {
          this.data = data;
          this.taskText.string = data.task_name;
          this.descNode.active = false;
          this.descText.string = data.task_desc;
          this.progressText.string = data.curr_count + "/" + data.complete_count + data.units;
          this.progress.progress = data.curr_count / data.complete_count;
          this.rewardText.string = data.reward_name.replace("\\\\n", "\n").replace("\\n", "\n");
          this.logo.spriteFrame = this.getTaskSpriteByName(data.task_logo_url);
          this.doButton.node.active = false;
          this.doneButton.node.active = false;
          this.getButton.node.active = false;
          1 == data.status ? this.doButton.node.active = true : 2 == data.status ? this.getButton.node.active = true : 4 == data.status && (this.doneButton.node.active = true);
        }
      };
      __decorate([ property(cc.Label) ], TaskItem.prototype, "taskText", void 0);
      __decorate([ property(cc.Button) ], TaskItem.prototype, "itemButton", void 0);
      __decorate([ property(cc.Sprite) ], TaskItem.prototype, "logo", void 0);
      __decorate([ property(cc.Node) ], TaskItem.prototype, "descNode", void 0);
      __decorate([ property(cc.Label) ], TaskItem.prototype, "descText", void 0);
      __decorate([ property(cc.ProgressBar) ], TaskItem.prototype, "progress", void 0);
      __decorate([ property(cc.Label) ], TaskItem.prototype, "progressText", void 0);
      __decorate([ property(cc.Label) ], TaskItem.prototype, "rewardText", void 0);
      __decorate([ property(cc.Button) ], TaskItem.prototype, "doButton", void 0);
      __decorate([ property(cc.Button) ], TaskItem.prototype, "doneButton", void 0);
      __decorate([ property(cc.Button) ], TaskItem.prototype, "getButton", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], TaskItem.prototype, "logoList", void 0);
      TaskItem = __decorate([ ccclass ], TaskItem);
      return TaskItem;
    })();
    exports.default = TaskItem;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  TaskLayoutNew: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ae8c1qe7ctIcbW9tqGdnyxo", "TaskLayoutNew");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const TaskTabToggle_1 = require("./TaskTabToggle");
    const TaskItemNew_1 = require("./TaskItemNew");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskLayoutNew = (() => {
      let TaskLayoutNew = class TaskLayoutNew extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.closeBtn_l = null;
          this.taskListNode = null;
          this.notaskNode = null;
          this.weekTip = null;
          this.dayTip = null;
          this.tipText = null;
          this.taskTabScrollView = null;
          this.taskTabPrefab = null;
          this.taskTabRoot = null;
          this.taskItemScrollView = null;
          this.taskItemPrefab = null;
          this.taskItemRoot = null;
          this.goldLabel = null;
          this.exchangeLabel = null;
          this.taskType = 0;
          this.defaultTab = null;
          this.currentTab = null;
          this.currentTabData = null;
          this.rewardTabs = [];
          this.currentDataStatuslist = [];
          this.DataStatuslist = [];
        }
        onLoad() {
          this.safe_on("taskTabClick", this.onSwitchTab, this);
          this.safe_on("doTaskClicked", this.onDoTaskClicked, this);
          this.safe_on("getTaskClicked", this.onGetTaskClicked, this);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "TaskLayoutNew", "OnCloseClicked");
          utils_1.utils.bind_button_event(this.closeBtn_l, this.node, "TaskLayoutNew", "OnCloseClicked");
          utils_1.utils.on("RefreshNewTaskData", this, this.onEventTaskDataUpdated);
        }
        start() {
          this.refreshGold();
          this.refreshExchange();
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refreshGold);
          utils_1.utils.on("UserUpdate", this, this.refreshExchange);
          this.currentTabData = null;
          utils_1.utils.show_loading("", true, false);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refreshGold);
        }
        onDestroy() {
          utils_1.utils.off("RefreshNewTaskData", this, this.onEventTaskDataUpdated);
          utils_1.utils.off("UserUpdate", this, this.refreshExchange);
        }
        onEventTaskDataUpdated() {
          let _find = false;
          null != this.currentTabData && (_find = this.currentTabData.some(value => 4 != value.status));
          null != this.currentTab && (this.taskType = this.currentTab.getComponent(TaskTabToggle_1.default).type);
          if (null != this.currentTabData && _find) this.currentTab.dispatchEvent(new cc.Event.EventCustom("taskTabClick", true)); else if (null == this.currentTabData || _find || this.taskType == TaskTabToggle_1.TaskType.GrowUpTask) {
            this.clearAllItemButtons();
            this.clearAllTabButtons();
            this.defaultTab = null;
            let _first_tab = global_data_1.global_data.new_task_data.forever_tasks.length > 0;
            let _second_tab = !_first_tab;
            let new_task_data = global_data_1.global_data.new_task_data;
            this.getRewardTabs(new_task_data);
            if (null != new_task_data.forever_tasks && new_task_data.forever_tasks.length > 0) {
              let _find_task_growth = new_task_data.forever_tasks.some(value => 4 != value.status);
              _find_task_growth && this.addTab(new_task_data.forever_tasks, TaskTabToggle_1.TaskType.GrowUpTask, _first_tab);
            }
            null != new_task_data.day_tasks && this.addTab(new_task_data.day_tasks, TaskTabToggle_1.TaskType.DayTask, _second_tab);
            null != new_task_data.week_tasks && this.addTab(new_task_data.week_tasks, TaskTabToggle_1.TaskType.WeekTask, false);
            this.defaultTab && this.defaultTab.node.dispatchEvent(new cc.Event.EventCustom("taskTabClick", true));
          } else this.currentTab.dispatchEvent(new cc.Event.EventCustom("taskTabClick", true));
        }
        addTab(data, taskType, first_tab = false) {
          var tab = utils_1.utils.add_instance_to_root(this.taskTabPrefab, this.taskTabRoot, TaskTabToggle_1.default);
          tab.setData(data, taskType, first_tab);
          if (null == this.defaultTab) if (this.rewardTab.find) {
            if (this.rewardTab.type == taskType) {
              this.defaultTab = tab;
              this.defaultTab.getComponent(cc.Toggle).check();
            }
          } else {
            this.defaultTab = tab;
            this.defaultTab.getComponent(cc.Toggle).check();
          }
          return tab;
        }
        onSwitchTab(event) {
          let tab = event.target.getComponent(TaskTabToggle_1.default);
          let data = tab.getData();
          let type = tab.getType();
          this.recordDataStautsList(data);
          let change = this.compareStatus();
          if (this.currentTabData != data || change) {
            this.taskListNode.active = true;
            this.notaskNode.active = false;
            this.disableAllItemButtons();
            let haveTask = data.some(value => 4 != value.status);
            if (data && haveTask) {
              this.currentTab = tab.node;
              this.addItems(data, type);
            } else {
              this.taskListNode.active = false;
              this.dayTip.node.active = false;
              this.weekTip.node.active = false;
              this.notaskNode.active = true;
              type == TaskTabToggle_1.TaskType.DayTask ? this.dayTip.node.active = true : type == TaskTabToggle_1.TaskType.WeekTask && (this.weekTip.node.active = true);
            }
            type == TaskTabToggle_1.TaskType.DayTask ? this.tipText.string = "\u6bcf\u65e524\u70b9\u91cd\u7f6e" : type == TaskTabToggle_1.TaskType.WeekTask ? this.tipText.string = "\u6bcf\u546824\u70b9\u91cd\u7f6e" : this.tipText.string = "";
            this.currentTabData = data;
            this.recordCurrentDataStautsList(this.currentTabData);
            this.taskItemScrollView.scrollToTop(.01, true);
            utils_1.utils.hide_loading();
          }
          event.stopPropagation();
        }
        recordCurrentDataStautsList(data) {
          this.currentDataStatuslist = [];
          data.forEach(v => {
            this.currentDataStatuslist.push(v.status);
          });
        }
        recordDataStautsList(data) {
          this.DataStatuslist = [];
          data.forEach(v => {
            this.DataStatuslist.push(v.status);
          });
        }
        compareStatus() {
          if (this.currentDataStatuslist.length != this.DataStatuslist.length) return true;
          for (let index = 0; index < this.currentDataStatuslist.length; index++) if (this.currentDataStatuslist[index] != this.DataStatuslist[index]) return true;
          return false;
        }
        addItems(data, taskType) {
          let count = this.taskItemRoot.childrenCount;
          var btn = null;
          for (let i = 0; i < data.length; i++) {
            if (i < count) {
              this.taskItemRoot.children[i].active = true;
              btn = this.taskItemRoot.children[i].getComponent(TaskItemNew_1.default);
            } else btn = utils_1.utils.add_instance_to_root(this.taskItemPrefab, this.taskItemRoot, TaskItemNew_1.default);
            null != data[i] && btn.setData(data[i], taskType);
          }
        }
        getRewardTabs(new_task_data) {
          this.rewardTabs = [];
          if (new_task_data.forever_tasks.length > 0) {
            let find_growth_reward = new_task_data.forever_tasks.some(data => 2 == data.status);
            this.rewardTabs.push({
              type: TaskTabToggle_1.TaskType.GrowUpTask,
              find: find_growth_reward
            });
          }
          if (new_task_data.day_tasks.length > 0) {
            let find_day_reward = new_task_data.day_tasks.some(data => 2 == data.status);
            this.rewardTabs.push({
              type: TaskTabToggle_1.TaskType.DayTask,
              find: find_day_reward
            });
          }
          if (new_task_data.week_tasks.length > 0) {
            let find_week_reward = new_task_data.week_tasks.some(data => 2 == data.status);
            this.rewardTabs.push({
              type: TaskTabToggle_1.TaskType.WeekTask,
              find: find_week_reward
            });
          }
          this.rewardTab = this.findRewardTab();
        }
        findRewardTab() {
          if (this.rewardTabs.length > 0) {
            let finds = this.rewardTabs.filter(value => true == value.find);
            if (finds && finds.length > 0) return finds[0];
          }
          return {
            type: -1,
            find: false
          };
        }
        clearAllItemButtons() {
          this.taskItemRoot.removeAllChildren();
        }
        disableAllItemButtons() {
          let count = this.taskItemRoot.childrenCount;
          if (count > 0) for (let i = 0; i < count; i++) this.taskItemRoot.children[i].active = false;
        }
        clearAllTabButtons() {
          this.taskTabRoot.removeAllChildren();
        }
        OnCloseClicked() {
          this.clearAllItemButtons();
          this.clearAllTabButtons();
          this.notaskNode.active = false;
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onDoTaskClicked(event) {
          if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) {
            let data = event.target.getComponent(TaskItemNew_1.default).data;
            let cmd = data.task_url;
            if (cc.isValid(AppGlobal_1.AppGlobal.getInstance().lobbyMain)) {
              lobby_framework_1.lobby_framework.do_command(cmd, "");
              this.hide();
            }
          } else utils_1.utils.show_hint("\u5f53\u524d\u6b63\u5728\u6e38\u620f\u4e2d\uff0c\u65e0\u6cd5\u79bb\u5f00\u672c\u623f\u95f4");
        }
        onGetTaskClicked(event) {
          let data = event.target.getComponent(TaskItemNew_1.default).data;
          lobby_framework_1.lobby_framework.get_new_task_reward(data);
        }
        refreshGold() {
          this.goldLabel.string = global_data_1.global_data.get_the_user_data()._long_gold.toString();
        }
        refreshExchange() {
          let n = global_data_1.global_data.get_prop_count_by_id(global_define_1.CONST.ID_PROP_LOTTER);
          this.exchangeLabel.string = utils_1.utils.format_gold_string(n);
        }
        fetchData() {
          this.fillData();
        }
        fillData() {
          lobby_framework_1.lobby_framework.fetch_new_task_data();
        }
      };
      __decorate([ property(cc.Button) ], TaskLayoutNew.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Button) ], TaskLayoutNew.prototype, "closeBtn_l", void 0);
      __decorate([ property(cc.Node) ], TaskLayoutNew.prototype, "taskListNode", void 0);
      __decorate([ property(cc.Node) ], TaskLayoutNew.prototype, "notaskNode", void 0);
      __decorate([ property(cc.Sprite) ], TaskLayoutNew.prototype, "weekTip", void 0);
      __decorate([ property(cc.Sprite) ], TaskLayoutNew.prototype, "dayTip", void 0);
      __decorate([ property(cc.Label) ], TaskLayoutNew.prototype, "tipText", void 0);
      __decorate([ property(cc.ScrollView) ], TaskLayoutNew.prototype, "taskTabScrollView", void 0);
      __decorate([ property(cc.Prefab) ], TaskLayoutNew.prototype, "taskTabPrefab", void 0);
      __decorate([ property(cc.Node) ], TaskLayoutNew.prototype, "taskTabRoot", void 0);
      __decorate([ property(cc.ScrollView) ], TaskLayoutNew.prototype, "taskItemScrollView", void 0);
      __decorate([ property(cc.Prefab) ], TaskLayoutNew.prototype, "taskItemPrefab", void 0);
      __decorate([ property(cc.Node) ], TaskLayoutNew.prototype, "taskItemRoot", void 0);
      __decorate([ property(cc.Label) ], TaskLayoutNew.prototype, "goldLabel", void 0);
      __decorate([ property(cc.Label) ], TaskLayoutNew.prototype, "exchangeLabel", void 0);
      TaskLayoutNew = __decorate([ ccclass ], TaskLayoutNew);
      return TaskLayoutNew;
    })();
    exports.default = TaskLayoutNew;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow",
    "./TaskItemNew": "TaskItemNew",
    "./TaskTabToggle": "TaskTabToggle"
  } ],
  TaskLayout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9c0aceT68BFxbka0W0/VwNL", "TaskLayout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const PopWindow_1 = require("./PopWindow");
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const TaskItem_1 = require("./TaskItem");
    const global_data_1 = require("../Framework/lobby/global_data");
    const utils_1 = require("../Framework/common/utils");
    const global_define_1 = require("../Framework/lobby/global_define");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TaskLayout = (() => {
      let TaskLayout = class TaskLayout extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.closeBtn = null;
          this.taskListNode = null;
          this.notaskNode = null;
          this.taskItemScrollView = null;
          this.taskItemPrefab = null;
          this.taskItemRoot = null;
        }
        onLoad() {
          this.safe_on("doItemClicked", this.onDoItemClicked, this);
          this.safe_on("doTaskClicked", this.onDoTaskClicked, this);
          this.safe_on("doneTaskClicked", this.onDoneTaskClicked, this);
          this.safe_on("getTaskClicked", this.onGetTaskClicked, this);
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "TaskLayout", "OnCloseClicked");
          this.taskItemRoot.removeAllChildren();
          utils_1.utils.on("TaskDataUpdated", this, this.onEventTaskDataUpdated);
        }
        onDestroy() {
          utils_1.utils.off("TaskDataUpdated", this, this.onEventTaskDataUpdated);
        }
        onEventTaskDataUpdated() {
          let i = 0;
          let that = this;
          global_data_1.global_data.task_data.forEach(element => {
            if (i < that.taskItemRoot.childrenCount) {
              let taskItem = that.taskItemRoot.children[i].getComponent(TaskItem_1.default);
              taskItem.node.active = true;
              taskItem.setData(element);
            } else {
              let taskItem = utils_1.utils.add_instance_to_root(that.taskItemPrefab, that.taskItemRoot, TaskItem_1.default);
              taskItem.setData(element);
            }
            i++;
          });
          for (let j = i; j < that.taskItemRoot.childrenCount; ++j) that.taskItemRoot.children[j].active = false;
          this.taskItemScrollView.scrollToTop(.01);
        }
        OnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        onDoItemClicked(event) {
          let item = event.target.getComponent(TaskItem_1.default);
          this.taskItemRoot.children.filter(x => x != item.node).forEach(x => {
            x.getComponent(TaskItem_1.default).hideDesc();
          });
          item.toggleDesc();
        }
        onDoTaskClicked(event) {
          if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) {
            let data = event.target.getComponent(TaskItem_1.default).data;
            console.log("onDoTaskClicked", data);
            let cmd = data.task_url;
            if (cc.isValid(AppGlobal_1.AppGlobal.getInstance().lobbyMain)) {
              lobby_framework_1.lobby_framework.do_command(cmd, "");
              this.hide();
            }
          } else utils_1.utils.show_hint("\u5f53\u524d\u6b63\u5728\u6e38\u620f\u4e2d\uff0c\u65e0\u6cd5\u4f7f\u7528\u8be5\u529f\u80fd\u54df~");
        }
        onDoneTaskClicked(event) {
          let data = event.target.getComponent(TaskItem_1.default).data;
          console.log("onDoneTaskClicked", data);
        }
        onGetTaskClicked(event) {
          let data = event.target.getComponent(TaskItem_1.default).data;
          console.log("onGetTaskClicked", data);
          lobby_framework_1.lobby_framework.get_task_reward(data);
        }
        fetchData() {
          this.fillData();
        }
        fillData() {
          lobby_framework_1.lobby_framework.fetch_task_data();
        }
      };
      __decorate([ property(cc.Button) ], TaskLayout.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], TaskLayout.prototype, "taskListNode", void 0);
      __decorate([ property(cc.Node) ], TaskLayout.prototype, "notaskNode", void 0);
      __decorate([ property(cc.ScrollView) ], TaskLayout.prototype, "taskItemScrollView", void 0);
      __decorate([ property(cc.Prefab) ], TaskLayout.prototype, "taskItemPrefab", void 0);
      __decorate([ property(cc.Node) ], TaskLayout.prototype, "taskItemRoot", void 0);
      TaskLayout = __decorate([ ccclass ], TaskLayout);
      return TaskLayout;
    })();
    exports.default = TaskLayout;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/global_define": "global_define",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager",
    "./PopWindow": "PopWindow",
    "./TaskItem": "TaskItem"
  } ],
  TaskTabToggle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "554falR9q9FOZoaHvIrm99/", "TaskTabToggle");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TaskType = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var TaskType;
    (function(TaskType) {
      TaskType[TaskType["GrowUpTask"] = 0] = "GrowUpTask";
      TaskType[TaskType["DayTask"] = 1] = "DayTask";
      TaskType[TaskType["WeekTask"] = 2] = "WeekTask";
    })(TaskType = exports.TaskType || (exports.TaskType = {}));
    let TaskTabToggle = (() => {
      let TaskTabToggle = class TaskTabToggle extends cc.Component {
        constructor() {
          super(...arguments);
          this.disableSprite = null;
          this.enableSprite = null;
          this.disableSprite_label = null;
          this.enableSprite_label = null;
          this.redSprite = null;
          this.tabSprites = [];
          this.lableSprites = [];
          this.index = -1;
          this.type = 0;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.getComponent(cc.Toggle), this.node, "TaskTabToggle", "OnTabClicked");
        }
        onEnable() {}
        start() {
          utils_1.utils.on("RefreshTaskButtonRedPoint", this, this.onEventRedPoint);
          this.onEventRedPoint();
        }
        onDestroy() {
          utils_1.utils.off("RefreshTaskButtonRedPoint", this, this.onEventRedPoint);
        }
        onEventRedPoint() {
          null != this.data && (this.redSprite.node.active = this.data.some(x => 2 == x.status));
        }
        OnTabClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("taskTabClick", true));
        }
        setData(data, taskType, first_button) {
          this.data = data;
          this.type = taskType;
          if (first_button) {
            this.enableSprite.spriteFrame = this.tabSprites[1];
            this.disableSprite.spriteFrame = this.tabSprites[0];
          } else {
            this.enableSprite.spriteFrame = this.tabSprites[3];
            this.disableSprite.spriteFrame = this.tabSprites[2];
          }
          if (taskType == TaskType.GrowUpTask) {
            this.disableSprite_label.spriteFrame = this.lableSprites[0];
            this.enableSprite_label.spriteFrame = this.lableSprites[1];
          } else if (taskType == TaskType.DayTask) {
            this.disableSprite_label.spriteFrame = this.lableSprites[2];
            this.enableSprite_label.spriteFrame = this.lableSprites[3];
          } else if (taskType == TaskType.WeekTask) {
            this.disableSprite_label.spriteFrame = this.lableSprites[4];
            this.enableSprite_label.spriteFrame = this.lableSprites[5];
          }
        }
        getData() {
          return this.data;
        }
        getType() {
          return this.type;
        }
        getResName() {
          return "";
        }
      };
      __decorate([ property(cc.Sprite) ], TaskTabToggle.prototype, "disableSprite", void 0);
      __decorate([ property(cc.Sprite) ], TaskTabToggle.prototype, "enableSprite", void 0);
      __decorate([ property(cc.Sprite) ], TaskTabToggle.prototype, "disableSprite_label", void 0);
      __decorate([ property(cc.Sprite) ], TaskTabToggle.prototype, "enableSprite_label", void 0);
      __decorate([ property(cc.Sprite) ], TaskTabToggle.prototype, "redSprite", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], TaskTabToggle.prototype, "tabSprites", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], TaskTabToggle.prototype, "lableSprites", void 0);
      TaskTabToggle = __decorate([ ccclass ], TaskTabToggle);
      return TaskTabToggle;
    })();
    exports.default = TaskTabToggle;
    cc._RF.pop();
  }, {
    "../Framework/common/utils": "utils",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  Test: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4f0229kxY9NxqnlCJnrUp+U", "Test");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let Test = (() => {
      let Test = class Test extends cc.Component {
        onLoad() {}
        start() {
          bind_function_1.bf.init_game_chat([ "AAA", "BBB", "CCC", "DDD", "EEE", "FFF", "GGG", "HHH", "III", "JJJ", "KKK" ]);
        }
        onBtnClick0() {
          AppGlobal_1.AppGlobal.getInstance().showGameUserInfo(false, 0, null, null, null);
        }
        onBtnClick1() {
          AppGlobal_1.AppGlobal.getInstance().gameChat.appendChatRecord("onBtnClick1");
        }
        onBtnClick2() {
          AppGlobal_1.AppGlobal.getInstance().gameChat.appendChatRecord("onBtnClick2");
        }
        onBtnClick3() {
          AppGlobal_1.AppGlobal.getInstance().gameChat.appendChatRecord("onBtnClick3");
        }
        onBtnClick4() {
          AppGlobal_1.AppGlobal.getInstance().gameChat.appendChatRecord("onBtnClick4");
        }
      };
      Test = __decorate([ ccclass ], Test);
      return Test;
    })();
    exports.default = Test;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../AppGlobal": "AppGlobal"
  } ],
  TouchLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a8664nyPhhCDrXTEIK+5f+W", "TouchLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TouchLayer = (() => {
      let TouchLayer = class TouchLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.effect = null;
        }
        onLoad() {
          this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBg, this);
        }
        onTouchBg(event) {
          this.loadAndPlayEffect(this.node.convertToNodeSpaceAR(event.touch.getLocation()));
          sound_manager_1.sound_manager.play_sound("resources/Sound/touch.mp3", false);
          this.node._touchListener.setSwallowTouches(false);
          return false;
        }
        loadAndPlayEffect(pos) {
          let that = this;
          cc.isValid(this.effect) ? that.playEffect(pos) : cc.resources.load("Prefab/CustomLobby/TouchParticle", cc.Prefab, (err, prefab) => {
            that.effect = prefab;
            that.playEffect(pos);
          });
        }
        playEffect(pos) {
          if (cc.isValid(this.effect)) {
            let e = cc.instantiate(this.effect);
            e.setParent(this.node);
            e.setPosition(pos);
            setTimeout(() => {
              cc.isValid(e) && e.destroy();
            }, 3e3);
          }
        }
      };
      TouchLayer = __decorate([ ccclass ], TouchLayer);
      return TouchLayer;
    })();
    exports.default = TouchLayer;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  TutorialMask: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cff92nw1PZNmqjsPwIiCf7z", "TutorialMask");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let TutorialMask = (() => {
      let TutorialMask = class TutorialMask extends cc.Component {
        constructor() {
          super(...arguments);
          this.mask = null;
          this.bgButton = null;
          this.maskButton = null;
          this.handNode = null;
          this.textNode = null;
          this.clickTip = null;
          this.text = null;
          this.okButton = null;
          this.jumpButton = null;
          this.teachButton = null;
          this.okButtonLabel = null;
          this.data = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.okButton, this.node, "TutorialMask", "OnOKButtonClicked");
          utils_1.utils.bind_button_event(this.maskButton, this.node, "TutorialMask", "OnMaskButtonClicked");
          utils_1.utils.bind_button_event(this.bgButton, this.node, "TutorialMask", "OnBGButtonClicked");
          utils_1.utils.bind_button_event(this.jumpButton, this.node, "TutorialMask", "OnJumpButtonClicked");
          utils_1.utils.bind_button_event(this.teachButton, this.node, "TutorialMask", "OnTeachButtonClicked");
        }
        onDestroy() {}
        OnOKButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.close(true);
        }
        OnMaskButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.close(true);
        }
        OnJumpButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.close(false);
          this.maskHaveRead();
          utils_1.utils.send("GameTutorialEnd");
        }
        maskHaveRead() {
          utils_1.utils.setLocalStorage("CheckGameTutorialFinished", "1");
          let mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          let mask_id = tutorial_1.tutorial.TutorialID.Game_1_1;
          console.log("mask 111: ", mask);
          while (mask_id <= tutorial_1.tutorial.TutorialID.Game_3_4) {
            mask |= 1 << mask_id;
            mask_id++;
          }
          utils_1.utils.setLocalStorage("TutorialMask", String(mask));
        }
        OnTeachButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          this.close(true);
          utils_1.utils.send("GameTutorialStart");
        }
        OnBGButtonClicked() {
          this.close(true);
        }
        close(show_next = false) {
          this.node.active = false;
          null != tutorial_1.tutorial.soundId && sound_manager_1.sound_manager.stop_sound(tutorial_1.tutorial.soundId);
          if (this.data && -1 != this.data.next_id && show_next) {
            if (this.data.next_id == tutorial_1.tutorial.TutorialID.Lobby_1_3) {
              let find = cc.find("CreateNewPanel/OneRootNode", cc.find("Canvas/LobbyYiFuMain")).active;
              if (!find) return;
            } else this.data.next_id == tutorial_1.tutorial.TutorialID.Lobby_3_2 && utils_1.utils.send("Delay_Interactable_Lobby_3_2");
            tutorial_1.tutorial.show_tutorial(this.data.next_id, this.data.delay_time, this.node.parent);
          } else if (this.data.id == tutorial_1.tutorial.TutorialID.Game_3_4) {
            this.maskHaveRead();
            utils_1.utils.send("GameTutorialEnd");
          }
        }
      };
      __decorate([ property(cc.Node) ], TutorialMask.prototype, "mask", void 0);
      __decorate([ property(cc.Button) ], TutorialMask.prototype, "bgButton", void 0);
      __decorate([ property(cc.Button) ], TutorialMask.prototype, "maskButton", void 0);
      __decorate([ property(cc.Node) ], TutorialMask.prototype, "handNode", void 0);
      __decorate([ property(cc.Node) ], TutorialMask.prototype, "textNode", void 0);
      __decorate([ property(cc.Node) ], TutorialMask.prototype, "clickTip", void 0);
      __decorate([ property(cc.RichText) ], TutorialMask.prototype, "text", void 0);
      __decorate([ property(cc.Button) ], TutorialMask.prototype, "okButton", void 0);
      __decorate([ property(cc.Button) ], TutorialMask.prototype, "jumpButton", void 0);
      __decorate([ property(cc.Button) ], TutorialMask.prototype, "teachButton", void 0);
      __decorate([ property(cc.Label) ], TutorialMask.prototype, "okButtonLabel", void 0);
      TutorialMask = __decorate([ ccclass ], TutorialMask);
      return TutorialMask;
    })();
    exports.default = TutorialMask;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial"
  } ],
  UserChat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5581c7MJwJMiKT3MVuv0GyQ", "UserChat");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const EmotionPlayer_1 = require("./EmotionPlayer");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let UserChat = (() => {
      let UserChat = class UserChat extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelNode = null;
          this.labelText = null;
          this.emPlayer = null;
          this.labelRollingNode = null;
          this.labelRollingText = null;
          this.maskRolling = null;
          this._playAction = null;
          this._rollingAction = null;
          this._mask_width = 0;
          this._left = false;
        }
        onLoad() {
          this._mask_width = this.maskRolling.node.width;
          this._left = 0 == this.labelRollingText.node.anchorX;
        }
        onBtnClick(event, customEventData) {}
        start() {}
        onEnable() {
          this.labelNode.active = false;
          this.labelRollingNode.active = false;
          this.hideEm();
        }
        init(any_param) {
          this.text_x = any_param.text_x;
          this.text_y = any_param.text_y;
          this.em_x = any_param.em_x;
          this.em_y = any_param.em_y;
          this.em_scale = any_param.em_scale;
          this.direction = any_param.direction;
          this.labelNode.setPosition(this.text_x, this.text_y);
          this.labelRollingNode.setPosition(this.text_x, this.text_y);
          this.emPlayer.node.setPosition(this.em_x, this.em_y);
          this.emPlayer.node.setScale(this.em_scale);
        }
        beginPlay(event, args) {
          this.labelNode.active = true;
        }
        endPlay(event, args) {
          this.labelNode.active = false;
        }
        showChatFor(seconds) {
          this.labelRollingNode.active = false;
          this.labelNode.active = true;
          this._playAction = cc.sequence(cc.callFunc(this.beginPlay, this), cc.delayTime(seconds), cc.callFunc(this.endPlay, this));
          this.node.stopAllActions();
          this.node.runAction(this._playAction);
        }
        showEm(index) {
          this.emPlayer.node.active = true;
          this.emPlayer.play(index);
        }
        hideEm() {
          this.emPlayer.node.active = false;
        }
        showRollingText() {
          let mask_width = this._mask_width;
          let width = this.labelRollingText.node.width;
          let delta = width - mask_width;
          this.labelRollingNode.active = true;
          this.labelNode.active = false;
          let t_begin_delay = 2;
          let t_delay = (width - mask_width) / 100;
          let t_end_delay = 2;
          this._rollingAction = cc.sequence(cc.show(), cc.delayTime(t_begin_delay + t_delay + t_end_delay), cc.hide());
          let from = 0;
          let to = 0;
          if (this._left) {
            from = 0;
            to = -(width - mask_width);
          } else {
            from = width - mask_width;
            to = 0;
          }
          this.labelRollingNode.stopAllActions();
          this.labelRollingNode.runAction(this._rollingAction);
          this.labelRollingText.node.setPosition(from, this.labelRollingText.node.position.y);
          let that = this;
          let textAction = cc.sequence(cc.show(), cc.delayTime(t_begin_delay), cc.moveTo(t_delay, cc.v2(to, that.labelRollingText.node.y)), cc.delayTime(t_end_delay), cc.hide());
          this.labelRollingText.node.stopAllActions();
          this.labelRollingText.node.runAction(textAction);
        }
        play(text) {
          this.labelNode.active = true;
          this.labelText.string = text;
          this.labelText._forceUpdateRenderData(true);
          if (this.labelText.node.width > this._mask_width) {
            this.labelRollingNode.active = true;
            this.labelNode.active = false;
            this.labelText.string = "";
            this.labelRollingText.string = text;
            this.labelRollingText._forceUpdateRenderData(true);
            this.showRollingText();
          } else {
            this.labelRollingNode.active = false;
            this.showChatFor(3);
          }
        }
        update(dt) {}
      };
      __decorate([ property(cc.Node) ], UserChat.prototype, "labelNode", void 0);
      __decorate([ property(cc.Label) ], UserChat.prototype, "labelText", void 0);
      __decorate([ property(EmotionPlayer_1.default) ], UserChat.prototype, "emPlayer", void 0);
      __decorate([ property(cc.Node) ], UserChat.prototype, "labelRollingNode", void 0);
      __decorate([ property(cc.Label) ], UserChat.prototype, "labelRollingText", void 0);
      __decorate([ property(cc.Mask) ], UserChat.prototype, "maskRolling", void 0);
      UserChat = __decorate([ ccclass ], UserChat);
      return UserChat;
    })();
    exports.default = UserChat;
    cc._RF.pop();
  }, {
    "./EmotionPlayer": "EmotionPlayer"
  } ],
  UserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "129fcH6eS9FtKxELbsrohwW", "UserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.UserHead = void 0;
    const sound_manager_1 = require("../Framework/lobby/sound_manager");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const utils_1 = require("../Framework/common/utils");
    const global_data_1 = require("../Framework/lobby/global_data");
    const lobby_framework_1 = require("../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let UserHead = (() => {
      let UserHead = class UserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.button = null;
          this.iconHead = null;
          this.clickToShowUserInfo = true;
          this.width = 100;
          this.height = 100;
          this.userId = 0;
          this.faceId = 0;
          this.sexId = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "UserHead", "onHeadClicked");
        }
        onHeadClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          if (this.clickToShowUserInfo) bind_function_1.bf.show_game_user_info(false, this.userId, null, null, null); else {
            let e = new cc.Event.EventCustom("onHeadClicked", true);
            e.setUserData({
              width: this.width,
              height: this.height,
              userId: this.userId,
              faceId: this.faceId,
              sexId: this.sexId
            });
            this.node.dispatchEvent(e);
          }
        }
        setData(width, height, userId, faceId, sexId) {
          if (width > 0) {
            this.width = width;
            this.height = height;
            this.rootNode.setScale(cc.v2(this.width / 100, this.height / 100));
          }
          this.userId = userId;
          this.faceId = faceId;
          this.sexId = sexId;
          this.iconHead.spriteFrame = 0 == sexId ? global_data_1.global_data.spriteFrameMap.get("Common-head_female_big") : 1 == sexId ? global_data_1.global_data.spriteFrameMap.get("Common-head_male_big") : global_data_1.global_data.spriteFrameMap.get("Common-head_unknow_big");
          0 != faceId && lobby_framework_1.lobby_framework.fetch_user_head_image(userId, faceId, this.iconHead);
        }
        setInteractable(b) {
          this.button.interactable = b;
        }
        setClickToShowUserInfo(b) {
          this.clickToShowUserInfo = b;
        }
      };
      __decorate([ property(cc.Node) ], UserHead.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], UserHead.prototype, "button", void 0);
      __decorate([ property(cc.Sprite) ], UserHead.prototype, "iconHead", void 0);
      __decorate([ property ], UserHead.prototype, "clickToShowUserInfo", void 0);
      UserHead = __decorate([ ccclass ], UserHead);
      return UserHead;
    })();
    exports.UserHead = UserHead;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../Framework/common/utils": "utils",
    "../Framework/lobby/global_data": "global_data",
    "../Framework/lobby/lobby_framework": "lobby_framework",
    "../Framework/lobby/sound_manager": "sound_manager"
  } ],
  YiFuCardLayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e2f15HRjD1GS5yMQBRzPA4C", "YiFuCardLayer");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const YiFuGameData_1 = require("./YiFuGameData");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const YiFuOutCard_1 = require("./YiFuOutCard");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuUserHead_1 = require("./YiFuUserHead");
    const YiFuHuCard_1 = require("./YiFuHuCard");
    const utils_1 = require("../../Framework/common/utils");
    const cards_3d_logic_1 = require("../../../Layout3D/Src/cards_3d_logic");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const CTiledCard3D_1 = require("../../../Layout3D/Src/widget/CTiledCard3D");
    const CHandCard3D_1 = require("../../../Layout3D/Src/widget/CHandCard3D");
    const YiFuTutorial_1 = require("./YiFuTutorial");
    const YiFuGameEnd_1 = require("./YiFuGameEnd");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuCardLayer = (() => {
      let YiFuCardLayer = class YiFuCardLayer extends cc.Component {
        constructor() {
          super(...arguments);
          this.game_end_layer = null;
          this.ptr_caishen_node = null;
          this.ptr_caishen_node_bg = null;
          this.ptr_caishen_node_left_count = null;
          this.ptr_caishen = null;
          this.ptr_outing_card = [];
          this.ptr_action_card = [];
          this.ptr_right_node = null;
          this.catch_btn = null;
          this.ptr_btn_hu = null;
          this.ptr_btn_hu_confirm = null;
          this.ptr_hu_node_bg = null;
          this.ptr_hu_hint_node = null;
          this.ptr_btn_buhu = null;
          this.ptr_node_fire = null;
          this.ptr_prefab_fire = null;
          this.ptr_btn_close_hu = null;
          this.ptr_btn_hu_direct = null;
          this.ptr_dianpao_hu_node = null;
          this.HuCards = [];
          this.ptr_node_left = null;
          this.ptr_label_left = null;
          this.ptr_node_animation_cai_shen = null;
          this.ptr_node_animation_catch_card = null;
          this.ptr_node_animation_hu = null;
          this.ptr_node_animation_mopai_tishi = null;
          this.ptr_btn_test = null;
          this._card_imgs = null;
          this.m_view_size = null;
          this.m_game_layer = null;
          this.m_hand_count = [];
          this.m_hand_values = [ [], [], [], [] ];
          this.m_hua_cards = [ [], [], [], [] ];
          this.m_hua_count = [ 0, 0, 0, 0 ];
          this.m_cai_shen = null;
          this.m_last_catch_card = null;
          this.m_left_count = 0;
          this.m_can_catch_card = false;
          this.ptr_catch_node_area = null;
          this.timer_update_func = null;
          this.m_have_handle_select = false;
          this.m_have_hu_player = false;
          this.m_select_hu_card = 0;
          this.m_select_hu_card_chair = -1;
          this.m_select_hu_handle = -1;
          this.m_select_hu_chair = -1;
          this.m_bg_cancle_touch = false;
          this.m_screen_offset = YiFuGameData_1.get_share_game_data().ScreenFit;
          this.m_config_new_touch_area = false;
        }
        onLoad() {
          utils_1.utils.on("hideHuButton", this, this.onEventHideHuButton);
          this.init_game_data();
          this.addEventListeners();
          bind_function_1.bf.on_game_event("TouchCatchCard", this, this.onEventTouchCatchCard);
          bind_function_1.bf.on_game_event("TouchMoveToward", this, this.onEventTouchMoveToward);
          bind_function_1.bf.on_game_event("TouchOutCard", this, this.onEventTouchOutCard);
          this.m_config_new_touch_area || (this.ptr_catch_node_area.parent.getChildByName("TouchArea").active = false);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_3_3, this.ptr_btn_hu.node);
        }
        start() {
          this.bind_btn(this.catch_btn, "on_catch_click");
          this.bind_btn(this.ptr_btn_hu, "on_hu_click");
          this.bind_btn(this.ptr_btn_hu_confirm, "on_hu_click_confirm");
          this.bind_btn(this.ptr_btn_buhu, "on_buhu_click");
          this.bind_btn(this.ptr_btn_hu_direct, "on_hu_direct_click");
          this.bind_btn(this.ptr_btn_test, "on_btn_test");
          this.bind_btn(this.ptr_btn_close_hu, "on_close_hu_click");
          this.screenFit();
          this.game_end_layer.set_card_layer(this);
        }
        on_btn_test() {}
        clearAnimationHuFire() {
          this.ptr_node_fire && this.ptr_node_fire.removeAllChildren();
        }
        playAnimationHuFire() {
          this.clearAnimationHuFire();
          let cards_count = cards_3d_logic_1.default.get().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand).length;
          let {x: x, y: y, scale: scale} = cards_3d_layout_1.default.get().CSelfCardsController.getCatchCardPosition();
          let token_pos = cc.v2(x, y);
          let token_world = cards_3d_layout_1.default.get().node.convertToWorldSpaceAR(token_pos);
          let local = this.ptr_node_fire.parent.convertToNodeSpaceAR(token_world);
          let pos_x = 0;
          let offset_y = .5 * cards_3d_layout_1.default.get().CSelfCardsController._HAND_CARD_BASE_Y - cards_3d_layout_1.default.get().CSelfCardsController._HAND_CARD_EDGE - 7;
          let pos_y = local.y + offset_y;
          for (let i = 0; i < cards_count; i++) {
            let fire_node = cc.instantiate(this.ptr_prefab_fire);
            this.ptr_node_fire.addChild(fire_node);
            fire_node.setScale(scale);
            fire_node.active = true;
            let controller = cards_3d_layout_1.default.get().CSelfCardsController;
            if (this.isAllHandCard(cards_count)) if (i == cards_count - 1) {
              pos_x = local.x - (controller._HAND_CARD_WIDTH - controller._HAND_CARD_EDGE);
              fire_node.setPosition(pos_x, pos_y);
            } else {
              pos_x = local.x - controller._CATCH_HAND_CARD_SPACE - (controller._HAND_CARD_WIDTH - controller._HAND_CARD_EDGE) * (i + 2);
              fire_node.setPosition(pos_x, pos_y);
            } else {
              pos_x = local.x - controller._CATCH_HAND_CARD_SPACE - (controller._HAND_CARD_WIDTH - controller._HAND_CARD_EDGE) * (i + 1);
              fire_node.setPosition(pos_x, pos_y);
            }
          }
        }
        playAnimationHu() {
          let playNode = this.ptr_node_animation_hu.getChildByName("hu");
          playNode.active = true;
          playNode.getComponent(cc.Animation).play();
          playNode.stopAllActions();
          playNode.runAction(cc.sequence(cc.delayTime(2.5), cc.callFunc(function() {
            playNode.active = false;
          })));
        }
        playAnimationCatchCard(byte_cards, callBack) {
          this._card_imgs = [];
          let bone_card_scale = 1;
          let byte_card = byte_cards;
          let show_time = .3;
          let playNode = this.node.getChildByName("mopai");
          let {x: x, y: y, scale: scale} = cards_3d_layout_1.default.get().CSelfCardsController.getCatchCardPosition();
          let token_pos = cc.v2(x, y);
          let token_world = cards_3d_layout_1.default.get().node.convertToWorldSpaceAR(token_pos);
          let local = playNode.parent.convertToNodeSpaceAR(token_world);
          playNode.setPosition(local);
          playNode.setScale(scale);
          playNode.active = true;
          this._card_imgs.push(cards_3d_layout_1.default.get().replayBoneCard(playNode.getChildByName("bottom_hand_1"), byte_card, bone_card_scale, false));
          playNode.active = true;
          playNode.getComponent(cc.Animation).play();
          playNode.stopAllActions();
          playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
            playNode.active = false;
            callBack && callBack();
          })));
        }
        playAnimationCaiShen(byte_cards, pos, callBack) {
          this._card_imgs = [];
          let bone_card_scale = 1.4;
          let byte_card = byte_cards;
          let show_time = 1.5;
          let playNode = this.ptr_node_animation_cai_shen.getChildByName("fancaishen");
          playNode.setScale(1);
          playNode.setPosition(cc.v2(0, 0));
          playNode.getChildByName("benjucaishen").active = true;
          playNode.active = true;
          this._card_imgs.push(cards_3d_layout_1.default.get().replayBoneCard(playNode.getChildByName("bottom_hand_1"), byte_card, bone_card_scale, true, 1));
          this._card_imgs.push(cards_3d_layout_1.default.get().replayBoneCard(playNode.getChildByName("bottom_hand_1").getChildByName("bottom_hand_1 copy"), byte_card, bone_card_scale, true, 1));
          playNode.active = true;
          playNode.getComponent(cc.Animation).play();
          this.ptr_node_animation_cai_shen.stopAllActions();
          this.ptr_node_animation_cai_shen.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
            playNode.getChildByName("benjucaishen").active = false;
          }), cc.spawn(cc.moveTo(.3, pos), cc.scaleTo(.3, .25)), cc.callFunc(function() {
            playNode.active = false;
            callBack && callBack();
          })));
        }
        onDestroy() {
          if (null == cards_3d_layout_1.default.get()) return;
          null != this.timer_update_func && this.unschedule(this.timer_update_func);
          cc.isValid(cards_3d_layout_1.default.get()) && cards_3d_layout_1.default.get().destroy();
          utils_1.utils.off("hideHuButton", this, this.onEventHideHuButton);
          bind_function_1.bf.off_game_event("TouchCatchCard", this, this.onEventTouchCatchCard);
          bind_function_1.bf.off_game_event("TouchMoveToward", this, this.onEventTouchMoveToward);
          bind_function_1.bf.off_game_event("TouchOutCard", this, this.onEventTouchOutCard);
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        onEventTouchCatchCard() {
          if (this.m_config_new_touch_area) if (this.m_can_catch_card) {
            this.on_catch_click();
            this.m_game_layer.hide_common_hint();
            this.show_mopai_animaion(false);
            this.ptr_catch_node_area.active = false;
          } else -1 != cards_3d_layout_1.default.get().CSelfCardsController._selected_index && cards_3d_layout_1.default.get().unselectAllHandCards();
        }
        onEventTouchMoveToward(dir) {
          if (!this.m_bg_cancle_touch) return;
          let selected_index = cards_3d_layout_1.default.get().CSelfCardsController._selected_index;
          -1 == selected_index && (dir = 0);
          selected_index = dir < 0 ? (selected_index - 1) % cards_3d_layout_1.default.get().getLogic().getCardsLength(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand) : dir > 0 ? (selected_index + 1) % cards_3d_layout_1.default.get().getLogic().getCardsLength(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand) : cards_3d_layout_1.default.get().getLogic().getCardsLength(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand) - 1;
          cards_3d_layout_1.default.get().CSelfCardsController.setSelectedIndex(selected_index);
          cards_3d_layout_1.default.get().CSelfCardsController.refreshHandCards();
        }
        onEventTouchOutCard() {
          if (this.m_config_new_touch_area) {
            let selected_index = cards_3d_layout_1.default.get().CSelfCardsController._selected_index;
            let can_out = cards_3d_layout_1.default.get().CSelfCardsController.getHandCard(selected_index).getComponent(CSelfHandCard3D_1.default)._bool_can_out;
            if (can_out) {
              let cardValue = cards_3d_layout_1.default.get().getLogic().getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand)[selected_index];
              cards_3d_layout_1.default.get().outCard(cards_3d_config_1.UserIndex.down, cardValue, null, selected_index);
              this.doOutCard(cardValue, true);
            }
          }
        }
        on_catch_click() {
          this.catch_btn.node.active = false;
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_CATCH_CARD, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          let path = "Game/150/sound/catch_card.mp3";
          bind_function_1.bf.play_sound(path, false);
        }
        on_buhu_click() {
          cards_3d_layout_1.default.get().laySelfHandCards(false);
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["is_hu"] = 0;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_SELECT_HU, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          sound_manager_1.sound_manager.play_click();
        }
        on_hu_direct_click() {
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["card"] = -1;
          the_data["type"] = 0;
          the_data["handle"] = -1;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_HU, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          utils_1.utils.send("hideHuButton");
          sound_manager_1.sound_manager.play_click();
        }
        on_close_hu_click() {
          this.clearAnimationHuFire();
          this.ptr_hu_node_bg.active = false;
          this.m_have_handle_select && cards_3d_layout_1.default.get().showHandleSelectCanTouch(true);
          this.ptr_btn_hu_confirm.node.active = true;
          sound_manager_1.sound_manager.play_click();
        }
        on_hu_click_confirm() {
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished() && YiFuGameData_1.get_share_game_data().GameCount < 3) {
            console.log("\u5f15\u5bfc\u8fc7\u7a0b\u4e2d,\u7b2c\u4e00\u5c40\u4e0d\u80fd\u80e1\u724c");
            return;
          }
          this.ptr_btn_hu.node.stopAllActions();
          this.ptr_btn_hu_confirm.node.active = false;
          this.ptr_hu_node_bg.active = true;
          this.ptr_hu_node_bg.opacity = 0;
          this.ptr_btn_hu.node.setScale(.1);
          let that = this;
          this.ptr_btn_hu.node.setPosition(0, 0);
          this.ptr_btn_hu.interactable = false;
          this.ptr_btn_hu.node.opacity = 0;
          let time = .1;
          this.ptr_hu_node_bg.runAction(cc.fadeIn(.1));
          this.ptr_btn_hu.node.runAction(cc.sequence(cc.spawn(cc.scaleTo(time, 1.4), cc.moveTo(time, cc.v2(-110, 50)), cc.fadeIn(time)), cc.delayTime(.2), cc.callFunc(function() {
            that.ptr_btn_hu.interactable = true;
            tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_3_3);
          })));
          this.clickHandleSelectHint();
          this.playAnimationHuFire();
          sound_manager_1.sound_manager.play_click();
          tutorial_1.tutorial.close_tutorial();
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1);
        }
        clickHandleSelectHint() {
          if (this.m_have_handle_select && this.ptr_hu_node_bg.active) {
            cards_3d_layout_1.default.get().showHandleSelectCanTouch(false);
            YiFuGlobalUI_1.default.getInstance().showMessageHint("\u51c6\u5907\u80e1\u7684\u65f6\u5019\u4e0d\u8981\u5403\u78b0\u6760\u54e6~");
          }
        }
        on_hu_click() {
          if (null != this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN]) {
            let hand_count = this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN].length;
            if (this.isAllHandCard(hand_count)) {
              let the_data = {};
              the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
              the_data["card"] = this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN][this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN].length - 1];
              the_data["type"] = 1;
              the_data["handle"] = 2;
              bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_HU, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
              this.clearAnimationHuFire();
              this.close_hu_btn();
            } else {
              let the_data = {};
              the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
              the_data["is_hu"] = 1;
              bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_SELECT_HU, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
              this.close_hu_btn();
            }
          }
          tutorial_1.tutorial.close_tutorial();
          sound_manager_1.sound_manager.play_click();
        }
        close_hu_btn() {
          this.ptr_hu_node_bg.active = false;
          this.m_have_handle_select && cards_3d_layout_1.default.get().showHandleSelectCanTouch(true);
          this.ptr_btn_hu_confirm.node.active = false;
        }
        init_game_data() {
          this.m_view_size = cc.winSize;
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "YiFuCardLayer";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
        dealGameEvent(int_sub_id, json_data) {
          int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HAND_CARDS ? this.on_hand_cards(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_CAISHEN_CARD ? this.on_cai_shen(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_BUHUA ? this.on_bu_hua(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HEAP_CARD ? this.on_heap_card(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HEAP_OUT_CARD ? this.on_heap_out_card(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HUA_CARDS ? this.on_heap_hua(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_CATCH_CARD ? this.on_catch_card(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_OUT_CARD ? this.on_out_card(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_OPERATION ? this.on_operate_hint(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_OPERATION_RESULT ? this.on_operate_result(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HU ? this.on_hu(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_SELECT_HU_CARD ? this.on_select_hu_card(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_CARD_COUNT ? this.on_left_card_count(json_data) : int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_START && this.on_start_game(json_data);
        }
        init() {
          this.bindFunc();
          cards_3d_layout_1.default.get().reset();
          this.initData();
        }
        screenFit() {
          if (this.m_view_size.width > 1520) {
            this.ptr_right_node.getComponent(cc.Widget).isAlignRight = true;
            this.ptr_right_node.getComponent(cc.Widget).right = this.m_screen_offset;
            this.ptr_catch_node_area.getComponent(cc.Widget).isAlignRight = true;
            this.ptr_catch_node_area.getComponent(cc.Widget).right += this.m_screen_offset;
            this.ptr_catch_node_area.getComponent(cc.Widget).isAlignLeft = true;
            this.ptr_catch_node_area.getComponent(cc.Widget).left += this.m_screen_offset;
            this.ptr_node_animation_mopai_tishi.getComponent(cc.Widget).isAlignRight = true;
            this.ptr_node_animation_mopai_tishi.getComponent(cc.Widget).right += 2 * this.m_screen_offset;
          }
          if (this.m_view_size.width > 1520) for (let i = 0; i < 4; i++) if (1 == i) {
            this.ptr_outing_card[i].getComponent(cc.Widget).isAlignLeft = true;
            this.ptr_outing_card[i].getComponent(cc.Widget).left += 2 * this.m_screen_offset;
          } else if (3 == i) {
            this.ptr_outing_card[i].getComponent(cc.Widget).isAlignRight = true;
            this.ptr_outing_card[i].getComponent(cc.Widget).right += 2 * this.m_screen_offset;
          }
        }
        initData() {
          this.initLeftCount();
          for (let i = 0; i < 4; i++) {
            this.ptr_outing_card[i].init();
            this.ptr_action_card[i].active = true;
            cards_3d_layout_1.default.get()._hu_ineditor_ani[i].active = false;
          }
          this.m_bg_cancle_touch = false;
          this.ptr_caishen_node_bg.active = false;
          this.ptr_caishen_node.active = false;
          this.ptr_btn_hu_confirm.node.active = false;
          this.catch_btn.node.active = false;
          this.ptr_dianpao_hu_node.active = false;
          this.m_have_hu_player = false;
          YiFuGameData_1.get_share_game_data().HaveGetCaiShen = false;
          YiFuGameData_1.get_share_game_data().HuPlayerCount = -1;
          this.m_have_handle_select = false;
          cards_3d_layout_1.default.get().setHandCardsCanOut(false);
          cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
          this.m_hua_cards = [ [], [], [], [] ];
          this.m_hua_count = [ 0, 0, 0, 0 ];
          this.m_hand_values = [ [], [], [], [] ];
          for (let i = 0; i < 4; i++) {
            this.m_hand_count[i] = YiFuGameData_1.get_share_game_data().HandCardCount - 1;
            for (let j = 0; j < YiFuGameData_1.get_share_game_data().HandCardCount - 1; j++) this.m_hand_values[i][j] = YiFuGameData_1.get_share_game_data().InvalidValue;
          }
          this.node.active = false;
          this.HuCards.forEach(v => v.node.active = false);
          for (let j = 0; j < this.ptr_dianpao_hu_node.childrenCount; j++) this.ptr_dianpao_hu_node.children[j].active = false;
          null != this.timer_update_func && this.unschedule(this.timer_update_func);
          this.game_end_layer.clearData();
        }
        start_game() {
          this.showLayer();
          this.m_game_layer.hide_user_operation_status();
        }
        on_left_card_count(json_data) {
          YiFuGameData_1.get_share_game_data().CardCountLeft = json_data.count;
          this.set_left_count(json_data.count);
        }
        set_left_count(count) {
          this.m_left_count = count;
          this.ptr_node_left.active = true;
          this.ptr_label_left.node.active = true;
          this.ptr_label_left.string = "\u5269<color=#FFFF00>" + this.m_left_count + "</c>\u5f20";
          if (count <= 4) {
            let hint = "";
            if (count > 0) hint = "\u5269\u4f59\u6700\u540e" + count + "\u5f20\u724c"; else {
              hint = "\u724c\u5df2\u88ab\u6478\u5b8c";
              this.show_game_end_exit_game_tips();
            }
            YiFuGlobalUI_1.default.getInstance().showMessageHint(hint);
          }
          if (0 == count) {
            if (YiFuGameData_1.get_share_game_data().IsOwner) {
              let _mask_id = String(this.get_mask_id()) + String(new Date().getDay()) + String(new Date().getMilliseconds());
              let mask_id = Number(_mask_id);
              YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_XiPai_3, 2, mask_id, this.m_game_layer.ptr_btn_xipai.node, 0);
            }
            this.show_mopai_animaion(false);
          }
        }
        show_game_end_exit_game_tips() {
          if (YiFuGameData_1.get_share_game_data().isLastGame()) {
            let time = utils_1.utils.getLocalStorage("gameEndExitGameTips");
            let end_time = null != time ? Number(time) : 0;
            if (!end_time) {
              let t = new Date().getTime() + 18e4;
              utils_1.utils.setLocalStorage("gameEndExitGameTips", String(t));
            }
            utils_1.utils.send("showGameEndExitGameTips");
          }
        }
        do_end_cards(json_data) {
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.hu_chair);
          let seat = this.switch_to_seat(view_id);
          let hand_cards = json_data.cards;
          let hand_count = hand_cards.length;
          this.isAllHandCard(hand_count) ? YiFuGameLogic_1.get_game_logic().sortArray(hand_cards, hand_cards.length - 1) : YiFuGameLogic_1.get_game_logic().sortArray(hand_cards);
          cards_3d_layout_1.default.get().setHandCards(seat, hand_cards);
          if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
            cards_3d_layout_1.default.get().unselectAllHandCards();
            cards_3d_layout_1.default.get().laySelfHandCards(true);
            this.ptr_btn_hu_confirm.node.active = false;
          }
        }
        show_end_card(json_data) {
          console.log("show_end_card(json_data) :  ", json_data);
          let no_hu_chair = [];
          for (let i = 0; i < json_data.cards.length; i++) if (json_data.hu_chair.length > 0) {
            let find = false;
            for (let j = 0; j < json_data.hu_chair.length; j++) {
              let index = json_data.hu_chair[j];
              if (i == index) {
                let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(i);
                let seat = this.switch_to_seat(view_id);
                let hand_cards = json_data.cards[i];
                YiFuGameLogic_1.get_game_logic().sortArray(hand_cards, hand_cards.length - 1);
                cards_3d_layout_1.default.get().setHandCards(seat, hand_cards);
                find = true;
                break;
              }
            }
            find || no_hu_chair.push(i);
          } else no_hu_chair.push(i);
          for (let k = 0; k < no_hu_chair.length; k++) {
            let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(no_hu_chair[k]);
            let seat = this.switch_to_seat(view_id);
            let hand_cards = json_data.cards[no_hu_chair[k]];
            if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) cards_3d_layout_1.default.get().laySelfHandCards(true); else {
              YiFuGameLogic_1.get_game_logic().sortArray(hand_cards);
              cards_3d_layout_1.default.get().setHandCards(seat, hand_cards);
            }
          }
          this.ptr_btn_hu_confirm.node.active = false;
        }
        on_start_game(json_data) {
          YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_PALY;
          this.m_game_layer.show_users_default_info(YiFuUserHead_1.UserHeadStatus.ComeInAfter);
          this.m_game_layer.ptr_hint_node.active = false;
        }
        on_hand_cards(json_data) {
          this.start_game();
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let hand_cards = json_data.cards;
          console.log("on_hand_cards (json_data) : ", json_data);
          let show = json_data.is_show;
          let start_ani = json_data.is_ani;
          if (show) {
            start_ani && bind_function_1.bf.pause_message();
            this.setHandValue(view_id, json_data.card_count, hand_cards, start_ani, json_data.is_lay);
          } else this.setHandValue(view_id, json_data.card_count, [], start_ani, json_data.is_lay);
        }
        on_cai_shen(json_data) {
          this.m_game_layer.hide_user_operation_status();
          bind_function_1.bf.pause_message();
          YiFuGameData_1.get_share_game_data().CaiShenCardValue = json_data.caishen;
          YiFuGameData_1.get_share_game_data().HaveGetCaiShen = true;
          let is_ani = json_data.is_ani;
          let list_corner = [];
          1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length ? list_corner[YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]] = 1 : 2 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length;
          cards_3d_layout_1.default.get().setCornerCardValue(list_corner);
          this.setCaiShen(YiFuGameData_1.get_share_game_data().CaiShenCardValue[0], is_ani);
        }
        test() {
          cards_3d_layout_1.default.get().reset();
          YiFuGameData_1.get_share_game_data().HaveCaiShen = true;
          let card_values = [ 12, 14, 14, 15, 18, 19, 24, 26, 34, 35, 46, 47, 55 ];
          let list_corner = [];
          cards_3d_layout_1.default.get().setCornerCardValue(list_corner);
          this.showLayer();
          YiFuGameLogic_1.get_game_logic().sortArray(card_values);
          cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.down, card_values, card_values.length);
        }
        setCaiShen(param_value, is_ani) {
          if (null == this.m_cai_shen) {
            this.m_cai_shen = cards_3d_layout_1.default.get().getNewHandCard(true);
            this.ptr_caishen_node.addChild(this.m_cai_shen);
          }
          this.ptr_caishen_node.active = true;
          this.m_cai_shen.active = false;
          let c_height = 120;
          let c_width = -36;
          let c_scale = .25;
          this.m_cai_shen.getComponent(CSelfHandCard3D_1.default).setCardValue(param_value, 1);
          this.ptr_caishen_node_bg.setPosition(cc.v2(c_width - 40, this.m_view_size.height - c_height));
          let that = this;
          let func_01 = function() {
            that.m_cai_shen.active = true;
            that.m_cai_shen.setScale(2);
            that.ptr_caishen_node.setScale(c_scale);
            that.ptr_caishen_node.setPosition(cc.v2(c_width, that.m_view_size.height - c_height));
            that.show_caishen();
          };
          if (is_ani) {
            this.ptr_node_animation_cai_shen.setPosition(cc.winSize.width / 2, cc.winSize.height / 2);
            this.ptr_node_animation_cai_shen.setScale(1);
            let token_world = this.ptr_caishen_node_bg.parent.convertToWorldSpaceAR(cc.v2(c_width - 40, that.m_view_size.height - c_height));
            let local = this.ptr_node_animation_cai_shen.parent.convertToNodeSpaceAR(token_world);
            local.x = local.x + 40;
            this.playAnimationCaiShen(param_value, local, function() {
              func_01();
            });
          } else func_01();
          YiFuGameLogic_1.get_game_logic().sortArray(this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN]);
          cards_3d_layout_1.default.get().setHandCards(cards_3d_config_1.UserIndex.down, this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN], this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN].length);
        }
        show_caishen() {
          this.ptr_caishen_node_bg.opacity = 0;
          this.ptr_caishen_node_bg.active = true;
          this.ptr_caishen_node_left_count.node.active = true;
          this.ptr_caishen_node_left_count.string = YiFuGameData_1.get_share_game_data().CaiShenCount + "\u8d22\u795e";
          this.ptr_caishen_node_bg.stopAllActions();
          this.ptr_caishen_node_bg.runAction(cc.fadeIn(.5));
          this.ptr_btn_hu_confirm.node.active = true;
          this.hu_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1);
          bind_function_1.bf.restore_message();
        }
        hu_tutorial(id) {
          if (YiFuGameData_1.get_share_game_data().GameCount <= 1 && this.ptr_btn_hu_confirm.node.active) {
            let mask_id = this.get_mask_id();
            id == YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1 && YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1, 1, mask_id, this.ptr_btn_hu_confirm.node);
          }
        }
        get_mask_id() {
          let _mask_id = String(YiFuGameData_1.get_share_game_data().TableCode) + String(YiFuGameData_1.get_share_game_data().GameCount);
          let mask_id = Number(_mask_id);
          return mask_id;
        }
        on_bu_hua(json_data) {
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          this.doBuHua(view_id, json_data.count, json_data.card);
          0 == this.m_left_count && YiFuGlobalUI_1.default.getInstance().showMessageHint("\u724c\u5df2\u88ab\u6478\u5b8c");
        }
        on_heap_card(json_data) {
          console.log("on_heap_card(json_data) : ", json_data);
          let show_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let heaps = [];
          for (let i = 0; i < json_data.handle.length; i++) {
            let handle_type = json_data.handle[i].type;
            let handle_from_id = json_data.handle[i].from;
            let card_value = json_data.handle[i].card;
            YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && (47 != card_value || handle_type != cards_3d_config_1.HandleType.b_chi_left && handle_type != cards_3d_config_1.HandleType.b_chi_mid && handle_type != cards_3d_config_1.HandleType.b_chi_right || (card_value = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]));
            let from_id = this.switch_to_seat(YiFuGameLogic_1.get_game_logic().switch_to_view_id(handle_from_id));
            let l_type = handle_type;
            heaps[i] = {
              _type: l_type,
              _value: card_value,
              _from: from_id,
              cai_value: YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]
            };
          }
          cards_3d_layout_1.default.get().setHeapCards(this.switch_to_seat(show_id), heaps);
        }
        on_heap_out_card(json_data) {
          console.log("on_heap_out_card(json_data) : ", json_data);
          let show_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let outed_cards = json_data.cards;
          let out_card_tbl = [];
          if (json_data.card_count && json_data.card_count > 0) {
            for (let i = 0; i < json_data.card_count; i++) out_card_tbl.push(outed_cards[i]);
            cards_3d_layout_1.default.get().setOutCards(this.switch_to_seat(show_id), out_card_tbl);
          }
        }
        on_heap_hua(json_data) {
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          this.m_hua_count[view_id] = json_data.count;
          let seat = this.switch_to_seat(view_id);
          cards_3d_layout_1.default.get().setHuaCards(seat, json_data.card);
          let is_ani = 1 == json_data.is_ani;
          if (is_ani) {
            this.playBuHuaAnima(view_id);
            let that = this;
            if (null != this.timer_update_func) {
              this.unschedule(this.timer_update_func);
              bind_function_1.bf.restore_message();
            }
            let m_left_time = .8;
            that.timer_update_func = function(dt) {
              m_left_time -= dt;
              if (m_left_time <= 0) {
                m_left_time = 0;
                that.unschedule(that.timer_update_func);
                bind_function_1.bf.restore_message();
              }
            };
            bind_function_1.bf.pause_message();
            this.schedule(this.timer_update_func, .05);
          }
        }
        doBuHua(view_id, cnt, hua) {
          for (let i = 0; i < cnt; i++) this.m_hua_cards[view_id].push(hua[i]);
          this.playBuHuaAnima(view_id);
          for (let i = 0; i < cnt; i++) {
            let seat = this.switch_to_seat(view_id);
            cards_3d_layout_1.default.get().buHua(seat, hua[i]);
            view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN ? YiFuGameLogic_1.get_game_logic().removeArrayValue(this.m_hand_values[view_id], hua[i]) : YiFuGameLogic_1.get_game_logic().removeArrayValue(this.m_hand_values[view_id], YiFuGameData_1.get_share_game_data().InvalidValue);
          }
          this.m_hand_count[view_id] -= cnt;
          YiFuGameLogic_1.get_game_logic().sortArray(this.m_hand_values[view_id]);
          let seat = this.switch_to_seat(view_id);
          cards_3d_layout_1.default.get().setHandCards(seat, this.m_hand_values[view_id]);
        }
        on_hand_power(json_data) {
          let can_touch = true;
          let can_out = (json_data.enable & YiFuGameDefine_1.YiFuGameDefine.BUTTON_OUTCARD) > 0;
          let that = this;
          this.node.runAction(cc.sequence(cc.delayTime(.32), cc.callFunc(function() {
            that.updateHandPower(can_touch, can_out);
          })));
          this.m_can_catch_card = (json_data.visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_CATCH_CARD) > 0;
          this.m_config_new_touch_area || (this.ptr_catch_node_area.active = (json_data.visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_CATCH_CARD) > 0);
          this.m_can_catch_card && this.show_mopai_animaion(true);
        }
        show_mopai_animaion(show) {
          show ? this.ptr_node_animation_mopai_tishi.getComponent(cc.Animation).play() : this.ptr_node_animation_mopai_tishi.getComponent(cc.Animation).stop();
          this.ptr_node_animation_mopai_tishi.active = show;
        }
        updateHandPower(touch, out) {
          let _game_count = YiFuGameData_1.get_share_game_data().GameCount;
          if (!YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished() || 3 != _game_count && 1 != _game_count) {
            cards_3d_layout_1.default.get().setHandCardsCanOut(out);
            cards_3d_layout_1.default.get().setHandCardsCanTouch(touch);
          } else {
            cards_3d_layout_1.default.get().setHandCardsCanOut(false);
            cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
          }
        }
        on_catch_card(json_data) {
          console.log(" on_catch_card(json_data) : ", json_data);
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          cards_3d_layout_1.default.get().unselectAllHandCards();
          this.catchCard(view_id, json_data.card);
        }
        catchCard(view_id, value) {
          if (value && value > 0) {
            this.m_last_catch_card = value;
            let seat = this.switch_to_seat(view_id);
            let that = this;
            this.playAnimationCatchCard(value, function() {
              cards_3d_layout_1.default.get().catchCard(seat, value);
              YiFuGameLogic_1.get_game_logic().sortArray(that.m_hand_values[view_id]);
              that.m_hand_values[view_id].push(value);
              that.m_hand_count[view_id]++;
            });
          } else {
            value = YiFuGameData_1.get_share_game_data().InvalidValue;
            let seat = this.switch_to_seat(view_id);
            cards_3d_layout_1.default.get().catchCard(seat, value);
            YiFuGameLogic_1.get_game_logic().sortArray(this.m_hand_values[view_id]);
            this.m_hand_values[view_id].push(value);
            this.m_hand_count[view_id]++;
          }
        }
        on_out_card(json_data) {
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          this.outCard(view_id, json_data.card);
        }
        outCard(view_id, value) {
          if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) ; else if (view_id != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
            this.out_card_effect(this.m_game_layer.m_user_data[view_id].cbGender, value);
            let seat = this.switch_to_seat(view_id);
            cards_3d_layout_1.default.get().outCard(seat, value);
            YiFuGameLogic_1.get_game_logic().removeArrayValue(this.m_hand_values[view_id], YiFuGameData_1.get_share_game_data().InvalidValue);
            this.m_hand_count[view_id]--;
            cards_3d_layout_1.default.get().showLastOutCardIndicator(seat);
          }
          this.setShowOutingCard(view_id, value);
        }
        setHandValue(view_id, cnt, values, ani, is_lay) {
          if (void 0 == view_id || null == view_id) return;
          if (view_id < 0 || view_id >= 4) return;
          if (void 0 == cnt || null == cnt) return;
          this.m_hand_count[view_id] = cnt;
          if (values.length > 0) {
            this.m_hand_values[view_id] = [];
            for (let i = 0; i < cnt; i++) this.m_hand_values[view_id][i] = values[i];
          } else {
            this.m_hand_values[view_id] = [];
            for (let i = 0; i < cnt; i++) this.m_hand_values[view_id][i] = YiFuGameData_1.get_share_game_data().InvalidValue;
          }
          let seat = this.switch_to_seat(view_id);
          let that = this;
          if (true == ani) {
            this.ptr_action_card[view_id].stopAllActions();
            this.ptr_action_card[view_id].runAction(cc.sequence(cc.callFunc(function() {
              cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], 4);
              if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                let path = "Game/150/sound/send_card.mp3";
                bind_function_1.bf.play_sound(path, false);
              }
            }), cc.delayTime(.5), cc.callFunc(function() {
              cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], 8);
              if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                let path = "Game/150/sound/send_card.mp3";
                bind_function_1.bf.play_sound(path, false);
              }
            }), cc.delayTime(.5), cc.callFunc(function() {
              cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], 12);
              if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                let path = "Game/150/sound/send_card.mp3";
                bind_function_1.bf.play_sound(path, false);
              }
            }), cc.delayTime(.5), cc.callFunc(function() {
              cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], that.m_hand_count[view_id]);
              if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                let path = "Game/150/sound/send_card.mp3";
                bind_function_1.bf.play_sound(path, false);
              }
            }), cc.delayTime(.4), cc.callFunc(function() {
              if (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                bind_function_1.bf.restore_message();
                YiFuGameLogic_1.get_game_logic().sortArray(that.m_hand_values[view_id]);
                cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], that.m_hand_count[view_id]);
                that.m_bg_cancle_touch = true;
                that.showConfirmHuButtonBaseInCaiShen();
                cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
                if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) if (3 == YiFuGameData_1.get_share_game_data().GameCount) {
                  cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
                  tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_3_2);
                } else 2 == YiFuGameData_1.get_share_game_data().GameCount && YiFuGlobalUI_1.default.getInstance().showMessageHint("\u60a8\u662f\u5e84\u5bb6,\u8bf7\u5148\u51fa\u724c");
              }
            })));
          } else {
            this.m_bg_cancle_touch = true;
            YiFuGameLogic_1.get_game_logic().sortArray(that.m_hand_values[view_id]);
            cards_3d_layout_1.default.get().setHandCards(seat, that.m_hand_values[view_id], that.m_hand_count[view_id]);
            view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN && this.showConfirmHuButtonBaseInCaiShen();
            cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
          }
        }
        showConfirmHuButtonBaseInCaiShen() {
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
            this.ptr_btn_hu_confirm.node.active = true;
            return;
          }
          if (YiFuGameData_1.get_share_game_data().HaveCaiShen) {
            if (1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length) {
              let cai_1 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0];
              if (45 == cai_1 || 47 == cai_1) {
                this.ptr_btn_hu_confirm.node.active = true;
                this.hu_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1);
              }
            }
          } else {
            this.ptr_btn_hu_confirm.node.active = true;
            this.hu_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Hu_1);
          }
        }
        on_operate_hint(json_data) {
          console.log("on_operate_hint(json_data) : ", json_data);
          this.setCanHide(false);
          let count = json_data.length;
          cards_3d_layout_1.default.get().unselectAllHandCards();
          let list_handle = [];
          for (let i = 0; i < count; i++) {
            YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && (47 != json_data[i].card || json_data[i].type != cards_3d_config_1.HandleType.b_chi_left && json_data[i].type != cards_3d_config_1.HandleType.b_chi_mid && json_data[i].type != cards_3d_config_1.HandleType.b_chi_right || (json_data[i].card = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]));
            list_handle.push({
              type: json_data[i].type,
              value: json_data[i].card
            });
          }
          list_handle.push({
            type: cards_3d_config_1.HandleType.pass,
            value: 0
          });
          cards_3d_layout_1.default.get().showHandleSelect(list_handle, YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]);
          this.m_have_handle_select = true;
          this.clickHandleSelectHint();
          1 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_6);
        }
        on_operate_result(json_data) {
          console.log("on_operate_result(json_data) : ", json_data);
          this.setHideOutingCard();
          let to_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.to);
          let from_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.from);
          this.doHandle(to_id, from_id, json_data.type, json_data.card);
          cards_3d_layout_1.default.get().hideHandleSelect();
          0 == this.m_left_count && YiFuGlobalUI_1.default.getInstance().showMessageHint("\u724c\u5df2\u88ab\u6478\u5b8c");
          tutorial_1.tutorial.close_tutorial();
          1 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_7, 1.5);
        }
        on_hu(json_data) {
          console.log("on_hu(json_data) : ", json_data);
          this.show_game_end_exit_game_tips();
          YiFuGameData_1.get_share_game_data().GameResults.push(json_data);
          YiFuGameData_1.get_share_game_data().HaveHuPlayer = true;
          let delay = false;
          json_data.is_ani && 1 == json_data.is_ani && (delay = true);
          this.game_end_layer.updateData(json_data, delay);
          this.m_game_layer.ptr_btn_end_open.node.active = false;
          this.do_end_cards(json_data);
          this.m_select_hu_card = json_data.hu_card;
          this.m_select_hu_card_chair = json_data.card_chair;
          this.m_select_hu_handle = json_data.handle;
          this.m_select_hu_chair = json_data.hu_chair;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(this.m_select_hu_chair);
          view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN && (this.ptr_btn_hu_confirm.node.active = false);
          if (json_data.is_ani && 1 == json_data.is_ani) {
            let huSeat = this.switch_to_seat(view_id);
            cards_3d_layout_1.default.get().playHandleAnimation(huSeat, cards_3d_config_1.HandleType.hu, null);
            this.hu_effect(this.m_game_layer.m_user_data[view_id].cbGender);
          }
          this.updateHandPower(false, false);
          this.m_game_layer.hide_common_hint();
          this.show_mopai_animaion(false);
          cards_3d_layout_1.default.get().hideHandleSelect();
          this.setHideOutingCard();
          this.m_game_layer.ptr_btn_xipai.node.active = false;
          this.huafen_tutorial(view_id);
          if (-1 == this.m_select_hu_handle) return;
          this.setHuCardIndicator(json_data);
        }
        setHuCardIndicator(json_data) {
          1 == json_data.type && (this.m_select_hu_card_chair = this.m_select_hu_chair);
          if (-1 != this.m_select_hu_card_chair) {
            let hu_card_view = YiFuGameLogic_1.get_game_logic().switch_to_view_id(this.m_select_hu_card_chair);
            let cardSeat = this.switch_to_seat(hu_card_view);
            let card_node = null;
            YiFuGameData_1.get_share_game_data().HuPlayerCount++;
            YiFuGameData_1.get_share_game_data().HuPlayerCount > 3 && (YiFuGameData_1.get_share_game_data().HuPlayerCount = 3);
            let offset_y = 0;
            let offset_x = 0;
            let scale_l = 1;
            if (this.m_select_hu_handle == cards_3d_config_1.HandleType.a_gang) {
              card_node = cards_3d_layout_1.default.get().setHuCardValueLighting(cardSeat, cards_3d_config_1.LayoutCardsType.heap, this.m_select_hu_card);
              if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                offset_y = 45;
                scale_l = 1.2;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP) {
                offset_y = 30;
                scale_l = .6;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT || hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT) {
                offset_y = 30;
                scale_l = .7;
              }
            } else if (this.m_select_hu_handle == cards_3d_config_1.HandleType.jiang) {
              card_node = cards_3d_layout_1.default.get().setHuCardValueLighting(cardSeat, cards_3d_config_1.LayoutCardsType.hand, this.m_select_hu_card);
              if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                offset_y = 85;
                scale_l = 1.2;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP) {
                offset_y = 30;
                scale_l = .6;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT) {
                offset_y = 35;
                scale_l = .7;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT) {
                offset_y = 35;
                scale_l = .7;
                offset_x = 14;
              }
            } else {
              card_node = cards_3d_layout_1.default.get().setHuCardValueLighting(cardSeat, cards_3d_config_1.LayoutCardsType.out, this.m_select_hu_card);
              if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
                offset_y = 40;
                scale_l = 1;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP) {
                offset_y = 36;
                scale_l = .8;
              } else if (hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT || hu_card_view == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT) {
                offset_y = 36;
                scale_l = .8;
              }
            }
            if (null != card_node) if (this.m_select_hu_handle != cards_3d_config_1.HandleType.jiang) {
              let token_pos = cc.v2(card_node.x, card_node.y);
              token_pos.y += card_node.getComponent(CTiledCard3D_1.default)._card_img.position.y + offset_y;
              token_pos.x += card_node.getComponent(CTiledCard3D_1.default)._card_img.position.x;
              cards_3d_layout_1.default.get().showHuCardIndicator(YiFuGameData_1.get_share_game_data().HuPlayerCount, token_pos.x, token_pos.y, scale_l);
            } else {
              let token_pos = cc.v2(card_node.x, card_node.y);
              if (this.m_select_hu_card_chair == bind_function_1.bf.get_self_user_data().wChairID) {
                token_pos.y += card_node.getComponent(CSelfHandCard3D_1.default)._card_img.position.y + offset_y;
                token_pos.x += card_node.getComponent(CSelfHandCard3D_1.default)._card_img.position.x;
              } else {
                token_pos.y += card_node.getComponent(CHandCard3D_1.default)._card_img.position.y + offset_y;
                token_pos.x += card_node.getComponent(CHandCard3D_1.default)._card_img.position.x - offset_x;
              }
              cards_3d_layout_1.default.get().showHuCardIndicator(YiFuGameData_1.get_share_game_data().HuPlayerCount, token_pos.x, token_pos.y, scale_l);
            }
          }
        }
        huafen_tutorial(view_id) {}
        on_select_hu_card(json_data) {
          console.log("on_select_hu_card(json_data) : ", json_data);
          let space_x = 160;
          let index = -1;
          let direct_hu_pos_x = 0;
          let start_offet_x = 80;
          for (let i = 0; i < json_data.length; i++) {
            index++;
            this.HuCards[i].setData(json_data[i]);
            this.HuCards[i].node.active = true;
            this.HuCards[i].node.setPosition(-(start_offet_x + space_x * index), 0);
          }
          direct_hu_pos_x = -(start_offet_x + space_x * index);
          this.ptr_dianpao_hu_node.active = true;
          let card_count = index + 1;
          let p_x = 0;
          if (0 == card_count) {
            p_x = 125;
            this.ptr_dianpao_hu_node.getComponent(cc.Sprite).enabled = false;
          } else if (card_count >= 1) {
            p_x = 175 + card_count * space_x;
            this.ptr_dianpao_hu_node.getComponent(cc.Sprite).enabled = true;
          }
          this.ptr_dianpao_hu_node.children[0].setPosition(direct_hu_pos_x - 2 * start_offet_x - 10, 0);
          this.ptr_dianpao_hu_node.children[0].active = true;
          let p_y = 148;
          this.ptr_dianpao_hu_node.setContentSize(p_x, p_y);
          this.ptr_btn_hu_confirm.node.active = false;
          cards_3d_layout_1.default.get().hideHandleSelect();
          cards_3d_layout_1.default.get().unselectAllHandCards();
          this.setHideOutingCard();
        }
        doHandle(param_to, param_from, param_type, param_value) {
          this.setOutingCard(param_from);
          let seat_to = this.switch_to_seat(param_to);
          let seat_from = this.switch_to_seat(param_from);
          if (param_type != cards_3d_config_1.HandleType.pass && param_type != cards_3d_config_1.HandleType.hu) {
            this.user_handle_animation_effect(param_type);
            this.user_handle_effect(this.m_game_layer.m_user_data[param_to].cbGender, param_type);
            YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && (47 != param_value || param_type != cards_3d_config_1.HandleType.b_chi_left && param_type != cards_3d_config_1.HandleType.b_chi_mid && param_type != cards_3d_config_1.HandleType.b_chi_right || (param_value = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]));
            cards_3d_layout_1.default.get().playHandleAnimation(seat_to, param_type, param_value, YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]);
            console.log("");
            cards_3d_layout_1.default.get().handle(seat_to, seat_from, param_type, param_value, YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]);
            this.removeHandle(param_to, param_type, param_value);
          }
          seat_from >= 0 && cards_3d_layout_1.default.get().refreshLayout(seat_from, cards_3d_config_1.LayoutCardsType.out);
        }
        removeHandle(view_id, param_type, param_value) {
          let remove_list = [];
          if (view_id != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
            let remove_cnt = 0;
            param_type == cards_3d_config_1.HandleType.b_chi_left || param_type == cards_3d_config_1.HandleType.b_chi_mid || param_type == cards_3d_config_1.HandleType.b_chi_right || param_type == cards_3d_config_1.HandleType.b_peng ? remove_cnt = 2 : param_type == cards_3d_config_1.HandleType.b_gang ? remove_cnt = 3 : param_type == cards_3d_config_1.HandleType.d_gang ? remove_cnt = 4 : param_type == cards_3d_config_1.HandleType.a_gang && (remove_cnt = 1);
            for (let i = 0; i < remove_cnt; i++) remove_list.push(YiFuGameData_1.get_share_game_data().InvalidValue);
            this.m_hand_count[view_id] -= remove_cnt;
          } else {
            let remove_cnt = 0;
            if (param_type == cards_3d_config_1.HandleType.b_chi_left) {
              remove_list.push(param_value + 1);
              remove_list.push(param_value + 2);
              remove_cnt = 2;
            } else if (param_type == cards_3d_config_1.HandleType.b_chi_mid) {
              remove_list.push(param_value - 1);
              remove_list.push(param_value + 1);
              remove_cnt = 2;
            } else if (param_type == cards_3d_config_1.HandleType.b_chi_right) {
              remove_list.push(param_value - 1);
              remove_list.push(param_value - 2);
              remove_cnt = 2;
            } else if (param_type == cards_3d_config_1.HandleType.b_peng) {
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_cnt = 2;
            } else if (param_type == cards_3d_config_1.HandleType.b_gang) {
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_cnt = 3;
            } else if (param_type == cards_3d_config_1.HandleType.d_gang) {
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_list.push(param_value);
              remove_cnt = 4;
            } else if (param_type == cards_3d_config_1.HandleType.a_gang) {
              remove_list.push(param_value);
              remove_cnt = 1;
            }
            this.m_hand_count[view_id] -= remove_cnt;
          }
          for (let i = 0; i < remove_list.length; i++) YiFuGameLogic_1.get_game_logic().removeArrayValue(this.m_hand_values[view_id], remove_list[i]);
          YiFuGameLogic_1.get_game_logic().sortArray(this.m_hand_values[view_id]);
        }
        refresh3DCards() {
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.out);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.out);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.out);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.out);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.heap);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.heap);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.heap);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.heap);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.hand);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.hand);
          cards_3d_layout_1.default.get().refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.hand);
        }
        playBuHuaAnima(view) {
          let seat = this.switch_to_seat(view);
          cards_3d_layout_1.default.get().playHandleAnimation(seat, cards_3d_config_1.HandleType.buhua, null);
          this.playBuHuaEffect(this.m_game_layer.m_user_data[view].cbGender);
        }
        doOutCard(value, b_send) {
          this.clearAnimationHuFire();
          cards_3d_layout_1.default.get().hideHandleSelect();
          cards_3d_layout_1.default.get().unselectAllHandCards();
          cards_3d_layout_1.default.get().setHandCardsCanTouch(true);
          cards_3d_layout_1.default.get().setHandCardsCanOut(false);
          cards_3d_layout_1.default.get().setHandCardsTing([]);
          YiFuGameLogic_1.get_game_logic().removeArrayValue(this.m_hand_values[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN], value);
          this.m_hand_count[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN]--;
          this.out_card_effect(this.m_game_layer.m_user_data[YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN].cbGender, value);
          let the_data = {};
          the_data["out_card"] = value;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_OUTCARD, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          this.show_mopai_animaion(false);
          this.m_have_handle_select = false;
        }
        bindFunc() {
          let that = this;
          cards_3d_layout_1.default.get().setOnConfigDarkGangFunc(function(card_value) {
            return [ cards_3d_config_1.DarkGangConfig.Back, cards_3d_config_1.DarkGangConfig.Back, cards_3d_config_1.DarkGangConfig.Back, cards_3d_config_1.DarkGangConfig.Back ];
          });
          cards_3d_layout_1.default.get().setOnAnyTouchEventFunc(function(param_sender, param_touchType) {});
          cards_3d_layout_1.default.get().setOutCardEndFunc(function(param_view, param_pos) {
            cards_3d_layout_1.default.get().showLastOutCardIndicator(param_view);
            let path = "Game/150/sound/out_card.mp3";
            bind_function_1.bf.play_sound(path, false);
          });
          cards_3d_layout_1.default.get().setClickCardOutFunc(function(param_value) {
            that.doOutCard(param_value, true);
          });
          cards_3d_layout_1.default.get().setMoveCardOutFunc(function(param_value) {
            that.doOutCard(param_value, true);
          });
          cards_3d_layout_1.default.get().setSortCardsFunc(function(param_list) {
            return YiFuGameLogic_1.get_game_logic().sortArray(param_list);
          });
          cards_3d_layout_1.default.get().setFindCardInHandPositionFunc(function(param_cards, param_value) {
            return YiFuGameLogic_1.get_game_logic().findHandIndex(param_cards, param_value);
          });
          cards_3d_layout_1.default.get().setClickCardFunc(function(param_value) {
            let path = "Game/150/sound/switch_up.mp3";
            bind_function_1.bf.play_sound(path, false);
          }.bind(this));
          cards_3d_layout_1.default.get().setHandleClickedFunc(function(arg) {
            console.log("setHandleClickedFunc : ", arg);
            let the_data = {};
            the_data["type"] = arg.handle_type;
            the_data["card"] = arg.card_value;
            bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_OPERATION, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            cards_3d_layout_1.default.get().hideHandleSelect();
            cards_3d_layout_1.default.get().unselectAllHandCards();
            cards_3d_layout_1.default.get().showHandleSelectCanTouch(true);
            that.clearAnimationHuFire();
            that.m_have_handle_select = false;
          });
        }
        showLayer() {
          this.node.active = true;
        }
        hideLayer() {
          cards_3d_layout_1.default.get().reset();
          this.initData();
          this.node.active = false;
        }
        initLeftCount() {
          this.ptr_node_left.active = false;
          this.ptr_label_left.string = "";
        }
        setShowOutingCard(view_id, value) {
          this.setHideOutingCard();
          this.ptr_outing_card[view_id].showCard(value);
        }
        setCanHide(hide) {
          for (let i = 0; i < this.ptr_outing_card.length; i++) this.ptr_outing_card[i].node.active && this.ptr_outing_card[i].setCanHide(hide);
        }
        setHideOutingCard() {
          this.ptr_outing_card.forEach(v => v.node.active = false);
        }
        setOutingCard(view_id) {
          if (-1 == view_id) return;
          null != this.ptr_outing_card[view_id] && void 0 != this.ptr_outing_card[view_id] && this.ptr_outing_card[view_id].hideCard();
        }
        switch_to_seat(view_id) {
          if (-1 == view_id) return view_id;
          let seat = cards_3d_config_1.UserIndex.down;
          0 == view_id ? seat = cards_3d_config_1.UserIndex.up : 1 == view_id ? seat = cards_3d_config_1.UserIndex.left : 2 == view_id ? seat = cards_3d_config_1.UserIndex.down : 3 == view_id && (seat = cards_3d_config_1.UserIndex.right);
          return seat;
        }
        isAllHandCard(hand_count) {
          if (2 == hand_count || 5 == hand_count || 8 == hand_count || 11 == hand_count || 14 == hand_count || 17 == hand_count) return true;
          return false;
        }
        onEventHideHuButton() {
          this.clearAnimationHuFire();
          this.ptr_dianpao_hu_node && (this.ptr_dianpao_hu_node.active = false);
        }
        addEventListeners() {
          this.ptr_catch_node_area.on(cc.Node.EventType.TOUCH_START, this.onScreenTouchStart, this);
          this.ptr_catch_node_area.on(cc.Node.EventType.TOUCH_MOVE, this.onScreenTouchMove, this);
        }
        onScreenTouchStart(event) {
          this.m_game_layer && this.m_game_layer.on_bg_clicked();
        }
        onScreenTouchMove(event) {
          if (this.m_can_catch_card) {
            let touch_move_pos = event.getLocation();
            let touch_start_pos = event.getStartLocation();
            if (touch_start_pos.y - touch_move_pos.y > 50) {
              this.on_catch_click();
              this.m_game_layer.hide_common_hint();
              this.show_mopai_animaion(false);
              this.ptr_catch_node_area.active = false;
            }
          }
        }
        onScreenTouchEnd(event) {}
        out_card_effect(sex, out_card) {
          let path = "Game/150/sound/";
          sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NV ? path += "nv/cards/" : sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NAN && (path += "nan/cards/");
          path = path + out_card + ".mp3";
          bind_function_1.bf.play_sound(path, false);
        }
        user_handle_effect(sex, handle_type) {
          let path = "Game/150/sound/";
          sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NV ? path += "nv/handles/" : sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NAN && (path += "nan/handles/");
          let sound_id = Math.floor(3 * Math.random() + 1);
          handle_type == cards_3d_config_1.HandleType.b_peng ? path = path + "peng_" + sound_id + ".mp3" : handle_type == cards_3d_config_1.HandleType.b_chi_left || handle_type == cards_3d_config_1.HandleType.b_chi_mid || handle_type == cards_3d_config_1.HandleType.b_chi_right ? path = path + "chi_" + sound_id + ".mp3" : handle_type != cards_3d_config_1.HandleType.b_gang && handle_type != cards_3d_config_1.HandleType.d_gang && handle_type != cards_3d_config_1.HandleType.a_gang || (path = path + "gang_" + sound_id + ".mp3");
          bind_function_1.bf.play_sound(path, false);
        }
        user_handle_animation_effect(handle_type) {
          let path = "Game/150/sound/";
          handle_type == cards_3d_config_1.HandleType.b_peng ? path += "ani_peng.mp3" : handle_type == cards_3d_config_1.HandleType.b_chi_left || handle_type == cards_3d_config_1.HandleType.b_chi_mid || handle_type == cards_3d_config_1.HandleType.b_chi_right ? path += "ani_chi.mp3" : handle_type != cards_3d_config_1.HandleType.b_gang && handle_type != cards_3d_config_1.HandleType.d_gang && handle_type != cards_3d_config_1.HandleType.a_gang || (path += "ani_gang.mp3");
          bind_function_1.bf.play_sound(path, false);
        }
        hu_effect(sex) {
          let path = "Game/150/sound/";
          sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NV ? path += "nv/hus/hu.mp3" : sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NAN && (path += "nan/hus/hu.mp3");
          bind_function_1.bf.play_sound(path, false);
        }
        playBuHuaEffect(sex) {
          let path = "Game/150/sound/";
          sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NV ? path += "nv/cards/buhua.mp3" : sex == YiFuGameDefine_1.YiFuGameDefine.SEX_NAN && (path += "nan/cards/buhua.mp3");
          bind_function_1.bf.play_sound(path, false);
        }
      };
      __decorate([ property(YiFuGameEnd_1.YiFuGameEnd) ], YiFuCardLayer.prototype, "game_end_layer", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_caishen_node", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_caishen_node_bg", void 0);
      __decorate([ property(cc.Label) ], YiFuCardLayer.prototype, "ptr_caishen_node_left_count", void 0);
      __decorate([ property(cc.Sprite) ], YiFuCardLayer.prototype, "ptr_caishen", void 0);
      __decorate([ property(YiFuOutCard_1.default) ], YiFuCardLayer.prototype, "ptr_outing_card", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_action_card", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_right_node", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "catch_btn", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_hu", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_hu_confirm", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_hu_node_bg", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_hu_hint_node", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_buhu", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_fire", void 0);
      __decorate([ property(cc.Prefab) ], YiFuCardLayer.prototype, "ptr_prefab_fire", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_close_hu", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_hu_direct", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_dianpao_hu_node", void 0);
      __decorate([ property(YiFuHuCard_1.default) ], YiFuCardLayer.prototype, "HuCards", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_left", void 0);
      __decorate([ property(cc.RichText) ], YiFuCardLayer.prototype, "ptr_label_left", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_animation_cai_shen", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_animation_catch_card", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_animation_hu", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_node_animation_mopai_tishi", void 0);
      __decorate([ property(cc.Button) ], YiFuCardLayer.prototype, "ptr_btn_test", void 0);
      __decorate([ property(cc.Node) ], YiFuCardLayer.prototype, "ptr_catch_node_area", void 0);
      YiFuCardLayer = __decorate([ ccclass ], YiFuCardLayer);
      return YiFuCardLayer;
    })();
    exports.default = YiFuCardLayer;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/cards_3d_logic": "cards_3d_logic",
    "../../../Layout3D/Src/widget/CHandCard3D": "CHandCard3D",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../../Layout3D/Src/widget/CTiledCard3D": "CTiledCard3D",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameEnd": "YiFuGameEnd",
    "./YiFuGameLogic": "YiFuGameLogic",
    "./YiFuGlobalUI": "YiFuGlobalUI",
    "./YiFuHuCard": "YiFuHuCard",
    "./YiFuOutCard": "YiFuOutCard",
    "./YiFuTutorial": "YiFuTutorial",
    "./YiFuUserHead": "YiFuUserHead"
  } ],
  YiFuCombatRecordShareItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d976fOFZfZGhKTCgX68oPJi", "YiFuCombatRecordShareItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuCombatRecordShareItem = void 0;
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuCombatRecordShareItem = (() => {
      let YiFuCombatRecordShareItem = class YiFuCombatRecordShareItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.scoreLabel = null;
          this.winIcon = null;
          this.bgSprite = null;
          this.iconHead = null;
          this.faceFrames = [];
          this.spriteFrames = [];
        }
        start() {}
        setData(win, userId, faceId, sexId, score) {
          let pos_y = 0;
          if (win) {
            this.bgSprite.spriteFrame = this.spriteFrames[0];
            pos_y = -114;
          } else {
            this.bgSprite.spriteFrame = this.spriteFrames[1];
            pos_y = -110;
          }
          this.scoreLabel.node.setPosition(this.scoreLabel.node.getPosition().x, pos_y);
          this.winIcon.node.active = win;
          this.scoreLabel.string = score + "";
          this.iconHead.spriteFrame = 0 == sexId ? this.faceFrames[0] : 1 == sexId ? this.faceFrames[1] : this.faceFrames[2];
          0 != faceId && lobby_framework_1.lobby_framework.fetch_user_head_image(userId, faceId, this.iconHead);
        }
      };
      __decorate([ property(cc.Label) ], YiFuCombatRecordShareItem.prototype, "scoreLabel", void 0);
      __decorate([ property(cc.Sprite) ], YiFuCombatRecordShareItem.prototype, "winIcon", void 0);
      __decorate([ property(cc.Sprite) ], YiFuCombatRecordShareItem.prototype, "bgSprite", void 0);
      __decorate([ property(cc.Sprite) ], YiFuCombatRecordShareItem.prototype, "iconHead", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], YiFuCombatRecordShareItem.prototype, "faceFrames", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], YiFuCombatRecordShareItem.prototype, "spriteFrames", void 0);
      YiFuCombatRecordShareItem = __decorate([ ccclass ], YiFuCombatRecordShareItem);
      return YiFuCombatRecordShareItem;
    })();
    exports.YiFuCombatRecordShareItem = YiFuCombatRecordShareItem;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/lobby_framework": "lobby_framework"
  } ],
  YiFuCombatRecordShare: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "74f57wnqGlIZbRTpkusfVUW", "YiFuCombatRecordShare");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuCombatRecordShare = void 0;
    const PopWindow_1 = require("../../Component/PopWindow");
    const utils_1 = require("../../Framework/common/utils");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const YiFuCombatRecordShareItem_1 = require("./YiFuCombatRecordShareItem");
    const YiFuGameData_1 = require("./YiFuGameData");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuCombatRecordShare = (() => {
      let YiFuCombatRecordShare = class YiFuCombatRecordShare extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.timeLabel = null;
          this.itemPrefab = null;
          this.layoutNode = null;
          this.closeButton = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeButton, this.node, "YiFuCombatRecordShare", "onCloseButtonClicked");
        }
        start() {}
        clear() {
          this.layoutNode.removeAllChildren();
        }
        setData() {
          this.clear();
          let datas = YiFuGameData_1.get_share_game_data().game_end_user_data;
          datas.sort((a, b) => b.score - a.score);
          let max = datas[0].score;
          let win_list = [];
          for (let j = 0; j < datas.length; j++) 0 != datas[j].score && datas[j].score == max && win_list.push(datas[j].chair);
          for (let i = 0; i < datas.length; i++) {
            let item = cc.instantiate(this.itemPrefab).getComponent(YiFuCombatRecordShareItem_1.YiFuCombatRecordShareItem);
            this.layoutNode.addChild(item.node);
            let data = datas[i];
            let win = 0 != data.score && data.score == max;
            item.setData(win, data.userid, data.sexid, data.faceid, data.score);
          }
          this.getTime();
          setTimeout(() => {
            this.toTempFilePath(path => {
              this.share({
                title: "\u5404\u4f4d\u5144\u53f0\uff0c\u6765\u65e5\u518d\u6218\uff01",
                imageUrl: global_data_1.global_data._str_invite_reward_share_img_url
              });
            });
          }, 150);
        }
        getTime() {
          let time = new Date();
          this.timeLabel.string = time.getFullYear() + "-" + (time.getMonth() + 1) + "-" + time.getDate() + " " + time.getHours() + ":" + (time.getMinutes() < 10 ? "0" + time.getMinutes() : time.getMinutes()) + ":" + (time.getSeconds() < 10 ? "0" + time.getSeconds() : time.getSeconds());
        }
        onCloseButtonClicked() {
          this.hide();
        }
        toTempFilePath(callback) {
          console.log("cc.game.canvas.width  : ", cc.game.canvas.width);
          console.log("cc.game.canvas.height  : ", cc.game.canvas.height);
          let scale = cc.game.canvas.height / 1080;
          cc.game.canvas.toTempFilePath({
            x: cc.game.canvas.width / 2 - 360 * scale,
            y: cc.game.canvas.height / 2 - 286 * scale,
            width: 720 * scale,
            height: 574 * scale,
            destWidth: 500,
            destHeight: 400,
            fileType: "jpg",
            success: res => {
              console.log("toTempFilePath success :", res.tempFilePath);
              callback(res.tempFilePath);
            },
            fail(res) {
              console.log("fail : ", res);
            }
          });
          console.log("cc.winSize.width / cc.winSize.height :  ", cc.winSize.width / cc.winSize.height);
        }
        share(obj) {
          wx.showShareMenu({
            withShareTicket: true,
            success: () => {
              wx.shareAppMessage({
                title: obj.title,
                imageUrl: obj.imageUrl,
                query: obj.query
              });
              console.log("shareAppMessage success");
            },
            fail: () => {
              console.log("shareAppMessage fail");
            }
          });
        }
      };
      __decorate([ property(cc.Label) ], YiFuCombatRecordShare.prototype, "timeLabel", void 0);
      __decorate([ property(cc.Prefab) ], YiFuCombatRecordShare.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Node) ], YiFuCombatRecordShare.prototype, "layoutNode", void 0);
      __decorate([ property(cc.Button) ], YiFuCombatRecordShare.prototype, "closeButton", void 0);
      YiFuCombatRecordShare = __decorate([ ccclass ], YiFuCombatRecordShare);
      return YiFuCombatRecordShare;
    })();
    exports.YiFuCombatRecordShare = YiFuCombatRecordShare;
    cc._RF.pop();
  }, {
    "../../Component/PopWindow": "PopWindow",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/global_data": "global_data",
    "./YiFuCombatRecordShareItem": "YiFuCombatRecordShareItem",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuGameChat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "68fc5am591M3IxFdTyVX2/l", "YiFuGameChat");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameChat = void 0;
    const utils_1 = require("../../../Framework/common/utils");
    const sound_manager_1 = require("../../../Framework/lobby/sound_manager");
    const bind_function_1 = require("../../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameChat = (() => {
      let YiFuGameChat = class YiFuGameChat extends cc.Component {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.commonChatPanel = null;
          this.commonChatRoot = null;
          this.commonChatTextPrefab = null;
          this.commonChatLinePrefab = null;
          this.commonChatScrollView = null;
          this.m_win_size = 0;
          this.offset_x = 0;
          this.move_to_time = .2;
          this.start_pos = null;
          this.end_pos = null;
        }
        onLoad() {}
        onCloseClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("closeChat", true));
        }
        onCommonChatClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toCommonChat", true));
        }
        onChatRecordClick(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("toChatRecord", true));
        }
        start() {
          this.safe_on("closeChat", this.closeChat, this);
          this.safe_on("toCommonChat", this.toCommonChat, this);
          this.safe_on("textClicked", this.textClicked, this);
        }
        init() {
          this.m_win_size = cc.winSize.width;
          this.m_win_size > 1520 ? this.offset_x += 260 : this.offset_x += 180;
          let end_pos_x = -this.m_win_size / 2 + this.offset_x;
          let end_pos_y = this.node.y;
          this.end_pos = cc.v2(end_pos_x, end_pos_y);
          let start_pos_x = -this.m_win_size / 2 + this.offset_x - 400;
          let start_pos_y = this.node.y;
          this.start_pos = cc.v2(start_pos_x, start_pos_y);
          this.node.setPosition(this.start_pos);
        }
        setCommonChatNode(rootNode) {
          let world = rootNode.convertToWorldSpaceAR(rootNode.getPosition());
          let local = this.node.parent.convertToNodeSpaceAR(world);
          this.node.setPosition(local.add(cc.v2(170, 270)));
        }
        onEnable() {}
        onDestroy() {}
        onCloseGameChat() {}
        closeChat(event) {
          this.hide();
        }
        toCommonChat(event) {
          this.commonChatPanel.active = true;
          this.commonChatScrollView.scrollToTop();
        }
        toChatRecord(event) {
          this.commonChatPanel.active = false;
        }
        textClicked(event) {
          let text = event.getUserData();
          text.length > 0 && bind_function_1.bf.send_user_chat(text);
          this.hide();
        }
        setCommonChat(array_string) {
          this.commonChatRoot.removeAllChildren();
          for (let s of array_string) {
            let label = utils_1.utils.add_instance_to_root(this.commonChatTextPrefab, this.commonChatRoot, cc.Label);
            label.string = s;
            utils_1.utils.add_instance_to_root(this.commonChatLinePrefab, this.commonChatRoot);
          }
        }
        hide() {
          this.node.active = false;
        }
        show() {
          this.node.active = true;
          this.commonChatScrollView.scrollToTop();
        }
      };
      __decorate([ property(cc.Node) ], YiFuGameChat.prototype, "rootNode", void 0);
      __decorate([ property(cc.Node) ], YiFuGameChat.prototype, "commonChatPanel", void 0);
      __decorate([ property(cc.Node) ], YiFuGameChat.prototype, "commonChatRoot", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameChat.prototype, "commonChatTextPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameChat.prototype, "commonChatLinePrefab", void 0);
      __decorate([ property(cc.ScrollView) ], YiFuGameChat.prototype, "commonChatScrollView", void 0);
      YiFuGameChat = __decorate([ ccclass ], YiFuGameChat);
      return YiFuGameChat;
    })();
    exports.YiFuGameChat = YiFuGameChat;
    cc._RF.pop();
  }, {
    "../../../Framework/common/utils": "utils",
    "../../../Framework/lobby/bind_function": "bind_function",
    "../../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  YiFuGameData: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c4e8eWyjKJAx48lH06CUgWj", "YiFuGameData");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.get_share_game_data = exports.YiFuGameData = void 0;
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameData = (() => {
      let YiFuGameData = class YiFuGameData extends cc.Component {
        constructor() {
          super(...arguments);
          this.InvalidValue = cards_3d_config_1.InvalidValue;
          this.BankChairID = -2;
          this.BankerViewID = 0;
          this.BankerLian = 0;
          this.BankerAni = false;
          this.LastBanker = -1;
          this.LastHuChair = [];
          this.muteEarphone = false;
          this.muteMicrophone = false;
          this.statusMicrophone = [];
          this.statusEarphone = [];
          this.haveInitVoiceRoom = false;
          this.GamePlayer = 2;
          this.HandCardCount = 0;
          this.HaveCaiShen = false;
          this.BAIBANSWITCHCAISHEN = false;
          this.HaveZhuaMa = false;
          this.CaiShenCount = 0;
          this.CaiShenCardValue = [];
          this.GameEndCloseTime = 0;
          this.GameOwner = -1;
          this.IsOwner = false;
          this.GameCount = 0;
          this.GameAllCount = -2;
          this.TableCode = -1;
          this.TabelName = "";
          this.GameResults = [];
          this.SelfHuHandCount = 0;
          this.CardCountLeft = 0;
          this.HaveGetCaiShen = false;
          this.UserSeatList = [];
          this.SelfSeat = -1;
          this.CanChangeSeat = false;
          this.IsGetSeat = false;
          this.Share_Text = [];
          this.HuPlayerCount = -1;
          this.HuFirstPlayer = -1;
          this.selfHaveAgreeXiPai = false;
          this.HaveHuPlayer = false;
          this.UserStatus = -1;
          this.ScreenFit = 60;
          this.game_end_user_data = [];
          this.TutorialUserName = [ "\u5f20\u4e09", "\u674e\u56db", "\u738b\u4e94", "\u8d75\u516d" ];
          this.score_actions = [ [], [], [], [] ];
          this.score_actions_lock = [ false, false, false, false ];
          this.records = [];
        }
        get_user_room_score_records(chair) {
          let self_records = [];
          self_records = get_share_game_data().records.filter(v => v.from_chair == chair || v.to_chair == chair);
          self_records.sort((a, b) => b.time - a.time);
          return self_records;
        }
        get_user_game_score_record(chair) {
          let self_records = [];
          self_records = get_share_game_data().records.filter(v => v.game_index == get_share_game_data().GameCount - 1 && v.to_chair == chair && v.game_index2 == get_share_game_data().GameCount);
          var _records = new Map();
          if (0 == self_records.length) return _records;
          for (let i = 0; i < self_records.length; i++) {
            let data = self_records[i];
            if (_records.has(data.from_chair)) {
              let temp = _records.get(data.from_chair) + data.score;
              _records.set(data.from_chair, temp);
            } else _records.set(data.from_chair, data.score);
          }
          return _records;
        }
        check_user_datas(userdatas) {
          if (2 == get_share_game_data().GamePlayer) {
            for (let i = 0; i < userdatas.length; i++) if (0 != i && 2 != i) {
              let user_data = userdatas[i];
              null == user_data && void 0 == user_data || (userdatas[i] = null);
            }
          } else if (3 == get_share_game_data().GamePlayer) for (let i = 0; i < userdatas.length; i++) if (1 != i && 2 != i && 3 != i) {
            let user_data = userdatas[i];
            null == user_data && void 0 == user_data || (userdatas[i] = null);
          }
          return userdatas;
        }
        isLastGame() {
          return get_share_game_data().GameAllCount == get_share_game_data().GameCount;
        }
        checkGameTutorialFinished() {
          let check = utils_1.utils.getLocalStorage("CheckGameTutorialFinished");
          if (check && Number(check)) return true;
          return false;
        }
        checkOwnGameTutorialFinished() {
          return !get_share_game_data().checkGameTutorialFinished() && get_share_game_data().IsOwner;
        }
      };
      YiFuGameData = __decorate([ ccclass ], YiFuGameData);
      return YiFuGameData;
    })();
    exports.YiFuGameData = YiFuGameData;
    var ptr_global_data = null;
    function get_share_game_data() {
      ptr_global_data = null != ptr_global_data ? ptr_global_data : new YiFuGameData();
      return ptr_global_data;
    }
    exports.get_share_game_data = get_share_game_data;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../Framework/common/utils": "utils"
  } ],
  YiFuGameDefine: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d1d118O5shPr5ZGbXpiI+zC", "YiFuGameDefine");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameDefine = void 0;
    var YiFuGameDefine;
    (function(YiFuGameDefine) {
      YiFuGameDefine.SUB_C_SEND_CARD = 1001;
      YiFuGameDefine.SUB_C_CAISHEN = 1002;
      YiFuGameDefine.SUB_C_XIPAI = 1003;
      YiFuGameDefine.SUB_C_END = 1004;
      YiFuGameDefine.SUB_C_OUTCARD = 1005;
      YiFuGameDefine.SUB_C_OPERATION = 1006;
      YiFuGameDefine.SUB_C_HU = 1007;
      YiFuGameDefine.SUB_C_AGREE_XIPAI = 1008;
      YiFuGameDefine.SUB_C_AGREE_END = 1009;
      YiFuGameDefine.SUB_C_CATCH_CARD = 1010;
      YiFuGameDefine.SUB_C_SELECT_HU = 1011;
      YiFuGameDefine.SUB_C_EXIT_GAME = 1012;
      YiFuGameDefine.SUB_C_GAME_SCORE = 1013;
      YiFuGameDefine.SUB_C_ASK_CHANGE_SEAT = 1014;
      YiFuGameDefine.SUB_C_CHANGE_SEAT_ANSWER = 1015;
      YiFuGameDefine.SUB_C_SEND_GIFT = 1016;
      YiFuGameDefine.SUB_C_START_GAME_LESS_PEOPLE = 1017;
      YiFuGameDefine.SUB_C_MICROPHONE_POWER = 1018;
      YiFuGameDefine.SUB_C_EARPHONE_POWER = 1019;
      YiFuGameDefine.SUB_C_CHANCE_GAME_COUNT = 1020;
      YiFuGameDefine.SUB_C_TUTORIAL_START = 1021;
      YiFuGameDefine.SUB_C_TUTORIAL_END = 1022;
      YiFuGameDefine.SUB_C_ZHUAMA_BEGIN = 1024;
      YiFuGameDefine.SUB_C_ZHUAMA_END = 1025;
      YiFuGameDefine.SUB_C_ZHUAMA_COUNT = 1026;
      YiFuGameDefine.SUB_S_GAME_CONFIG = 101;
      YiFuGameDefine.SUB_S_BUTTON_POWER = 102;
      YiFuGameDefine.SUB_S_CAISHEN_CARD = 103;
      YiFuGameDefine.SUB_S_HAND_CARDS = 104;
      YiFuGameDefine.SUB_S_CATCH_CARD = 105;
      YiFuGameDefine.SUB_S_OPERATION = 106;
      YiFuGameDefine.SUB_S_OPERATION_RESULT = 107;
      YiFuGameDefine.SUB_S_OUT_CARD = 108;
      YiFuGameDefine.SUB_S_BUHUA = 109;
      YiFuGameDefine.SUB_S_HEAP_CARD = 110;
      YiFuGameDefine.SUB_S_HEAP_OUT_CARD = 111;
      YiFuGameDefine.SUB_S_GAME_CLOCK = 112;
      YiFuGameDefine.SUB_S_BANKER = 113;
      YiFuGameDefine.SUB_S_HUA_CARDS = 114;
      YiFuGameDefine.SUB_S_HU = 115;
      YiFuGameDefine.SUB_S_ASK_END = 117;
      YiFuGameDefine.SUB_S_ASK_XIPAI = 116;
      YiFuGameDefine.SUB_S_AGREE_XIPAI = 118;
      YiFuGameDefine.SUB_S_AGREE_END = 119;
      YiFuGameDefine.SUB_S_GAME_FINISH = 120;
      YiFuGameDefine.SUB_S_HINT_POWER = 121;
      YiFuGameDefine.SUB_S_SHOW_XIPAI = 122;
      YiFuGameDefine.SUB_S_SELECT_HU = 123;
      YiFuGameDefine.SUB_S_SELECT_HU_CARD = 124;
      YiFuGameDefine.SUB_S_CARD_COUNT = 125;
      YiFuGameDefine.SUB_S_USER_STATUS = 126;
      YiFuGameDefine.SUB_S_GAME_SCORE = 127;
      YiFuGameDefine.SUB_S_SCORE_RECORD = 128;
      YiFuGameDefine.SUB_S_USER_SEAT = 129;
      YiFuGameDefine.SUB_S_ASK_CHANGE_SEAT = 130;
      YiFuGameDefine.SUB_S_GAME_HINT = 131;
      YiFuGameDefine.SUB_S_SEND_GIFT = 132;
      YiFuGameDefine.SUB_S_GAME_START = 133;
      YiFuGameDefine.SUB_S_GAME_EXIT = 134;
      YiFuGameDefine.SUB_S_EXIT_END = 135;
      YiFuGameDefine.SUB_S_GAME_COUNT = 136;
      YiFuGameDefine.SUB_S_LAST_GAME_DATA = 137;
      YiFuGameDefine.SUB_S_CHANGE_SEAT_ANSWER = 138;
      YiFuGameDefine.SUB_S_MICROPHONE_POWER = 139;
      YiFuGameDefine.SUB_S_EARPHONE_POWER = 140;
      YiFuGameDefine.SUB_S_ASK_GAME_COUNT = 141;
      YiFuGameDefine.SUB_S_TUTORIAL_USER_ENTER = 142;
      YiFuGameDefine.SUB_S_ZHUA_MA_OPERATION = 143;
      YiFuGameDefine.SUB_S_ZHUA_MA_CRADS = 144;
      YiFuGameDefine.HINT_WAIT_HANDLE = 1;
      YiFuGameDefine.YF_MJ_NULL = 0;
      YiFuGameDefine.YF_MJ_CANCEL = 1;
      YiFuGameDefine.YF_MJ_RIGHTCHI = 2;
      YiFuGameDefine.YF_MJ_ZHONGCHI = 4;
      YiFuGameDefine.YF_MJ_LEFTCHI = 8;
      YiFuGameDefine.YF_MJ_PENG = 16;
      YiFuGameDefine.YF_MJ_MINGGANG1 = 32;
      YiFuGameDefine.YF_MJ_MINGGANG2 = 64;
      YiFuGameDefine.YF_MJ_ANGANG = 128;
      YiFuGameDefine.YF_MJ_HU = 256;
      YiFuGameDefine.YF_MJ_DUOGANG = 512;
      YiFuGameDefine.YF_MJ_HU_MINGGANG2 = 1024;
      YiFuGameDefine.OUT_STAGE_NULL = 0;
      YiFuGameDefine.OUT_STAGE_OUT = 1;
      YiFuGameDefine.OUT_STAGE_IN = 2;
      YiFuGameDefine.USER_INDEX_UP = 0;
      YiFuGameDefine.USER_INDEX_RIGHT = 1;
      YiFuGameDefine.USER_INDEX_DOWN = 2;
      YiFuGameDefine.USER_INDEX_LEFT = 3;
      YiFuGameDefine.HINT_STATUS_XIPAI = 1;
      YiFuGameDefine.HINT_STATUS_END = 2;
      YiFuGameDefine.HINT_STATUS_CHANGE_SEAT = 3;
      YiFuGameDefine.HINT_STATUS_GAME_END = 4;
      YiFuGameDefine.USER_STATUS_SEND_CARD = 1;
      YiFuGameDefine.USER_STATUS_CAI_SHEN = 2;
      YiFuGameDefine.USER_STATUS_LEFT = 3;
      YiFuGameDefine.USER_STATUS_HU_ING = 4;
      YiFuGameDefine.USER_STATUS_HU = 5;
      YiFuGameDefine.USER_STATUS_HU_ZIMO = 6;
      YiFuGameDefine.USER_STATUS_NULL = 0;
      YiFuGameDefine.USER_STATUS_FREE = 1;
      YiFuGameDefine.USER_STATUS_SIT = 2;
      YiFuGameDefine.USER_STATUS_READY = 3;
      YiFuGameDefine.USER_STATUS_LOOKON = 4;
      YiFuGameDefine.USER_STATUS_PLAY = 5;
      YiFuGameDefine.USER_STATUS_OFFLINE = 6;
      YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE = 1;
      YiFuGameDefine.USER_STATUS_GAME_START_BEFORE = 2;
      YiFuGameDefine.USER_STATUS_GAME_PALY = 3;
      YiFuGameDefine.USER_STATUS_GAME_END = 4;
      YiFuGameDefine.USER_STATUS_GAME_XIPAI = 5;
      YiFuGameDefine.USER_OP_STATUS_NULL = 0;
      YiFuGameDefine.USER_OP_STATUS_XIPAI = 1;
      YiFuGameDefine.USER_OP_STATUS_FAPAI = 2;
      YiFuGameDefine.USER_OP_STATUS_FANCAISHEN = 3;
      YiFuGameDefine.USER_OP_STATUS_HUPAI_ING = 4;
      YiFuGameDefine.USER_OP_STATUS_HUPAI = 5;
      YiFuGameDefine.USER_OP_STATUS_REFUSE = 6;
      YiFuGameDefine.USER_OP_STATUS_WAIT = 7;
      YiFuGameDefine.USER_OP_STATUS_CHANGE_SEAT = 8;
      YiFuGameDefine.USER_OP_STATUS_HUPAI_ZIMO = 9;
      YiFuGameDefine.USER_LEAVE_STATUS_NULL = 0;
      YiFuGameDefine.USER_LEAVE_STATUS_ZANLI = 1;
      YiFuGameDefine.USER_LEAVE_STATUS_LIKAI = 2;
      YiFuGameDefine.BUTTON_OUTCARD = 1;
      YiFuGameDefine.BUTTON_SEND_CARD = 2;
      YiFuGameDefine.BUTTON_CAI_SHEN = 4;
      YiFuGameDefine.BUTTON_POWER_INVITE = 8;
      YiFuGameDefine.BUTTON_CATCH_CARD = 16;
      YiFuGameDefine.BUTTON_START_GAME = 32;
      YiFuGameDefine.BUTTTON_EXIT_ROOM = 1;
      YiFuGameDefine.BUTTTON_END_GAME = 2;
      YiFuGameDefine.SEX_NV = 0;
      YiFuGameDefine.SEX_NAN = 1;
    })(YiFuGameDefine = exports.YiFuGameDefine || (exports.YiFuGameDefine = {}));
    cc._RF.pop();
  }, {} ],
  YiFuGameEndHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e155dWC7WhFfbSOgNUPdiDR", "YiFuGameEndHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuGameData_1 = require("./YiFuGameData");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameEndHead = (() => {
      let YiFuGameEndHead = class YiFuGameEndHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.headNode = null;
          this.headMask = null;
          this.user_data = null;
        }
        start() {}
        getChair() {
          return this.user_data.wChairID;
        }
        setData(_user_data) {
          this.user_data = _user_data;
          var _head = null;
          _head || (_head = bind_function_1.bf.set_user_head_node(this.headNode));
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) _head.setData(40, 40, _user_data.dwUserID, _user_data.wFaceID, _user_data.cbGender); else {
            let user_data = bind_function_1.bf.get_user_data_by_chair_id(this.user_data.wChairID);
            _head.setData(40, 40, user_data.dwUserID, user_data.wFaceID, user_data.cbGender);
          }
          this.headMask.active = false;
        }
        showHeadMask() {
          this.headMask.active = true;
        }
      };
      __decorate([ property(cc.Node) ], YiFuGameEndHead.prototype, "headNode", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEndHead.prototype, "headMask", void 0);
      YiFuGameEndHead = __decorate([ ccclass ], YiFuGameEndHead);
      return YiFuGameEndHead;
    })();
    exports.default = YiFuGameEndHead;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuGameEndScoreLable: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "aeeabeaUONJ0YhFtsesM8rh", "YiFuGameEndScoreLable");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameEndScoreLable = void 0;
    const YiFuGameData_1 = require("./YiFuGameData");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameEndScoreLable = (() => {
      let YiFuGameEndScoreLable = class YiFuGameEndScoreLable extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
        }
        start() {}
        setData(self_chair_id, chair_id, socore) {
          let str = "";
          if (chair_id == bind_function_1.bf.get_self_user_data().wChairID) str = "\u6211"; else {
            str = bind_function_1.bf.clamp_nickname(bind_function_1.bf.get_user_data_by_chair_id(chair_id).szName, 4);
            false;
          }
          this.label.string = str + " \u5212\u5206 " + socore;
        }
      };
      __decorate([ property(cc.Label) ], YiFuGameEndScoreLable.prototype, "label", void 0);
      YiFuGameEndScoreLable = __decorate([ ccclass ], YiFuGameEndScoreLable);
      return YiFuGameEndScoreLable;
    })();
    exports.YiFuGameEndScoreLable = YiFuGameEndScoreLable;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuGameEnd: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "091dbUkY1ZHxJ9MeUseyKMd", "YiFuGameEnd");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameEnd = void 0;
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuHuUserResultItem_1 = require("./YiFuHuUserResultItem");
    const utils_1 = require("../../Framework/common/utils");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const YiFuKeyBoard_1 = require("./YiFuKeyBoard");
    const YiFuGameEndScoreLable_1 = require("./YiFuGameEndScoreLable");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const YiFuGameEndHead_1 = require("./YiFuGameEndHead");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameEnd = (() => {
      let YiFuGameEnd = class YiFuGameEnd extends cc.Component {
        constructor() {
          super(...arguments);
          this.headLayout = null;
          this.scoreLayout = null;
          this.maskNode = null;
          this.rootNode = null;
          this.ptr_agree_heads_root = null;
          this.ptr_agree_head_prefab = null;
          this.socreLablePrefab = null;
          this.tabButtonPrefab = null;
          this.cardGround = null;
          this.ptr_btn_huafen = null;
          this.ptr_btn_open = null;
          this.ptr_btn_xipai = null;
          this.ptr_btn_share = null;
          this.ptr_btn_zhuama = null;
          this.ptr_btn_have_ready = null;
          this.ptr_line_info = null;
          this.ptr_hua_info = null;
          this.ptr_head_node = null;
          this.ptr_head = null;
          this.ptr_handle_type_sprite = null;
          this.ptr_chu_sprite = null;
          this.ptr_gang_sprite = null;
          this.ptr_zimo_sprite = null;
          this.ptr_direct_hu_sprite = null;
          this.ptr_zhuama_node = null;
          this.ptr_zhuama_layout = null;
          this.ptr_zhuama_tip_label = null;
          this.defaultTab = null;
          this.currentTabData = null;
          this.currentTab = null;
          this.resultItems = [];
          this.m_handled_cards_pos = [];
          this.m_hand_cards = [];
          this.list_corner = null;
          this.timer_update_func = null;
          this.m_left_time = 0;
          this.ptr_user_head = null;
          this.m_game_layer = null;
          this.m_card_layer = null;
          this.handle_card_space_x = 204;
          this.offset_begin_x = 0;
          this.offset_handle_and_hand_x = 34;
          this.offset_common_x = 10;
          this.offset_zimo_x = 80;
          this.offset_head_x = 110;
          this.reset_line_info_y = 31;
          this.scale = .7;
          this.card_width = 64;
          this.hu_type_pos = cc.v2(0, 0);
          this.bool_init_head = false;
          this.toggle_id = 0;
          this.have_done_map = null;
          this.delay_time = .15;
          this.int_zhuama_id = -1;
          this.int_zhuama_count_last = 0;
          this.rootPosition = cc.v2(0, 75);
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ptr_btn_huafen, this.node, "YiFuGameEnd", "OnHuaFenClicked");
          utils_1.utils.bind_button_event(this.ptr_btn_open, this.node, "YiFuGameEnd", "OnOpenClicked");
          utils_1.utils.bind_button_event(this.ptr_btn_xipai, this.node, "YiFuGameEnd", "OnXiPaiClicked");
          utils_1.utils.bind_button_event(this.ptr_btn_share, this.node, "YiFuGameEnd", "OnShareClicked");
          utils_1.utils.bind_button_event(this.ptr_btn_zhuama, this.node, "YiFuGameEnd", "OnZhuaMaClicked");
          utils_1.utils.on("updateKeyBoardVisiable", this, this.updateHuaFenVisiable);
          this.safe_on("ResultItemTabClick", this.onSwitchTab, this);
          this.maskNode.on(cc.Node.EventType.TOUCH_END, this.onMaskNodeTouchEnd, this);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_2_2, this.ptr_btn_huafen.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_2_3, this.ptr_btn_xipai.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_3_4, this.node);
          this.int_zhuama_count_last = 0;
          let data = utils_1.utils.getLocalStorage("zhuama_count");
          null == data || 0 == data.length || isNaN(parseInt(data)) || (this.int_zhuama_count_last = parseInt(data));
          this.init();
        }
        init() {
          this.handle_card_space_x = this.handle_card_space_x * this.scale;
          for (let i = 0; i < 5; i++) this.m_handled_cards_pos[i] = cc.v2(this.offset_begin_x + i * this.handle_card_space_x, 0);
          this.headLayout.setPosition(this.headLayout.getPosition().x, 36);
          this.scoreLayout.setPosition(this.headLayout.getPosition().x + 11.5, 145);
          this.have_done_map = new Map();
          this.clearData();
        }
        initStartPos(data) {
          this.hu_type_pos = cc.v2(0, 0);
          let json_handle = data.heap_cards;
          let handle_x = json_handle.length * this.handle_card_space_x;
          let handle_and_hand_space_x = 0;
          let add_1_x = 0;
          add_1_x = 50;
          let sub = 0;
          sub = this.m_card_layer.isAllHandCard(data.hand_cards.length) ? 0 : -1;
          let hand_x = (data.hand_cards.length - sub) * this.card_width * this.scale + add_1_x;
          let type = data.hu_type;
          let hu_card_type_x = 0;
          let all_length = handle_x + handle_and_hand_space_x + hand_x + hu_card_type_x;
          let line_info_y = -10;
          let hua_info_y = 70;
          if (0 != handle_x) {
            let pos = cc.v2(.5 * -all_length + .5 * this.handle_card_space_x, line_info_y);
            this.ptr_line_info.setPosition(pos);
            this.ptr_hua_info.setPosition(pos.x, hua_info_y);
          } else {
            let pos = cc.v2(.5 * -all_length, line_info_y);
            this.ptr_line_info.setPosition(pos);
            this.ptr_hua_info.setPosition(pos.x, hua_info_y);
          }
          data.hua && 0 == data.hua.length && this.ptr_line_info.setPosition(this.ptr_line_info.getPosition().x, this.reset_line_info_y);
        }
        onSwitchTab(event) {
          let tabData = event.target.getComponent(YiFuHuUserResultItem_1.YiFuHuUserResultItem);
          this.currentTab = tabData;
          let data = tabData._data;
          this.resultItems.forEach(v => {
            v.showHuaFening(false);
          });
          this.updateRedPoint(tabData);
          this.userScoreRecord(data.chair_id);
          if (data != this.currentTabData) {
            this.changeToggleBackGround(data.id);
            this.currentTabData = data;
            this.ptr_line_info.removeAllChildren();
            this.ptr_hua_info.removeAllChildren();
            YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
            this.initStartPos(data);
            let type = data.hu_type;
            let json_handle = data.heap_cards;
            this.setHeapCard(json_handle);
            this.setHandCards(data.hand_cards, json_handle);
            this.setHuaCards(data.hua, json_handle.length);
            this.updateHuaFenVisiable();
            this.ptr_head_node.active = false;
            this.ptr_zimo_sprite.node.active = false;
            this.ptr_direct_hu_sprite.node.active = false;
            0 != json_handle.length && (this.hu_type_pos.x += 34);
            let no_hua = !(!data.hua || 0 != data.hua.length);
            if (type == cards_3d_config_1.HandleType.jiang) {
              this.ptr_zimo_sprite.node.active = true;
              this.ptr_zimo_sprite.node.setPosition(this.hu_type_pos.add(cc.v2(this.offset_zimo_x, -12)));
              no_hua && this.ptr_zimo_sprite.node.setPosition(this.hu_type_pos.add(cc.v2(this.offset_zimo_x, this.reset_line_info_y)));
            } else if (-1 == type) ; else {
              this.ptr_head_node.setPosition(this.hu_type_pos.add(cc.v2(this.offset_head_x, -15)));
              no_hua && this.ptr_head_node.setPosition(this.ptr_head_node.getPosition().x, 21);
              this.ptr_head_node.active = true;
              this.ptr_user_head || (this.ptr_user_head = bind_function_1.bf.set_user_head_node(this.ptr_head));
              let user_data = bind_function_1.bf.get_user_data_by_chair_id(data.hu_chair_id);
              user_data ? this.ptr_user_head.setData(83, 83, user_data.dwUserID, user_data.wFaceID, user_data.cbGender) : this.ptr_user_head.setData(83, 83, 0, 0, 2);
              type == cards_3d_config_1.HandleType.a_gang ? this.ptr_handle_type_sprite.spriteFrame = this.ptr_gang_sprite : this.ptr_handle_type_sprite.spriteFrame = this.ptr_chu_sprite;
            }
          }
          this.refleshZhuamaBtn();
          this.showShareBtn();
          2 == YiFuGameData_1.get_share_game_data().GameCount ? tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_2_2) : 3 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_3_4);
        }
        showShareBtn() {
          if (YiFuGameData_1.get_share_game_data().isLastGame()) {
            this.ptr_btn_share.node.active = true;
            this.ptr_btn_xipai.node.active = false;
            this.ptr_btn_have_ready.node.active = false;
          }
        }
        onDestroy() {
          utils_1.utils.off("updateKeyBoardVisiable", this, this.updateHuaFenVisiable);
          this.maskNode.off(cc.Node.EventType.TOUCH_END, this.onMaskNodeTouchEnd, this);
          if (null != this.timer_update_func) {
            this.unschedule(this.timer_update_func);
            this.timer_update_func = null;
          }
          utils_1.utils.setLocalStorage("zhuama_count", this.int_zhuama_count_last.toString());
        }
        clearRootChlid() {
          this.headLayout.removeAllChildren();
          this.scoreLayout.removeAllChildren();
        }
        fitCardScale() {
          14 == YiFuGameData_1.get_share_game_data().HandCardCount ? this.scale = .7 : 17 == YiFuGameData_1.get_share_game_data().HandCardCount && (this.scale = .7);
          this.list_corner = [];
          1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length && (this.list_corner[YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]] = 1);
        }
        clearData() {
          this.node.active = false;
          this.defaultTab = null;
          this.ptr_agree_heads_root.active = false;
          this.bool_init_head = false;
          this.resultItems = [];
          YiFuGameData_1.get_share_game_data().SelfHuHandCount = 0;
          null != this.have_done_map && this.have_done_map.clear();
          this.clearRootChlid();
          this.toggle_id = 0;
          this.ptr_btn_xipai.node.active = true;
          this.ptr_btn_have_ready.node.active = false;
          this.ptr_btn_share.node.active = false;
          if (null != this.timer_update_func) {
            this.unschedule(this.timer_update_func);
            this.timer_update_func = null;
          }
          this.int_zhuama_id = -1;
          this.initZhuaMaUI();
          this.ptr_zhuama_layout.removeAllChildren();
        }
        set_card_layer(param_layer) {
          this.m_card_layer = param_layer;
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        updateData(resultDatas, isDelay) {
          let that = this;
          YiFuGameData_1.get_share_game_data().HaveZhuaMa ? this.rootPosition = cc.v2(70, 75) : this.rootPosition = cc.v2(0, 75);
          if (null != this.timer_update_func) {
            this.unschedule(this.timer_update_func);
            this.timer_update_func = null;
          }
          let callBack = function() {
            that.node.active = true;
            that.rootNode.scale = 1;
            that.rootNode.setPosition(that.rootPosition);
            that.initHead(that.m_game_layer.m_wait_userdata);
            that.fitCardScale();
            let resultDatas = YiFuGameData_1.get_share_game_data().GameResults;
            console.log(" resultDatas ; ", resultDatas);
            for (let i = 0; i < resultDatas.length; i++) {
              let singleData = resultDatas[i];
              that.markSelfHuHandCount(singleData);
              if (that.have_done_map.get(singleData.hu_chair)) continue;
              that.have_done_map.set(singleData.hu_chair, 1);
              let data = new YiFuHuUserResultItem_1.YiFuHuUserResultItemData(that.toggle_id, singleData.hu_chair, singleData.handle, singleData.cards, singleData.heap_cards, singleData.hua, singleData.card_chair, 1 << singleData.hu_chair + 1);
              that.addTab(data);
              that.toggle_id++;
            }
            that.defaultTab.node.dispatchEvent(new cc.Event.EventCustom("ResultItemTabClick", true));
            that.node.active = true;
          };
          that.timer_update_func = function(dt) {
            that.m_left_time -= dt;
            if (that.m_left_time < 0) {
              that.m_left_time = 0;
              that.unschedule(this.timer_update_func);
              that.timer_update_func = null;
              callBack();
            }
          };
          if (isDelay) {
            this.m_left_time = 1.5;
            this.schedule(this.timer_update_func, .1);
          } else callBack();
        }
        markSelfHuHandCount(singleData) {
          singleData && singleData.hu_chair == bind_function_1.bf.get_self_user_data().wChairID && (YiFuGameData_1.get_share_game_data().SelfHuHandCount = singleData.cards.length);
        }
        hide() {
          this.node.active = false;
        }
        show() {
          this.rootNode.stopAllActions();
          this.rootNode.active = true;
          this.rootNode.scale = 0;
          this.rootNode.setPosition(this.ptr_btn_open.node.getPosition());
          let that = this;
          this.rootNode.runAction(cc.spawn(cc.scaleTo(that.delay_time, 1), cc.moveTo(that.delay_time, this.rootPosition)));
          this.updateuserScoreRecord();
          this.node.active = true;
        }
        changeToggleBackGround(id) {
          let count = this.headLayout.childrenCount;
          for (let i = 0; i < count; i++) {
            let t = this.headLayout.children[i].getComponent(cc.Toggle);
            t.node.getChildByName("jiesuan_lizi").active = i == id;
            t.node.getChildByName("Background").active = i != id;
          }
        }
        addTab(data) {
          var tab = utils_1.utils.add_instance_to_root(this.tabButtonPrefab, this.headLayout, YiFuHuUserResultItem_1.YiFuHuUserResultItem);
          this.resultItems.push(tab);
          tab.setData(data);
          null == this.defaultTab && (this.defaultTab = tab);
        }
        updateRedPoint(tabData) {
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("GameEndRedPointMask") || "0");
          } catch (e) {}
          if (mask & tabData._data.mask) ; else {
            utils_1.utils.setLocalStorage("GameEndRedPointMask", String(mask | tabData._data.mask));
            tabData.updataRedPointVisiable(false);
          }
        }
        initHead(user_datas) {
          if (this.bool_init_head) return;
          user_datas = YiFuGameData_1.get_share_game_data().check_user_datas(user_datas);
          this.ptr_agree_heads_root.removeAllChildren();
          this.ptr_agree_heads_root.active = true;
          for (let j = 0; j < user_datas.length; j++) {
            let element = user_datas[j];
            if (element) {
              let head = cc.instantiate(this.ptr_agree_head_prefab).getComponent(YiFuGameEndHead_1.default);
              head.node.setParent(this.ptr_agree_heads_root);
              head.node.active = true;
              head.setData(element);
            }
          }
          this.bool_init_head = true;
        }
        updateUserHeadAgreeStatus(chair) {
          chair == bind_function_1.bf.get_self_user_data().wChairID && (this.ptr_agree_heads_root.active = true);
          let count = this.ptr_agree_heads_root.childrenCount;
          for (let i = 0; i < count; i++) {
            let head_data = this.ptr_agree_heads_root.children[i].getComponent(YiFuGameEndHead_1.default);
            if (head_data.getChair() == chair) {
              head_data.showHeadMask();
              break;
            }
          }
        }
        updateuserScoreRecord() {
          this.userScoreRecord(this.currentTabData.chair_id);
        }
        userScoreRecord(chair_id) {
          let totalList = YiFuGameData_1.get_share_game_data().get_user_game_score_record(chair_id);
          this.scoreLayout.removeAllChildren();
          if (0 == totalList.size) return;
          let self_chair = bind_function_1.bf.get_self_user_data().wChairID;
          totalList.forEach((v, k) => {
            let socreLable = null;
            socreLable = cc.instantiate(this.socreLablePrefab).getComponent(YiFuGameEndScoreLable_1.YiFuGameEndScoreLable);
            this.scoreLayout.addChild(socreLable.node);
            socreLable.node.active = true;
            socreLable.setData(self_chair, k, v);
          });
        }
        setHuaCards(param_hua, handled_count) {
          if (!param_hua) return;
          this.ptr_hua_info.active = true;
          let cards = param_hua;
          let count_list = {};
          let final_cards = [];
          let begin_pos = 0;
          begin_pos = 0 != handled_count ? -this.card_width * this.scale : this.offset_handle_and_hand_x + 5;
          cards = YiFuGameLogic_1.get_game_logic().sortArray(cards);
          for (let i = 0; i < cards.length; ++i) if (count_list[cards[i]]) count_list[cards[i]] = count_list[cards[i]] + 1; else {
            count_list[cards[i]] = 1;
            final_cards.push(cards[i]);
          }
          for (let i = 0; i < final_cards.length; ++i) {
            let hua_node = this.addHuaCard(final_cards[i], i, begin_pos);
            let count = count_list[final_cards[i]];
            count > 4 && (count = 4);
            count < 1 && (count = 1);
            count > 1 ? hua_node.getComponent(CSelfHandCard3D_1.default).showCorner(count + 2) : hua_node.getComponent(CSelfHandCard3D_1.default).hideCorner();
          }
        }
        addHuaCard(byte_card, index, begin_pos) {
          let hua_node = null;
          hua_node = cards_3d_layout_1.default.get().getNewHandCard(true);
          hua_node.getComponent(CSelfHandCard3D_1.default).showCard(byte_card);
          hua_node.scale = this.scale;
          hua_node.x = begin_pos + index * this.card_width * this.scale;
          hua_node.y = 0;
          this.ptr_hua_info.addChild(hua_node);
          return hua_node;
        }
        setHeapCard(json_handle) {
          if (null != json_handle && json_handle.length > 0) for (let i = 0; i < json_handle.length; i++) {
            let card_value = json_handle[i].card;
            let handle_type = json_handle[i].type;
            YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && (47 != card_value || handle_type != cards_3d_config_1.HandleType.b_chi_left && handle_type != cards_3d_config_1.HandleType.b_chi_mid && handle_type != cards_3d_config_1.HandleType.b_chi_right || (card_value = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]));
            let newNode = this.getNewHandleCards(i, handle_type, card_value, this.scale);
            newNode.setPosition(this.m_handled_cards_pos[i]);
            this.ptr_line_info.addChild(newNode);
          }
        }
        setHandCards(param_hand, param_handle) {
          let hand_cards = param_hand;
          let hand_count = param_hand.length;
          let handled_count = param_handle.length;
          this.m_card_layer.isAllHandCard(hand_count) ? YiFuGameLogic_1.get_game_logic().sortArray(hand_cards, hand_cards.length - 1) : YiFuGameLogic_1.get_game_logic().sortArray(hand_cards);
          if (null != hand_cards) {
            let begin_pos = 0;
            begin_pos = 0 != handled_count ? this.handle_card_space_x * handled_count - this.offset_handle_and_hand_x : this.offset_handle_and_hand_x + 5;
            for (let i = 0; i < hand_cards.length; i++) {
              this.m_hand_cards[i] = cards_3d_layout_1.default.get().getNewHandCard(true);
              this.m_hand_cards[i].scale = cc.v2(this.scale, this.scale);
              this.m_hand_cards[i].x = begin_pos + i * this.card_width * this.scale;
              this.m_hand_cards[i].y = 0;
              this.ptr_line_info.addChild(this.m_hand_cards[i]);
              let corner_id = null;
              null != this.list_corner && null != this.list_corner[hand_cards[i]] && (corner_id = 1);
              this.m_hand_cards[i].getComponent(CSelfHandCard3D_1.default).showCard(hand_cards[i], corner_id);
              let ground = null;
              if (i == hand_cards.length - 1 && !this.m_card_layer.isAllHandCard(hand_cards.length)) {
                ground = cc.instantiate(this.cardGround);
                ground.setParent(this.ptr_line_info);
                let pos_x = this.m_hand_cards[i].x + this.card_width * this.scale + 25;
                let pos_y = this.m_hand_cards[i].y + 3;
                ground.setPosition(cc.v2(pos_x, pos_y));
                this.hu_type_pos = cc.v2(.5 * pos_x, pos_y);
              }
              if (this.m_card_layer.isAllHandCard(hand_cards.length) && i == hand_cards.length - 1) {
                this.m_hand_cards[i].x += 25;
                ground = cc.instantiate(this.cardGround);
                ground.setParent(this.ptr_line_info);
                let pos_x = this.m_hand_cards[i].x;
                let pos_y = this.m_hand_cards[i].y + 3;
                ground.setPosition(cc.v2(pos_x, pos_y));
                this.hu_type_pos = cc.v2(.5 * pos_x, pos_y);
              }
            }
          }
        }
        getNewHandleCards(e_index, handle_type, value, scale) {
          let pos = [ cc.v2(-this.card_width * scale, 0), cc.v2(0, 0), cc.v2(this.card_width * scale, 0), cc.v2(0, 20 * scale) ];
          let newNode = new cc.Node("single_node");
          let m_handled_cards = [];
          for (let i = 0; i < 4; i++) {
            m_handled_cards[i] = cards_3d_layout_1.default.get().getNewHandCard(true);
            m_handled_cards[i].setPosition(pos[i]);
            m_handled_cards[i].scale = scale;
            newNode.addChild(m_handled_cards[i]);
          }
          let cai_shen_value = null;
          1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length && YiFuGameData_1.get_share_game_data().CaiShenCardValue[0] && (cai_shen_value = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]);
          if (handle_type == cards_3d_config_1.HandleType.b_chi_left) {
            cai_shen_value && value == cai_shen_value ? m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            cai_shen_value && value + 1 == cai_shen_value ? m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value + 1);
            cai_shen_value && value + 2 == cai_shen_value ? m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value + 2);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_chi_mid) {
            cai_shen_value && value - 1 == cai_shen_value ? m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value - 1);
            cai_shen_value && value == cai_shen_value ? m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            cai_shen_value && value + 1 == cai_shen_value ? m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value + 1);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_chi_right) {
            cai_shen_value && value - 2 == cai_shen_value ? m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value - 2);
            cai_shen_value && value - 1 == cai_shen_value ? m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value - 1);
            cai_shen_value && value == cai_shen_value ? m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(47) : m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_peng) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).hideCard();
          } else if (handle_type == cards_3d_config_1.HandleType.b_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          } else if (handle_type == cards_3d_config_1.HandleType.d_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showBack();
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          } else if (handle_type == cards_3d_config_1.HandleType.a_gang) {
            m_handled_cards[0].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[1].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[2].getComponent(CSelfHandCard3D_1.default).showCard(value);
            m_handled_cards[3].getComponent(CSelfHandCard3D_1.default).showCard(value);
          }
          return newNode;
        }
        OnHuaFenClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!bind_function_1.bf.get_user_data_by_chair_id(this.currentTabData.chair_id) && YiFuGameData_1.get_share_game_data().checkGameTutorialFinished() && YiFuGameData_1.get_share_game_data().IsOwner) {
            utils_1.utils.show_hint("\u73a9\u5bb6\u5df2\u79bb\u5f00,\u4e0d\u80fd\u5212\u5206...");
            return;
          }
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) YiFuGlobalUI_1.default.getInstance().showKeyBoard(this.node, 0, YiFuKeyBoard_1.KeyBoardPos.GameEnd, this.currentTabData.chair_id); else {
            let user_id = bind_function_1.bf.get_user_data_by_chair_id(this.currentTabData.chair_id).dwUserID;
            YiFuGlobalUI_1.default.getInstance().showKeyBoard(this.node, user_id, YiFuKeyBoard_1.KeyBoardPos.GameEnd);
          }
          tutorial_1.tutorial.close_tutorial();
        }
        updateHuaFenVisiable() {
          let self_chair_id = bind_function_1.bf.get_self_user_data().wChairID;
          if (this.currentTabData.chair_id == self_chair_id) {
            this.ptr_btn_huafen.node.active = false;
            return;
          }
          {
            let visiable = YiFuGlobalUI_1.default.getInstance().getKeyBoardVisiable();
            this.ptr_btn_huafen.node.active = true;
            visiable ? this.currentTab.showHuaFening(true) : this.currentTab.showHuaFening(false);
          }
        }
        OnOpenClicked() {
          sound_manager_1.sound_manager.play_click();
          this.rootNode.scale = 1;
          this.rootNode.setPosition(this.rootPosition);
          let that = this;
          this.rootNode.runAction(cc.sequence(cc.spawn(cc.scaleTo(that.delay_time, 0), cc.moveTo(that.delay_time, this.ptr_btn_open.node.getPosition())), cc.callFunc(function() {
            that.node.active = false;
            utils_1.utils.send("GameEndClose");
          })));
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
        }
        OnXiPaiClicked() {
          sound_manager_1.sound_manager.play_click();
          tutorial_1.tutorial.close_tutorial();
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished() && 2 == YiFuGameData_1.get_share_game_data().GameCount) {
            if (!this.check()) {
              utils_1.utils.show_hint("\u8bf7\u5148\u5b8c\u6210\u5212\u5206~");
              return;
            }
            YiFuGameData_1.get_share_game_data().GameCount++;
          }
          let the_data = {};
          the_data["is_agree"] = 1;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_AGREE_XIPAI, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        check() {
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
          } catch (e) {
            return;
          }
          if (mask & 1 << tutorial_1.tutorial.TutorialID.Game_2_3) return true;
          return false;
        }
        OnShareClicked() {
          YiFuGlobalUI_1.default.getInstance().showCombatRecordShare();
        }
        OnZhuaMaClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            console.log("\u65e0\u6293\u9a6c\u914d\u7f6e");
            return;
          }
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_ZHUAMA_BEGIN, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        updateXiPaiBtn() {
          if (YiFuGameData_1.get_share_game_data().selfHaveAgreeXiPai) {
            this.ptr_btn_xipai.node.active = false;
            this.ptr_btn_have_ready.node.active = true;
            this.ptr_btn_have_ready.interactable = false;
          }
        }
        onMaskNodeTouchEnd() {
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
        }
        refleshZhuamaBtn() {
          if (YiFuGameData_1.get_share_game_data().HaveZhuaMa) -1 == this.int_zhuama_id && null != this.currentTabData ? this.ptr_btn_zhuama.node.active = this.currentTabData.chair_id == bind_function_1.bf.get_self_user_data().wChairID : this.ptr_btn_zhuama.node.active = false; else {
            this.ptr_zhuama_node.active = false;
            this.ptr_btn_zhuama.node.active = false;
          }
        }
        initZhuaMaUI() {
          if (YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            this.ptr_zhuama_node.active = true;
            this.ptr_zhuama_layout.active = false;
            this.ptr_zhuama_tip_label.node.active = true;
            this.ptr_zhuama_tip_label.string = "\u672a\u6293\u9a6c";
          } else {
            this.ptr_zhuama_node.active = false;
            this.ptr_btn_zhuama.node.active = false;
          }
        }
        setZhuamaChair(param_id) {
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            this.ptr_btn_zhuama.node.active = false;
            return;
          }
          this.int_zhuama_id = param_id;
          if (-1 == this.int_zhuama_id) {
            this.ptr_zhuama_tip_label.node.active = true;
            this.ptr_zhuama_tip_label.string = "\u672a\u6293\u9a6c";
          } else this.ptr_zhuama_tip_label.node.active = false;
          this.refleshZhuamaBtn();
        }
        setZhuaMaCard(param_id, zhuama_cards) {
          this.node.active = true;
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            this.ptr_zhuama_node.active = false;
            return;
          }
          this.int_zhuama_id = param_id;
          this.refleshZhuamaBtn();
          this.ptr_zhuama_tip_label.node.active = 0 == zhuama_cards.length;
          if (0 == zhuama_cards.length) {
            this.ptr_zhuama_layout.active = false;
            this.ptr_zhuama_tip_label.node.active = true;
            this.ptr_zhuama_tip_label.string = "\u65e0";
          } else {
            this.ptr_zhuama_layout.active = true;
            this.ptr_zhuama_tip_label.node.active = false;
            this.disabelRootChild(this.ptr_zhuama_layout);
            if (1 == zhuama_cards.length) {
              let vec_x = 60;
              this.ptr_zhuama_layout.setPosition(vec_x, 0);
            } else if (2 == zhuama_cards.length) {
              let vec_x = 40;
              this.ptr_zhuama_layout.setPosition(vec_x, 0);
            } else if (3 == zhuama_cards.length) {
              let vec_x = 22;
              this.ptr_zhuama_layout.setPosition(vec_x, 0);
            } else (zhuama_cards.length >= 4 || 0 == zhuama_cards.length) && this.ptr_zhuama_layout.setPosition(0, 0);
            this.ptr_zhuama_layout.getComponent(cc.Layout).paddingLeft = -2;
            this.ptr_zhuama_layout.getComponent(cc.Layout).paddingTop = -5;
            this.ptr_zhuama_layout.getComponent(cc.Layout).spacingX = -32;
            this.ptr_zhuama_layout.getComponent(cc.Layout).spacingY = -40;
            for (let i = 0; i < zhuama_cards.length; i++) {
              let card = null;
              if (i < this.ptr_zhuama_layout.childrenCount) card = this.ptr_zhuama_layout.children[i]; else {
                card = cards_3d_layout_1.default.get().getNewHandCard(true);
                this.ptr_zhuama_layout.addChild(card);
              }
              card.active = true;
              card.setScale(.62);
              card.getComponent(CSelfHandCard3D_1.default).showCard(zhuama_cards[i]);
            }
          }
        }
        disabelRootChild(rootNode) {
          rootNode.children.forEach(v => v.active = false);
        }
      };
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "headLayout", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "scoreLayout", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "maskNode", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "rootNode", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_agree_heads_root", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameEnd.prototype, "ptr_agree_head_prefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameEnd.prototype, "socreLablePrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameEnd.prototype, "tabButtonPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameEnd.prototype, "cardGround", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_huafen", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_open", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_xipai", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_share", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_zhuama", void 0);
      __decorate([ property(cc.Button) ], YiFuGameEnd.prototype, "ptr_btn_have_ready", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_line_info", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_hua_info", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_head_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_head", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameEnd.prototype, "ptr_handle_type_sprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuGameEnd.prototype, "ptr_chu_sprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuGameEnd.prototype, "ptr_gang_sprite", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameEnd.prototype, "ptr_zimo_sprite", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameEnd.prototype, "ptr_direct_hu_sprite", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_zhuama_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameEnd.prototype, "ptr_zhuama_layout", void 0);
      __decorate([ property(cc.Label) ], YiFuGameEnd.prototype, "ptr_zhuama_tip_label", void 0);
      YiFuGameEnd = __decorate([ ccclass ], YiFuGameEnd);
      return YiFuGameEnd;
    })();
    exports.YiFuGameEnd = YiFuGameEnd;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameEndHead": "YiFuGameEndHead",
    "./YiFuGameEndScoreLable": "YiFuGameEndScoreLable",
    "./YiFuGameLogic": "YiFuGameLogic",
    "./YiFuGlobalUI": "YiFuGlobalUI",
    "./YiFuHuUserResultItem": "YiFuHuUserResultItem",
    "./YiFuKeyBoard": "YiFuKeyBoard"
  } ],
  YiFuGameLogic: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f9f1fEU1nRHYogX+p78gXOp", "YiFuGameLogic");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.get_game_logic = exports.YiFuGameLogic = void 0;
    const YiFuGameData_1 = require("./YiFuGameData");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const table_3d_layout_1 = require("../../../Layout3D/Src/table_3d_layout");
    class YiFuGameLogic {
      switch_to_view_id(chair_id) {
        if (chair_id < 0 || !YiFuGameData_1.get_share_game_data().IsGetSeat) return -1;
        let viewGap = YiFuGameData_1.get_share_game_data().UserSeatList[chair_id] - YiFuGameData_1.get_share_game_data().SelfSeat;
        if (2 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          let tableView = [ 2, 0, 2, 0, 2, 0 ];
          let selfIndex = 2;
          let viewid = tableView[selfIndex + viewGap];
          return viewid;
        }
        if (3 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          let tableView = [ 3, 2, 1, 3, 2, 1, 3, 2, 1 ];
          let selfIndex = 4;
          let viewid = tableView[selfIndex + viewGap];
          return viewid;
        }
        if (4 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          let tableView = [ 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1 ];
          let selfIndex = 6;
          let viewid = tableView[selfIndex + viewGap];
          return viewid;
        }
      }
      switch_to_seat_id(viewid) {
        if (viewid < 0 || !YiFuGameData_1.get_share_game_data().IsGetSeat) return -1;
        if (4 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          let seatGap = viewid - 2;
          let tableSeats = [ 0, 3, 2, 1 ];
          let selfIndex = -1;
          for (let i = 0; i < tableSeats.length; i++) tableSeats[i] == YiFuGameData_1.get_share_game_data().SelfSeat && (selfIndex = i);
          tableSeats = [ 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1 ];
          selfIndex += 4;
          let seatId = tableSeats[selfIndex + seatGap];
          return seatId;
        }
        if (3 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          let seatGap = viewid - 2;
          let tableSeats = [ 2, 1, 0 ];
          let selfIndex = -1;
          for (let i = 0; i < tableSeats.length; i++) tableSeats[i] == YiFuGameData_1.get_share_game_data().SelfSeat && (selfIndex = i);
          tableSeats = [ 2, 1, 0, 2, 1, 0, 2, 1, 0 ];
          selfIndex += 3;
          let seatId = tableSeats[selfIndex + seatGap];
          return seatId;
        }
      }
      switch_to_table_feng(self_seat_id) {
        if (4 == YiFuGameData_1.get_share_game_data().GamePlayer) {
          console.log("self_seat_id:", self_seat_id);
          table_3d_layout_1.default.get().setSelfDirection(self_seat_id + 1);
        } else 3 == YiFuGameData_1.get_share_game_data().GamePlayer ? table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.none) : 2 == YiFuGameData_1.get_share_game_data().GamePlayer && table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.none);
      }
      removeArrayValue(param_array, param_value) {
        for (let i = 0; i < param_array.length; i++) {
          let value = param_array[i];
          if (value == param_value) {
            param_array.splice(i, 1);
            break;
          }
        }
      }
      sortArray(cards_array, sortCount) {
        if (cards_array.length <= 0) return [];
        null == sortCount && (sortCount = cards_array.length);
        for (let i = sortCount - 1; i >= 0; i--) for (let j = 0; j < i; j++) if (this.baiBanSwitchCaiShen(cards_array[j]) > this.baiBanSwitchCaiShen(cards_array[j + 1])) {
          let temp = cards_array[j];
          cards_array[j] = cards_array[j + 1];
          cards_array[j + 1] = temp;
        }
        if (YiFuGameData_1.get_share_game_data().HaveCaiShen && YiFuGameData_1.get_share_game_data().HaveGetCaiShen) {
          let temp_list = this.setCaiShenLeft(cards_array, sortCount);
          for (let i = 0; i < temp_list.length; i++) cards_array[i] = temp_list[i];
        }
        return cards_array;
      }
      baiBanSwitchCaiShen(cardValue) {
        YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && YiFuGameData_1.get_share_game_data().HaveGetCaiShen && (47 == cardValue ? cardValue = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0] : cardValue == YiFuGameData_1.get_share_game_data().CaiShenCardValue[0] && (cardValue = 47));
        return cardValue;
      }
      setCaiShenLeft(cards_array, sortCount) {
        let list1 = [];
        let list2 = [];
        null == sortCount && (sortCount = cards_array.length);
        for (let i = 0; i < sortCount; i++) list1.push(cards_array[i]);
        let cai_1 = 0;
        let cai_2 = 0;
        if (1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length) cai_1 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]; else if (2 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length) {
          cai_1 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0];
          cai_2 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[1];
        }
        for (let i = 0; i < list1.length; i++) if (cai_1 == list1[i]) {
          list2.push(cai_1);
          list1[i] = -1;
        } else if (cai_2 == list1[i]) {
          list2.push(cai_2);
          list1[i] = -1;
        }
        for (let i = 0; i < list1.length; i++) -1 != list1[i] && list2.push(list1[i]);
        return list2;
      }
      findHandIndex(param_array, param_value) {
        let temp_value = this.screenCaiCard(param_value);
        for (let i = param_array.length - 1; i >= 0; i--) {
          let array_value = this.screenCaiCard(param_array[i]);
          if (array_value <= temp_value) return i + 1;
        }
        return 0;
      }
      screenCaiCard(param_value) {
        if (param_value == YiFuGameData_1.get_share_game_data().CaiShenCardValue) return param_value - 100;
        if (YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && 47 == param_value) return YiFuGameData_1.get_share_game_data().CaiShenCardValue[0];
        return param_value;
      }
    }
    exports.YiFuGameLogic = YiFuGameLogic;
    var ptr_global_game_logic = null;
    function get_game_logic() {
      ptr_global_game_logic = null != ptr_global_game_logic ? ptr_global_game_logic : new YiFuGameLogic();
      return ptr_global_game_logic;
    }
    exports.get_game_logic = get_game_logic;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/table_3d_layout": "table_3d_layout",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuGameMain: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f55659d+YRCb5vpmTlIGLNR", "YiFuGameMain");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const table_3d_layout_1 = require("../../../Layout3D/Src/table_3d_layout");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuCardLayer_1 = require("./YiFuCardLayer");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuUserHead_1 = require("./YiFuUserHead");
    const YiFuSelectBanker_1 = require("./YiFuSelectBanker");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuTutorial_1 = require("./YiFuTutorial");
    const CHandledCards3D_1 = require("../../../Layout3D/Src/widget/CHandledCards3D");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const platform_1 = require("../../Framework/lobby/platform/platform");
    const lobby_framework_1 = require("../../Framework/lobby/lobby_framework");
    const YiFuSelectGameCount_1 = require("./YiFuSelectGameCount");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const CHandleSelect3D_1 = require("../../../Layout3D/Src/widget/CHandleSelect3D");
    const MessageBoxCommon_1 = require("../../Component/MessageBoxCommon");
    const YiFuZhuaMa_1 = require("./YiFuZhuaMa");
    const YiFuZhuamaWait_1 = require("./YiFuZhuamaWait");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameMain = (() => {
      let YiFuGameMain = class YiFuGameMain extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_user_head = [];
          this.game_zhuama_layer = null;
          this.game_zhuama_wait_layer = null;
          this.ptr_card_layer = null;
          this.ptr_Select_layer = null;
          this.ptr_game_chat_nodes = [];
          this.ptr_action_score = [];
          this.ptr_score_action_node = [];
          this.ptr_score_action_root = null;
          this.ptr_tutorial_messagebox = null;
          this.ptr_sprite_banker = null;
          this.ptr_gift_node = null;
          this.ptr_left_node = null;
          this.ptr_left_node_vlupchat = null;
          this.ptr_btn_over = null;
          this.ptr_btn_close = null;
          this.ptr_btn_chat = null;
          this.ptr_btn_xipai = null;
          this.ptr_btn_feedback = null;
          this.ptr_btn_rules = null;
          this.ptr_btn_close_game = null;
          this.ptr_btn_bg_btn = null;
          this.ptr_btn_quick_game = null;
          this.ptr_game_all_count_node = null;
          this.ptr_hint_node = null;
          this.ptr_hint_label = null;
          this.ptr_hint_btn_ok = null;
          this.ptr_hint_btn_cancel = null;
          this.ptr_hint_btn_leave = null;
          this.ptr_hint_btn_share = null;
          this.ptr_btn_end_open = null;
          this.ptr_btn_listen_open = null;
          this.ptr_btn_listen_close = null;
          this.ptr_btn_speak_open = null;
          this.ptr_btn_speak_close = null;
          this.ptr_listen_node = null;
          this.ptr_speak_node = null;
          this.ptr_dice_1 = null;
          this.ptr_dice_2 = null;
          this.ptr_dice_result_1 = null;
          this.ptr_dice_result_2 = null;
          this.ptr_frame_dice = [];
          this.ptr_common_hint_node = null;
          this.ptr_common_hint_label = null;
          this.game_score_hint_prefab = null;
          this.game_tutorial_prefab = null;
          this.ptr_btn_invite = null;
          this.ptr_btn_caishen = null;
          this.ptr_btn_fapai = null;
          this.ptr_layout_table = null;
          this.ptr_table_name = null;
          this.ptr_game_count = null;
          this.m_game_id = 150;
          this.timer_update_func = null;
          this.game_end_exit_game_time_func = null;
          this.timer_change_seat_func = null;
          this.m_left_time = 0;
          this.m_all_time = 0;
          this.m_kick_time = 0;
          this.m_dice_number_1 = -1;
          this.m_dice_number_2 = -1;
          this.m_func_type = [];
          this.m_wait_userdata = [];
          this.m_wait_user_chair = [];
          this.m_screen_offset = YiFuGameData_1.get_share_game_data().ScreenFit;
          this.m_close_game_time_id = null;
          this.m_show_common_hint_time_id = null;
          this.m_hide_user_operation_status_id = null;
          this.m_str_param = [];
          this.m_agree_xipai_count = 0;
          this.m_hint_status = null;
          this.m_game_status = -1;
          this.m_game_player_count = 0;
          this.m_user_data = [];
          this.m_view_size = null;
          this.m_running_start_ani = false;
          this.m_bool_set_play_effect = false;
          this.m_end_pos = null;
          this.m_ready_pos = null;
          this.delay_show_user = null;
          this.m_waitInitList = [];
          this.m_userSeatList = [];
          this.m_selfChairId = -1;
          this.m_isGetSeat = false;
          this.m_isCanChangeSeat = false;
          this.m_ask_xipai = false;
          this.m_selfSeat = -1;
          this.ask_change_chair = -1;
        }
        onLoad() {
          this.init_game_data();
          YiFuTutorial_1.yifututorial.game_yifu_init(this.game_tutorial_prefab);
          utils_1.utils.on("GameEndClose", this, this.onGameEndClose);
          utils_1.utils.on("showGameEndExitGameTips", this, this.showGameEndExitGameTips);
          utils_1.utils.on("GameTutorialStart", this, this.gameTutorialStart);
          utils_1.utils.on("GameTutorialEnd", this, this.gameTutorialend);
          this.initBtn();
          this.bindBtn();
          this.initvoipchatBtn();
          this.initGameTutoial();
          this.initUserData();
        }
        initUserData() {
          YiFuGameData_1.get_share_game_data().game_end_user_data = [];
        }
        start() {
          let that = this;
          bind_function_1.bf.register_game_engine(150, this);
          bind_function_1.bf.register_callback("MusicEnabled", this, this.onMusicEnabled);
          table_3d_layout_1.default.setLoadFinishFunc(function() {
            bind_function_1.bf.restore_message();
            tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_6, cards_3d_layout_1.default.get()._handle_select.getComponent(CHandleSelect3D_1.default)._btn_handle_bg);
            table_3d_layout_1.default.get().showDirectionClock(true);
            that.initOther();
            that.initUserHead();
            that.initCardLayer();
            that.initChatGift();
            that.initZhuaMa();
          });
          this.screenFit();
        }
        gameTutorialStart() {
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_TUTORIAL_START, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        gameTutorialend() {
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_TUTORIAL_END, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          this.init_game_data();
          this.initBtn();
          this.initOther();
          this.clear_data();
          for (let i = 0; i < 4; i++) if (2 != i) this.ptr_user_head[i].hide_head(); else {
            this.ptr_user_head[i].show_user_default_info(2, YiFuUserHead_1.UserHeadStatus.ComeIn);
            this.ptr_user_head[i].show_score(0);
          }
          this.ptr_Select_layer.node.active = false;
          cards_3d_layout_1.default.get().hideHandleSelect();
        }
        showGameEndExitGameTips() {
          this.unschedule(this.game_end_exit_game_time_func);
          let that = this;
          let time = utils_1.utils.getLocalStorage("gameEndExitGameTips");
          let end_time = null != time ? Number(time) : 0;
          that.game_end_exit_game_time_func = function(dt) {
            that.updateCD(end_time);
          };
          this.schedule(that.game_end_exit_game_time_func, .1);
        }
        onGameEndClose() {
          this.ptr_btn_end_open.node.active = true;
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_End);
          if (!YiFuGameData_1.get_share_game_data().selfHaveAgreeXiPai) {
            let mask_id = this.ptr_card_layer.get_mask_id();
            YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_End, 7, mask_id, this.ptr_btn_end_open.node);
          }
        }
        showTableFeng(self_chair_id) {
          0 == self_chair_id ? table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.east) : 1 == self_chair_id ? table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.south) : 2 == self_chair_id ? table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.west) : 3 == self_chair_id && table_3d_layout_1.default.get().setSelfDirection(cards_3d_config_1.TableFeng.north);
        }
        initOther() {
          this.ptr_hint_node.active = false;
          this.ptr_hint_label.string = "";
          this.m_ask_xipai = false;
          this.ptr_common_hint_node.active = false;
          this.ptr_common_hint_label.string = "";
          this.ptr_sprite_banker.node.active = false;
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_HuaFen);
          YiFuGameData_1.get_share_game_data().GameResults = [];
          YiFuGameData_1.get_share_game_data().selfHaveAgreeXiPai = false;
          YiFuGameData_1.get_share_game_data().HaveHuPlayer = false;
          this.show_game_end_btn(false);
        }
        show_game_end_btn(visible) {
          this.ptr_btn_end_open.node.active = visible;
        }
        dice_init() {
          this.ptr_dice_1.active = false;
          this.ptr_dice_2.active = false;
        }
        dice_show_ani() {
          this.ptr_dice_1.active = true;
          this.ptr_dice_2.active = true;
          this.ptr_dice_1.getComponent(cc.Animation).play();
          this.ptr_dice_2.getComponent(cc.Animation).play();
          this.ptr_dice_result_1.spriteFrame = this.ptr_frame_dice[this.m_dice_number_1];
          this.ptr_dice_result_2.spriteFrame = this.ptr_frame_dice[this.m_dice_number_2];
          let that = this;
          let act = cc.callFunc(function() {
            that.dice_init();
            bind_function_1.bf.restore_message();
          });
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.delayTime(2), act));
          bind_function_1.bf.play_sound("Game/150/sound/dice.mp3", false);
        }
        forceMarkDone() {
          YiFuGameData_1.get_share_game_data().IsOwner && utils_1.utils.setLocalStorage("CheckGameTutorialFinished", "1");
        }
        onDestroy() {
          bind_function_1.bf.stop_all_audio();
          this.exitVoIPChat(null, null, true);
          bind_function_1.bf.unregister_callback("MusicEnabled", this, this.onMusicEnabled);
          bind_function_1.bf.unregister_game_engine(150);
          utils_1.utils.off("GameEndClose", this, this.onGameEndClose);
          utils_1.utils.off("showGameEndExitGameTips", this, this.showGameEndExitGameTips);
          utils_1.utils.off("GameTutorialStart", this, this.gameTutorialStart);
          utils_1.utils.off("GameTutorialEnd", this, this.gameTutorialend);
          YiFuGameData_1.get_share_game_data().IsOwner && utils_1.utils.setLocalStorage("CheckGameTutorialFinished", "1");
          if (null != this.m_close_game_time_id) {
            clearTimeout(this.m_close_game_time_id);
            this.m_close_game_time_id = null;
          }
          if (null != this.m_show_common_hint_time_id) {
            clearTimeout(this.m_show_common_hint_time_id);
            this.m_show_common_hint_time_id = null;
          }
          if (null != this.m_hide_user_operation_status_id) {
            clearTimeout(this.m_hide_user_operation_status_id);
            this.m_hide_user_operation_status_id = null;
          }
          null != this.timer_update_func && this.unschedule(this.timer_update_func);
          null != this.timer_change_seat_func && this.unschedule(this.timer_change_seat_func);
          null != this.game_end_exit_game_time_func && this.unschedule(this.game_end_exit_game_time_func);
          YiFuTutorial_1.yifututorial._close_game_tutorial();
          YiFuGameData_1.get_share_game_data().GameResults = [];
          YiFuGameData_1.get_share_game_data().statusMicrophone = [];
          YiFuGameData_1.get_share_game_data().statusEarphone = [];
          YiFuGameData_1.get_share_game_data().haveInitVoiceRoom = false;
        }
        init_game_data() {
          this.m_view_size = cc.winSize;
          YiFuGameData_1.get_share_game_data().BankChairID = -2;
          YiFuGameData_1.get_share_game_data().GameCount = 0;
          YiFuGameData_1.get_share_game_data().HuFirstPlayer = -1;
          this.m_agree_xipai_count = 0;
          this.m_ask_xipai = false;
          this.ptr_score_action_root.active = true;
          this.ptr_speak_node.active = false;
          this.ptr_listen_node.active = false;
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "YiFuGameMain";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
        screenFit() {
          this.ptr_left_node.getComponent(cc.Widget).isAlignLeft = true;
          this.ptr_left_node_vlupchat.getComponent(cc.Widget).isAlignLeft = true;
          if (this.m_view_size.width > 1520) {
            this.ptr_left_node.getComponent(cc.Widget).left = this.m_screen_offset;
            this.ptr_left_node_vlupchat.getComponent(cc.Widget).left = this.m_screen_offset;
          } else {
            this.ptr_left_node.getComponent(cc.Widget).left = 0;
            this.ptr_left_node_vlupchat.getComponent(cc.Widget).left = 0;
          }
          if (this.m_view_size.width > 1520) for (let i = 0; i < 4; i++) if (1 == i || 2 == i) {
            this.ptr_user_head[i].getComponent(cc.Widget).isAlignLeft = true;
            this.ptr_user_head[i].getComponent(cc.Widget).left += this.m_screen_offset;
          } else if (3 == i) {
            this.ptr_user_head[i].getComponent(cc.Widget).isAlignRight = true;
            this.ptr_user_head[i].getComponent(cc.Widget).right += this.m_screen_offset;
          }
        }
        updateVoIPChatMuteConfig(earphone, microphone) {
          let muteEarphone = !earphone;
          let muteMicrophone = !microphone;
          platform_1.platform.inst.updateVoIPChatMuteConfig({
            muteEarphone: muteEarphone,
            muteMicrophone: muteMicrophone,
            success: () => {},
            fail: res => {},
            complete: () => {}
          });
        }
        exitVoIPChat(success, fail, game_end) {
          if (!global_data_1.global_data.is_online) return;
          platform_1.platform.inst.exitVoIPChat({
            success: () => {
              console.log("exitVoIPChat success");
              success && success();
            },
            fail: res => {
              console.log("exitVoIPChat fail");
              fail && fail();
            },
            complete: () => {}
          });
          game_end || this.initvoipchatBtn();
          this.send_microphone_data(1);
          this.send_earphone_data(1);
        }
        check_session_and_join_vlupchat() {
          platform_1.platform.inst.checkSession({
            success: () => {
              this.get_session_key_and_join_vlupchat();
              console.log("session_key \u672a\u8fc7\u671f");
            },
            fail: () => {
              console.log("session_key \u5df2\u672a\u8fc7\u671f");
              lobby_framework_1.lobby_framework.refresh_wechat_session_key_addone({
                success: () => {
                  console.log("refresh_wechat_session_key success");
                  this.get_session_key_and_join_vlupchat();
                },
                fail: () => {
                  console.log("refresh_wechat_session_key fail");
                }
              });
            }
          });
        }
        checkMicrophone(isShowHint) {
          if (!global_data_1.global_data.is_online) return;
          platform_1.platform.inst.checkMicrophone({
            success: () => {
              console.log("checkMicrophone success");
              this.check_session_and_join_vlupchat();
            },
            fail: () => {
              console.log("checkMicrophone fail");
              this.check_session_and_join_vlupchat();
            }
          }, isShowHint);
        }
        get_session_key_and_join_vlupchat() {
          let url = "https://webv2.73sy.com/api/user/wechat_session_key?userid={USERID}&session={SESSION}&appid={WECHATID}&areaid={AREAID}&channel={CHANNELID}&version={VERSION}&timeline=1";
          url = global_data_1.global_data.fill_url(url);
          url = utils_1.utils.string_replace_any(url, "{WECHATID}", global_data_1.global_data.game_id);
          utils_1.utils.send_http_request({
            url: url,
            success: data => {
              console.log("sessionKey : ", data.sessionKey);
              let tabelCode = YiFuGameData_1.get_share_game_data().TableCode.toString();
              let appid = global_data_1.global_data.appid.toString();
              let nonceStr = global_data_1.global_data.get_mac();
              let timeStamp = Math.floor(new Date().valueOf() / 1e3).toString();
              let str_message = [ appid, tabelCode, nonceStr, timeStamp ].sort().join("");
              let signature = utils_1.utils.hmac(str_message, data.sessionKey);
              platform_1.platform.inst.joinVluPChat({
                signature: signature,
                timeStamp: timeStamp,
                groupId: tabelCode,
                nonceStr: nonceStr,
                muteEarphone: YiFuGameData_1.get_share_game_data().muteEarphone,
                muteMicrophone: YiFuGameData_1.get_share_game_data().muteMicrophone,
                success: () => {
                  setTimeout(() => {
                    let ear = YiFuGameData_1.get_share_game_data().muteEarphone ? "off" : "on";
                    let micro = YiFuGameData_1.get_share_game_data().muteMicrophone ? "off" : "on";
                    utils_1.utils.setLocalStorage("earphone", ear);
                    utils_1.utils.setLocalStorage("microphone", micro);
                    YiFuGlobalUI_1.default.getInstance().showMessageHint("\u60a8\u5df2\u8fdb\u5165\u804a\u5929\u5ba4");
                    this.update_voipchat_config();
                    this.show_vlupchat_tips();
                    this.send_microphone_data(0);
                    this.send_earphone_data(0);
                  }, 10);
                },
                fail: res => {
                  console.log("joinVluPChat fail");
                  this.send_microphone_data(1);
                  this.send_earphone_data(1);
                  let msg = res.errMsg;
                  if (msg.includes("Already in room or joining")) {
                    console.log("\u5df2\u5728\u623f\u95f4...");
                    this.refresh_vlupchat_config();
                  } else if (msg.includes("interrupted because already cancelled or entered background")) console.log("\u9891\u7e41\u5207\u5165\u5207\u51fa..."); else if (msg.includes("device is busy")) {
                    console.log("\u8bbe\u5907\u5fd9...");
                    this.refresh_vlupchat_config();
                  } else msg.includes("invalid signature") ? YiFuGlobalUI_1.default.getInstance().showMessageBox({
                    content: "\u7531\u4e8e\u60a8\u79bb\u5f00\u65f6\u95f4\u8fc7\u957f\uff0c\u9700\u8981\u91cd\u65b0\u8fdb\u5165\u804a\u5929\u5ba4",
                    button_count: 1,
                    onClick: n => {
                      if (0 == n) {
                        console.log("\u7531\u4e8e\u60a8\u79bb\u5f00\u65f6\u95f4\u8fc7\u957f\uff0c\u9700\u8981\u91cd\u65b0\u8fdb\u5165\u804a\u5929\u5ba4");
                        global_data_1.global_data.game_engine.check_session_and_join_vlupchat();
                      } else -1 == n && console.log("\u70b9\u51fb\u4e86\u53d6\u6d88...");
                    }
                  }) : console.log("\u672a\u77e5\u9519\u8bef!");
                },
                complete: () => {}
              });
            },
            fail: errMsg => {
              console.log("joinVluPChat: ", errMsg);
            },
            complete: () => {}
          });
        }
        refresh_vlupchat_config() {
          this.send_microphone_data(0);
          this.send_earphone_data(0);
          utils_1.utils.setLocalStorage("earphone", "on");
          utils_1.utils.setLocalStorage("microphone", "on");
          this.update_voipchat_config();
        }
        show_vlupchat_tips() {
          let value = utils_1.utils.getLocalStorage("vlupchat_tips");
          if (!value || Number(value) != YiFuGameData_1.get_share_game_data().TableCode) {
            utils_1.utils.setLocalStorage("vlupchat_tips", YiFuGameData_1.get_share_game_data().TableCode.toString());
            let that = this;
            let tip_1 = this.get_earphone() ? "\u7531\u6b64\u5173\u95ed\u626c\u58f0\u5668" : "\u7531\u6b64\u6253\u5f00\u626c\u58f0\u5668";
            let tip_2 = this.get_microphone() ? "\u7531\u6b64\u5173\u95ed\u9ea6\u514b\u98ce" : "\u7531\u6b64\u6253\u5f00\u9ea6\u514b\u98ce";
            if (!this.ptr_listen_node || !this.ptr_speak_node) {
              console.log("ptr_listen_node have something");
              return;
            }
            this.ptr_listen_node.active = true;
            this.ptr_listen_node.opacity = 0;
            this.ptr_listen_node.getComponentInChildren(cc.Label).string = tip_1;
            this.ptr_listen_node.runAction(cc.sequence(cc.fadeIn(.5), cc.delayTime(4), cc.fadeOut(.5), cc.callFunc(function() {
              that.ptr_listen_node.active = false;
            })));
            this.ptr_speak_node.active = true;
            this.ptr_speak_node.opacity = 0;
            this.ptr_speak_node.getComponentInChildren(cc.Label).string = tip_2;
            this.ptr_speak_node.runAction(cc.sequence(cc.fadeIn(.5), cc.delayTime(4), cc.fadeOut(.5), cc.callFunc(function() {
              that.ptr_speak_node.active = false;
            })));
          }
        }
        initUserHead() {
          for (let i = 0; i < 4; i++) this.ptr_user_head[i].set_game_layer(this);
          bind_function_1.bf.set_play_gift_node(this.ptr_gift_node);
          this.ptr_gift_node.active = true;
        }
        initGameTutoial() {
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_1, this.ptr_btn_invite.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_2, cc.find("Canvas/Main Camera"));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_4, this.ptr_btn_fapai.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_2_0, this.ptr_btn_fapai.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_3_0, this.ptr_btn_fapai.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_5, cc.find("Canvas/select_banker/tipNode"));
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_7, this.ptr_btn_xipai.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_3_2, this.ptr_card_layer.ptr_btn_hu_confirm.node);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_1_8, this.ptr_tutorial_messagebox.getChildByName("Btns").getChildByName("Button_0"));
        }
        initvoipchatBtn() {
          if (global_data_1.global_data.game_engine) {
            this.ptr_btn_listen_open.node.active = false;
            this.ptr_btn_listen_close.node.active = false;
            this.ptr_btn_speak_open.node.active = false;
            this.ptr_btn_speak_close.node.active = false;
          }
        }
        initBtn() {
          this.ptr_btn_invite.node.active = false;
          this.ptr_btn_caishen.node.active = false;
          this.ptr_btn_fapai.node.active = false;
          this.ptr_btn_xipai.node.active = false;
          this.ptr_btn_quick_game.node.active = false;
          this.ptr_btn_end_open.node.active = false;
          this.ptr_btn_close_game.node.active = !global_data_1.global_data.is_online && !utils_1.utils.is_wechat();
        }
        bindBtn() {
          this.bind_btn(this.ptr_btn_over, "on_btn_over");
          this.bind_btn(this.ptr_btn_close, "on_btn_close");
          this.bind_btn(this.ptr_btn_chat, "on_btn_chat");
          this.bind_btn(this.ptr_btn_xipai, "on_btn_xipai");
          this.bind_btn(this.ptr_btn_feedback, "on_btn_feedback");
          this.bind_btn(this.ptr_btn_rules, "on_btn_rules");
          this.bind_btn(this.ptr_btn_invite, "on_btn_invite");
          this.bind_btn(this.ptr_btn_caishen, "do_fan_caishen");
          this.bind_btn(this.ptr_btn_quick_game, "on_btn_quick_game");
          this.bind_btn(this.ptr_btn_fapai, "do_fapai");
          this.bind_btn(this.ptr_hint_btn_ok, "on_hint_btn_ok");
          this.bind_btn(this.ptr_hint_btn_cancel, "on_hint_btn_cancel");
          this.bind_btn(this.ptr_hint_btn_leave, "on_hint_btn_leave");
          this.bind_btn(this.ptr_hint_btn_share, "on_hint_btn_share");
          this.bind_btn(this.ptr_btn_close_game, "on_close_game");
          this.bind_btn(this.ptr_btn_bg_btn, "on_bg_clicked");
          this.bind_btn(this.ptr_btn_end_open, "on_end_open_clicked");
          this.bind_btn(this.ptr_btn_listen_open, "on_btn_listen_open");
          this.bind_btn(this.ptr_btn_listen_close, "on_btn_listen_close");
          this.bind_btn(this.ptr_btn_speak_open, "on_btn_speak_open");
          this.bind_btn(this.ptr_btn_speak_close, "on_btn_speak_close");
        }
        voIPChatInterruptedCallBack(res) {
          console.log("onVoIPChatInterrupted", res);
          setTimeout(() => {
            YiFuGlobalUI_1.default.getInstance().showMessageBox({
              content: "\u7531\u4e8e\u624b\u673a\u6765\u7535,\u8bed\u97f3\u804a\u5929\u5ba4\u529f\u80fd\u88ab\u6302\u8d77,\u662f\u5426\u6062\u590d\u8bed\u97f3?",
              button_count: 1,
              onClick: n => {
                0 == n && global_data_1.global_data.game_engine.exitVoIPChat(function() {
                  console.log("\u56e0\u624b\u673a\u6765\u7535\u6253\u65ad\u8bed\u97f3\u901a\u8bdd,\u5df2\u9000\u51fa\u91cd\u8fdb\u8bed\u97f3\u623f\u95f4");
                  global_data_1.global_data.game_engine.check_session_and_join_vlupchat();
                }, function() {
                  console.log("\u9000\u51fa\u8bed\u97f3\u623f\u95f4\u5931\u8d25");
                  YiFuGlobalUI_1.default.getInstance().showMessageHint("\u9000\u51fa\u623f\u95f4\u5931\u8d25");
                });
              }
            });
          }, 8e3);
        }
        voIPChatSpeakersChangedCallBack(res) {}
        voIPChatMembersChangedCallBack(res) {}
        onVoIPChat() {
          if (!global_data_1.global_data.is_online) return;
          let that = this;
          platform_1.platform.inst.onVoIPChatInterrupted(that.voIPChatInterruptedCallBack);
          platform_1.platform.inst.onVoIPChatSpeakersChanged(that.voIPChatSpeakersChangedCallBack);
          platform_1.platform.inst.onVoIPChatMembersChanged(that.voIPChatMembersChangedCallBack);
        }
        offVoIPChat() {
          if (!global_data_1.global_data.is_online) return;
          let that = this;
          platform_1.platform.inst.offVoIPChatInterrupted(that.voIPChatInterruptedCallBack);
          platform_1.platform.inst.offVoIPChatSpeakersChanged(that.voIPChatSpeakersChangedCallBack);
          platform_1.platform.inst.offVoIPChatMembersChanged(that.voIPChatMembersChangedCallBack);
        }
        initCardLayer() {
          this.ptr_card_layer.set_game_layer(this);
          this.ptr_card_layer.init();
          this.ptr_card_layer.game_end_layer.set_game_layer(this);
        }
        initZhuaMa() {
          this.game_zhuama_layer.clearData();
          this.game_zhuama_wait_layer.hide();
        }
        initChatGift() {
          this.safe_on("onSendGift", this.send_gift, this);
          this.safe_on("onGiveScore", this.send_score, this);
          bind_function_1.bf.set_user_chat_node(0, this.ptr_game_chat_nodes[0], {
            text_x: -30,
            text_y: -34,
            em_x: 0,
            em_y: 0,
            em_scale: 2,
            direction: bind_function_1.UserChatDirection.TopRight
          });
          bind_function_1.bf.set_user_chat_node(1, this.ptr_game_chat_nodes[1], {
            text_x: 30,
            text_y: 18,
            em_x: 0,
            em_y: 0,
            em_scale: 2,
            direction: bind_function_1.UserChatDirection.BottomLeft
          });
          bind_function_1.bf.set_user_chat_node(2, this.ptr_game_chat_nodes[2], {
            text_x: 30,
            text_y: 8,
            em_x: 0,
            em_y: 0,
            em_scale: 2,
            direction: bind_function_1.UserChatDirection.BottomLeft
          });
          bind_function_1.bf.set_user_chat_node(3, this.ptr_game_chat_nodes[3], {
            text_x: -28,
            text_y: 12,
            em_x: 0,
            em_y: 0,
            em_scale: 2,
            direction: bind_function_1.UserChatDirection.BottomRight
          });
          let str_param = [];
          str_param[0] = "\u6253\u4e00\u4e2a\u6765\u78b0\u4e0b\u5457\uff01", str_param[1] = "\u65f6\u95f4\u5c31\u662f\u91d1\u94b1\u6211\u7684\u670b\u53cb~", 
          str_param[2] = "\u4f60\u7684\u724c\u6253\u7684\u592a\u597d\u4e86", str_param[3] = "\u5feb\u70b9\u51fa\u724c\u554a\uff0c\u8111\u5b50\u8f6c\u5feb\u70b9\u561b\uff01", 
          str_param[4] = "\u4eca\u5929\u8fd9\u9ebb\u5c06\u6709\u95ee\u9898\u5427\uff0c\u6253\u4ec0\u4e48\u6478\u4ec0\u4e48", 
          str_param[5] = "\u597d\u6b79\u8ba9\u6211\u5403\u4e00\u4e2a\u5427\uff01", str_param[6] = "\u54ce\u5466\uff0c\u597d\u8fd0\u6765\u4e86\u6321\u4e5f\u6321\u4e0d\u4f4f~", 
          str_param[7] = "\u5475\uff0c\u70c2\u724c\u8d77\u624b\u6211\u4e5f\u8981\u80e1\u5b83\u4e2a\u5341\u4e03\u516b\u767e\uff01", 
          str_param[8] = "\u98ce\u6c34\u8f6e\u6d41\u8f6c~", str_param[9] = "\u5c0f\u80e1\u4e5f\u662f\u80e1\uff0c\u82cd\u8747\u868a\u5b50\u90fd\u662f\u8089\uff01", 
          YiFuGlobalUI_1.default.getInstance().init_game_chat(str_param);
          YiFuGlobalUI_1.default.getInstance().set_game_chat_node(this.ptr_btn_chat.node);
        }
        send_gift(event) {
          let gift_btn_data = event.getUserData();
          let user_data = bind_function_1.bf.get_user_data_by_user_id(gift_btn_data.userid);
          let the_data = {};
          the_data["to_chair_id"] = user_data.wChairID;
          the_data["to_user_id"] = user_data.dwUserID;
          the_data["from_chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["from_user_id"] = bind_function_1.bf.get_self_user_id();
          the_data["gift_id"] = gift_btn_data.index - 1011;
          the_data["int_num"] = gift_btn_data.count;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_SEND_GIFT, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        send_score(event) {
          let l_data = event.getUserData();
          let the_data = {};
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
            the_data["to_chair"] = l_data.chair;
            the_data["from_chair"] = bind_function_1.bf.get_self_user_data().wChairID;
            the_data["score"] = Number(l_data.score);
          } else {
            let user_data = bind_function_1.bf.get_user_data_by_user_id(l_data.userid);
            the_data["to_chair"] = user_data.wChairID;
            the_data["from_chair"] = bind_function_1.bf.get_self_user_data().wChairID;
            the_data["score"] = Number(l_data.score);
          }
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_GAME_SCORE, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        on_btn_chat() {
          sound_manager_1.sound_manager.play_click();
          YiFuGlobalUI_1.default.getInstance().showGameChat();
        }
        hideTimer() {
          this.unschedule(this.timer_update_func);
          this.unschedule(this.timer_change_seat_func);
          this.unschedule(this.game_end_exit_game_time_func);
          table_3d_layout_1.default.get().turnOffAll();
          table_3d_layout_1.default.get().turnOffAllLight();
          table_3d_layout_1.default.get().showTime(false);
        }
        on_game_clock(json_data) {
          if (this.playerFull()) return;
          table_3d_layout_1.default.get().turnOffAll();
          table_3d_layout_1.default.get().turnOffAllLight();
          table_3d_layout_1.default.get().showTime(false);
          if (json_data.clock < 0) return;
          if (-1 == json_data.chair) return;
          if (0 == json_data.clock) ; else {
            table_3d_layout_1.default.get().showTime(true);
            table_3d_layout_1.default.get().setTime(json_data.clock, true);
          }
          let viewid = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          if (-1 == viewid) return;
          table_3d_layout_1.default.get().lightDirection(this.ptr_card_layer.switch_to_seat(viewid));
          table_3d_layout_1.default.get().lightLightDirection(this.ptr_card_layer.switch_to_seat(viewid));
        }
        stopAllHandAction() {
          cards_3d_layout_1.default.get().unselectAllHandCards();
          cards_3d_layout_1.default.get().showHandleSelectCanTouch(true);
          cards_3d_layout_1.default.get().hideHandleSelect();
          cards_3d_layout_1.default.get().setHandCardsCanOut(false);
          cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
          this.ptr_card_layer.setHideOutingCard();
          this.hide_common_hint();
          this.ptr_card_layer.show_mopai_animaion(false);
          this.ptr_card_layer.ptr_btn_hu_confirm.node.active = false;
          this.ptr_card_layer.ptr_hu_node_bg.active = false;
          this.ptr_hint_node.active = false;
          this.ptr_btn_fapai.node.active = false;
        }
        on_game_ask_xipai(json_data) {
          if (this.playerFull()) return;
          this.m_ask_xipai = true;
          console.log("on_game_ask_xipai(json_data) : ", json_data);
          this.stopAllHandAction();
          this.m_hint_status = YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_XIPAI;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          if (view_id != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
            this.ptr_hint_node.active = true;
            this.ptr_hint_btn_ok.node.active = true;
            this.ptr_hint_btn_share.node.active = false;
            this.ptr_hint_btn_cancel.node.active = false;
            this.ptr_hint_btn_leave.node.active = false;
            let colorLabel = "<color=#FFFF00> \u6d17\u724c </color>";
            let baseLabel_01 = "<color=#E0ECFB>" + bind_function_1.bf.clamp_nickname(this.m_user_data[view_id].szName, 4) + "\u8bf7\u6c42</color>";
            let baseLabel_02 = "<color=#E0ECFB>\u8fdb\u884c\u4e0b\u4e00\u5c40 , \u662f\u5426\u540c\u610f?</color>";
            let offset_x = "                ";
            let hint_msg = offset_x + baseLabel_01 + colorLabel + baseLabel_02 + offset_x;
            this.ptr_hint_label.string = hint_msg;
          }
          for (let i = 0; i < 4; i++) this.ptr_user_head[i].node.active && (i == view_id ? this.ptr_user_head[i].set_user_operation_status(i, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_XIPAI, YiFuUserHead_1.XiPaiStatus.Luncher, true) : this.ptr_user_head[i].set_user_operation_status(i, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_XIPAI, YiFuUserHead_1.XiPaiStatus.Wait, true));
          this.ptr_card_layer.show_end_card(json_data);
        }
        on_game_ask_end(json_data) {
          if (this.playerFull()) return;
          if (json_data.chair < 0) return;
          this.unschedule(this.game_end_exit_game_time_func);
          this.hide_common_hint();
          table_3d_layout_1.default.get().showTime(false);
          this.m_hint_status = YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_GAME_END;
          console.log("on_game_ask_end(json_data) : ", json_data);
          this.unschedule(this.timer_update_func);
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let nick_name = bind_function_1.bf.clamp_nickname(this.m_user_data[view_id].szName, 4);
          let that = this;
          that.timer_update_func = function(dt) {
            that.m_left_time -= dt;
            if (that.m_left_time < 0) {
              that.m_left_time = 0;
              that.unschedule(that.timer_update_func);
              console.log("\u88ab\u52a8\u9000\u51fa\u6e38\u620f. . .");
              bind_function_1.bf.close_game(true);
            } else {
              let num = Math.floor(that.m_left_time);
              that.ptr_hint_node.active = true;
              that.ptr_hint_btn_ok.node.active = false;
              that.ptr_hint_btn_share.node.active = true;
              that.ptr_hint_btn_cancel.node.active = false;
              that.ptr_hint_btn_leave.node.active = true;
              let _msg = "<color=#E0ECFB>\u7531\u4e8e </color><color=#FFFF00>" + nick_name + "</color><color=#E0ECFB> \u9009\u62e9\u7ed3\u675f\u6e38\u620f </color><color=#FFFF00>" + num + "</color><color=#E0ECFB> \u79d2\u540e\u5c06\u8fd4\u56de\u73a9\u6cd5\u9875 </color>";
              let offset_x = "            ";
              let hint_msg = offset_x + _msg + offset_x;
              that.ptr_hint_label.string = hint_msg;
            }
          };
          this.m_left_time = YiFuGameData_1.get_share_game_data().GameEndCloseTime;
          this.schedule(that.timer_update_func, 1);
          this.stopAllHandAction();
          this.ptr_btn_end_open.node.active = false;
          this.ptr_card_layer.game_end_layer.hide();
          YiFuGameData_1.get_share_game_data().UserStatus = null;
        }
        timer_clear_data() {
          this.unschedule(this.timer_update_func);
          this.unschedule(this.timer_change_seat_func);
          this.unschedule(this.game_end_exit_game_time_func);
          if (null != table_3d_layout_1.default.get()) {
            table_3d_layout_1.default.get().turnOffAll();
            table_3d_layout_1.default.get().turnOffAllLight();
            table_3d_layout_1.default.get().showTime(false);
          }
        }
        clear_data() {
          if (this.ptr_card_layer && cards_3d_layout_1.default.get()) {
            cards_3d_layout_1.default.get().reset();
            this.ptr_card_layer.initData();
          }
          this.game_zhuama_layer.clearData();
          this.timer_clear_data();
        }
        on_game_user_status(ptr_user_data, bool_look) {
          if (bool_look) return;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
          if (null == this.ptr_user_head[view_id] || void 0 == this.ptr_user_head[view_id]) return;
          ptr_user_data.cbUserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_OFFLINE ? this.ptr_user_head[view_id].set_user_leave_status(1) : (ptr_user_data.cbUserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_PLAY, 
          this.ptr_user_head[view_id].set_user_leave_status(0));
        }
        show_users_default_info(status, hideUser) {
          if (2 == YiFuGameData_1.get_share_game_data().GamePlayer) for (let i = 0; i < YiFuGameData_1.get_share_game_data().GamePlayer; i++) {
            this.ptr_user_head[0].show_user_default_info(0, status);
            this.ptr_user_head[2].show_user_default_info(2, status);
          } else if (3 == YiFuGameData_1.get_share_game_data().GamePlayer) for (let i = 0; i < YiFuGameData_1.get_share_game_data().GamePlayer; i++) {
            this.ptr_user_head[1].show_user_default_info(1, status);
            this.ptr_user_head[2].show_user_default_info(2, status);
            this.ptr_user_head[3].show_user_default_info(3, status);
          } else if (4 == YiFuGameData_1.get_share_game_data().GamePlayer) for (let i = 0; i < YiFuGameData_1.get_share_game_data().GamePlayer; i++) {
            this.ptr_user_head[0].show_user_default_info(0, status);
            this.ptr_user_head[2].show_user_default_info(2, status);
            this.ptr_user_head[1].show_user_default_info(1, status);
            this.ptr_user_head[3].show_user_default_info(3, status);
          }
        }
        on_tutorail_user_enter(json_data) {
          console.log("on_tutorail_user_enter(json_data) : ", json_data);
          if (json_data) {
            YiFuGameData_1.get_share_game_data().GamePlayer = 4;
            for (let i = 0; i < json_data.length; i++) {
              let _user_data = json_data[i];
              let ptr_user_data = new bind_function_1.protocols.tagUserData();
              ptr_user_data.szName = _user_data.name;
              ptr_user_data.wChairID = _user_data.chair;
              ptr_user_data.lScore = _user_data.score;
              ptr_user_data.cbGender = 1;
              ptr_user_data.dwUserID = 1e3 + i;
              let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
              this.ptr_user_head[view_id].set_user_data(ptr_user_data.dwUserID, ptr_user_data, view_id);
              this.ptr_user_head[view_id].show_head();
              this.m_wait_userdata[view_id] = ptr_user_data;
              this.m_user_data[view_id] = ptr_user_data;
            }
          }
          this.show_users_default_info(YiFuUserHead_1.UserHeadStatus.ComeInAfter);
        }
        on_zhua_ma_operation(json_data) {
          console.log("on_zhua_ma_operation(json_data) : ", json_data);
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            console.log("\u65e0\u6293\u9a6c\u914d\u7f6e");
            return;
          }
          let zhuama_id = json_data.zhuama_id;
          this.ptr_card_layer.game_end_layer.setZhuamaChair(zhuama_id);
          if (-1 == zhuama_id) {
            this.game_zhuama_layer.hide();
            this.game_zhuama_wait_layer.hide();
          } else zhuama_id == bind_function_1.bf.get_self_user_data().wChairID ? this.game_zhuama_layer.show(this.ptr_card_layer.game_end_layer.int_zhuama_count_last) : this.game_zhuama_wait_layer.setData(zhuama_id);
        }
        on_zhua_ma_cards(json_data) {
          console.log("on_zhua_ma_cards(json_data) : ", json_data);
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            console.log("\u65e0\u6293\u9a6c\u914d\u7f6e");
            return;
          }
          this.ptr_card_layer.game_end_layer.int_zhuama_count_last = json_data.zhuama_cards.length;
          this.ptr_card_layer.game_end_layer.setZhuaMaCard(json_data.zhuama_id, json_data.zhuama_cards);
          this.game_zhuama_layer.hide();
          this.game_zhuama_wait_layer.hide();
          YiFuGlobalUI_1.default.getInstance().showMessageHint(`\u672c\u8f6e\u6293${json_data.zhuama_cards.length}\u9a6c`);
        }
        on_game_user_enter(ptr_user_data, bool_look) {
          if (bool_look) return;
          console.log("on_game_user_enter : ", ptr_user_data);
          this.m_selfChairId = bind_function_1.bf.get_self_user_data().wChairID;
          if (this.m_isGetSeat && ptr_user_data.wChairID >= YiFuGameData_1.get_share_game_data().GamePlayer) return;
          let _user = YiFuGameData_1.get_share_game_data().game_end_user_data.filter((v, i) => v.userid == ptr_user_data.dwUserID);
          if (_user.length > 0) {
            _user[0].userid = ptr_user_data.dwUserID;
            _user[0].sexid = ptr_user_data.cbGender;
            _user[0].faceid = ptr_user_data.wFaceID;
            _user[0].score = ptr_user_data.lScore;
          } else YiFuGameData_1.get_share_game_data().game_end_user_data.push({
            chair: ptr_user_data.wChairID,
            userid: ptr_user_data.dwUserID,
            sexid: ptr_user_data.cbGender,
            faceid: ptr_user_data.wFaceID,
            score: ptr_user_data.lScore
          });
          console.log("\u8bb0\u5f55\u73a9\u5bb6\u4fe1\u606f 111  : ", YiFuGameData_1.get_share_game_data().game_end_user_data);
          if (ptr_user_data.wChairID != this.m_selfChairId) {
            this.m_waitInitList.push(ptr_user_data.wChairID);
            if (!this.m_isGetSeat) return;
          }
          let view_id = -1;
          view_id = ptr_user_data.wChairID == this.m_selfChairId ? 2 : YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
          this.ptr_user_head[view_id].set_user_data(ptr_user_data.dwUserID, ptr_user_data, view_id);
          this.ptr_user_head[view_id].show_user_default_info(view_id, YiFuUserHead_1.UserHeadStatus.ComeIn);
          this.m_user_data[view_id] = ptr_user_data;
          this.ptr_user_head[view_id].show_head();
          this.m_wait_userdata[view_id] = ptr_user_data;
          null != this.m_wait_userdata[view_id] && this.m_game_player_count++;
          this.m_game_player_count < YiFuGameData_1.get_share_game_data().GamePlayer && (YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE);
          let path = "Game/150/sound/player_in.mp3";
          bind_function_1.bf.play_sound(path, false);
        }
        on_game_user_left(ptr_user_data, bool_look) {
          if (bool_look) return;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
          if (this.m_isGetSeat && ptr_user_data.wChairID >= YiFuGameData_1.get_share_game_data().GamePlayer) {
            console.log("\u5916\u6765\u8005\u5df2\u88ab\u8e22");
            return;
          }
          null != this.m_wait_userdata[view_id] && this.m_game_player_count--;
          this.m_wait_userdata[view_id] = null;
          console.log("on_game_user_left : ", ptr_user_data.wChairID);
          if (this.playerFull()) return;
          if (null != this.ptr_user_head[view_id]) {
            this.ptr_user_head[view_id].show_unable_microphone(false);
            this.ptr_user_head[view_id].show_unable_earphone(false);
          }
          if (YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_START_BEFORE || YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE) {
            if (null != this.ptr_user_head[view_id] && this.ptr_user_head[view_id].node.active) {
              this.ptr_user_head[view_id].show_user_default_info(view_id, YiFuUserHead_1.UserHeadStatus.ComeInBefore);
              this.ptr_user_head[view_id].hide_user_operation_status();
              YiFuTutorial_1.yifututorial.close_game_tutorial();
              this.ptr_Select_layer.hide_user_head();
            }
            let owner_view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(YiFuGameData_1.get_share_game_data().GameOwner);
            null != this.ptr_user_head[owner_view_id] && this.ptr_user_head[owner_view_id].node.active && this.ptr_user_head[owner_view_id].hide_user_operation_status();
          }
          let path = "Game/150/sound/player_out.mp3";
          bind_function_1.bf.play_sound(path, false);
        }
        on_game_user_data(ptr_user_data, bool_look) {
          if (bool_look) return;
        }
        on_game_user_chat(ptr_user_data, stirng_chat) {
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
          bind_function_1.bf.play_user_chat(view_id, bind_function_1.bf.gbk_2_utf8(stirng_chat), ptr_user_data.szName);
        }
        on_game_user_score(ptr_user_data, bool_look) {
          if (bool_look) return;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(ptr_user_data.wChairID);
          this.ptr_user_head[view_id].show_score(ptr_user_data.lScore);
          let user_data = YiFuGameData_1.get_share_game_data().game_end_user_data.filter((v, i) => v.userid == ptr_user_data.dwUserID)[0];
          user_data && (user_data.score = ptr_user_data.lScore);
          console.log("\u8bb0\u5f55\u73a9\u5bb6\u4fe1\u606f 222  : ", YiFuGameData_1.get_share_game_data().game_end_user_data);
        }
        on_game_message(int_main_id, int_sub_id, data) {
          let json_data = bind_function_1.bf.parse_game_message_data(data);
          if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_CONFIG) this.on_game_config(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_BUTTON_POWER) this.on_button_power(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_BANKER) this.on_game_banker(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_LAST_GAME_DATA) this.on_last_game_data(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_CLOCK) this.on_game_clock(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ASK_XIPAI) this.on_game_ask_xipai(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ASK_END) this.on_game_ask_end(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_SEND_GIFT) this.on_send_gift(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_AGREE_XIPAI) this.on_agree_xipai(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_AGREE_END) ; else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_FINISH) this.on_game_finish(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_HINT_POWER) this.on_hint_power(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_SHOW_XIPAI) this.on_show_xipai(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_SELECT_HU) this.on_select_hu(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_USER_STATUS) this.on_user_status(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_SCORE) this.on_user_score(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_SCORE_RECORD) this.on_user_score_records(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_USER_SEAT) this.on_event_user_seat(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ASK_CHANGE_SEAT) this.on_ask_change_seat(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_CHANGE_SEAT_ANSWER) this.on_ask_change_seat_answer(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_HINT) this.on_game_hint(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_EXIT) this.on_game_exit(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_EXIT_END) this.on_game_button_power(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_GAME_COUNT) this.on_game_count(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_MICROPHONE_POWER) this.on_game_microphone_power(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_EARPHONE_POWER) this.on_game_earphone_power(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ASK_GAME_COUNT) this.on_ask_game_count(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_TUTORIAL_USER_ENTER) this.on_tutorail_user_enter(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ZHUA_MA_OPERATION) this.on_zhua_ma_operation(json_data); else if (int_sub_id == YiFuGameDefine_1.YiFuGameDefine.SUB_S_ZHUA_MA_CRADS) this.on_zhua_ma_cards(json_data); else {
            if (this.playerFull()) return;
            this.ptr_card_layer.dealGameEvent(int_sub_id, json_data);
          }
          return true;
        }
        on_game_count(json_data) {
          console.log("on_game_count(json_data) : ", json_data);
          YiFuGameData_1.get_share_game_data().GameCount = json_data.count + 1;
          YiFuGameData_1.get_share_game_data().GameAllCount = json_data.all_count;
          this.fill_game_count();
          let new_mask = this.ptr_card_layer.get_mask_id();
          console.log("new_mask :  ", new_mask);
          let old_mask = Number(utils_1.utils.getLocalStorage("GameCountMask") || "0");
          if (new_mask == old_mask) ; else {
            utils_1.utils.setLocalStorage("GameEndRedPointMask", String("0"));
            utils_1.utils.setLocalStorage("GameCountMask", String(new_mask));
          }
        }
        fill_game_count() {
          -1 == YiFuGameData_1.get_share_game_data().GameAllCount ? this.ptr_game_count.string = "\u7b2c" + YiFuGameData_1.get_share_game_data().GameCount + "\u5c40" : this.ptr_game_count.string = YiFuGameData_1.get_share_game_data().GameCount + "/" + YiFuGameData_1.get_share_game_data().GameAllCount + "\u5c40";
          this.ptr_game_count.node.active = !!YiFuGameData_1.get_share_game_data().GameAllCount;
        }
        on_game_button_power(json_data) {
          console.log("on_game_button_power(json_data) : ", json_data);
          this.ptr_btn_close.node.active = (json_data.id & YiFuGameDefine_1.YiFuGameDefine.BUTTTON_EXIT_ROOM) > 0;
          this.ptr_btn_over.node.active = (json_data.id & YiFuGameDefine_1.YiFuGameDefine.BUTTTON_END_GAME) > 0;
        }
        on_game_exit(json_data) {
          console.log("on_game_exit(json_data) : ", json_data);
          bind_function_1.bf.close_game(true, json_data.message);
        }
        on_game_hint(json_data) {
          if (this.playerFull()) return;
          console.log("on_game_hint(json_data) : ", json_data);
          YiFuGlobalUI_1.default.getInstance().showMessageHint(json_data.message);
        }
        on_hint_power(json_data) {
          if (this.playerFull()) return;
          let is_hint = (json_data.hint & YiFuGameDefine_1.YiFuGameDefine.HINT_WAIT_HANDLE) > 0;
          let str = "\u7b49\u5f85\u4ed6\u4eba\u505a\u51fa\u64cd\u4f5c...";
          YiFuGlobalUI_1.default.getInstance().showMessageHint(str);
        }
        on_show_xipai(json_data) {
          if (this.playerFull()) return;
          console.log("on_show_xipai(json_data) : ", json_data);
          let is_show = 1 == json_data.show;
          this.ptr_btn_xipai.node.active = is_show;
          YiFuGameData_1.get_share_game_data().GameAllCount == YiFuGameData_1.get_share_game_data().GameCount && (this.ptr_btn_xipai.node.active = false);
        }
        on_select_hu(json_data) {
          if (this.playerFull()) return;
        }
        updateCD(end_time) {
          let currentTime = new Date().getTime();
          if (currentTime > end_time) {
            this.ptr_common_hint_node && (this.ptr_common_hint_node.active = false);
            this.close_game(1);
            this.unschedule(this.game_end_exit_game_time_func);
          } else {
            this.ptr_common_hint_node && (this.ptr_common_hint_node.active = true);
            let interval = Math.floor((end_time - currentTime) / 1e3);
            this.ptr_common_hint_label.string = interval + "s\u540e\u5c06\u81ea\u52a8\u89e3\u6563\u623f\u95f4";
          }
        }
        on_user_score(json_data) {
          if (this.playerFull()) return;
          console.log("on_user_score(json_data) : ", json_data);
          let from_view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.from_chair);
          let to_view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.to_chair);
          let from_vec2 = this.ptr_score_action_node[from_view_id].convertToWorldSpaceAR(cc.v2(0, 0));
          let to_vec2 = this.ptr_score_action_node[to_view_id].convertToWorldSpaceAR(cc.v2(0, 0));
          for (let i = 0; i < 5; i++) YiFuGlobalUI_1.default.getInstance().playScoreAction(i, from_vec2, to_vec2, json_data.score, this.ptr_score_action_root);
          this.ptr_user_head[to_view_id].show_score_action(json_data.score);
          if (json_data) {
            let from_name = "";
            let to_name = "";
            if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
              from_name = YiFuGameData_1.get_share_game_data().TutorialUserName[json_data.from_chair - 1];
              to_name = YiFuGameData_1.get_share_game_data().TutorialUserName[json_data.to_chair - 1];
              this.ptr_user_head[to_view_id].show_score(json_data.score);
              this.ptr_user_head[from_view_id].show_score(-json_data.score);
            } else {
              from_name = bind_function_1.bf.get_user_data_by_chair_id(json_data.from_chair).szName;
              to_name = bind_function_1.bf.get_user_data_by_chair_id(json_data.to_chair).szName;
            }
            YiFuGameData_1.get_share_game_data().records.push({
              game_index: json_data.game_index,
              game_index2: json_data.game_index2,
              from_chair: json_data.from_chair,
              from_name: from_name,
              score: json_data.score,
              time: json_data.time,
              to_chair: json_data.to_chair,
              to_name: to_name
            });
          }
          this.ptr_card_layer.game_end_layer.node.active && this.ptr_card_layer.game_end_layer.updateuserScoreRecord();
          2 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_2_3);
        }
        on_user_score_records(json_data) {
          if (this.playerFull()) return;
          console.log("on_user_score_records(json_data) : ", json_data);
          let data = [];
          if (json_data.record && json_data.record.length > 0) for (let i = 0; i < json_data.record.length; i++) {
            let d = json_data.record[i];
            let from_name = "";
            let to_name = "";
            if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
              from_name = YiFuGameData_1.get_share_game_data().TutorialUserName[d.from_chair - 1];
              to_name = name[d.to_chair - 1];
            } else {
              from_name = bind_function_1.bf.get_user_data_by_chair_id(d.from_chair).szName;
              to_name = bind_function_1.bf.get_user_data_by_chair_id(d.to_chair).szName;
            }
            data.push({
              game_index: d.game_index,
              game_index2: d.game_index2,
              from_chair: d.from_chair,
              from_name: from_name,
              score: d.score,
              time: d.time,
              to_chair: d.to_chair,
              to_name: to_name
            });
          }
          YiFuGameData_1.get_share_game_data().records = data;
        }
        on_user_status(json_data) {
          if (this.playerFull()) return;
          console.log("on_user_status(json_data) : ", json_data);
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          if (json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_SEND_CARD) {
            YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_START_BEFORE;
            if (null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active) {
              this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_FAPAI);
              YiFuGameData_1.get_share_game_data().GameCount > 1 ? this.show_users_default_info(YiFuUserHead_1.UserHeadStatus.ComeInAfter) : this.show_users_default_info(YiFuUserHead_1.UserHeadStatus.ComeIn);
            }
            if (view_id != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
              let hint_msg = "\u7b49\u5f85\u53d1\u724c...";
              YiFuGlobalUI_1.default.getInstance().showMessageHint(hint_msg);
              bind_function_1.bf.play_sound("Game/150/sound/faipai.mp3", false);
            }
            this.owner_hufen_tutorial();
          } else if (json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_CAI_SHEN) {
            null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active && this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_FANCAISHEN);
            if (view_id != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN) {
              let hint_msg = "\u7b49\u5f85\u7ffb\u8d22\u795e...";
              this.show_common_hint(hint_msg);
            }
          } else if (json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_LEFT) {
            if (null != this.ptr_user_head[view_id] && this.ptr_user_head[view_id].node.active) {
              this.ptr_user_head[view_id].set_user_leave_status(2);
              YiFuGameData_1.get_share_game_data().UserStatus = null;
            }
          } else if (json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_HU) {
            if (null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active) {
              this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI);
              this.hu_status_hide_action();
            }
          } else if (json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_HU_ING) {
            if (null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active) {
              this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI_ING);
              this.hu_status_hide_action();
            }
          } else json_data.status == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_HU_ZIMO && null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active && this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI_ZIMO);
        }
        hu_status_hide_action() {
          this.ptr_card_layer.catch_btn.node.active = false;
          YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_END;
          cards_3d_layout_1.default.get().unselectAllHandCards();
          cards_3d_layout_1.default.get().setHandCardsCanTouch(false);
          this.ptr_card_layer.show_mopai_animaion(false);
        }
        show_common_hint(msg, hide = true) {
          this.ptr_common_hint_node.active = true;
          let hint_msg = "<color=#E0ECFB>" + msg + "</color>";
          this.ptr_common_hint_label.string = hint_msg;
          if (hide) {
            clearTimeout(this.m_show_common_hint_time_id);
            this.m_show_common_hint_time_id = setTimeout(() => {
              this.ptr_common_hint_node.active = false;
            }, 2e3);
          }
        }
        hide_common_hint() {
          this.ptr_common_hint_node.active = false;
        }
        on_game_finish(json_data) {
          if (this.playerFull()) return;
        }
        on_agree_end(json_data) {}
        close_game(time) {
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_EXIT_GAME, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          clearTimeout(this.m_close_game_time_id);
          this.m_close_game_time_id = setTimeout(() => {
            this.clear_data();
            console.log("\u5df2\u9000\u51fa\u6e38\u620f....");
            bind_function_1.bf.close_game(true);
          }, time);
        }
        on_agree_xipai(json_data) {
          if (this.playerFull()) return;
          console.log("on_agree_xipai(json_data) : ", json_data);
          this.m_agree_xipai_count++;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let is_agree = 1 == json_data.is_agree;
          let status = is_agree ? YiFuUserHead_1.XiPaiStatus.Agree : YiFuUserHead_1.XiPaiStatus.Refuse;
          let is_all = 1 == json_data.is_all;
          YiFuGameData_1.get_share_game_data().selfHaveAgreeXiPai = json_data.chair == bind_function_1.bf.get_self_user_data().wChairID;
          if (is_all) {
            let that = this;
            this.m_agree_xipai_count = 0;
            bind_function_1.bf.pause_message();
            this.node.stopAllActions();
            this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
              that.play_xipai_animation(() => {
                bind_function_1.bf.restore_message();
                YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_XIPAI;
                cards_3d_layout_1.default.get().reset();
                that.show_users_default_info(YiFuUserHead_1.UserHeadStatus.ComeInAfter);
                that.hide_user_operation_status();
                that.hide_banker();
                that.initBtn();
                that.initOther();
                that.dice_init();
                that.hide_game_end();
                table_3d_layout_1.default.get().turnOffAll();
                table_3d_layout_1.default.get().turnOffAllLight();
                table_3d_layout_1.default.get().showTime(false);
              });
            })));
          }
          this.ptr_user_head[view_id].set_user_operation_status(view_id, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_XIPAI, status, is_agree);
          is_agree || this.delay_hide_user_operation_status();
          this.ptr_card_layer.clearAnimationHuFire();
          cards_3d_layout_1.default.get().hideHandleSelect();
          this.ptr_card_layer.game_end_layer.updateUserHeadAgreeStatus(json_data.chair);
          this.ptr_card_layer.game_end_layer.updateXiPaiBtn();
        }
        hide_game_end() {
          this.ptr_btn_end_open.node.active = false;
          this.ptr_card_layer.game_end_layer.hide();
          let visiable = YiFuGlobalUI_1.default.getInstance().getKeyBoardVisiable();
          if (visiable) {
            utils_1.utils.show_hint("\u70b9\u51fb\u5bf9\u65b9\u5934\u50cf\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5212\u5206");
            YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
          }
        }
        play_xipai_animation(done) {
          this.ptr_card_layer.initData();
          this.game_zhuama_layer.clearData();
          this.game_zhuama_wait_layer.hide();
          let array = [];
          for (let i = 0; i < 4; ++i) {
            array = array.concat(cards_3d_layout_1.default.get()._hand_cards[i].filter(c => cc.isValid(c) && c.active));
            cards_3d_layout_1.default.get()._heap_cards[i].forEach(cards => {
              cards.getComponent(CHandledCards3D_1.default)._arrow.active = false;
              array = array.concat(cards.getComponent(CHandledCards3D_1.default)._handled_card.filter(c => cc.isValid(c) && c.active));
            });
            array = array.concat(cards_3d_layout_1.default.get()._out_cards[i].filter(c => cc.isValid(c) && c.active));
            array = array.concat(cards_3d_layout_1.default.get()._hua_cards[i].filter(c => cc.isValid(c) && c.active));
          }
          array = utils_1.utils.shuffleArray(array);
          this._delay_set_opcaity(array, 0, done);
        }
        _delay_set_opcaity(array, i, finish) {
          let that = this;
          setTimeout(() => {
            let n = array[i];
            cc.isValid(n) && (n.opacity = 0);
            i < array.length ? that._delay_set_opcaity(array, i + 1, finish) : table_3d_layout_1.default.get() && finish();
          }, 10);
        }
        delay_hide_user_operation_status() {
          let that = this;
          clearTimeout(this.m_hide_user_operation_status_id);
          this.m_hide_user_operation_status_id = setTimeout(() => {
            that.hide_user_operation_status();
          }, 3e3);
        }
        hide_user_operation_status() {
          for (let i = 0; i < 4; i++) this.ptr_user_head[i].node.active && this.ptr_user_head[i].hide_user_operation_status();
        }
        hide_banker() {
          for (let i = 0; i < 4; i++) this.ptr_user_head[i].node.active && this.ptr_user_head[i].hide_banker();
        }
        on_send_gift(json_data) {
          if (this.playerFull()) return;
          let from_view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.from_chair_id);
          let to_view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.to_chair_id);
          let gift_id = json_data.gift_id + 1011;
          let int_num = json_data.int_num;
          let from_vec2;
          let to_vec2;
          from_vec2 = this.ptr_user_head[from_view_id].node.convertToWorldSpaceAR(cc.v2(0, 0));
          to_vec2 = this.ptr_user_head[to_view_id].node.convertToWorldSpaceAR(cc.v2(0, 0));
          bind_function_1.bf.play_gift(from_vec2, to_vec2, gift_id, int_num);
        }
        on_game_config(json_data) {
          console.log("on_game_config : ", json_data);
          YiFuGameData_1.get_share_game_data().GamePlayer = json_data.player;
          YiFuGameData_1.get_share_game_data().HandCardCount = json_data.hand_card_count;
          YiFuGameData_1.get_share_game_data().HaveCaiShen = 1 == json_data.is_cai_shen;
          YiFuGameData_1.get_share_game_data().CaiShenCardValue = json_data.cai_shen;
          YiFuGameData_1.get_share_game_data().GameEndCloseTime = json_data.end_time;
          YiFuGameData_1.get_share_game_data().CaiShenCount = json_data.cai_count;
          YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN = 1 == json_data.switch_baiban;
          YiFuGameData_1.get_share_game_data().GameOwner = json_data.owner;
          YiFuGameData_1.get_share_game_data().IsOwner = json_data.owner == bind_function_1.bf.get_self_user_data().wChairID;
          void 0 != json_data.is_zhuama && null != json_data.is_zhuama && (YiFuGameData_1.get_share_game_data().HaveZhuaMa = 1 == json_data.is_zhuama);
          YiFuGameData_1.get_share_game_data().TabelName = json_data.name;
          this.ptr_table_name.node.active = true;
          this.ptr_table_name.string = YiFuGameData_1.get_share_game_data().TabelName;
          YiFuGameData_1.get_share_game_data().TableCode = json_data.code;
          let lastRoomID = cc.sys.localStorage.getItem("ZlfLastRoomID");
          null == lastRoomID && (lastRoomID = "0");
          if (!YiFuGameData_1.get_share_game_data().haveInitVoiceRoom) {
            YiFuGameData_1.get_share_game_data().haveInitVoiceRoom = true;
            let isShowHint = false;
            if (lastRoomID != json_data.code) {
              isShowHint = true;
              lastRoomID = json_data.code;
              cc.sys.localStorage.setItem("ZlfLastRoomID", lastRoomID);
            }
          }
          if (this.playerFull()) return;
          let userCount = 3 == json_data.player ? 4 : json_data.player;
          bind_function_1.bf.pause_message();
          table_3d_layout_1.default._inst.loadResources(userCount, YiFuGameData_1.get_share_game_data().HandCardCount);
          this.init_share_text();
          this.clear_exit_game_tips();
        }
        clear_exit_game_tips() {
          let t = utils_1.utils.getLocalStorage("ClearGameEndExitGameTips");
          if (t && t == String(YiFuGameData_1.get_share_game_data().TableCode)) ; else {
            utils_1.utils.setLocalStorage("ClearGameEndExitGameTips", String(YiFuGameData_1.get_share_game_data().TableCode));
            utils_1.utils.setLocalStorage("gameEndExitGameTips", "0");
          }
        }
        init_share_text() {
          let share_text = [];
          let share_1 = "[" + YiFuGameData_1.get_share_game_data().TabelName + "]\u5c11\u4eba,\u5feb\u6765!";
          share_text.push(share_1);
          let share_2 = "\u670b\u53cb\u4f55\u5904\u6709,\u9ebb\u5c06\u8d70\u4e00\u8d70";
          share_text.push(share_2);
          let share_3 = "\u4eca\u5929,[" + YiFuGameData_1.get_share_game_data().TabelName + "]\u4e00\u4e0b?";
          share_text.push(share_3);
          let share_4 = "\u65b0\u5e74\u65b0\u6c14\u8c61\uff0c\u51b3\u6218\u5230\u5929\u4eae!";
          share_text.push(share_4);
          let share_5 = "\u8ba9\u8001\u5bb6\u7684\u6587\u5316,\u6d41\u884c\u8d77\u6765!";
          share_text.push(share_5);
          let share_6 = "\u4e0d\u60f3\u624b\u6413\u53c8\u624b\u75d2\uff1f\u8001\u5bb6\u6e38\u4e0a\u723d\u4e00\u723d!";
          share_text.push(share_6);
          let share_7 = "\u6765\u4eba! \u4e0a\u9ebb\u5c06\u3002";
          share_text.push(share_7);
          YiFuGameData_1.get_share_game_data().Share_Text = share_text;
        }
        playerFull() {
          if (this.m_selfChairId >= YiFuGameData_1.get_share_game_data().GamePlayer) return true;
          return false;
        }
        on_event_user_seat(json_data) {
          if (this.playerFull()) return;
          console.log("OnEventUserSeat(json_data)  : ", json_data);
          if (this.m_selfChairId >= YiFuGameData_1.get_share_game_data().GamePlayer) return;
          this.m_isGetSeat = true;
          this.m_isCanChangeSeat = 1 == json_data.canChange;
          this.m_userSeatList = json_data.seat;
          this.m_selfSeat = json_data.seat[this.m_selfChairId];
          YiFuGameData_1.get_share_game_data().IsGetSeat = this.m_isGetSeat;
          YiFuGameData_1.get_share_game_data().UserSeatList = this.m_userSeatList;
          YiFuGameData_1.get_share_game_data().SelfSeat = this.m_selfSeat;
          YiFuGameData_1.get_share_game_data().CanChangeSeat = this.m_isCanChangeSeat;
          for (let i = 0; i < 4; i++) 2 != i && this.ptr_user_head[i].hide_head();
          for (let i = 0; i < this.m_waitInitList.length; i++) {
            let chairid = this.m_waitInitList[i];
            let userData = bind_function_1.bf.get_user_data_by_chair_id(chairid);
            if (null == userData || null == userData.wChairID) continue;
            let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(userData.wChairID);
            this.ptr_user_head[view_id].hide_head();
          }
          this.delay_show_other_head();
          this.update_microphone_power();
          this.update_earphone_power();
          console.log("this.m_selfChairId : ", this.m_selfChairId);
          YiFuGameLogic_1.get_game_logic().switch_to_table_feng(YiFuGameData_1.get_share_game_data().SelfSeat);
        }
        delay_show_other_head() {
          let _haveInitHeadList = [];
          for (let i = 0; i < this.m_waitInitList.length; i++) {
            let chairid = this.m_waitInitList[i];
            let userData = bind_function_1.bf.get_user_data_by_chair_id(chairid);
            if (null == userData || null == userData.wChairID) continue;
            let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(userData.wChairID);
            this.ptr_user_head[view_id].set_user_data(userData.dwUserID, userData, view_id);
            (YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_START_BEFORE || YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE) && YiFuGameData_1.get_share_game_data().GameCount <= 1 ? this.ptr_user_head[view_id].show_user_default_info(view_id, YiFuUserHead_1.UserHeadStatus.ComeIn) : this.ptr_user_head[view_id].show_user_default_info(view_id, YiFuUserHead_1.UserHeadStatus.ComeInAfter);
            this.m_user_data[view_id] = userData;
            this.ptr_user_head[view_id].show_head();
            this.m_wait_userdata[view_id] = userData;
            _haveInitHeadList.push(view_id);
            null != this.m_wait_userdata[view_id] && this.m_game_player_count++;
            this.m_game_player_count < YiFuGameData_1.get_share_game_data().GamePlayer && (YiFuGameData_1.get_share_game_data().UserStatus = YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE);
            let path = "Game/150/sound/player_in.mp3";
            bind_function_1.bf.play_sound(path, false);
          }
          _haveInitHeadList.push(2);
          this.show_users_init_info(_haveInitHeadList);
        }
        show_users_init_info(_haveInitHeadList) {
          let _noInitHeadList = [];
          if (2 == YiFuGameData_1.get_share_game_data().GamePlayer) {
            let headList = [ 0, 2 ];
            _noInitHeadList = this.find_no_init_head_list(headList, _haveInitHeadList);
          } else if (3 == YiFuGameData_1.get_share_game_data().GamePlayer) {
            let headList = [ 1, 2, 3 ];
            _noInitHeadList = this.find_no_init_head_list(headList, _haveInitHeadList);
          } else if (4 == YiFuGameData_1.get_share_game_data().GamePlayer) {
            let headList = [ 0, 1, 2, 3 ];
            _noInitHeadList = this.find_no_init_head_list(headList, _haveInitHeadList);
          }
          _noInitHeadList.length > 0 && _noInitHeadList.forEach(v => this.ptr_user_head[v].show_user_default_info(v, YiFuUserHead_1.UserHeadStatus.ComeInBefore));
        }
        find_no_init_head_list(headList, _haveInitHeadList) {
          let _noInitHeadList = [];
          for (let j = 0; j < headList.length; j++) {
            let headView = headList[j];
            let find = false;
            for (let i = 0; i < _haveInitHeadList.length; i++) _haveInitHeadList[i] == headView && (find = true);
            find || _noInitHeadList.push(headView);
          }
          return _noInitHeadList;
        }
        on_ask_change_seat_answer(json_data) {
          console.log("on_ask_change_seat_answer(json_data) : ", json_data);
          let from_chair = json_data.chair;
          let to_chair = json_data.to_chair;
          let to_view = YiFuGameLogic_1.get_game_logic().switch_to_view_id(to_chair);
          let from_view = YiFuGameLogic_1.get_game_logic().switch_to_view_id(from_chair);
          if (3 == json_data.agree) {
            this.ptr_hint_node.active = false;
            this.ptr_user_head[to_view].hide_user_operation_status();
            this.ptr_user_head[from_view].hide_user_operation_status();
            return;
          }
          if (2 == json_data.agree) {
            if (from_chair == bind_function_1.bf.get_self_user_data().wChairID || to_chair == bind_function_1.bf.get_self_user_data().wChairID) {
              this.ptr_user_head[to_view].node.stopAllActions();
              this.ptr_user_head[to_view].node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
                YiFuGlobalUI_1.default.getInstance().showMessageHint("\u6e38\u620f\u5f00\u59cb,\u6362\u5ea7\u8bf7\u6c42\u5931\u8d25");
              })));
            }
          } else {
            if (null != this.ptr_user_head[to_view] && this.ptr_user_head[to_view].node.active) {
              let index = -1;
              index = 1 == json_data.agree ? YiFuUserHead_1.ChangeSeatStatus.Agree : YiFuUserHead_1.ChangeSeatStatus.Refuse;
              this.ptr_user_head[to_view].set_user_operation_status(to_view, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_CHANGE_SEAT, index);
            }
            if (1 == json_data.agree) {
              bind_function_1.bf.pause_message();
              let hint = bind_function_1.bf.clamp_nickname(this.m_user_data[to_view].szName) + " \u4e0e " + bind_function_1.bf.clamp_nickname(this.m_user_data[from_view].szName) + " \u6362\u5ea7\u6210\u529f";
              YiFuGlobalUI_1.default.getInstance().showMessageHint(hint);
            }
            let that = this;
            let seat_timer = 3;
            null != this.timer_change_seat_func && this.unschedule(this.timer_change_seat_func);
            that.timer_change_seat_func = function(dt) {
              seat_timer -= dt;
              if (seat_timer < 0) {
                bind_function_1.bf.restore_message();
                seat_timer = 0;
                that.unschedule(that.timer_change_seat_func);
                that.ptr_user_head[to_view].hide_user_operation_status();
                that.ptr_user_head[from_view].hide_user_operation_status();
              }
            };
            this.schedule(that.timer_change_seat_func, .2);
          }
        }
        on_ask_change_seat(json_data) {
          if (this.playerFull()) return;
          console.log("on_ask_change_seat(json_data) : ", json_data);
          this.m_hint_status = YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_CHANGE_SEAT;
          this.ask_change_chair = json_data.chair;
          let from_view = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.chair);
          let to_view = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.to_chair);
          if (json_data.to_chair == bind_function_1.bf.get_self_user_data().wChairID) {
            this.ptr_hint_node.active = true;
            this.ptr_hint_btn_ok.node.active = true;
            this.ptr_hint_btn_cancel.node.active = true;
            this.ptr_hint_btn_share.node.active = false;
            this.ptr_hint_btn_leave.node.active = false;
            let colorLabel = "<color=#FFFF00> \u6362\u5ea7\u4f4d </color>";
            let baseLabel_01 = "<color=#E0ECFB>" + bind_function_1.bf.clamp_nickname(this.m_user_data[from_view].szName, 4) + "\u8bf7\u6c42\u4e0e\u4f60</color>";
            let baseLabel_02 = "<color=#E0ECFB>,\u662f\u5426\u540c\u610f</color>";
            let offset_x = "                ";
            let hint_msg = offset_x + baseLabel_01 + colorLabel + baseLabel_02 + offset_x;
            this.ptr_hint_label.string = hint_msg;
          }
          null != this.ptr_user_head[from_view] && this.ptr_user_head[from_view].node.active && this.ptr_user_head[from_view].set_user_operation_status(from_view, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_CHANGE_SEAT, YiFuUserHead_1.ChangeSeatStatus.Luncher);
          null != this.ptr_user_head[to_view] && this.ptr_user_head[to_view].node.active && this.ptr_user_head[to_view].set_user_operation_status(to_view, YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_CHANGE_SEAT, YiFuUserHead_1.ChangeSeatStatus.Wait);
        }
        on_button_power(json_data) {
          if (this.playerFull()) return;
          let visible = json_data.visible;
          let enable = json_data.enable;
          this.ptr_btn_fapai.node.active = (visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_SEND_CARD) > 0;
          this.ptr_btn_fapai.interactable = (enable & YiFuGameDefine_1.YiFuGameDefine.BUTTON_SEND_CARD) > 0;
          this.fapai_button_action();
          this.ptr_btn_quick_game.node.active = (visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_START_GAME) > 0;
          this.ptr_btn_quick_game.interactable = (enable & YiFuGameDefine_1.YiFuGameDefine.BUTTON_START_GAME) > 0;
          this.swap_quick_game_btn_bubble();
          this.ptr_btn_caishen.node.active = (visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_CAI_SHEN) > 0;
          this.ptr_btn_caishen.interactable = (enable & YiFuGameDefine_1.YiFuGameDefine.BUTTON_CAI_SHEN) > 0;
          this.ptr_btn_invite.node.active = (visible & YiFuGameDefine_1.YiFuGameDefine.BUTTON_POWER_INVITE) > 0;
          this.ptr_btn_invite.interactable = (enable & YiFuGameDefine_1.YiFuGameDefine.BUTTON_POWER_INVITE) > 0;
          this.invite_tutorial_new();
          this.ptr_card_layer.catch_btn.node.active = false;
          this.ptr_card_layer.catch_btn.interactable = false;
          this.ptr_card_layer.on_hand_power(json_data);
          this.invite_tutorial();
        }
        fapai_button_action() {
          let callback = function() {
            1 == YiFuGameData_1.get_share_game_data().GameCount ? tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_4, .4) : 2 == YiFuGameData_1.get_share_game_data().GameCount ? tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_2_0, .4) : 3 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_3_0, .4);
          };
          if (this.ptr_btn_fapai.node.active) {
            this.ptr_btn_fapai.node.opacity = 0;
            this.ptr_btn_fapai.node.setPosition(this.ptr_btn_fapai.node.position.x, -245);
            this.ptr_btn_fapai.node.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, this.ptr_btn_fapai.node.position.x, -185), cc.fadeIn(.2)), cc.callFunc(callback)));
          }
        }
        swap_quick_game_btn_bubble() {
          if (this.ptr_btn_quick_game.node.active) {
            this.ptr_btn_quick_game.node.stopAllActions();
            this.ptr_btn_quick_game.node.children[1].opacity = 255;
            this.ptr_btn_quick_game.node.children[1].active = true;
            this.ptr_btn_quick_game.node.children[2].active = true;
            this.ptr_btn_quick_game.node.children[2].opacity = 0;
            let that = this;
            let fadeTime = 1.4;
            let delayTime = 6;
            let call_back_1 = function() {
              that.ptr_btn_quick_game.node.children[1].runAction(cc.fadeIn(fadeTime));
              that.ptr_btn_quick_game.node.children[2].runAction(cc.fadeOut(fadeTime));
            };
            let call_back_2 = function() {
              that.ptr_btn_quick_game.node.children[1].runAction(cc.fadeOut(fadeTime));
              that.ptr_btn_quick_game.node.children[2].runAction(cc.fadeIn(fadeTime));
            };
            this.ptr_btn_quick_game.node.runAction(cc.sequence(cc.callFunc(call_back_1), cc.delayTime(delayTime), cc.callFunc(call_back_2), cc.delayTime(delayTime)).repeatForever());
          } else this.ptr_btn_quick_game.node.stopAllActions();
        }
        invite_tutorial() {
          if (YiFuGameData_1.get_share_game_data().GameCount <= 1 && YiFuGameData_1.get_share_game_data().IsOwner) {
            if (this.ptr_btn_invite.node.active) {
              let mask_id = YiFuGameData_1.get_share_game_data().TableCode;
              YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Invite, 1, mask_id, this.ptr_btn_invite.node);
            }
            if (this.ptr_btn_fapai.node.active) {
              let mask_id = YiFuGameData_1.get_share_game_data().TableCode;
              YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_FaPai_1, 1, mask_id, this.ptr_btn_fapai.node);
            }
          }
          if (this.ptr_btn_fapai.node.active) {
            bind_function_1.bf.play_sound("Game/150/sound/faipai.mp3", false);
            if (YiFuGameData_1.get_share_game_data().GameCount >= 2 && YiFuGameData_1.get_share_game_data().IsOwner) {
              let mask_id = this.ptr_card_layer.get_mask_id();
              YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_FaPai_2, 10, mask_id, this.ptr_btn_fapai.node);
            }
          }
        }
        invite_tutorial_new() {
          this.ptr_btn_invite.node.active && tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_1);
        }
        calculate_catch_btn_pos() {
          let {x: x, y: y, scale: scale} = cards_3d_layout_1.default.get().CSelfCardsController.getCatchCardPosition();
          let token_pos = cc.v2(x, y);
          let token_world = cards_3d_layout_1.default.get().node.convertToWorldSpaceAR(token_pos);
          let local = this.ptr_card_layer.catch_btn.node.parent.convertToNodeSpaceAR(token_world);
          this.ptr_card_layer.catch_btn.node.setPosition(local.add(cc.v2(0, 6)));
          this.ptr_card_layer.catch_btn.node.setScale(scale);
        }
        on_last_game_data(json_data) {
          YiFuGameData_1.get_share_game_data().LastBanker = json_data.banker;
          YiFuGameData_1.get_share_game_data().LastHuChair = json_data.hu_chair;
          json_data.hu_chair.length > 0 && (YiFuGameData_1.get_share_game_data().HuFirstPlayer = json_data.hu_chair[0]);
        }
        on_game_banker(json_data) {
          if (this.playerFull()) return;
          bind_function_1.bf.pause_message();
          YiFuGameData_1.get_share_game_data().BankerViewID = YiFuGameLogic_1.get_game_logic().switch_to_view_id(json_data.banker_id);
          YiFuGameData_1.get_share_game_data().BankChairID = json_data.banker_id;
          YiFuGameData_1.get_share_game_data().BankerLian = json_data.lianzhuang + 1;
          YiFuGameData_1.get_share_game_data().BankerAni = 1 == json_data.isani;
          this.m_dice_number_1 = json_data.dice[0] - 1;
          this.m_dice_number_2 = json_data.dice[1] - 1;
          if (YiFuGameData_1.get_share_game_data().BankerAni) {
            this.ptr_sprite_banker.node.active = true;
            this.ptr_sprite_banker.node.setPosition(cc.v2(-5, 46));
            let user_banker = this.ptr_user_head[YiFuGameData_1.get_share_game_data().BankerViewID];
            let local = user_banker.ptr_img_banker.node.convertToWorldSpaceAR(cc.v2(user_banker.ptr_img_banker.node.x, user_banker.ptr_img_banker.node.y));
            let move_pos = this.ptr_sprite_banker.node.parent.convertToNodeSpaceAR(local);
            if (0 == YiFuGameData_1.get_share_game_data().BankerViewID) {
              move_pos.x -= -12;
              move_pos.y -= 10;
            } else if (1 == YiFuGameData_1.get_share_game_data().BankerViewID) {
              move_pos.x -= 0;
              move_pos.y -= 10;
            } else if (2 == YiFuGameData_1.get_share_game_data().BankerViewID) {
              move_pos.x -= -10;
              move_pos.y -= 5;
            } else if (3 == YiFuGameData_1.get_share_game_data().BankerViewID) {
              move_pos.x -= 15;
              move_pos.y -= 15;
            }
            let hint = "\u672c\u8f6e " + this.ptr_user_head[YiFuGameData_1.get_share_game_data().BankerViewID].m_nickname + " \u4e3a\u5e84\u5bb6";
            YiFuGlobalUI_1.default.getInstance().showMessageHint(hint);
            let that = this;
            this.ptr_sprite_banker.node.setScale(1);
            this.ptr_sprite_banker.node.runAction(cc.sequence(cc.delayTime(.4), cc.spawn(cc.moveTo(.4, move_pos), cc.scaleTo(.4, .5)), cc.callFunc(function() {
              that.ptr_sprite_banker.node.active = false;
              that.ptr_user_head[YiFuGameData_1.get_share_game_data().BankerViewID].show_banker();
              that.dice_show_ani();
            })));
          } else {
            bind_function_1.bf.restore_message();
            this.ptr_user_head[YiFuGameData_1.get_share_game_data().BankerViewID].show_banker();
          }
        }
        on_game_microphone_power(json_data) {
          if (!global_data_1.global_data.is_online) return;
          YiFuGameData_1.get_share_game_data().statusMicrophone = json_data.type;
          this.update_microphone_power();
        }
        update_microphone_power() {
          if (!global_data_1.global_data.is_online) return;
          for (let i = 0; i < YiFuGameData_1.get_share_game_data().GamePlayer; i++) {
            let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(i);
            if (null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active) {
              let show = 1 == YiFuGameData_1.get_share_game_data().statusMicrophone[i];
              this.ptr_user_head[view_id].show_unable_microphone(show);
            }
          }
        }
        on_game_earphone_power(json_data) {
          if (!global_data_1.global_data.is_online) return;
          YiFuGameData_1.get_share_game_data().statusEarphone = json_data.type;
          this.update_earphone_power();
        }
        update_earphone_power() {
          if (!global_data_1.global_data.is_online) return;
          for (let i = 0; i < YiFuGameData_1.get_share_game_data().GamePlayer; i++) {
            let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(i);
            if (null != this.ptr_user_head[view_id] && true == this.ptr_user_head[view_id].node.active) {
              let show = 1 == YiFuGameData_1.get_share_game_data().statusEarphone[i];
              this.ptr_user_head[view_id].show_unable_earphone(show);
            }
          }
        }
        on_ask_game_count(json_data) {
          let selectGame = this.ptr_game_all_count_node.getComponent(YiFuSelectGameCount_1.YiFuSelectGameCount);
          selectGame.showit();
        }
        onMusicEnabled() {}
        on_btn_invite() {
          sound_manager_1.sound_manager.play_click();
          tutorial_1.tutorial.close_tutorial();
          tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_2);
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) return;
          let share_len = YiFuGameData_1.get_share_game_data().Share_Text.length;
          let index = Math.floor(Math.random() * share_len);
          let share_text = YiFuGameData_1.get_share_game_data().Share_Text[index];
          let img = `https://user.73sy.com/share/150_${Math.floor(4 * Math.random())}.png`;
          bind_function_1.bf.share_private_wechat(share_text, "" + YiFuGameData_1.get_share_game_data().TableCode, "", "", img);
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_Invite);
        }
        on_btn_listen_open() {
          sound_manager_1.sound_manager.play_click();
          this.updateVoIPChatMuteConfig(true, this.get_microphone());
          utils_1.utils.setLocalStorage("earphone", "on");
          this.update_voipchat_config();
          this.ptr_listen_node.active = false;
          YiFuGlobalUI_1.default.getInstance().showMessageHint("\u5df2\u6253\u5f00\u626c\u58f0\u5668");
          this.send_earphone_data(0);
        }
        on_btn_listen_close() {
          sound_manager_1.sound_manager.play_click();
          this.updateVoIPChatMuteConfig(false, this.get_microphone());
          utils_1.utils.setLocalStorage("earphone", "off");
          this.update_voipchat_config();
          this.ptr_listen_node.active = false;
          YiFuGlobalUI_1.default.getInstance().showMessageHint("\u5df2\u5173\u95ed\u626c\u58f0\u5668");
          this.send_earphone_data(1);
        }
        on_btn_speak_open() {
          sound_manager_1.sound_manager.play_click();
          this.updateVoIPChatMuteConfig(this.get_earphone(), true);
          utils_1.utils.setLocalStorage("microphone", "on");
          this.update_voipchat_config();
          this.ptr_speak_node.active = false;
          YiFuGlobalUI_1.default.getInstance().showMessageHint("\u5df2\u6253\u5f00\u9ea6\u514b\u98ce");
          this.send_microphone_data(0);
        }
        on_btn_speak_close() {
          sound_manager_1.sound_manager.play_click();
          this.updateVoIPChatMuteConfig(this.get_earphone(), false);
          utils_1.utils.setLocalStorage("microphone", "off");
          this.update_voipchat_config();
          this.ptr_speak_node.active = false;
          YiFuGlobalUI_1.default.getInstance().showMessageHint("\u5df2\u5173\u95ed\u9ea6\u514b\u98ce");
          this.send_microphone_data(1);
        }
        send_microphone_data(type) {
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["type"] = type;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_MICROPHONE_POWER, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        send_earphone_data(type) {
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["type"] = type;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_EARPHONE_POWER, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        update_voipchat_config() {
          let listen = this.get_earphone();
          let speak = this.get_microphone();
          global_data_1.global_data.game_engine.ptr_btn_listen_open.node.active = false;
          global_data_1.global_data.game_engine.ptr_btn_listen_close.node.active = false;
          global_data_1.global_data.game_engine.ptr_btn_speak_open.node.active = false;
          global_data_1.global_data.game_engine.ptr_btn_speak_close.node.active = false;
        }
        get_earphone() {
          let s = utils_1.utils.getLocalStorage("earphone");
          if ("off" != s) return true;
          return false;
        }
        get_microphone() {
          let s = utils_1.utils.getLocalStorage("microphone");
          if ("off" != s) return true;
          return false;
        }
        on_hint_btn_ok() {
          this.ptr_hint_node.active = false;
          this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_XIPAI ? this.do_agree_xipai(1) : this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_END ? this.do_agree_end(1) : this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_CHANGE_SEAT && this.do_agree_change_seat(1);
        }
        on_hint_btn_share() {
          YiFuGlobalUI_1.default.getInstance().showCombatRecordShare();
        }
        on_hint_btn_leave() {
          if (this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_GAME_END) {
            this.do_agree_end(1);
            null != this.timer_update_func && this.unschedule(this.timer_update_func);
            this.ptr_hint_node.active = false;
          }
          sound_manager_1.sound_manager.play_click();
        }
        on_hint_btn_cancel() {
          this.ptr_hint_node.active = false;
          this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_XIPAI ? this.do_agree_xipai(0) : this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_END || this.m_hint_status == YiFuGameDefine_1.YiFuGameDefine.HINT_STATUS_CHANGE_SEAT && this.do_agree_change_seat(0);
          sound_manager_1.sound_manager.play_click();
        }
        on_bg_clicked() {
          this.ptr_card_layer.m_bg_cancle_touch && cards_3d_layout_1.default.get() && cards_3d_layout_1.default.get().unselectAllHandCards();
          YiFuGlobalUI_1.default.getInstance().gameChat.node.active && YiFuGlobalUI_1.default.getInstance().hideGameChat();
        }
        on_end_xipai_clicked() {
          this.ptr_card_layer.game_end_layer.OnXiPaiClicked();
        }
        on_end_open_clicked() {
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_End);
          this.show_game_end_btn(false);
          this.ptr_card_layer.game_end_layer.show();
          sound_manager_1.sound_manager.play_click();
        }
        on_close_game() {
          bind_function_1.bf.show_message_box("\u5f53\u524d\u6b63\u5728\u6e38\u620f\u4e2d\uff0c\u4f60\u786e\u5b9a\u8981\u79bb\u5f00\u5417", "\u63d0\u793a", 0, "\u786e\u5b9a", "\u53d6\u6d88", function() {
            bind_function_1.bf.close_game(true);
          }, null, null);
        }
        do_fapai() {
          this.ptr_btn_fapai.node.active = false;
          this.ptr_hint_node.active = false;
          this.m_wait_userdata = YiFuGameData_1.get_share_game_data().check_user_datas(this.m_wait_userdata);
          this.ptr_Select_layer.show_users_head(this.m_wait_userdata);
          sound_manager_1.sound_manager.play_click();
          tutorial_1.tutorial.close_tutorial();
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_FaPai_1);
        }
        on_btn_quick_game() {
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_START_GAME_LESS_PEOPLE, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          sound_manager_1.sound_manager.play_click();
        }
        do_fan_caishen() {
          this.ptr_btn_caishen.node.active = false;
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_CAISHEN, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          sound_manager_1.sound_manager.play_click();
        }
        do_agree_xipai(num) {
          this.m_hint_status = null;
          let the_data = {};
          the_data["is_agree"] = num;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_AGREE_XIPAI, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        do_agree_end(num) {
          this.m_hint_status = null;
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["is_agree"] = num;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_END, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          this.close_game(1);
        }
        do_agree_change_seat(num) {
          this.m_hint_status = null;
          let the_data = {};
          the_data["agree"] = num;
          the_data["chair"] = this.ask_change_chair;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_CHANGE_SEAT_ANSWER, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        _can_xipai() {
          if (this.m_ask_xipai && this.m_agree_xipai_count + 1 <= YiFuGameData_1.get_share_game_data().GamePlayer) return false;
          return true;
        }
        on_btn_xipai() {
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
            1 == YiFuGameData_1.get_share_game_data().GameCount ? this.tutoria_xipai_confirm() : utils_1.utils.show_hint("\u8bf7\u5148\u5b8c\u6210\u6559\u5b66\u5f15\u5bfc~");
            return;
          }
          if (!this._can_xipai()) {
            YiFuGlobalUI_1.default.getInstance().showMessageHint("\u4e0d\u8981\u91cd\u590d\u6d17\u724c\u54e6~");
            return;
          }
          YiFuGlobalUI_1.default.getInstance().showMessageBox({
            content: "\u786e\u5b9a\u201c\u6d17\u724c\u201d\u5e76\u8fdb\u5165\u4e0b\u4e00\u5c40\u6e38\u620f\u5417\uff1f",
            button_count: 2,
            onClick: index => {
              if (0 == index) {
                YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_XiPai_3);
                this.send_game_data_xipai();
              }
            }
          });
          1 == YiFuGameData_1.get_share_game_data().GameCount && tutorial_1.tutorial.close_tutorial();
        }
        send_game_data_xipai() {
          let the_data = {};
          the_data["chair"] = bind_function_1.bf.get_self_user_data().wChairID;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_XIPAI, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          sound_manager_1.sound_manager.play_click();
        }
        tutoria_xipai_confirm() {
          let data = new MessageBoxCommon_1.MessageBoxCommonData();
          data.button_count = 2;
          let messageBox = this.ptr_tutorial_messagebox.getComponent(MessageBoxCommon_1.default);
          data.content = "\u786e\u5b9a\u201c\u6d17\u724c\u201d\u5e76\u8fdb\u5165\u4e0b\u4e00\u5c40\u6e38\u620f\u5417\uff1f";
          messageBox.node.active = true;
          messageBox.setMessageBoxData(data);
          messageBox.onButtonClicked = id => {
            messageBox.node.active = false;
            tutorial_1.tutorial.close_tutorial();
            this.send_game_data_xipai();
            YiFuGameData_1.get_share_game_data().GameCount++;
          };
          tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_8);
        }
        owner_hufen_tutorial() {
          if (-1 != YiFuGameData_1.get_share_game_data().HuFirstPlayer && 2 == YiFuGameData_1.get_share_game_data().GameCount && YiFuGameData_1.get_share_game_data().HuFirstPlayer != YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_DOWN && this.ptr_user_head[YiFuGameData_1.get_share_game_data().HuFirstPlayer]) {
            let mask_id = YiFuGameData_1.get_share_game_data().TableCode;
            YiFuTutorial_1.yifututorial.game_yifu_show_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_HuaFen, 2, mask_id, this.ptr_user_head[YiFuGameData_1.get_share_game_data().HuFirstPlayer].node, YiFuGameData_1.get_share_game_data().HuFirstPlayer);
          }
        }
        on_btn_over() {
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
            utils_1.utils.show_hint("\u8bf7\u5148\u5b8c\u6210\u6559\u5b66\u5f15\u5bfc\u3002\u5982\u9700\u9000\u51fa\uff0c\u53ef\u70b9\u51fb\u201c\u8df3\u8fc7\u6559\u5b66\u201d");
            return;
          }
          null == YiFuGameData_1.get_share_game_data().UserStatus || YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_INVITE_BEFORE ? YiFuGlobalUI_1.default.getInstance().showMessageBox({
            content: "\u662f\u5426\u89e3\u6563\u6e38\u620f",
            button_count: 2,
            onClick: index => {
              0 == index && this.do_agree_end(1);
            }
          }) : YiFuGlobalUI_1.default.getInstance().showMessageBox({
            content: "\u201c\u89e3\u6563\u201d\u4f1a\u4f7f\u5176\u4ed6\u597d\u53cb\u4e5f\u65e0\u6cd5\u7ee7\u7eed\u6e38\u620f\uff0c\u786e\u5b9a\u8981\u201c\u89e3\u6563\u201d\u5417?",
            button_count: 2,
            onClick: index => {
              0 == index && this.do_agree_end(1);
            }
          });
          sound_manager_1.sound_manager.play_click();
        }
        on_btn_close() {
          YiFuGlobalUI_1.default.getInstance().showMessageBox({
            content: "\u786e\u5b9a\u8981\u79bb\u5f00\u6e38\u620f\u5417\uff1f",
            button_count: 2,
            onClick: index => {
              0 == index && bind_function_1.bf.close_game(true);
            }
          });
          sound_manager_1.sound_manager.play_click();
        }
        on_btn_feedback() {
          YiFuGlobalUI_1.default.getInstance().ShowFeedback();
          sound_manager_1.sound_manager.play_click();
        }
        on_btn_chat_send() {}
        on_btn_chat_receive() {}
      };
      __decorate([ property(YiFuUserHead_1.default) ], YiFuGameMain.prototype, "ptr_user_head", void 0);
      __decorate([ property(YiFuZhuaMa_1.default) ], YiFuGameMain.prototype, "game_zhuama_layer", void 0);
      __decorate([ property(YiFuZhuamaWait_1.default) ], YiFuGameMain.prototype, "game_zhuama_wait_layer", void 0);
      __decorate([ property(YiFuCardLayer_1.default) ], YiFuGameMain.prototype, "ptr_card_layer", void 0);
      __decorate([ property(YiFuSelectBanker_1.default) ], YiFuGameMain.prototype, "ptr_Select_layer", void 0);
      __decorate([ property([ cc.Node ]) ], YiFuGameMain.prototype, "ptr_game_chat_nodes", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_action_score", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_score_action_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_score_action_root", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_tutorial_messagebox", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameMain.prototype, "ptr_sprite_banker", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_gift_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_left_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_left_node_vlupchat", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_over", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_close", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_chat", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_xipai", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_feedback", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_rules", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_close_game", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_bg_btn", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_quick_game", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_game_all_count_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_hint_node", void 0);
      __decorate([ property(cc.RichText) ], YiFuGameMain.prototype, "ptr_hint_label", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_hint_btn_ok", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_hint_btn_cancel", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_hint_btn_leave", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_hint_btn_share", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_end_open", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_listen_open", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_listen_close", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_speak_open", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_speak_close", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_listen_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_speak_node", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_dice_1", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_dice_2", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameMain.prototype, "ptr_dice_result_1", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameMain.prototype, "ptr_dice_result_2", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuGameMain.prototype, "ptr_frame_dice", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_common_hint_node", void 0);
      __decorate([ property(cc.RichText) ], YiFuGameMain.prototype, "ptr_common_hint_label", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameMain.prototype, "game_score_hint_prefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameMain.prototype, "game_tutorial_prefab", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_invite", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_caishen", void 0);
      __decorate([ property(cc.Button) ], YiFuGameMain.prototype, "ptr_btn_fapai", void 0);
      __decorate([ property(cc.Node) ], YiFuGameMain.prototype, "ptr_layout_table", void 0);
      __decorate([ property(cc.Label) ], YiFuGameMain.prototype, "ptr_table_name", void 0);
      __decorate([ property(cc.Label) ], YiFuGameMain.prototype, "ptr_game_count", void 0);
      YiFuGameMain = __decorate([ ccclass ], YiFuGameMain);
      return YiFuGameMain;
    })();
    exports.default = YiFuGameMain;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/table_3d_layout": "table_3d_layout",
    "../../../Layout3D/Src/widget/CHandleSelect3D": "CHandleSelect3D",
    "../../../Layout3D/Src/widget/CHandledCards3D": "CHandledCards3D",
    "../../Component/MessageBoxCommon": "MessageBoxCommon",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/lobby_framework": "lobby_framework",
    "../../Framework/lobby/platform/platform": "platform",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./YiFuCardLayer": "YiFuCardLayer",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameLogic": "YiFuGameLogic",
    "./YiFuGlobalUI": "YiFuGlobalUI",
    "./YiFuSelectBanker": "YiFuSelectBanker",
    "./YiFuSelectGameCount": "YiFuSelectGameCount",
    "./YiFuTutorial": "YiFuTutorial",
    "./YiFuUserHead": "YiFuUserHead",
    "./YiFuZhuaMa": "YiFuZhuaMa",
    "./YiFuZhuamaWait": "YiFuZhuamaWait"
  } ],
  YiFuGameScoreItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e3ab4VyWWtGPIJ7GwnqBrDc", "YiFuGameScoreItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameScoreItem = void 0;
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameScoreItem = (() => {
      let YiFuGameScoreItem = class YiFuGameScoreItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.label_from = null;
          this.label_to = null;
          this.label_score = null;
          this.label_time = null;
        }
        start() {}
        setData(data, self_chaid) {
          let datas = new Date(1e3 * data.time);
          this.label_time.string = String(datas.getHours()) + ":" + (datas.getMinutes() < 10 ? "0" + String(datas.getMinutes()) : String(datas.getMinutes()));
          this.label_from.string = bind_function_1.bf.clamp_nickname(data.from_name, 4);
          this.label_to.string = bind_function_1.bf.clamp_nickname(data.to_name, 4);
          let score = null;
          if (data.from_chair == self_chaid) {
            score = "-" + data.score;
            this.label_score.node.color = new cc.Color().fromHEX("#FC3D3D");
          } else if (data.score > 0) {
            score = "+" + data.score;
            this.label_score.node.color = new cc.Color().fromHEX("#46A375");
          }
          this.label_score.string = score;
        }
      };
      __decorate([ property(cc.Label) ], YiFuGameScoreItem.prototype, "label_from", void 0);
      __decorate([ property(cc.Label) ], YiFuGameScoreItem.prototype, "label_to", void 0);
      __decorate([ property(cc.Label) ], YiFuGameScoreItem.prototype, "label_score", void 0);
      __decorate([ property(cc.Label) ], YiFuGameScoreItem.prototype, "label_time", void 0);
      YiFuGameScoreItem = __decorate([ ccclass ], YiFuGameScoreItem);
      return YiFuGameScoreItem;
    })();
    exports.YiFuGameScoreItem = YiFuGameScoreItem;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function"
  } ],
  YiFuGameScoreRecord: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3dfb8XwxCZDPrED5yKoe2wP", "YiFuGameScoreRecord");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuGameScoreRecord = void 0;
    const utils_1 = require("../../Framework/common/utils");
    const PopWindow_1 = require("../../Component/PopWindow");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuGameScoreItem_1 = require("./YiFuGameScoreItem");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameScoreRecord = (() => {
      let YiFuGameScoreRecord = class YiFuGameScoreRecord extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.haveItem = null;
          this.noItem = null;
          this.itemRoot = null;
          this.itemPrefab = null;
          this.closeBtn = null;
          this.scrollView = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.closeBtn, this.node, "YiFuGameScoreRecord", "onCloseBtnClicked");
          this.itemRoot.removeAllChildren();
        }
        setData(chair) {
          let count = this.itemRoot.childrenCount;
          this.itemRoot.getComponentsInChildren(YiFuGameScoreItem_1.YiFuGameScoreItem).forEach(v => v.node.active = false);
          let records = YiFuGameData_1.get_share_game_data().get_user_room_score_records(chair);
          if (null == records || 0 == records.length) {
            this.haveItem.active = false;
            this.noItem.active = true;
            console.log("chair records is null");
            return;
          }
          this.haveItem.active = true;
          this.noItem.active = false;
          for (let i = 0; i < records.length; ++i) {
            let record = records[i];
            if (i < count) {
              this.itemRoot.children[i].active = true;
              this.itemRoot.children[i].getComponent(YiFuGameScoreItem_1.YiFuGameScoreItem).setData(record, chair);
            } else {
              let item = utils_1.utils.add_instance_to_root(this.itemPrefab, this.itemRoot, YiFuGameScoreItem_1.YiFuGameScoreItem);
              item.setData(record, chair);
            }
          }
          this.scrollView.scrollToTop(.01);
        }
        onCloseBtnClicked() {
          sound_manager_1.sound_manager.play_click();
          this.hide();
        }
        start() {}
      };
      __decorate([ property(cc.Node) ], YiFuGameScoreRecord.prototype, "haveItem", void 0);
      __decorate([ property(cc.Node) ], YiFuGameScoreRecord.prototype, "noItem", void 0);
      __decorate([ property(cc.Node) ], YiFuGameScoreRecord.prototype, "itemRoot", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGameScoreRecord.prototype, "itemPrefab", void 0);
      __decorate([ property(cc.Button) ], YiFuGameScoreRecord.prototype, "closeBtn", void 0);
      __decorate([ property(cc.ScrollView) ], YiFuGameScoreRecord.prototype, "scrollView", void 0);
      YiFuGameScoreRecord = __decorate([ ccclass ], YiFuGameScoreRecord);
      return YiFuGameScoreRecord;
    })();
    exports.YiFuGameScoreRecord = YiFuGameScoreRecord;
    cc._RF.pop();
  }, {
    "../../Component/PopWindow": "PopWindow",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameScoreItem": "YiFuGameScoreItem"
  } ],
  YiFuGameTutorial: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "313e7mAtvJBr59wMyNJY1Nt", "YiFuGameTutorial");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGameTutorial = (() => {
      let YiFuGameTutorial = class YiFuGameTutorial extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
          this.button = null;
          this.sprite = null;
          this.sprite_01 = null;
          this.sprite_02 = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "YiFuGameTutorial", "on_btn_close_click");
        }
        start() {}
        setData(text, view_id) {
          let bottom = true;
          null != view_id && (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP ? bottom = false : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT ? bottom = false : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT && (bottom = true));
          this.sprite.spriteFrame = bottom ? this.sprite_01 : this.sprite_02;
          this.label.string = text;
        }
        on_btn_close_click() {
          sound_manager_1.sound_manager.play_click();
          this.node.active = false;
        }
        hide() {
          this.node.active = false;
        }
      };
      __decorate([ property(cc.RichText) ], YiFuGameTutorial.prototype, "label", void 0);
      __decorate([ property(cc.Button) ], YiFuGameTutorial.prototype, "button", void 0);
      __decorate([ property(cc.Sprite) ], YiFuGameTutorial.prototype, "sprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuGameTutorial.prototype, "sprite_01", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuGameTutorial.prototype, "sprite_02", void 0);
      YiFuGameTutorial = __decorate([ ccclass ], YiFuGameTutorial);
      return YiFuGameTutorial;
    })();
    exports.default = YiFuGameTutorial;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameDefine": "YiFuGameDefine"
  } ],
  YiFuGiftButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "87826o8uWpAXoYAyotfAf4Z", "YiFuGiftButton");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGiftButton = (() => {
      let YiFuGiftButton = class YiFuGiftButton extends cc.Component {
        constructor() {
          super(...arguments);
          this.nodeIcon = null;
          this.buttonUse = null;
          this.propId = 1011;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttonUse, this.node, "YiFuGiftButton", "onBtnClicked");
        }
        onBtnClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          let e = new cc.Event.EventCustom("onYiFuGiftButtonClick", true);
          e.setUserData(this.propId);
          this.node.dispatchEvent(e);
        }
        setData(propId, showLabel, label, showCount, count, canClick) {
          try {
            this.propId = propId;
            let sp_path = "Prop-prop_" + propId;
            null != global_data_1.global_data.spriteFrameMap.get(sp_path) ? this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.spriteFrameMap.get(sp_path) : this.nodeIcon.getComponent(cc.Sprite).spriteFrame = global_data_1.global_data.webSpriteFrameCache.get("Exchange_prop_" + propId);
            this.buttonUse.interactable = canClick;
          } catch (e) {}
        }
      };
      __decorate([ property(cc.Node) ], YiFuGiftButton.prototype, "nodeIcon", void 0);
      __decorate([ property(cc.Button) ], YiFuGiftButton.prototype, "buttonUse", void 0);
      __decorate([ property ], YiFuGiftButton.prototype, "propId", void 0);
      YiFuGiftButton = __decorate([ ccclass ], YiFuGiftButton);
      return YiFuGiftButton;
    })();
    exports.default = YiFuGiftButton;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/sound_manager": "sound_manager"
  } ],
  YiFuGlobalUI: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4fee7guxp9J/KFbo0IU40Xa", "YiFuGlobalUI");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const YiFuUserInfo_1 = require("./YiFuUserInfo");
    const utils_1 = require("../../Framework/common/utils");
    const YiFuMessageHint_1 = require("./YiFuMessageHint");
    const YiFuGameScoreRecord_1 = require("./YiFuGameScoreRecord");
    const YiFuGameTutorial_1 = require("./YiFuGameTutorial");
    const LobbyYiFuFeedback_1 = require("../../Component/LobbyYiFu/LobbyYiFuFeedback");
    const YiFuKeyBoard_1 = require("./YiFuKeyBoard");
    const YiFuScoreAction_1 = require("./YiFuScoreAction");
    const YiFuGameChat_1 = require("./GameChat/YiFuGameChat");
    const MessageBoxCommon_1 = require("../../Component/MessageBoxCommon");
    const YiFuCombatRecordShare_1 = require("./YiFuCombatRecordShare");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuGlobalUI = (() => {
      var YiFuGlobalUI_1;
      let YiFuGlobalUI = YiFuGlobalUI_1 = class YiFuGlobalUI extends cc.Component {
        constructor() {
          super(...arguments);
          this.gameUserInfoPrefab = null;
          this.gameScorePrefab = null;
          this.gameScoreHintPrefab = null;
          this.gameScoreActonPrefab = null;
          this.gameMessageHintPrefab = null;
          this.gameTutorialPrefab = null;
          this.feedbackPrefab = null;
          this.gameKeyBoardPrefab = null;
          this.gameChatPrefab = null;
          this.gameMessageBoxPrefab = null;
          this.gameCombatRecordSharePrefab = null;
          this.gameUserInfo = null;
          this.gameMessageHint = null;
          this.gameSocreHint = null;
          this.gameScoreRecord = null;
          this.gameTutorial = null;
          this.feedback = null;
          this.gameKeyBoard = null;
          this.gameScoreAction = null;
          this.gameChat = null;
          this.gameMessageBox = null;
          this.gameCombatRecordShare = null;
        }
        static getInstance() {
          return YiFuGlobalUI_1._instance;
        }
        onLoad() {
          YiFuGlobalUI_1._instance = this;
        }
        showGameUserInfo(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id) {
          cc.isValid(this.gameUserInfo) || (this.gameUserInfo = utils_1.utils.add_instance_to_root(this.gameUserInfoPrefab, cc.Canvas.instance.node, YiFuUserInfo_1.default));
          if (cc.isValid(this.gameUserInfo)) {
            this.setTopSiblingIndex(this.gameUserInfo.node);
            this.gameUserInfo.show();
            this.gameUserInfo.setData(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id);
          }
        }
        hideGameUserInfo() {
          if (cc.isValid(this.gameUserInfo)) {
            this.hideKeyBoard(true);
            this.gameUserInfo.hide();
          }
        }
        showMessageHint(str, color = cc.Color.WHITE) {
          null == this.gameMessageHint && (this.gameMessageHint = utils_1.utils.add_instance_to_root(this.gameMessageHintPrefab, cc.Canvas.instance.node, YiFuMessageHint_1.default));
          if (this.gameMessageHint) {
            this.setTopSiblingIndex(this.gameMessageHint.node);
            this.gameMessageHint.play(str, color);
          }
        }
        hideKeyBoard(direct = false) {
          if (cc.isValid(this.gameKeyBoard)) {
            direct ? this.gameKeyBoard.node.active = false : this.gameKeyBoard.hide();
            utils_1.utils.send("updateKeyBoardVisiable");
          }
        }
        showKeyBoard(boardNode, user_id, pos_id = YiFuKeyBoard_1.KeyBoardPos.Head, chair_id = 0) {
          if (null == this.gameKeyBoard) {
            this.gameKeyBoard = utils_1.utils.add_instance_to_root(this.gameKeyBoardPrefab, cc.Canvas.instance.node, YiFuKeyBoard_1.YiFuKeyBoard);
            this.gameKeyBoard.node.active = false;
          }
          if (this.gameKeyBoard) {
            this.setTopSiblingIndex(this.gameKeyBoard.node);
            this.gameKeyBoard.show();
            this.gameKeyBoard.setData(boardNode, user_id, pos_id, chair_id);
            utils_1.utils.send("updateKeyBoardVisiable");
          }
        }
        getKeyBoardVisiable() {
          if (null != this.gameKeyBoard) return this.gameKeyBoard.node.active;
          return false;
        }
        ShowFeedback() {
          cc.isValid(this.feedback) || (this.feedback = utils_1.utils.add_instance_to_root(this.feedbackPrefab, cc.Canvas.instance.node, LobbyYiFuFeedback_1.default));
          if (cc.isValid(this.feedback)) {
            this.feedback.node.setSiblingIndex(this.feedback.node.getParent().childrenCount + 1);
            this.feedback.node.zIndex = cc.macro.MAX_ZINDEX;
            this.feedback.show();
          }
        }
        playScoreAction(i, from_vec, to_vec, int_score, score_node) {
          this.gameScoreAction = utils_1.utils.add_instance_to_root(this.gameScoreActonPrefab, score_node, YiFuScoreAction_1.YiFuScoreAction);
          this.gameScoreAction.node.setScale(.2);
          this.setTopSiblingIndex(this.gameScoreAction.node);
          this.gameScoreAction.play(i, from_vec, to_vec, int_score, score_node);
        }
        showScoreRecord(chair) {
          null == this.gameScoreRecord && (this.gameScoreRecord = utils_1.utils.add_instance_to_root(this.gameScorePrefab, cc.Canvas.instance.node, YiFuGameScoreRecord_1.YiFuGameScoreRecord));
          if (this.gameScoreRecord) {
            this.setTopSiblingIndex(this.gameScoreRecord.node);
            this.gameScoreRecord.show();
            this.gameScoreRecord.setData(chair);
          }
        }
        hideScoreRecord() {
          cc.isValid(this.gameScoreRecord) && this.gameScoreRecord.hide();
        }
        init_game_chat(array_string) {
          cc.isValid(this.gameChat) || this.spawnGameChat();
          cc.isValid(this.gameChat) && this.gameChat.setCommonChat(array_string);
        }
        set_game_chat_node(rootNode) {
          cc.isValid(this.gameChat) && this.gameChat.setCommonChatNode(rootNode);
        }
        showGameChat() {
          cc.isValid(this.gameChat) || (this.gameChat = utils_1.utils.add_instance_to_root(this.gameChatPrefab, cc.Canvas.instance.node, YiFuGameChat_1.YiFuGameChat));
          if (cc.isValid(this.gameChat)) {
            this.setTopSiblingIndex(this.gameChat.node);
            this.gameChat.node.active ? this.gameChat.hide() : this.gameChat.show();
          }
        }
        hideGameChat() {
          cc.isValid(this.gameChat) && this.gameChat.hide();
        }
        spawnGameChat() {
          cc.isValid(this.gameChat) || (this.gameChat = utils_1.utils.add_instance_to_root(this.gameChatPrefab, cc.Canvas.instance.node, YiFuGameChat_1.YiFuGameChat));
          cc.isValid(this.gameChat) && (this.gameChat.node.active = false);
        }
        showGameTutorial(parent) {
          null == this.gameTutorial && (this.gameTutorial = utils_1.utils.add_instance_to_root(this.gameTutorialPrefab, parent, YiFuGameTutorial_1.default));
          if (this.gameTutorial) {
            this.setTopSiblingIndex(parent);
            this.gameTutorial.setData("");
          }
        }
        hideGameTutorial() {
          cc.isValid(this.gameTutorial) && this.gameTutorial.hide();
        }
        showMessageBox(obj) {
          let msgboxConfig = new MessageBoxCommon_1.MessageBoxCommonData();
          msgboxConfig.content = obj.content;
          msgboxConfig.button_count = obj.button_count;
          let msgbox = utils_1.utils.add_instance_to_root(this.gameMessageBoxPrefab, cc.Canvas.instance.node, MessageBoxCommon_1.default);
          if (msgbox) {
            msgbox.node.setPosition(0, 0);
            msgbox.setMessageBoxData(msgboxConfig);
            this.setTopSiblingIndex(msgbox.node);
          }
          msgbox.onButtonClicked = id => {
            this.hideMessageBox(msgbox);
            obj.onClick && obj.onClick(id);
          };
        }
        hideMessageBox(msgbox) {
          msgbox.node.destroy();
        }
        showCombatRecordShare() {
          null == this.gameCombatRecordShare && (this.gameCombatRecordShare = utils_1.utils.add_instance_to_root(this.gameCombatRecordSharePrefab, cc.Canvas.instance.node, YiFuCombatRecordShare_1.YiFuCombatRecordShare));
          if (this.gameCombatRecordShare) {
            this.setTopSiblingIndex(cc.Canvas.instance.node);
            this.gameCombatRecordShare.show();
            this.gameCombatRecordShare.setData();
          }
        }
        hideCombatRecordShare() {
          cc.isValid(this.gameCombatRecordShare) && this.gameCombatRecordShare.hide();
        }
        setTopSiblingIndex(node) {
          node.setSiblingIndex(node.getParent().childrenCount + 1);
          node.zIndex = cc.macro.MAX_ZINDEX;
        }
      };
      YiFuGlobalUI._instance = null;
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameUserInfoPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameScorePrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameScoreHintPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameScoreActonPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameMessageHintPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameTutorialPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "feedbackPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameKeyBoardPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameChatPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameMessageBoxPrefab", void 0);
      __decorate([ property(cc.Prefab) ], YiFuGlobalUI.prototype, "gameCombatRecordSharePrefab", void 0);
      YiFuGlobalUI = YiFuGlobalUI_1 = __decorate([ ccclass ], YiFuGlobalUI);
      return YiFuGlobalUI;
    })();
    exports.default = YiFuGlobalUI;
    cc._RF.pop();
  }, {
    "../../Component/LobbyYiFu/LobbyYiFuFeedback": "LobbyYiFuFeedback",
    "../../Component/MessageBoxCommon": "MessageBoxCommon",
    "../../Framework/common/utils": "utils",
    "./GameChat/YiFuGameChat": "YiFuGameChat",
    "./YiFuCombatRecordShare": "YiFuCombatRecordShare",
    "./YiFuGameScoreRecord": "YiFuGameScoreRecord",
    "./YiFuGameTutorial": "YiFuGameTutorial",
    "./YiFuKeyBoard": "YiFuKeyBoard",
    "./YiFuMessageHint": "YiFuMessageHint",
    "./YiFuScoreAction": "YiFuScoreAction",
    "./YiFuUserInfo": "YiFuUserInfo"
  } ],
  YiFuHuCard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "846bcOHhjJO/4qZfyoGGdta", "YiFuHuCard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const game_tools_1 = require("../../../Layout3D/Src/game_tools");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuHuCard = (() => {
      let YiFuHuCard = class YiFuHuCard extends cc.Component {
        constructor() {
          super(...arguments);
          this.card_node = null;
          this.button = null;
          this.card = null;
          this.corner_01 = null;
          this.corner_02 = null;
          this.mask = null;
          this.label = null;
          this.m_card = null;
          this._corner_img = null;
          this.m_chair_id = -1;
          this.m_hu_card = -1;
          this.m_handle = -1;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.button, this.node, "YiFuHuCard", "onButtonClicked");
        }
        onButtonClicked() {
          let the_data = {};
          the_data["chair"] = this.m_chair_id;
          the_data["card"] = this.m_hu_card;
          the_data["type"] = 0;
          the_data["handle"] = this.m_handle;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_HU, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          utils_1.utils.send("hideHuButton");
          sound_manager_1.sound_manager.play_click();
        }
        start() {}
        setData(data) {
          this.getCard();
          this.node.active = true;
          this.card_node.active = true;
          let view_id = YiFuGameLogic_1.get_game_logic().switch_to_view_id(data.chair);
          view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP ? this.label.string = "\u5bf9\u5bb6" : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT ? this.label.string = "\u4e0a\u5bb6" : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT && (this.label.string = "\u4e0b\u5bb6");
          this.m_chair_id = data.chair;
          this.m_hu_card = data.card;
          null != this.m_card && (YiFuGameData_1.get_share_game_data().HaveCaiShen && null != YiFuGameData_1.get_share_game_data().CaiShenCardValue[0] && YiFuGameData_1.get_share_game_data().CaiShenCardValue[0] == this.m_hu_card || null != YiFuGameData_1.get_share_game_data().CaiShenCardValue[1] && YiFuGameData_1.get_share_game_data().CaiShenCardValue[1] == this.m_hu_card ? this.m_card.getComponent(CSelfHandCard3D_1.default).setCardValue(this.m_hu_card, 1) : this.m_card.getComponent(CSelfHandCard3D_1.default).setCardValue(this.m_hu_card, 0));
          if (!this._corner_img) {
            this._corner_img = game_tools_1.default.newImg({
              name: "_corner_img"
            });
            this.m_card.addChild(this._corner_img);
            let p_x = -this.m_card.getContentSize().width / 2 + 25;
            let p_y = -this.m_card.getContentSize().height / 2 + 26;
            this._corner_img.setPosition(cc.v2(p_x, p_y));
          }
          this._corner_img.getComponent(cc.Sprite).spriteFrame = 11 != data.handle ? this.corner_01 : this.corner_02;
          this.m_handle = data.handle;
          this.node.getChildByName("CardSprite").getChildByName("hu_Sprite").setPosition(cc.v2(0, 75));
        }
        getCard() {
          if (null == this.m_card) {
            this.m_card = cards_3d_layout_1.default.get().getNewHandCard(true);
            this.m_card.setScale(1.14);
            this.card_node.addChild(this.m_card);
          }
          this.m_card.active = true;
          this.m_card.setPosition(0, -5);
        }
      };
      __decorate([ property(cc.Node) ], YiFuHuCard.prototype, "card_node", void 0);
      __decorate([ property(cc.Button) ], YiFuHuCard.prototype, "button", void 0);
      __decorate([ property(cc.Sprite) ], YiFuHuCard.prototype, "card", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuHuCard.prototype, "corner_01", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuHuCard.prototype, "corner_02", void 0);
      __decorate([ property(cc.Sprite) ], YiFuHuCard.prototype, "mask", void 0);
      __decorate([ property(cc.Label) ], YiFuHuCard.prototype, "label", void 0);
      YiFuHuCard = __decorate([ ccclass ], YiFuHuCard);
      return YiFuHuCard;
    })();
    exports.default = YiFuHuCard;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/game_tools": "game_tools",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameLogic": "YiFuGameLogic"
  } ],
  YiFuHuUserResultItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8ad53kQpKZEG54MULXP0Y17", "YiFuHuUserResultItem");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuHuUserResultItem = exports.YiFuHuUserResultItemData = void 0;
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const cards_3d_config_1 = require("../../../Layout3D/Src/cards_3d_config");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var HuType;
    (function(HuType) {
      HuType[HuType["Null"] = 0] = "Null";
      HuType[HuType["Direct"] = 1] = "Direct";
      HuType[HuType["DiaoPao"] = 2] = "DiaoPao";
      HuType[HuType["ZiMo"] = 3] = "ZiMo";
    })(HuType || (HuType = {}));
    var HuCardType;
    (function(HuCardType) {
      HuCardType[HuCardType["Null"] = 0] = "Null";
      HuCardType[HuCardType["Chu"] = 1] = "Chu";
      HuCardType[HuCardType["Gang"] = 2] = "Gang";
    })(HuCardType || (HuCardType = {}));
    class YiFuHuUserResultItemData {
      constructor(id, chair_id, hu_type, hand_cards, heap_cards, hua, hu_chair_id, mask) {
        this.heap_cards = [];
        this.id = id;
        this.chair_id = chair_id;
        this.hu_type = hu_type;
        this.hand_cards = hand_cards;
        this.heap_cards = heap_cards;
        this.hua = hua;
        this.hu_chair_id = hu_chair_id;
        this.mask = mask;
      }
    }
    exports.YiFuHuUserResultItemData = YiFuHuUserResultItemData;
    let YiFuHuUserResultItem = (() => {
      let YiFuHuUserResultItem = class YiFuHuUserResultItem extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_sprite_lianzhuang = null;
          this.ptr_lable_lianzhuang = null;
          this.ptr_lable_hua_fen = null;
          this.ptr_sprite_hu_type = null;
          this.ptr_sprite_zimo = null;
          this.ptr_sprite_hu = null;
          this.headNode = null;
          this.readNode = null;
          this.ptr_head = null;
          this.fadeInTime = .3;
        }
        onLoad() {
          utils_1.utils.bind_toggle_event(this.getComponent(cc.Toggle), this.node, "YiFuHuUserResultItem", "OnTabClicked");
        }
        start() {
          this.ptr_lable_hua_fen.string = "";
        }
        OnTabClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          this.node.dispatchEvent(new cc.Event.EventCustom("ResultItemTabClick", true));
        }
        setData(data) {
          this.node.active = true;
          this._data = data;
          this.ptr_head || (this.ptr_head = bind_function_1.bf.set_user_head_node(this.headNode));
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) this.ptr_head.setData(83, 83, 0, 0, 0); else {
            let user_data = bind_function_1.bf.get_user_data_by_chair_id(data.chair_id);
            this.ptr_head.setData(83, 83, user_data.dwUserID, user_data.wFaceID, user_data.cbGender);
          }
          this.ptr_head.button.node.active = false;
          let str_banker = "";
          let isLian = YiFuGameData_1.get_share_game_data().BankChairID == data.chair_id;
          this.ptr_sprite_lianzhuang.node.active = isLian;
          if (isLian) {
            str_banker = YiFuGameData_1.get_share_game_data().BankerLian > 1 ? String(YiFuGameData_1.get_share_game_data().BankerLian) + "\u8fde\u5e84" : "\u5e84";
            this.ptr_lable_lianzhuang.string = str_banker;
          }
          data.hu_type == cards_3d_config_1.HandleType.jiang ? this.ptr_sprite_hu_type.spriteFrame = this.ptr_sprite_zimo : this.ptr_sprite_hu_type.spriteFrame = this.ptr_sprite_hu;
          let mask = 0;
          try {
            mask = Number(utils_1.utils.getLocalStorage("GameEndRedPointMask") || "0");
          } catch (e) {}
          mask & data.mask ? this.updataRedPointVisiable(false) : this.updataRedPointVisiable(true);
        }
        getHuType() {}
        getData() {
          return this._data;
        }
        showHuaFening(show) {
          this.ptr_lable_hua_fen.node.parent.active = show;
          if (show) {
            let that = this;
            this.ptr_lable_hua_fen.node.parent.stopAllActions();
            this.ptr_lable_hua_fen.node.parent.opacity = 0;
            this.ptr_lable_hua_fen.node.parent.setPosition(cc.v2(-51, 44));
            this.ptr_lable_hua_fen.node.parent.runAction(cc.spawn(cc.fadeIn(that.fadeInTime), cc.moveTo(that.fadeInTime, cc.v2(cc.v2(-51, 69)))));
            if (this._data) if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
              let str_name = "<color=#FFFF00>" + bind_function_1.bf.clamp_nickname(YiFuGameData_1.get_share_game_data().TutorialUserName[this._data.chair_id - 1], 4) + "</color>";
              this.ptr_lable_hua_fen.string = "\u6b63\u5728\u5411" + str_name + "\u5212\u5206";
            } else {
              let name = bind_function_1.bf.get_user_data_by_chair_id(this._data.chair_id).szName;
              let str_name = "<color=#FFFF00>" + bind_function_1.bf.clamp_nickname(name, 4) + "</color>";
              this.ptr_lable_hua_fen.string = "\u6b63\u5728\u5411" + str_name + "\u5212\u5206";
            }
          }
        }
        updataRedPointVisiable(active) {
          this.readNode.active = false;
          this.ptr_sprite_hu_type.node.stopAllActions();
          this.ptr_sprite_hu_type.node.setPosition(cc.v2(56, -2.5));
          active && this.ptr_sprite_hu_type.node.runAction(cc.sequence(cc.moveBy(.12, cc.v2(0, 10)), cc.moveBy(.12, cc.v2(0, -10)), cc.moveBy(.12, cc.v2(0, 4)), cc.moveBy(.12, cc.v2(0, -4)), cc.delayTime(1.6)).repeatForever());
        }
      };
      __decorate([ property(cc.Sprite) ], YiFuHuUserResultItem.prototype, "ptr_sprite_lianzhuang", void 0);
      __decorate([ property(cc.Label) ], YiFuHuUserResultItem.prototype, "ptr_lable_lianzhuang", void 0);
      __decorate([ property(cc.RichText) ], YiFuHuUserResultItem.prototype, "ptr_lable_hua_fen", void 0);
      __decorate([ property(cc.Sprite) ], YiFuHuUserResultItem.prototype, "ptr_sprite_hu_type", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuHuUserResultItem.prototype, "ptr_sprite_zimo", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuHuUserResultItem.prototype, "ptr_sprite_hu", void 0);
      __decorate([ property(cc.Node) ], YiFuHuUserResultItem.prototype, "headNode", void 0);
      __decorate([ property(cc.Node) ], YiFuHuUserResultItem.prototype, "readNode", void 0);
      YiFuHuUserResultItem = __decorate([ ccclass ], YiFuHuUserResultItem);
      return YiFuHuUserResultItem;
    })();
    exports.YiFuHuUserResultItem = YiFuHuUserResultItem;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_config": "cards_3d_config",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuKeyBoard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a9f38SgQUhODoXliD88Vouk", "YiFuKeyBoard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuKeyBoard = exports.KeyBoardPos = void 0;
    const utils_1 = require("../../Framework/common/utils");
    const PopWindow_1 = require("../../Component/PopWindow");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var KeyBoardPos;
    (function(KeyBoardPos) {
      KeyBoardPos[KeyBoardPos["Head"] = 9] = "Head";
      KeyBoardPos[KeyBoardPos["GameEnd"] = 10] = "GameEnd";
    })(KeyBoardPos = exports.KeyBoardPos || (exports.KeyBoardPos = {}));
    let YiFuKeyBoard = (() => {
      let YiFuKeyBoard = class YiFuKeyBoard extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.label = null;
          this.default_label = null;
          this.btn_key_0 = null;
          this.btn_key_1 = null;
          this.btn_key_2 = null;
          this.btn_key_3 = null;
          this.btn_key_4 = null;
          this.btn_key_5 = null;
          this.btn_key_6 = null;
          this.btn_key_7 = null;
          this.btn_key_8 = null;
          this.btn_key_9 = null;
          this.btn_key_send = null;
          this.btn_key_delete = null;
          this.btn_close = null;
          this.socre_label = "";
          this.int_user_id = null;
          this.int_chair_id = null;
          this.default_tip = "";
          this._delete_timer_func = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.btn_key_0, this.node, "YiFuKeyBoard", "on_btn_key_0_clicked");
          utils_1.utils.bind_button_event(this.btn_key_1, this.node, "YiFuKeyBoard", "on_btn_key_1_clicked");
          utils_1.utils.bind_button_event(this.btn_key_2, this.node, "YiFuKeyBoard", "on_btn_key_2_clicked");
          utils_1.utils.bind_button_event(this.btn_key_3, this.node, "YiFuKeyBoard", "on_btn_key_3_clicked");
          utils_1.utils.bind_button_event(this.btn_key_4, this.node, "YiFuKeyBoard", "on_btn_key_4_clicked");
          utils_1.utils.bind_button_event(this.btn_key_5, this.node, "YiFuKeyBoard", "on_btn_key_5_clicked");
          utils_1.utils.bind_button_event(this.btn_key_6, this.node, "YiFuKeyBoard", "on_btn_key_6_clicked");
          utils_1.utils.bind_button_event(this.btn_key_7, this.node, "YiFuKeyBoard", "on_btn_key_7_clicked");
          utils_1.utils.bind_button_event(this.btn_key_8, this.node, "YiFuKeyBoard", "on_btn_key_8_clicked");
          utils_1.utils.bind_button_event(this.btn_key_9, this.node, "YiFuKeyBoard", "on_btn_key_9_clicked");
          utils_1.utils.bind_button_event(this.btn_key_send, this.node, "YiFuKeyBoard", "on_btn_key_send_clicked");
          utils_1.utils.bind_button_event(this.btn_close, this.node, "YiFuKeyBoard", "on_btn_close_clicked");
          this.btn_key_delete.node.on(cc.Node.EventType.TOUCH_START, this.onDeleteStart, this);
          this.btn_key_delete.node.on(cc.Node.EventType.TOUCH_MOVE, this.onDeleteMove, this);
          this.btn_key_delete.node.on(cc.Node.EventType.TOUCH_END, this.onDeleteEnd, this);
        }
        start() {
          let that = this;
          this._delete_timer_func = function() {
            that.on_btn_key_delete_clicked();
          };
        }
        onDeleteStart(Event) {
          if (this.label.string == this.default_tip) return;
          this.on_btn_key_delete_clicked();
          this._delete_timer_func && this.unschedule(this._delete_timer_func);
          this.schedule(this._delete_timer_func, .2);
        }
        onDeleteMove(Event) {}
        onDeleteEnd(Event) {
          this._delete_timer_func && this.unschedule(this._delete_timer_func);
        }
        on_btn_key_delete_clicked() {
          if (this.label.string == this.default_tip) {
            this.default_label.active = true;
            return;
          }
          if (this.socre_label.length > 0) {
            this.socre_label = this.socre_label.substring(0, this.socre_label.length - 1);
            if (0 == this.socre_label.length) {
              this.socre_label = this.default_tip;
              this.default_label.active = true;
            }
            this.label.string = this.socre_label;
            this.log();
          }
        }
        on_btn_key_0_clicked() {
          this.check();
          this.socre_label += 0;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_1_clicked() {
          this.check();
          this.socre_label += 1;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_2_clicked() {
          this.check();
          this.socre_label += 2;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_3_clicked() {
          this.check();
          this.socre_label += 3;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_4_clicked() {
          this.check();
          this.socre_label += 4;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_5_clicked() {
          this.check();
          this.socre_label += 5;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_6_clicked() {
          this.check();
          this.socre_label += 6;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_7_clicked() {
          this.check();
          this.socre_label += 7;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_8_clicked() {
          this.check();
          this.socre_label += 8;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        on_btn_key_9_clicked() {
          this.check();
          this.socre_label += 9;
          this.label.string = this.socre_label;
          this.check();
          this.log();
        }
        log() {}
        check() {
          if (this.label.string == this.default_tip) {
            this.socre_label = "";
            this.label.string = this.socre_label;
          }
          if (1 == this.socre_label.length && 0 == Number(this.socre_label)) {
            utils_1.utils.show_hint("\u5212\u5206\u6570\u5b57,\u9996\u4f4d\u4e0d\u80fd\u4e3a\u96f6...");
            this.socre_label = this.default_tip;
            this.label.string = this.socre_label;
            return false;
          }
          if (Number(this.socre_label) > 999999) {
            utils_1.utils.show_hint("\u5212\u5206\u8303\u56f4 0~999999");
            this.socre_label = this.socre_label.substring(0, this.socre_label.length - 1);
            this.label.string = this.socre_label;
          }
          this.default_label.active = !(this.socre_label.length > 0);
          return true;
        }
        on_btn_key_send_clicked() {
          if (this.label.string == this.default_tip) {
            utils_1.utils.show_hint("\u5212\u5206\u4e0d\u80fd\u4e3a\u7a7a...");
            return;
          }
          let e = new cc.Event.EventCustom("onGiveScore", true);
          e.setUserData({
            userid: this.int_user_id,
            score: this.socre_label,
            chair: this.int_chair_id
          });
          this.node.dispatchEvent(e);
          YiFuGlobalUI_1.default.getInstance().hideGameUserInfo();
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
        }
        on_btn_close_clicked() {
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
        }
        setData(boardNode, user_id, pos_id = KeyBoardPos.Head, chair_id = 0) {
          this.int_user_id = user_id;
          this.int_chair_id = chair_id;
          let world = boardNode.convertToWorldSpaceAR(boardNode.getPosition());
          let local = this.node.parent.convertToNodeSpaceAR(world);
          pos_id == KeyBoardPos.Head ? this.node.setPosition(local.sub(cc.v2(190, 205))) : pos_id == KeyBoardPos.GameEnd && this.node.setPosition(local.sub(cc.v2(190, 190)));
          this.default_label.active = true;
          this.label.string = "";
        }
        onDestroy() {
          this._delete_timer_func && this.unschedule(this._delete_timer_func);
        }
      };
      __decorate([ property(cc.Label) ], YiFuKeyBoard.prototype, "label", void 0);
      __decorate([ property(cc.Node) ], YiFuKeyBoard.prototype, "default_label", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_0", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_1", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_2", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_3", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_4", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_5", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_6", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_7", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_8", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_9", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_send", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_key_delete", void 0);
      __decorate([ property(cc.Button) ], YiFuKeyBoard.prototype, "btn_close", void 0);
      YiFuKeyBoard = __decorate([ ccclass ], YiFuKeyBoard);
      return YiFuKeyBoard;
    })();
    exports.YiFuKeyBoard = YiFuKeyBoard;
    cc._RF.pop();
  }, {
    "../../Component/PopWindow": "PopWindow",
    "../../Framework/common/utils": "utils",
    "./YiFuGlobalUI": "YiFuGlobalUI"
  } ],
  YiFuMessageHint: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "22ca9b081xBM4+ws2TQbJeN", "YiFuMessageHint");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuMessageHint = (() => {
      let YiFuMessageHint = class YiFuMessageHint extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelText = null;
          this.startPosition = null;
          this.fadeInTime = 0;
          this.stayTime = 0;
          this.fadeOutTime = 0;
        }
        start() {}
        play(text, color = cc.Color.WHITE) {
          let offset_x = "                ";
          this.labelText.string = offset_x + text + offset_x;
          this.labelText.node.color = color;
          this.node.setPosition(this.startPosition);
          this.node.opacity = 0;
          this.node.stopAllActions();
          let steps = cc.sequence(cc.spawn([ cc.moveTo(this.fadeInTime, cc.v2(0, -60)).easing(cc.easeQuadraticActionOut()), cc.fadeIn(this.fadeInTime).easing(cc.easeQuadraticActionOut()) ]), cc.delayTime(this.stayTime), cc.fadeOut(this.fadeOutTime).easing(cc.easeQuadraticActionIn()));
          this.node.runAction(steps);
        }
        onDestroy() {}
      };
      __decorate([ property(cc.Label) ], YiFuMessageHint.prototype, "labelText", void 0);
      __decorate([ property(cc.Vec2) ], YiFuMessageHint.prototype, "startPosition", void 0);
      __decorate([ property ], YiFuMessageHint.prototype, "fadeInTime", void 0);
      __decorate([ property ], YiFuMessageHint.prototype, "stayTime", void 0);
      __decorate([ property ], YiFuMessageHint.prototype, "fadeOutTime", void 0);
      YiFuMessageHint = __decorate([ ccclass ], YiFuMessageHint);
      return YiFuMessageHint;
    })();
    exports.default = YiFuMessageHint;
    cc._RF.pop();
  }, {} ],
  YiFuOutCard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1def9At1WpKY4RZMwXaKIFv", "YiFuOutCard");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const YiFuGameData_1 = require("./YiFuGameData");
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuOutCard = (() => {
      let YiFuOutCard = class YiFuOutCard extends cc.Component {
        constructor() {
          super(...arguments);
          this.m_card_value = YiFuGameData_1.get_share_game_data().InvalidValue;
          this.m_can_hide = false;
          this.m_card = null;
        }
        start() {}
        init() {
          this.m_card = cards_3d_layout_1.default.get().getNewHandCard(true);
          this.m_card.setScale(1.05);
          this.m_card.setPosition(cc.v2(0, -6));
          this.node.setScale(1.4);
          this.node.addChild(this.m_card);
          this.node.active = false;
        }
        setCardValue(param_value) {
          this.m_card_value = param_value;
          let cai_1 = -1;
          let cai_2 = -1;
          if (1 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length) cai_1 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0]; else if (2 == YiFuGameData_1.get_share_game_data().CaiShenCardValue.length) {
            cai_1 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[0];
            cai_2 = YiFuGameData_1.get_share_game_data().CaiShenCardValue[1];
          }
          param_value == cai_1 || param_value == cai_2 ? this.m_card.getComponent(CSelfHandCard3D_1.default).setCardValue(param_value, 1) : this.m_card.getComponent(CSelfHandCard3D_1.default).setCardValue(param_value, 0);
        }
        getCardValue() {
          return this.m_card_value;
        }
        stopAllAction() {
          this.node.stopAllActions();
          this.node.active = true;
        }
        showCard(param_value) {
          this.node.active = false;
          this.m_card.active = true;
          null != param_value && this.setCardValue(param_value);
          if (this.m_card_value != YiFuGameData_1.get_share_game_data().InvalidValue) {
            this.m_can_hide = true;
            this.node.active = true;
            this.node.stopAllActions();
            this.node.opacity = 0;
            let that = this;
            let callfunc = cc.callFunc(function() {
              true == that.m_can_hide && that.hideCard();
            });
            this.node.runAction(cc.sequence(cc.fadeIn(.1), cc.delayTime(2), callfunc));
          }
        }
        hideCard() {
          let that = this;
          let callfunc = cc.callFunc(function() {
            that.node.active = false;
            that.clearData();
          });
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.fadeOut(.01), callfunc));
        }
        setCanHide(hide) {
          this.m_can_hide = hide;
        }
        clearData() {
          this.m_can_hide = false;
        }
      };
      YiFuOutCard = __decorate([ ccclass ], YiFuOutCard);
      return YiFuOutCard;
    })();
    exports.default = YiFuOutCard;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuScoreAction: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "271fbsOI3NG4LmTODVnIrRJ", "YiFuScoreAction");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuScoreAction = void 0;
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuScoreAction = (() => {
      let YiFuScoreAction = class YiFuScoreAction extends cc.Component {
        constructor() {
          super(...arguments);
          this.dis = 30;
        }
        start() {}
        play(i, from_vec, to_vec, int_score, score_node) {
          let from_local = this.node.parent.convertToNodeSpaceAR(from_vec);
          let to_local = this.node.parent.convertToNodeSpaceAR(to_vec);
          this.node.setPosition(from_local);
          this.node.stopAllActions();
          let that = this;
          let dir_x = Math.random() > .5 ? 1 : -1;
          let dir_y = Math.random() > .5 ? 1 : -1;
          let pos_x = Math.random() * this.dis * dir_x;
          let pos_y = Math.random() * this.dis * dir_y;
          let l_local = cc.v2(this.node.position.x + pos_x, this.node.position.y + pos_y);
          let timer = [ 0, .1, .2, .3, .4 ];
          let steps = cc.sequence(cc.moveTo(.2, l_local), cc.delayTime(.04), cc.delayTime(timer[i]), cc.moveTo(.6, to_local), cc.scaleTo(.08, .26), cc.callFunc(function() {
            bind_function_1.bf.play_sound("Game/150/sound/score/collect_1.mp3", false);
          }), cc.delayTime(.04), cc.callFunc(function() {
            that.node.active = false;
            that.node.destroy();
          }));
          this.node.runAction(steps);
        }
        onDestroy() {}
      };
      YiFuScoreAction = __decorate([ ccclass ], YiFuScoreAction);
      return YiFuScoreAction;
    })();
    exports.YiFuScoreAction = YiFuScoreAction;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function"
  } ],
  YiFuScoreHint: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e9e330zouVN1bVtUjyWfRcm", "YiFuScoreHint");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuScoreHint = void 0;
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuScoreHint = (() => {
      let YiFuScoreHint = class YiFuScoreHint extends cc.Component {
        constructor() {
          super(...arguments);
          this.labelText = null;
          this.headNode = null;
          this.startPosition = null;
          this.fadeInTime = 0;
          this.stayTime = 0;
          this.fadeOutTime = 0;
          this.ptr_head = null;
        }
        start() {}
        play(chair_id, int_score, callBack) {
          this.ptr_head || (this.ptr_head = bind_function_1.bf.set_user_head_node(this.headNode));
          let user_data = bind_function_1.bf.get_user_data_by_chair_id(chair_id);
          this.ptr_head.setData(80, 80, user_data.dwUserID, user_data.wFaceID, user_data.cbGender);
          let label_03 = " \u5212\u5206 ";
          int_score <= 0 ? label_03 += "-" + int_score : int_score > 0 && (label_03 += "+" + int_score);
          this.labelText.string = label_03;
          this.node.setPosition(this.startPosition);
          this.node.opacity = 0;
          this.node.stopAllActions();
          let steps = cc.sequence(cc.spawn([ cc.moveTo(this.fadeInTime, cc.v2(0, 0)).easing(cc.easeQuadraticActionOut()), cc.fadeIn(this.fadeInTime).easing(cc.easeQuadraticActionOut()) ]), cc.delayTime(this.stayTime), cc.fadeOut(this.fadeOutTime).easing(cc.easeQuadraticActionIn()), cc.callFunc(function() {
            callBack && callBack();
          }));
          this.node.runAction(steps);
        }
        onDestroy() {}
      };
      __decorate([ property(cc.Label) ], YiFuScoreHint.prototype, "labelText", void 0);
      __decorate([ property(cc.Node) ], YiFuScoreHint.prototype, "headNode", void 0);
      __decorate([ property(cc.Vec2) ], YiFuScoreHint.prototype, "startPosition", void 0);
      __decorate([ property ], YiFuScoreHint.prototype, "fadeInTime", void 0);
      __decorate([ property ], YiFuScoreHint.prototype, "stayTime", void 0);
      __decorate([ property ], YiFuScoreHint.prototype, "fadeOutTime", void 0);
      YiFuScoreHint = __decorate([ ccclass ], YiFuScoreHint);
      return YiFuScoreHint;
    })();
    exports.YiFuScoreHint = YiFuScoreHint;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function"
  } ],
  YiFuSelectBanker: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a8160nVbcxJ8ammiBbCF1n6", "YiFuSelectBanker");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuSmallUserHead_1 = require("./YiFuSmallUserHead");
    const utils_1 = require("../../Framework/common/utils");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const tutorial_1 = require("../../Framework/lobby/tutorial");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuSelectBanker = (() => {
      let YiFuSelectBanker = class YiFuSelectBanker extends cc.Component {
        constructor() {
          super(...arguments);
          this.random_button = null;
          this.ptr_sprite_banker = null;
          this.ptr_tips = null;
          this.user_nodes = [];
          this.m_wait_userdata = [];
          this.chair_id = -1;
          this.all_user_nodes = [];
          this.func01 = null;
          this.func02 = null;
          this.view_size = null;
        }
        onLoad() {
          this.view_size = cc.winSize;
          utils_1.utils.on("SelectBanker", this, this.onSelectBanker);
          utils_1.utils.on("StopSelectBanker", this, this.onStopSelectBanker);
          this.bind_btn(this.random_button, "onRandomButtonClicked");
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_3_1, this.user_nodes[2]);
          tutorial_1.tutorial.set_tutorial_node_target(tutorial_1.tutorial.TutorialID.Game_2_1, this.user_nodes[2]);
        }
        onEnable() {
          this.ptr_sprite_banker.node.active = false;
        }
        onRandomButtonClicked() {
          this.setButtonInteractable(false);
          let id = Math.floor(4 * Math.random());
          let ids = [ 12, 13, 14, 15 ];
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished() && 1 == YiFuGameData_1.get_share_game_data().GameCount) {
            id = 12;
            console.log("onRandomButtonClicked ID: ", id);
            this.animationLighting(id);
          } else this.animationLighting(ids[id]);
          sound_manager_1.sound_manager.play_click();
          tutorial_1.tutorial.close_tutorial();
        }
        animationLighting(repeat_count) {
          let count = this.all_user_nodes.length;
          let t = -1;
          let that = this;
          let send = false;
          this.func01 = function() {
            if (!send) {
              send = true;
              that.send_data(that.chair_id);
            }
          };
          this.func02 = function() {
            for (let i = 0; i < count; i++) if (that.all_user_nodes[i].getComponent(YiFuSmallUserHead_1.default).is_lighting()) {
              that.all_user_nodes[i].getComponent(YiFuSmallUserHead_1.default).hide_lighting();
              break;
            }
            t++;
            that.all_user_nodes[t].getComponent(YiFuSmallUserHead_1.default).show_lighting();
            this.chair_id = that.all_user_nodes[t].getComponent(YiFuSmallUserHead_1.default).chairid;
            t == count - 1 && (t = -1);
          };
          this.unscheduleFunc();
          this.schedule(this.func02, .1, repeat_count);
          this.schedule(this.func01, 0, 1, .1 * repeat_count + 1.4);
        }
        send_data(chair_id) {
          tutorial_1.tutorial.close_tutorial();
          let the_data = {};
          the_data["chair"] = chair_id;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_SEND_CARD, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          console.log("yfGD.SUB_C_SEND_CARD : ", the_data);
          let that = this;
          this.node.stopAllActions();
          this.node.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
            that.node.active = false;
          })));
        }
        onSelectBanker(chair_id) {
          this.send_data(chair_id);
        }
        onStopSelectBanker() {
          this.setButtonInteractable(false);
        }
        setButtonInteractable(interactable) {
          null != this.random_button && (this.random_button.interactable = interactable);
          for (let i = 0; i < this.user_nodes.length; i++) {
            let usernode = this.user_nodes[i];
            usernode.active && (usernode.getComponent(YiFuSmallUserHead_1.default).button_face.getComponent(cc.Button).interactable = interactable);
          }
        }
        hide_user_head() {
          this.node.active = false;
        }
        show_users_head(userdatas) {
          console.log("show_users_head(userdatas: protocols.tagUserData[]) : ", userdatas);
          this.node.stopAllActions();
          this.setButtonInteractable(true);
          this.node.opacity = 255;
          this.node.active = true;
          this.all_user_nodes = [];
          this.user_nodes.forEach(v => v.active = false);
          this.user_nodes.forEach(v => v.getComponent(YiFuSmallUserHead_1.default).hide_lighting());
          this.m_wait_userdata = userdatas;
          for (let i = 0; i < userdatas.length; i++) {
            let user_data = userdatas[i];
            if (null == user_data || void 0 == user_data) continue;
            this.all_user_nodes.push(this.user_nodes[i]);
            this.user_nodes[i].getComponent(YiFuSmallUserHead_1.default).show_user_face(user_data);
            let fade_time = .3;
            this.user_nodes[i].stopAllActions();
            if (0 == i) {
              this.user_nodes[i].setPosition(0, 266);
              this.user_nodes[i].opacity = 0;
              this.user_nodes[i].runAction(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(fade_time, cc.v2(0, 216))));
            } else if (1 == i) {
              this.user_nodes[i].setPosition(-200, 66);
              this.user_nodes[i].opacity = 0;
              this.user_nodes[i].runAction(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(fade_time, cc.v2(-150, 66))));
            } else if (2 == i) {
              this.user_nodes[i].setPosition(0, -134);
              this.user_nodes[i].opacity = 0;
              this.user_nodes[i].runAction(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(fade_time, cc.v2(0, -84))));
            } else if (3 == i) {
              this.user_nodes[i].setPosition(200, 66);
              this.user_nodes[i].opacity = 0;
              this.user_nodes[i].runAction(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(fade_time, cc.v2(150, 66))));
            }
          }
          console.log("tutorial game_count : ", YiFuGameData_1.get_share_game_data().GameCount);
          1 == YiFuGameData_1.get_share_game_data().GameCount ? this.node.getChildByName("mask").runAction(cc.sequence(cc.delayTime(.35), cc.callFunc(function() {
            tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_1_5);
          }))) : 2 == YiFuGameData_1.get_share_game_data().GameCount ? this.node.getChildByName("mask").runAction(cc.sequence(cc.delayTime(.35), cc.callFunc(function() {
            tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_2_1);
          }))) : 3 == YiFuGameData_1.get_share_game_data().GameCount && this.node.getChildByName("mask").runAction(cc.sequence(cc.delayTime(.35), cc.callFunc(function() {
            tutorial_1.tutorial.show_tutorial(tutorial_1.tutorial.TutorialID.Game_3_1);
          })));
          this.play_animation();
        }
        play_animation() {
          let that = this;
          this.node.runAction(cc.sequence(cc.delayTime(.2), cc.callFunc(function() {
            that.ptr_sprite_banker.node.active = true;
            that.ptr_sprite_banker.node.setPosition(0, 64);
            that.ptr_sprite_banker.node.opacity = 0;
            that.ptr_sprite_banker.node.runAction(cc.fadeIn(1.6));
            that.ptr_tips.active = true;
            that.ptr_tips.setPosition(0, -255);
            that.ptr_tips.opacity = 0;
            that.ptr_tips.runAction(cc.spawn(cc.fadeIn(.6), cc.moveTo(.6, cc.v2(0, -215))));
          })));
        }
        start() {}
        onDestroy() {
          utils_1.utils.off("SelectBanker", this, this.onSelectBanker);
          utils_1.utils.off("StopSelectBanker", this, this.onStopSelectBanker);
        }
        onDisable() {
          this.unscheduleFunc();
        }
        unscheduleFunc() {
          this.func02 && this.unschedule(this.func02);
          this.func01 && this.unschedule(this.func01);
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "YiFuSelectBanker";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
      };
      __decorate([ property(cc.Button) ], YiFuSelectBanker.prototype, "random_button", void 0);
      __decorate([ property(cc.Sprite) ], YiFuSelectBanker.prototype, "ptr_sprite_banker", void 0);
      __decorate([ property(cc.Node) ], YiFuSelectBanker.prototype, "ptr_tips", void 0);
      __decorate([ property([ cc.Node ]) ], YiFuSelectBanker.prototype, "user_nodes", void 0);
      YiFuSelectBanker = __decorate([ ccclass ], YiFuSelectBanker);
      return YiFuSelectBanker;
    })();
    exports.default = YiFuSelectBanker;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "../../Framework/lobby/tutorial": "tutorial",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuSmallUserHead": "YiFuSmallUserHead"
  } ],
  YiFuSelectGameCount: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7225f7yeOtNTrkz9gNyHsK5", "YiFuSelectGameCount");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YiFuSelectGameCount = void 0;
    const PopWindow_1 = require("../../Component/PopWindow");
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuSelectGameCount = (() => {
      let YiFuSelectGameCount = class YiFuSelectGameCount extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.buttton_4 = null;
          this.buttton_8 = null;
          this.buttton_16 = null;
          this.buttton_all = null;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.buttton_4, this.node, "YiFuSelectGameCount", "onButton4Clicked");
          utils_1.utils.bind_button_event(this.buttton_8, this.node, "YiFuSelectGameCount", "onButton8Clicked");
          utils_1.utils.bind_button_event(this.buttton_16, this.node, "YiFuSelectGameCount", "onButton16Clicked");
          utils_1.utils.bind_button_event(this.buttton_all, this.node, "YiFuSelectGameCount", "onButtonallClicked");
          this.node.active = false;
        }
        onButton4Clicked() {
          this.send_data(0);
        }
        onButton8Clicked() {
          this.send_data(1);
        }
        onButton16Clicked() {
          this.send_data(2);
        }
        onButtonallClicked() {
          this.send_data(-1);
        }
        send_data(id) {
          let the_data = {};
          the_data["id"] = id;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_CHANCE_GAME_COUNT, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          console.log("send YiFuSelectGameCount  : ", the_data);
          this.hide();
        }
        showit() {
          this.node.active = true;
          this.show();
        }
        start() {}
      };
      __decorate([ property(cc.Button) ], YiFuSelectGameCount.prototype, "buttton_4", void 0);
      __decorate([ property(cc.Button) ], YiFuSelectGameCount.prototype, "buttton_8", void 0);
      __decorate([ property(cc.Button) ], YiFuSelectGameCount.prototype, "buttton_16", void 0);
      __decorate([ property(cc.Button) ], YiFuSelectGameCount.prototype, "buttton_all", void 0);
      YiFuSelectGameCount = __decorate([ ccclass ], YiFuSelectGameCount);
      return YiFuSelectGameCount;
    })();
    exports.YiFuSelectGameCount = YiFuSelectGameCount;
    cc._RF.pop();
  }, {
    "../../Component/PopWindow": "PopWindow",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "./YiFuGameDefine": "YiFuGameDefine"
  } ],
  YiFuSmallUserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f3d5dW/oK5CJ5irLT5/cM2/", "YiFuSmallUserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuSmallUserHead = (() => {
      let YiFuSmallUserHead = class YiFuSmallUserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.button_face = null;
          this.ptr_img_lighting = null;
          this.ptr_label_banker = null;
          this.headNode = null;
          this._head = null;
          this.width = 0;
          this.height = 0;
          this.userId = 0;
          this.faceId = 0;
          this.sexId = 0;
          this.chairid = -1;
        }
        onEnable() {}
        start() {
          this.bind_btn(this.button_face, "onButtonFaceClicked");
          this.ptr_img_lighting.node.active = false;
        }
        onButtonFaceClicked() {
          utils_1.utils.send("StopSelectBanker");
          let that = this;
          let func = function() {
            utils_1.utils.send("SelectBanker", that.chairid);
          };
          this.show_lighting();
          this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(func, this)));
          sound_manager_1.sound_manager.play_click();
        }
        show_lighting() {
          this.ptr_img_lighting.node.active = true;
        }
        hide_lighting() {
          this.ptr_img_lighting.node.active = false;
        }
        is_lighting() {
          return this.ptr_img_lighting.node.active;
        }
        show_user_face(user_data) {
          console.log("show_user_face  : ", user_data);
          this.node.active = true;
          this.userId = user_data.dwUserID;
          this.faceId = user_data.wFaceID;
          this.sexId = user_data.cbGender;
          this.chairid = user_data.wChairID;
          let str = "";
          let that = this;
          YiFuGameData_1.get_share_game_data().LastBanker == this.chairid && YiFuGameData_1.get_share_game_data().LastHuChair.some(function(value) {
            return value == that.chairid;
          }) ? str = "\u4e0a\u8f6e\u5e84\u5bb6 \u4e0a\u8f6e\u8d62\u5bb6" : YiFuGameData_1.get_share_game_data().LastBanker == this.chairid ? str = "\u4e0a\u8f6e\u5e84\u5bb6" : YiFuGameData_1.get_share_game_data().LastHuChair.some(function(value) {
            return value == that.chairid;
          }) && (str = "\u4e0a\u8f6e\u8d62\u5bb6");
          this.ptr_label_banker.string = str;
          this._head || (this._head = bind_function_1.bf.set_user_head_node(this.headNode));
          this._head.setData(108, 108, this.userId, this.faceId, this.sexId);
          this._head.setInteractable(false);
          this.node.getChildByName("mask").getChildByName("face").active = false;
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "YiFuSmallUserHead";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
      };
      __decorate([ property(cc.Button) ], YiFuSmallUserHead.prototype, "button_face", void 0);
      __decorate([ property(cc.Sprite) ], YiFuSmallUserHead.prototype, "ptr_img_lighting", void 0);
      __decorate([ property(cc.Label) ], YiFuSmallUserHead.prototype, "ptr_label_banker", void 0);
      __decorate([ property(cc.Node) ], YiFuSmallUserHead.prototype, "headNode", void 0);
      YiFuSmallUserHead = __decorate([ ccclass ], YiFuSmallUserHead);
      return YiFuSmallUserHead;
    })();
    exports.default = YiFuSmallUserHead;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData"
  } ],
  YiFuTouchArea: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ea936w9xCRNSY17zt/TCtJd", "YiFuTouchArea");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_layout_1 = require("../../../Layout3D/Src/cards_3d_layout");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const CSelfHandCard3D_1 = require("../../../Layout3D/Src/widget/CSelfHandCard3D");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuTouchArea = (() => {
      let YiFuTouchArea = class YiFuTouchArea extends cc.Component {
        constructor() {
          super(...arguments);
          this.start_pos = null;
          this.moved = null;
          this.last_actived_x = 0;
          this.last_actived_y = 0;
          this.this_touch_up_triggered = false;
          this.this_touch_down_triggered = false;
          this.this_touch_lock_left = false;
          this.this_touch_lock_right = false;
          this.picked_card = null;
          this.picked_offset = null;
        }
        onLoad() {
          this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
          this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
          this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
          this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
          window && (window.area = this);
        }
        touchStart(event) {
          this.start_pos = event.getStartLocation();
          this.last_actived_x = this.start_pos.x;
          this.last_actived_y = this.start_pos.y;
          this.this_touch_up_triggered = false;
          this.this_touch_down_triggered = false;
          this.this_touch_lock_left = false;
          this.this_touch_lock_right = false;
          this.picked_card = null;
          this.picked_offset = null;
        }
        touchMove(event) {
          let current_pos = event.getLocation();
          this.moved = current_pos.sub(this.start_pos);
          if (current_pos.x - this.last_actived_x > 50) {
            this.trigger_right();
            this.last_actived_x = current_pos.x;
          }
          if (current_pos.x - this.last_actived_x < -50) {
            this.trigger_left();
            this.last_actived_x = current_pos.x;
          }
          if (current_pos.y - this.last_actived_y > 30) {
            this.trigger_up();
            this.this_touch_up_triggered = true;
          }
          if (current_pos.y - this.last_actived_y < -30) {
            this.trigger_down();
            this.this_touch_down_triggered = true;
          }
          this.update_picked_card(event);
        }
        touchCancel(event) {
          this.update_picked_card(event);
        }
        touchEnd(event) {
          this.update_picked_card(event);
        }
        trigger_down() {
          if (this.this_touch_down_triggered) return;
          this.catch_card();
        }
        trigger_up() {
          if (this.this_touch_up_triggered) return;
          let selected_index = cards_3d_layout_1.default.get().CSelfCardsController._selected_index;
          -1 == selected_index ? this.select_card_toward(0) : this.pick_card(selected_index);
        }
        trigger_left() {
          if (this.this_touch_lock_left) return;
          this.select_card_toward(-1);
        }
        trigger_right() {
          if (this.this_touch_lock_right) return;
          this.select_card_toward(1);
        }
        pick_card(index) {
          this.picked_card = cards_3d_layout_1.default.get().CSelfCardsController.getHandCard(index).getComponent(CSelfHandCard3D_1.default);
          this.this_touch_lock_left = true;
          this.this_touch_lock_right = true;
        }
        update_picked_card(event) {
          if (!this.picked_card) return;
          if (this.picked_offset) {
            let p = event.getLocation().add(this.picked_offset);
            event.setLocation(p.x, p.y);
            this.picked_card.touchEvent(event, null);
          } else {
            let pos_in_layout = cards_3d_layout_1.default.get().CSelfCardsController.node.convertToNodeSpaceAR(event.touch.getLocation());
            this.picked_offset = this.picked_card.node.getPosition().sub(pos_in_layout);
            event.type = cc.Node.EventType.TOUCH_START;
            let p = event.getLocation().add(this.picked_offset);
            event.setLocation(p.x, p.y);
            this.picked_card.touchEvent(event, null);
          }
        }
        catch_card() {
          bind_function_1.bf.send_game_event("TouchCatchCard");
        }
        select_card_toward(dir = 0) {
          bind_function_1.bf.send_game_event("TouchMoveToward", dir);
        }
        out_selected_card() {
          bind_function_1.bf.send_game_event("TouchOutCard");
        }
      };
      YiFuTouchArea = __decorate([ ccclass ], YiFuTouchArea);
      return YiFuTouchArea;
    })();
    exports.default = YiFuTouchArea;
    cc._RF.pop();
  }, {
    "../../../Layout3D/Src/cards_3d_layout": "cards_3d_layout",
    "../../../Layout3D/Src/widget/CSelfHandCard3D": "CSelfHandCard3D",
    "../../Framework/lobby/bind_function": "bind_function"
  } ],
  YiFuTutorial: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f09a1DwaGVAQoRrWk4AzsSW", "YiFuTutorial");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.yifututorial = void 0;
    const YiFuGameTutorial_1 = require("./YiFuGameTutorial");
    const utils_1 = require("../../Framework/common/utils");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const YiFuGameData_1 = require("./YiFuGameData");
    var yifututorial;
    (function(yifututorial) {
      yifututorial.prefab = null;
      yifututorial.inst = null;
      var delay_id = -1;
      var show_id = -1;
      yifututorial.map = null;
      let GameTutorialID;
      (function(GameTutorialID) {
        GameTutorialID[GameTutorialID["Game_Invite"] = 1] = "Game_Invite";
        GameTutorialID[GameTutorialID["Game_Hu_1"] = 2] = "Game_Hu_1";
        GameTutorialID[GameTutorialID["Game_Hu_2"] = 3] = "Game_Hu_2";
        GameTutorialID[GameTutorialID["Game_XiPai_1"] = 4] = "Game_XiPai_1";
        GameTutorialID[GameTutorialID["Game_XiPai_2"] = 5] = "Game_XiPai_2";
        GameTutorialID[GameTutorialID["Game_XiPai_3"] = 6] = "Game_XiPai_3";
        GameTutorialID[GameTutorialID["Game_HuaFen"] = 7] = "Game_HuaFen";
        GameTutorialID[GameTutorialID["Game_FaPai_1"] = 8] = "Game_FaPai_1";
        GameTutorialID[GameTutorialID["Game_FaPai_2"] = 9] = "Game_FaPai_2";
        GameTutorialID[GameTutorialID["Game_End"] = 10] = "Game_End";
      })(GameTutorialID = yifututorial.GameTutorialID || (yifututorial.GameTutorialID = {}));
      class game_tutorial_node_data {
        constructor() {
          this.id = -1;
          this.offset = null;
          this.text = "";
          this.mask = 0;
        }
      }
      yifututorial.game_tutorial_node_data = game_tutorial_node_data;
      function check(id) {
        if (id == show_id) return true;
        return false;
      }
      yifututorial.check = check;
      function close_game_tutorial(id) {
        if (!cc.isValid(yifututorial.inst)) return;
        if (id && !check(id)) return;
        yifututorial.inst.node.active && yifututorial.inst.hide();
        if (-1 != delay_id) {
          clearTimeout(delay_id);
          delay_id = -1;
        }
      }
      yifututorial.close_game_tutorial = close_game_tutorial;
      function _close_game_tutorial() {
        if (-1 != delay_id) {
          clearTimeout(delay_id);
          delay_id = -1;
        }
      }
      yifututorial._close_game_tutorial = _close_game_tutorial;
      function game_yifu_show_tutorial(id, delay = 0, mask_id = null, root = null, view_id = -1) {
        if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) return;
        if (!cc.isValid(yifututorial.prefab)) return;
        if (!yifututorial.map.has(id)) return;
        if (!checkTutorial(id)) return;
        cc.isValid(root) || (root = cc.Canvas.instance.node);
        let data = yifututorial.map.get(id);
        let m = String(mask_id) + String(id);
        let d = utils_1.utils.getLocalStorage(m);
        if (d) return;
        show_id = id;
        -1 != delay_id && clearTimeout(delay_id);
        delay_id = setTimeout(() => {
          utils_1.utils.setLocalStorage(m, String(1));
          _game_yifu_show_tutorial(id, root, view_id);
        }, 1e3 * delay);
      }
      yifututorial.game_yifu_show_tutorial = game_yifu_show_tutorial;
      function checkTutorial(id) {
        if (id == GameTutorialID.Game_Invite || id == GameTutorialID.Game_Hu_1 || id == GameTutorialID.Game_Hu_2 || id == GameTutorialID.Game_HuaFen) return false;
        return true;
      }
      yifututorial.checkTutorial = checkTutorial;
      function _game_yifu_show_tutorial(id, root = null, view_id = -1) {
        cc.isValid(yifututorial.inst) || (yifututorial.inst = utils_1.utils.add_instance_to_root(yifututorial.prefab, root, YiFuGameTutorial_1.default));
        let data = yifututorial.map.get(id);
        yifututorial.inst.setData(data.text, view_id);
        yifututorial.inst.node.setParent(root);
        yifututorial.inst.node.active = true;
        id == yifututorial.GameTutorialID.Game_HuaFen && (view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_LEFT ? data.offset = new cc.Vec2(-98, 110) : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_RIGHT ? data.offset = new cc.Vec2(100, -114) : view_id == YiFuGameDefine_1.YiFuGameDefine.USER_INDEX_UP && (data.offset = new cc.Vec2(100, -114)));
        yifututorial.inst.node.setPosition(data.offset);
      }
      function game_yifu_init(_prefab) {
        yifututorial.prefab = _prefab;
        yifututorial.map = new Map();
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_Invite;
          data.offset = new cc.Vec2(-100, 120);
          data.text = "\u521b\u5efa\u6210\u529f<br/><color=#FF7944>\u9080\u8bf7</c>\u597d\u53cb\u4e00\u8d77\u6765\u73a9\u5427~";
          data.mask = 1 << data.id;
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_Hu_1;
          data.offset = new cc.Vec2(-98, 110);
          data.text = "\u770b\u51c6\u65f6\u673a<br/>\u968f\u65f6\u90fd\u80fd<color=#FF7944>\u80e1\u724c</c>\u54e6~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_Hu_2;
          data.offset = new cc.Vec2(-98, 110);
          data.text = "\u770b\u51c6\u65f6\u673a<br/>\u968f\u65f6\u90fd\u80fd<color=#FF7944>\u80e1\u724c</c>\u54e6~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_XiPai_1;
          data.offset = new cc.Vec2(100, -130);
          data.text = "\u5212\u5206\u4e4b\u540e<br/>\u5c31<color=#FF7944>\u6d17\u724c</c>\u5f00\u59cb\u4e0b\u4e00\u5c40\u5427~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_XiPai_2;
          data.offset = new cc.Vec2(100, -130);
          data.text = "\u5212\u5206\u4e4b\u540e<br/>\u5c31<color=#FF7944>\u6d17\u724c</c>\u5f00\u59cb\u4e0b\u4e00\u5c40\u5427~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_XiPai_3;
          data.offset = new cc.Vec2(100, -130);
          data.text = "\u724c\u6478\u5b8c\u4e86<br/><color=#FF7944>\u6d17\u724c</c>\u5f00\u59cb\u4e0b\u5c40\u6e38\u620f\u5427~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_HuaFen;
          data.offset = new cc.Vec2(180, 0);
          data.text = "\u70b9\u51fb\u597d\u53cb\u5934\u50cf<br/>\u4e5f\u53ef\u4ee5<color=#FF7944>\u5212\u5206</c>\u8bb0\u5f55\u8f93\u8d62\u54e6~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_FaPai_1;
          data.offset = new cc.Vec2(-100, 120);
          data.text = "\u4eba\u5230\u9f50\u4e86!<br/><color=#FF7944>\u53d1\u724c</c>\u5f00\u59cb\u6e38\u620f\u5427~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_FaPai_2;
          data.offset = new cc.Vec2(-100, 120);
          data.text = "\u5927\u5bb6\u7b49\u6025\u4e86<br/>\u8d76\u7d27<color=#FF7944>\u53d1\u724c</c>\u54e6~";
          yifututorial.map.set(data.id, data);
        }
        {
          let data = new game_tutorial_node_data();
          data.id = GameTutorialID.Game_End;
          data.offset = new cc.Vec2(-100, 120);
          data.text = "\u4e0d\u8981\u5fd8\u4e86<br/>\u5f00\u59cb<color=#FF7944>\u4e0b\u4e00\u5c40</c>\u54e6~";
          yifututorial.map.set(data.id, data);
        }
      }
      yifututorial.game_yifu_init = game_yifu_init;
    })(yifututorial = exports.yifututorial || (exports.yifututorial = {}));
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameTutorial": "YiFuGameTutorial"
  } ],
  YiFuUserHeadScoreHint: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "063605xlWFAuJFWXMKIZvGD", "YiFuUserHeadScoreHint");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuUserHeadScoreHint = (() => {
      let YiFuUserHeadScoreHint = class YiFuUserHeadScoreHint extends cc.Component {
        constructor() {
          super(...arguments);
          this.label = null;
          this.strat_pos = cc.v2(-18, -110);
          this.end_pos_show = cc.v2(-18, -85);
          this.fadeInTime = .3;
          this.stayTime = 1;
          this.fadeOutTime = .1;
          this.end_pos_hide = cc.v2(-18, -90);
        }
        start() {}
        show(score) {
          this.node.active = true;
          this.label.string = "+" + score;
          this.label.node.color = new cc.Color().fromHEX("#00ffcc");
          this.node.opacity = 0;
          this.node.stopAllActions();
          this.node.setPosition(this.strat_pos);
          let that = this;
          let steps = cc.sequence(cc.spawn([ cc.moveTo(this.fadeInTime, this.end_pos_show).easing(cc.easeQuadraticActionOut()), cc.fadeIn(this.fadeInTime).easing(cc.easeQuadraticActionOut()) ]), cc.delayTime(this.stayTime), cc.spawn([ cc.moveTo(this.fadeOutTime, this.end_pos_hide).easing(cc.easeQuadraticActionIn()), cc.fadeOut(this.fadeOutTime).easing(cc.easeQuadraticActionIn()) ]), cc.callFunc(function() {
            that.node.destroy();
          }));
          this.node.runAction(steps);
        }
      };
      __decorate([ property(cc.Label) ], YiFuUserHeadScoreHint.prototype, "label", void 0);
      YiFuUserHeadScoreHint = __decorate([ ccclass ], YiFuUserHeadScoreHint);
      return YiFuUserHeadScoreHint;
    })();
    exports.default = YiFuUserHeadScoreHint;
    cc._RF.pop();
  }, {} ],
  YiFuUserHead: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e339bNA26ZBdY+IO8WwZvia", "YiFuUserHead");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ChangeSeatStatus = exports.XiPaiStatus = exports.UserHeadStatus = void 0;
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuTutorial_1 = require("./YiFuTutorial");
    const YiFuUserHeadScoreHint_1 = require("./YiFuUserHeadScoreHint");
    const utils_1 = require("../../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    var UserHeadStatus;
    (function(UserHeadStatus) {
      UserHeadStatus[UserHeadStatus["Null"] = 0] = "Null";
      UserHeadStatus[UserHeadStatus["ComeInBefore"] = 1] = "ComeInBefore";
      UserHeadStatus[UserHeadStatus["ComeIn"] = 2] = "ComeIn";
      UserHeadStatus[UserHeadStatus["ComeInAfter"] = 3] = "ComeInAfter";
    })(UserHeadStatus = exports.UserHeadStatus || (exports.UserHeadStatus = {}));
    var XiPaiStatus;
    (function(XiPaiStatus) {
      XiPaiStatus[XiPaiStatus["Null"] = 0] = "Null";
      XiPaiStatus[XiPaiStatus["Wait"] = 1] = "Wait";
      XiPaiStatus[XiPaiStatus["Agree"] = 2] = "Agree";
      XiPaiStatus[XiPaiStatus["Refuse"] = 3] = "Refuse";
      XiPaiStatus[XiPaiStatus["Luncher"] = 4] = "Luncher";
    })(XiPaiStatus = exports.XiPaiStatus || (exports.XiPaiStatus = {}));
    var ChangeSeatStatus;
    (function(ChangeSeatStatus) {
      ChangeSeatStatus[ChangeSeatStatus["Null"] = 0] = "Null";
      ChangeSeatStatus[ChangeSeatStatus["Wait"] = 1] = "Wait";
      ChangeSeatStatus[ChangeSeatStatus["Agree"] = 2] = "Agree";
      ChangeSeatStatus[ChangeSeatStatus["Refuse"] = 3] = "Refuse";
      ChangeSeatStatus[ChangeSeatStatus["Luncher"] = 4] = "Luncher";
    })(ChangeSeatStatus = exports.ChangeSeatStatus || (exports.ChangeSeatStatus = {}));
    let YiFuUserHead = (() => {
      let YiFuUserHead = class YiFuUserHead extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_head_btn = null;
          this.ptr_img_face = null;
          this.ptr_img_circle = null;
          this.ptr_img_banker = null;
          this.girlSprite = null;
          this.boySprite = null;
          this.unknownSprite = null;
          this.ptr_label_score_bg = null;
          this.ptr_label_score = null;
          this.ptr_label_nickname = null;
          this.tips_ani_node = null;
          this.tips_ani_bg_node = null;
          this.tips_ani_tip_node = null;
          this.ptr_user_change_seat_face = null;
          this.ptr_img_leave_status = null;
          this.ptr_label_leave_status = null;
          this.userHeadScoreHintPrefab = null;
          this.ptr_microphone_node = null;
          this.ptr_earphone_node = null;
          this.ptr_view_id = 2;
          this.width = 0;
          this.height = 0;
          this.userId = 0;
          this.faceId = 0;
          this.sexId = 0;
          this.m_nickname = "";
          this.m_socre = 0;
          this.m_view_id = 0;
          this.m_game_layer = null;
          this.m_left_status = false;
          this.m_user_head_status = 0;
          this.m_timer_func = null;
          this.m_all_time = 0;
          this.m_left_time = 0;
          this.clickToShowUserInfo = true;
          this.m_micro_pos = cc.v2(34, -27);
          this.m_ear_pos = cc.v2(34, 3);
        }
        onLoad() {
          this.node.active = false;
          this.clear();
          this.bind_btn(this.ptr_head_btn, "onHeadClicked");
        }
        start() {}
        onDestroy() {
          this.unschedule(this.m_timer_func);
        }
        show_user_default_info(view_id, status) {
          this.node.active = true;
          if (status == UserHeadStatus.ComeInBefore) {
            this.hide_nick_name();
            this.show_change_seat();
          } else status == UserHeadStatus.ComeIn ? this.show_nick_name(this.m_nickname) : status == UserHeadStatus.ComeInAfter && this.show_score(this.m_socre);
          this.m_user_head_status = status;
        }
        show_change_seat() {
          this.ptr_img_face.spriteFrame = this.ptr_user_change_seat_face;
          this.ptr_img_circle.node.active = false;
        }
        show_banker() {
          this.ptr_img_banker.node.active = true;
        }
        hide_banker() {
          this.ptr_img_banker.node.active = false;
        }
        clear() {
          this.tips_ani_node.active = false;
          this.tips_ani_bg_node.active = false;
          this.tips_ani_tip_node.active = false;
          this.ptr_img_leave_status.node.active = false;
          this.show_unable_microphone(false);
          this.show_unable_earphone(false);
          this.hide_banker();
        }
        bind_btn(param_btn, param_str_handler) {
          var clickEventshop = new cc.Component.EventHandler();
          clickEventshop.target = this.node;
          clickEventshop.component = "YiFuUserHead";
          clickEventshop.handler = param_str_handler;
          param_btn.clickEvents.push(clickEventshop);
        }
        set_game_layer(param_layer) {
          this.m_game_layer = param_layer;
        }
        onHeadClicked(event, customEventData) {
          sound_manager_1.sound_manager.play_click();
          if (YiFuGameData_1.get_share_game_data().checkOwnGameTutorialFinished()) {
            utils_1.utils.show_hint("\u5f15\u5bfc\u8fc7\u7a0b,\u6682\u4e0d\u652f\u6301\u70b9\u51fb\u5934\u50cf");
            return;
          }
          if (null == YiFuGameData_1.get_share_game_data().UserStatus && null == bind_function_1.bf.get_user_data_by_user_id(this.userId)) return;
          YiFuTutorial_1.yifututorial.close_game_tutorial(YiFuTutorial_1.yifututorial.GameTutorialID.Game_HuaFen);
          if (this.m_user_head_status == UserHeadStatus.ComeInBefore) {
            if (!YiFuGameData_1.get_share_game_data().CanChangeSeat) {
              bind_function_1.bf.show_hinting("\u5f53\u524d\u4e0d\u80fd\u6362\u5ea7", "");
              return;
            }
            let the_data = {};
            the_data["seat"] = YiFuGameLogic_1.get_game_logic().switch_to_seat_id(this.ptr_view_id);
            bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_ASK_CHANGE_SEAT, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
            return;
          }
          if (this.userId == global_data_1.global_data.get_the_user_data()._int_user_id) {
            let chair = bind_function_1.bf.get_user_data_by_user_id(this.userId).wChairID;
            YiFuGlobalUI_1.default.getInstance().showScoreRecord(chair);
            return;
          }
          YiFuGlobalUI_1.default.getInstance().showGameUserInfo(false, this.userId, null, null, null, this.ptr_view_id);
        }
        set_user_data(userId, user_data, view_id) {
          this.userId = userId;
          this.faceId = user_data.wFaceID;
          this.sexId = user_data.cbGender;
          this.m_view_id = view_id;
          this.m_nickname = user_data.szName;
          this.m_socre = user_data.lScore;
          this.ptr_img_circle.node.active = true;
          0 == this.sexId ? this.ptr_img_face.spriteFrame = this.girlSprite : 1 == this.sexId ? this.ptr_img_face.spriteFrame = this.boySprite : this.ptr_img_face.spriteFrame = this.unknownSprite;
          0 != this.faceId && bind_function_1.bf.fetch_user_head_image(userId, this.faceId, this.ptr_img_face);
        }
        show_nick_name(nickname) {
          this.ptr_label_score_bg.node.active = false;
          this.ptr_label_nickname.node.active = true;
          this.ptr_label_nickname.node.color = new cc.Color().fromHEX("#FFFFFF");
          this.ptr_label_nickname.string = bind_function_1.bf.clamp_nickname(nickname, 4);
        }
        show_score(lScore) {
          this.m_socre = lScore;
          this.ptr_label_nickname.node.active = false;
          this.ptr_label_score_bg.node.active = true;
          this.ptr_label_score.node.active = true;
          this.ptr_label_score.node.color = new cc.Color().fromHEX("#FFFF00");
          let that = this;
          this.ptr_label_score.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
            that.ptr_label_score.string = lScore.toString();
          })));
        }
        show_unable_microphone(show) {
          this.ptr_microphone_node.active = show;
          this.update_micr_and_ear_position();
        }
        show_unable_earphone(show) {
          this.ptr_earphone_node.active = show;
          this.update_micr_and_ear_position();
        }
        update_micr_and_ear_position() {
          let micro = this.ptr_microphone_node.active;
          let ear = this.ptr_earphone_node.active;
          if (micro && ear) {
            this.ptr_microphone_node.setPosition(this.m_micro_pos);
            this.ptr_earphone_node.setPosition(this.m_ear_pos);
          } else micro ? this.ptr_microphone_node.setPosition(this.m_micro_pos) : this.ptr_earphone_node.setPosition(this.m_micro_pos);
        }
        show_score_action(score) {
          let that = this;
          this.ptr_label_score_bg.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
            let headScore = cc.instantiate(that.userHeadScoreHintPrefab).getComponent(YiFuUserHeadScoreHint_1.default);
            headScore.node.setParent(that.node);
            headScore.show(score);
          })));
        }
        hide_nick_name() {
          this.ptr_label_score_bg.node.active = false;
          this.ptr_label_nickname.node.active = false;
        }
        show_head() {
          this.node.active = true;
        }
        hide_head() {
          this.clear();
          this.node.active = false;
        }
        show_user_operation_status() {
          this.tips_ani_node.active = true;
          this.tips_ani_bg_node.active = true;
          this.tips_ani_tip_node.active = true;
        }
        hide_user_operation_status() {
          this.tips_ani_node.active = false;
          this.tips_ani_bg_node.active = false;
          this.tips_ani_tip_node.active = false;
          let count_1 = this.tips_ani_bg_node.childrenCount;
          for (let i = 0; i < count_1; i++) this.tips_ani_bg_node.children[i].active = false;
          let count_2 = this.tips_ani_tip_node.childrenCount;
          for (let i = 0; i < count_2; i++) this.tips_ani_tip_node.children[i].active = false;
        }
        set_user_operation_status(view_id, param_status, status, is_agree) {
          this.hide_user_operation_status();
          this.show_user_operation_status();
          let playNode_1 = null;
          let playNode_2 = null;
          if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_XIPAI) {
            if (status == XiPaiStatus.Wait) {
              playNode_1 = this.tips_ani_bg_node.children[0];
              playNode_2 = this.tips_ani_tip_node.children[0];
            } else if (status == XiPaiStatus.Agree) {
              playNode_1 = this.tips_ani_bg_node.children[0];
              playNode_2 = this.tips_ani_tip_node.children[2];
            } else if (status == XiPaiStatus.Refuse) {
              playNode_1 = this.tips_ani_bg_node.children[0];
              playNode_2 = this.tips_ani_tip_node.children[1];
            } else if (status == XiPaiStatus.Luncher) {
              playNode_1 = this.tips_ani_bg_node.children[1];
              playNode_2 = this.tips_ani_tip_node.children[4];
            }
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_FAPAI) {
            playNode_1 = this.tips_ani_bg_node.children[1];
            playNode_2 = this.tips_ani_tip_node.children[5];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_FANCAISHEN) {
            playNode_1 = this.tips_ani_bg_node.children[0];
            playNode_2 = this.tips_ani_tip_node.children[0];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI_ING) {
            playNode_1 = this.tips_ani_bg_node.children[1];
            playNode_2 = this.tips_ani_tip_node.children[6];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI) {
            playNode_1 = this.tips_ani_bg_node.children[0];
            playNode_2 = this.tips_ani_tip_node.children[3];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_HUPAI_ZIMO) {
            playNode_1 = this.tips_ani_bg_node.children[0];
            playNode_2 = this.tips_ani_tip_node.children[8];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_REFUSE) {
            playNode_1 = this.tips_ani_bg_node.children[0];
            playNode_2 = this.tips_ani_tip_node.children[1];
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_OP_STATUS_CHANGE_SEAT) {
            playNode_1 = this.tips_ani_bg_node.children[0];
            status == XiPaiStatus.Wait ? playNode_2 = this.tips_ani_tip_node.children[0] : status == XiPaiStatus.Agree ? playNode_2 = this.tips_ani_tip_node.children[2] : status == XiPaiStatus.Refuse ? playNode_2 = this.tips_ani_tip_node.children[1] : status == XiPaiStatus.Luncher && (playNode_2 = this.tips_ani_tip_node.children[7]);
          }
          playNode_1.active = true;
          playNode_1.getComponent(cc.Animation).play();
          playNode_2.active = true;
          playNode_2.getComponent(cc.Animation).play();
        }
        set_user_leave_status(param_status) {
          this.ptr_img_leave_status.node.active = true;
          this.ptr_label_leave_status.node.active = true;
          if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_LEAVE_STATUS_NULL) {
            this.ptr_img_leave_status.node.active = false;
            this.ptr_label_leave_status.string = "";
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_LEAVE_STATUS_ZANLI) {
            this.ptr_img_leave_status.node.color = new cc.Color().fromHEX("#343434B2");
            this.ptr_label_leave_status.string = "\u6682\u79bb";
          } else if (param_status == YiFuGameDefine_1.YiFuGameDefine.USER_LEAVE_STATUS_LIKAI) {
            this.ptr_img_leave_status.node.color = new cc.Color().fromHEX("#8247474C");
            this.ptr_label_leave_status.string = "\u79bb\u5f00";
          } else {
            this.ptr_img_leave_status.node.active = false;
            this.ptr_label_leave_status.string = "";
          }
        }
      };
      __decorate([ property(cc.Button) ], YiFuUserHead.prototype, "ptr_head_btn", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserHead.prototype, "ptr_img_face", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserHead.prototype, "ptr_img_circle", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserHead.prototype, "ptr_img_banker", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuUserHead.prototype, "girlSprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuUserHead.prototype, "boySprite", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuUserHead.prototype, "unknownSprite", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserHead.prototype, "ptr_label_score_bg", void 0);
      __decorate([ property(cc.Label) ], YiFuUserHead.prototype, "ptr_label_score", void 0);
      __decorate([ property(cc.Label) ], YiFuUserHead.prototype, "ptr_label_nickname", void 0);
      __decorate([ property(cc.Node) ], YiFuUserHead.prototype, "tips_ani_node", void 0);
      __decorate([ property(cc.Node) ], YiFuUserHead.prototype, "tips_ani_bg_node", void 0);
      __decorate([ property(cc.Node) ], YiFuUserHead.prototype, "tips_ani_tip_node", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuUserHead.prototype, "ptr_user_change_seat_face", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserHead.prototype, "ptr_img_leave_status", void 0);
      __decorate([ property(cc.Label) ], YiFuUserHead.prototype, "ptr_label_leave_status", void 0);
      __decorate([ property(cc.Prefab) ], YiFuUserHead.prototype, "userHeadScoreHintPrefab", void 0);
      __decorate([ property(cc.Node) ], YiFuUserHead.prototype, "ptr_microphone_node", void 0);
      __decorate([ property(cc.Node) ], YiFuUserHead.prototype, "ptr_earphone_node", void 0);
      __decorate([ property ], YiFuUserHead.prototype, "ptr_view_id", void 0);
      YiFuUserHead = __decorate([ ccclass ], YiFuUserHead);
      return YiFuUserHead;
    })();
    exports.default = YiFuUserHead;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameLogic": "YiFuGameLogic",
    "./YiFuGlobalUI": "YiFuGlobalUI",
    "./YiFuTutorial": "YiFuTutorial",
    "./YiFuUserHeadScoreHint": "YiFuUserHeadScoreHint"
  } ],
  YiFuUserInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "155f3BtTClARrvyRK6IaT9q", "YiFuUserInfo");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const PopWindow_1 = require("../../Component/PopWindow");
    const UserHead_1 = require("../../Component/UserHead");
    const utils_1 = require("../../Framework/common/utils");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const global_data_1 = require("../../Framework/lobby/global_data");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const AppGlobal_1 = require("../../AppGlobal");
    const ItemDetail_1 = require("../../Component/ItemDetail");
    const YiFuGiftButton_1 = require("./YiFuGiftButton");
    const YiFuGlobalUI_1 = require("./YiFuGlobalUI");
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuGameLogic_1 = require("./YiFuGameLogic");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuUserInfo = (() => {
      let YiFuUserInfo = class YiFuUserInfo extends PopWindow_1.default {
        constructor() {
          super(...arguments);
          this.rootNode = null;
          this.btnClose = null;
          this.btnSendScore = null;
          this.btnScoreRecord = null;
          this.btnChangeSeat = null;
          this.userHead = null;
          this.labelNickname = null;
          this.labelScore = null;
          this.iconGender = null;
          this.giftItemRoot = null;
          this.giftItemPrefab = null;
          this.scrollView = null;
          this.hasItemNode = null;
          this.noItemNode = null;
          this.scoreContent = null;
          this.maskNode = null;
          this.view_id = -1;
          this.m_ptr_callback_object = null;
          this.m_ptr_callback_fun = null;
          this.m_int_user_id = 0;
          this.m_is_self = false;
          this.m_param = null;
          this.m_prices = [ "1000", "2000", "5000", "1000", "2000" ];
        }
        onLoad() {
          this.giftItemRoot.removeAllChildren();
          utils_1.utils.bind_button_event(this.btnClose, this.node, "YiFuUserInfo", "onBtnCloseClicked");
          utils_1.utils.bind_button_event(this.btnSendScore, this.node, "YiFuUserInfo", "onBtnSendScoreClicked");
          utils_1.utils.bind_button_event(this.btnScoreRecord, this.node, "YiFuUserInfo", "onBtnScoreRecordClicked");
          utils_1.utils.bind_button_event(this.btnChangeSeat, this.node, "YiFuUserInfo", "onBtnChangeSeatClicked");
          this.safe_on("onYiFuGiftButtonClick", this.onGiftButtonClick, this);
          this.maskNode.on(cc.Node.EventType.TOUCH_END, this.onMaskNodeTouchEnd, this);
          let str_rule = "gift=&quot;1000,2000,5000,1000,2000&quot;;";
          let rule = utils_1.utils.parse_lua_text(str_rule);
          let gift_str = rule.gift ? rule.gift : "1000,2000,5000,1000,2000";
          this.m_prices = gift_str.split(",");
        }
        onDestroy() {
          this.maskNode.off(cc.Node.EventType.TOUCH_END, this.onMaskNodeTouchEnd, this);
        }
        start() {}
        update() {}
        onMaskNodeTouchEnd() {
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
        }
        onBtnCloseClicked() {
          sound_manager_1.sound_manager.play_click();
          YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
          this.hide();
          this.m_ptr_callback_fun && this.m_ptr_callback_object && this.m_ptr_callback_fun.call(this.m_ptr_callback_object, this.m_param);
        }
        onBtnSendScoreClicked() {
          YiFuGlobalUI_1.default.getInstance().showKeyBoard(this.btnSendScore.node, this.m_int_user_id);
          sound_manager_1.sound_manager.play_click();
        }
        onBtnScoreRecordClicked() {
          sound_manager_1.sound_manager.play_click();
          let chair = bind_function_1.bf.get_user_data_by_user_id(this.m_int_user_id).wChairID;
          YiFuGlobalUI_1.default.getInstance().showScoreRecord(chair);
        }
        onBtnChangeSeatClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!YiFuGameData_1.get_share_game_data().CanChangeSeat) {
            console.log("get_share_game_data().CanChangeSeat : ", YiFuGameData_1.get_share_game_data().CanChangeSeat);
            bind_function_1.bf.show_hinting("\u5f53\u524d\u4e0d\u80fd\u6362\u684c...", "");
            return;
          }
          if (YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_PALY || YiFuGameData_1.get_share_game_data().UserStatus == YiFuGameDefine_1.YiFuGameDefine.USER_STATUS_GAME_END) {
            bind_function_1.bf.show_hinting("\u53d1\u724c\u524d\u624d\u53ef\u4ee5\u6362\u5ea7\u54e6...", "");
            return;
          }
          let the_data = {};
          the_data["seat"] = YiFuGameLogic_1.get_game_logic().switch_to_seat_id(this.view_id);
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_ASK_CHANGE_SEAT, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
          this.node.active = false;
        }
        onGiftButtonClick(event) {
          if (this.m_is_self) {
            let prop_id = event.getUserData();
            let d = global_data_1.global_data.get_prop_data_by_id(prop_id);
            d._bool_can_use ? AppGlobal_1.AppGlobal.getInstance().showItemDetail(prop_id, ItemDetail_1.ItemDetailType.UserInfo) : YiFuGlobalUI_1.default.getInstance().showMessageBox({
              content: d._str_caption,
              button_count: 1
            });
          } else {
            this.hide();
            let e = new cc.Event.EventCustom("onSendGift", true);
            e.setUserData({
              index: event.getUserData(),
              userid: this.m_int_user_id,
              count: 1
            });
            this.node.dispatchEvent(e);
            YiFuGlobalUI_1.default.getInstance().hideKeyBoard(true);
          }
        }
        onSendScoreButtonClick(event) {}
        getNextDisabledButton() {
          for (let i = 0; i < this.giftItemRoot.childrenCount; ++i) {
            let item = this.giftItemRoot.children[i];
            if (false == item.active) return item;
          }
          return null;
        }
        addGiftItem(index, prop_id, is_self) {
          if (1025 != prop_id || global_data_1.global_data.have_switch_private_card()) {
            let count = global_data_1.global_data.get_prop_count_by_id(prop_id);
            if (is_self) {
              if (count > 0) {
                this.noItemNode.active = false;
                this.hasItemNode.active = true;
                let item = this.getNextDisabledButton();
                let giftButton = null != item ? item.getComponent(YiFuGiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, YiFuGiftButton_1.default);
                giftButton.node.active = true;
                let name = global_data_1.global_data.get_prop_data_by_id(prop_id)._str_name;
                giftButton.setData(prop_id, true, name, true, count, true);
              }
            } else {
              this.noItemNode.active = false;
              this.hasItemNode.active = true;
              let item = this.getNextDisabledButton();
              let giftButton = null != item ? item.getComponent(YiFuGiftButton_1.default) : utils_1.utils.add_instance_to_root(this.giftItemPrefab, this.giftItemRoot, YiFuGiftButton_1.default);
              giftButton.node.active = true;
              giftButton.setData(prop_id, true, this.m_prices[index], true, count, true);
            }
          } else ;
        }
        onEnable() {
          utils_1.utils.on("UserUpdate", this, this.refresh);
        }
        onDisable() {
          utils_1.utils.off("UserUpdate", this, this.refresh);
        }
        setData(bool_report, int_user_id, callback_obj, callback_close, any_param, view_id) {
          let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(int_user_id);
          if (null == ptr_user_data) {
            console.error("get GameUserInfo data fail.");
            YiFuGlobalUI_1.default.getInstance().hideGameUserInfo();
            return;
          }
          this.view_id = view_id;
          this.userHead.setData(100, 100, int_user_id, ptr_user_data.wFaceID, ptr_user_data.cbGender);
          this.userHead.setInteractable(false);
          this.m_ptr_callback_object = callback_obj;
          this.m_ptr_callback_fun = callback_close;
          this.m_param = any_param;
          this.m_int_user_id = int_user_id;
          this.m_is_self = int_user_id == global_data_1.global_data.get_the_user_data()._int_user_id;
          this.refresh();
        }
        refresh() {
          try {
            this.noItemNode.active = true;
            this.hasItemNode.active = false;
            let ptr_user_data = bind_function_1.bf.get_user_data_by_user_id(this.m_int_user_id);
            if (null != ptr_user_data) {
              let str_banker = "";
              YiFuGameData_1.get_share_game_data().BankChairID == bind_function_1.bf.get_user_data_by_user_id(this.m_int_user_id).wChairID && (str_banker = YiFuGameData_1.get_share_game_data().BankerLian > 1 ? "  (" + String(YiFuGameData_1.get_share_game_data().BankerLian) + "\u8fde\u5e84)" : "  (\u5e84)");
              this.labelNickname.string = ptr_user_data.szName + str_banker;
              1 == ptr_user_data.cbGender ? this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_male") : this.iconGender.spriteFrame = global_data_1.global_data.spriteFrameMap.get("Common-icon_female");
              this.labelScore.string = ptr_user_data.lScore + "";
              this.giftItemRoot.children.forEach(item => {
                item.active = false;
              });
              if (this.m_is_self) ; else {
                for (let i = 0; i < 5; ++i) this.addGiftItem(i, utils_1.utils.gift_id_to_resource_id(i), false);
                this.scrollView.scrollToLeft(0);
                this.scrollView.horizontal = false;
              }
            } else console.error("get_user_data_by_user_id fail. id: ", this.m_int_user_id);
          } catch (e) {
            console.log("Refresh Fail.", e);
          }
        }
      };
      __decorate([ property(cc.Node) ], YiFuUserInfo.prototype, "rootNode", void 0);
      __decorate([ property(cc.Button) ], YiFuUserInfo.prototype, "btnClose", void 0);
      __decorate([ property(cc.Button) ], YiFuUserInfo.prototype, "btnSendScore", void 0);
      __decorate([ property(cc.Button) ], YiFuUserInfo.prototype, "btnScoreRecord", void 0);
      __decorate([ property(cc.Button) ], YiFuUserInfo.prototype, "btnChangeSeat", void 0);
      __decorate([ property(UserHead_1.UserHead) ], YiFuUserInfo.prototype, "userHead", void 0);
      __decorate([ property(cc.Label) ], YiFuUserInfo.prototype, "labelNickname", void 0);
      __decorate([ property(cc.Label) ], YiFuUserInfo.prototype, "labelScore", void 0);
      __decorate([ property(cc.Sprite) ], YiFuUserInfo.prototype, "iconGender", void 0);
      __decorate([ property(cc.Node) ], YiFuUserInfo.prototype, "giftItemRoot", void 0);
      __decorate([ property(cc.Prefab) ], YiFuUserInfo.prototype, "giftItemPrefab", void 0);
      __decorate([ property(cc.ScrollView) ], YiFuUserInfo.prototype, "scrollView", void 0);
      __decorate([ property(cc.Node) ], YiFuUserInfo.prototype, "hasItemNode", void 0);
      __decorate([ property(cc.Node) ], YiFuUserInfo.prototype, "noItemNode", void 0);
      __decorate([ property(cc.EditBox) ], YiFuUserInfo.prototype, "scoreContent", void 0);
      __decorate([ property(cc.Node) ], YiFuUserInfo.prototype, "maskNode", void 0);
      YiFuUserInfo = __decorate([ ccclass ], YiFuUserInfo);
      return YiFuUserInfo;
    })();
    exports.default = YiFuUserInfo;
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Component/ItemDetail": "ItemDetail",
    "../../Component/PopWindow": "PopWindow",
    "../../Component/UserHead": "UserHead",
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/global_data": "global_data",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine",
    "./YiFuGameLogic": "YiFuGameLogic",
    "./YiFuGiftButton": "YiFuGiftButton",
    "./YiFuGlobalUI": "YiFuGlobalUI"
  } ],
  YiFuZhuaMa: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5f412IE5/1LTbzPdF9WANy5", "YiFuZhuaMa");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const utils_1 = require("../../Framework/common/utils");
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const sound_manager_1 = require("../../Framework/lobby/sound_manager");
    const YiFuGameData_1 = require("./YiFuGameData");
    const YiFuGameDefine_1 = require("./YiFuGameDefine");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuZhuaMa = (() => {
      let YiFuZhuaMa = class YiFuZhuaMa extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_close_btn = null;
          this.ptr_ok_btn = null;
          this.ptr_add_btn = null;
          this.ptr_reduce_btn = null;
          this.ptr_reduce_disenabel_node = null;
          this.ptr_add_disenabel_node = null;
          this.ptr_count_label = null;
          this.m_zhuama_count = 0;
          this.m_all_hand_count = 0;
        }
        onLoad() {
          utils_1.utils.bind_button_event(this.ptr_close_btn, this.node, "YiFuZhuaMa", "onCloseButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_ok_btn, this.node, "YiFuZhuaMa", "onOkButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_add_btn, this.node, "YiFuZhuaMa", "onAddButtonClicked");
          utils_1.utils.bind_button_event(this.ptr_reduce_btn, this.node, "YiFuZhuaMa", "onReduceButtonClicked");
        }
        start() {}
        clearData() {
          this.hide();
        }
        refreshBtn() {
          let add_1 = false;
          let add_2 = false;
          let reduce_1 = false;
          let reduce_2 = false;
          if (this.m_zhuama_count < this.m_all_hand_count) {
            add_1 = true;
            add_2 = !add_1;
          } else {
            add_2 = true;
            add_1 = !add_1;
          }
          if (0 == this.m_zhuama_count) {
            reduce_1 = false;
            reduce_2 = !reduce_1;
          } else if (this.m_zhuama_count <= this.m_all_hand_count) {
            reduce_1 = true;
            reduce_2 = !reduce_1;
          }
          this.ptr_add_btn.node.active = add_1;
          this.ptr_add_disenabel_node.active = add_2;
          this.ptr_reduce_btn.node.active = reduce_1;
          this.ptr_reduce_disenabel_node.active = reduce_2;
          this.ptr_count_label.string = this.m_zhuama_count.toString();
        }
        initBtn() {
          this.ptr_add_btn.node.active = true;
          this.ptr_add_disenabel_node.active = false;
          this.ptr_reduce_btn.node.active = false;
          this.ptr_reduce_disenabel_node.active = true;
        }
        setLastZhuamaCount(count) {
          this.m_zhuama_count = count;
        }
        show(last_count = 0) {
          this.clearData();
          this.node.active = true;
          this.m_zhuama_count = last_count;
          this.m_all_hand_count = YiFuGameData_1.get_share_game_data().CardCountLeft;
          this.m_all_hand_count > 16 && (this.m_all_hand_count = 16);
          this.m_zhuama_count > this.m_all_hand_count && (this.m_zhuama_count = this.m_all_hand_count);
          this.initBtn();
          this.refreshBtn();
        }
        onCloseButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            console.log("\u65e0\u6293\u9a6c\u914d\u7f6e");
            return;
          }
          this.hide();
          let the_data = {};
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_ZHUAMA_END, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        onOkButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          if (!YiFuGameData_1.get_share_game_data().HaveZhuaMa) {
            console.log("\u65e0\u6293\u9a6c\u914d\u7f6e");
            return;
          }
          let the_data = {};
          the_data["chair_id"] = bind_function_1.bf.get_self_user_data().wChairID;
          the_data["count"] = this.m_zhuama_count;
          bind_function_1.bf.send_game_data(YiFuGameDefine_1.YiFuGameDefine.SUB_C_ZHUAMA_COUNT, bind_function_1.bf.utf8_2_gbk(bind_function_1.bf.to_json(the_data)));
        }
        onAddButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          if (this.m_zhuama_count + 1 > this.m_all_hand_count) return;
          this.m_zhuama_count + 1 <= this.m_all_hand_count && this.m_zhuama_count++;
          this.refreshBtn();
        }
        onReduceButtonClicked() {
          sound_manager_1.sound_manager.play_click();
          if (this.m_zhuama_count - 1 < 0) return;
          this.m_zhuama_count - 1 >= 0 && this.m_zhuama_count--;
          this.refreshBtn();
        }
        hide() {
          this.node.active = false;
        }
      };
      __decorate([ property(cc.Button) ], YiFuZhuaMa.prototype, "ptr_close_btn", void 0);
      __decorate([ property(cc.Button) ], YiFuZhuaMa.prototype, "ptr_ok_btn", void 0);
      __decorate([ property(cc.Button) ], YiFuZhuaMa.prototype, "ptr_add_btn", void 0);
      __decorate([ property(cc.Button) ], YiFuZhuaMa.prototype, "ptr_reduce_btn", void 0);
      __decorate([ property(cc.Node) ], YiFuZhuaMa.prototype, "ptr_reduce_disenabel_node", void 0);
      __decorate([ property(cc.Node) ], YiFuZhuaMa.prototype, "ptr_add_disenabel_node", void 0);
      __decorate([ property(cc.Label) ], YiFuZhuaMa.prototype, "ptr_count_label", void 0);
      YiFuZhuaMa = __decorate([ ccclass ], YiFuZhuaMa);
      return YiFuZhuaMa;
    })();
    exports.default = YiFuZhuaMa;
    cc._RF.pop();
  }, {
    "../../Framework/common/utils": "utils",
    "../../Framework/lobby/bind_function": "bind_function",
    "../../Framework/lobby/sound_manager": "sound_manager",
    "./YiFuGameData": "YiFuGameData",
    "./YiFuGameDefine": "YiFuGameDefine"
  } ],
  YiFuZhuamaWait: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d4484ZAuFBPQZ7eFVRLVZDG", "YiFuZhuamaWait");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const bind_function_1 = require("../../Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let YiFuZhuamaWait = (() => {
      let YiFuZhuamaWait = class YiFuZhuamaWait extends cc.Component {
        constructor() {
          super(...arguments);
          this.ptr_img_face = null;
          this.ptr_img_SpriteFrames = [];
        }
        setData(chair_id) {
          this.show();
          let user_data = bind_function_1.bf.get_user_data_by_chair_id(chair_id);
          let sexId = user_data.cbGender;
          let faceId = user_data.wFaceID;
          let userId = user_data.dwUserID;
          this.ptr_img_face.spriteFrame = 0 == sexId ? this.ptr_img_SpriteFrames[0] : 1 == sexId ? this.ptr_img_SpriteFrames[1] : this.ptr_img_SpriteFrames[2];
          0 != faceId && bind_function_1.bf.fetch_user_head_image(userId, faceId, this.ptr_img_face);
        }
        hide() {
          this.node.active = false;
        }
        show() {
          this.node.active = true;
        }
      };
      __decorate([ property(cc.Sprite) ], YiFuZhuamaWait.prototype, "ptr_img_face", void 0);
      __decorate([ property(cc.SpriteFrame) ], YiFuZhuamaWait.prototype, "ptr_img_SpriteFrames", void 0);
      YiFuZhuamaWait = __decorate([ ccclass ], YiFuZhuamaWait);
      return YiFuZhuamaWait;
    })();
    exports.default = YiFuZhuamaWait;
    cc._RF.pop();
  }, {
    "../../Framework/lobby/bind_function": "bind_function"
  } ],
  _RL_LeftTop: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0814esw9tRBx6Izuoxs9SS9", "_RL_LeftTop");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let _RL_LeftTop = (() => {
      let _RL_LeftTop = class _RL_LeftTop extends cc.Component {
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "_RL_LeftTop", "onClicked");
          let w = cc.Canvas.instance.node.width;
          let h = cc.Canvas.instance.node.height;
          this.node.setPosition(-w / 2 + this.node.width / 2, h / 2 - this.node.height / 2);
        }
        onClicked(event) {
          AppGlobal_1.AppGlobal.getInstance()._RL_LeftTopClicked();
        }
      };
      _RL_LeftTop = __decorate([ ccclass ], _RL_LeftTop);
      return _RL_LeftTop;
    })();
    exports.default = _RL_LeftTop;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils"
  } ],
  _RL_Left: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c72e0LuFJtE5bqFKZzN3saW", "_RL_Left");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let _RL_Left = (() => {
      let _RL_Left = class _RL_Left extends cc.Component {
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "_RL_Left", "onClicked");
          let w = cc.Canvas.instance.node.width;
          this.node.setPosition(-w / 2 + this.node.width / 2, 0);
        }
        onClicked(event) {
          AppGlobal_1.AppGlobal.getInstance()._RL_LeftClicked();
        }
      };
      _RL_Left = __decorate([ ccclass ], _RL_Left);
      return _RL_Left;
    })();
    exports.default = _RL_Left;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils"
  } ],
  _RL_Middle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1bef3sDbwxKRI+zlQ8QVrQl", "_RL_Middle");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const AppGlobal_1 = require("../AppGlobal");
    const utils_1 = require("../Framework/common/utils");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let _RL_Middle = (() => {
      let _RL_Middle = class _RL_Middle extends cc.Component {
        onLoad() {
          utils_1.utils.bind_button_event(this.getComponent(cc.Button), this.node, "_RL_Middle", "onClicked");
        }
        onClicked(event) {
          AppGlobal_1.AppGlobal.getInstance()._RL_MiddleClicked();
        }
      };
      _RL_Middle = __decorate([ ccclass ], _RL_Middle);
      return _RL_Middle;
    })();
    exports.default = _RL_Middle;
    cc._RF.pop();
  }, {
    "../AppGlobal": "AppGlobal",
    "../Framework/common/utils": "utils"
  } ],
  _TestComp: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e6e22ozsNtNA5AWa4NnBLZt", "_TestComp");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const UserHead_1 = require("./UserHead");
    const global_data_1 = require("../Framework/lobby/global_data");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let _TestComp = (() => {
      var _TestComp_1;
      let _TestComp = _TestComp_1 = class _TestComp extends cc.Component {
        constructor() {
          super(...arguments);
          this.user0 = null;
          this.user1 = null;
          this.user2 = null;
        }
        static getInstance() {
          return _TestComp_1.inst;
        }
        onLoad() {
          _TestComp_1.inst = this;
          this.safe_on("onHeadClicked", this.onHeadClicked, this);
        }
        start() {
          this.user0.setData(100, 100, global_data_1.global_data.get_the_user_data()._int_user_id, 0, 1);
          this.user1.setData(100, 100, 456, 0, 0);
          this.user2.setData(100, 100, 789, 0, 1);
        }
        onHeadClicked(event) {
          let d = event.getUserData();
          bind_function_1.bf.show_game_user_info(false, d.userId, this.node, null, null);
        }
      };
      _TestComp.inst = null;
      __decorate([ property(UserHead_1.UserHead) ], _TestComp.prototype, "user0", void 0);
      __decorate([ property(UserHead_1.UserHead) ], _TestComp.prototype, "user1", void 0);
      __decorate([ property(UserHead_1.UserHead) ], _TestComp.prototype, "user2", void 0);
      _TestComp = _TestComp_1 = __decorate([ ccclass ], _TestComp);
      return _TestComp;
    })();
    exports.default = _TestComp;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "../Framework/lobby/global_data": "global_data",
    "./UserHead": "UserHead"
  } ],
  "big5-added": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07af25Im41BCpSiS+Y6cfQr", "big5-added");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.big5_added = void 0;
    exports.big5_added = [ [ "8740", "\u43f0\u4c32\u4603\u45a6\u4578\ud85c\ude67\u4d77\u45b3\ud85f\udcb1\u4ce2\ud85f\udcc5\u3b95\u4736\u4744\u4c47\u4c40\ud850\udebf\ud84d\ude17\ud85c\udf52\ud85b\ude8b\ud85c\udcd2\u4c57\ud868\udf51\u474f\u45da\u4c85\ud85f\udc6c\u4d07\u4aa4\u46a1\ud85a\udf23\u7225\ud856\ude54\ud846\ude63\ud84f\ude06\ud84f\udf61\u664d\u56fb" ], [ "8767", "\u7d95\u591d\ud862\udfb9\u3df4\u9734\ud85e\udfef\u5bdb\ud847\udd5e\u5aa4\u3625\ud867\udeb0\u5ad1\u5bb7\u5cfc\u676e\u8593\ud866\udd45\u7461\u749d\u3875\ud847\udd53\ud84d\ude9e\ud858\udc21\u3eec" ], [ "87a1", "\ud856\udcde\u3af5\u7afc\u9f97\ud850\udd61\ud862\udd0d\ud84c\uddea\ud842\ude8a\ud84c\ude5e\u430a\u8484\u9f96\u942f\u4930\u8613\u5896\u974a\u9218\u79d0\u7a32\u6660\u6a29\u889d\u744c\u7bc5\u6782\u7a2c\u524f\u9046\u34e6\u73c4\ud857\uddb9\u74c6\u9fc7\u57b3\u492f\u544c\u4131\ud84d\ude8e\u5818\u7a72\ud85e\udf65\u8b8f\u46ae\ud85b\ude88\u4181\ud857\udd99\u7bae\ud849\udcbc\u9fc8\ud849\udcc1\ud849\udcc9\ud849\udccc\u9fc9\u8504\ud84d\uddbb\u40b4\u9fca\u44e1\ud86b\uddff\u62c1\u706e\u9fcb" ], [ "8840", "\u31c0", 4, "\ud840\udd0c\u31c5\ud840\udcd1\ud840\udccd\u31c6\u31c7\ud840\udccb\ud847\udfe8\u31c8\ud840\udcca\u31c9\u31ca\u31cb\u31cc\ud840\udd0e\u31cd\u31ce\u0100\xc1\u01cd\xc0\u0112\xc9\u011a\xc8\u014c\xd3\u01d1\xd2\u0fff\xca\u0304\u1ebe\u0fff\xca\u030c\u1ec0\xca\u0101\xe1\u01ce\xe0\u0251\u0113\xe9\u011b\xe8\u012b\xed\u01d0\xec\u014d\xf3\u01d2\xf2\u016b\xfa\u01d4\xf9\u01d6\u01d8\u01da" ], [ "88a1", "\u01dc\xfc\u0fff\xea\u0304\u1ebf\u0fff\xea\u030c\u1ec1\xea\u0261\u23da\u23db" ], [ "8940", "\ud868\udfa9\ud844\udd45" ], [ "8943", "\u650a" ], [ "8946", "\u4e3d\u6edd\u9d4e\u91df" ], [ "894c", "\ud85d\udf35\u6491\u4f1a\u4f28\u4fa8\u5156\u5174\u519c\u51e4\u52a1\u52a8\u533b\u534e\u53d1\u53d8\u56e2\u58f0\u5904\u5907\u5932\u5934\u5b66\u5b9e\u5b9f\u5c9a\u5e86\u603b\u6589\u67fe\u6804\u6865\u6d4e\u70bc\u7535\u7ea4\u7eac\u7eba\u7ec7\u7ecf\u7edf\u7f06\u7f37\u827a\u82cf\u836f\u89c6\u8bbe\u8be2\u8f66\u8f67\u8f6e" ], [ "89a1", "\u7411\u7cfc\u7dcd\u6946\u7ac9\u5227" ], [ "89ab", "\u918c\u78b8\u915e\u80bc" ], [ "89b0", "\u8d0b\u80f6\ud842\udde7" ], [ "89b5", "\u809f\u9ec7\u4ccd\u9dc9\u9e0c\u4c3e\ud867\uddf6\ud85c\udc0e\u9e0a\ud868\udd33\u35c1" ], [ "89c1", "\u6e9a\u823e\u7519" ], [ "89c5", "\u4911\u9a6c\u9a8f\u9f99\u7987\ud861\udc6c\ud847\uddca\ud841\uddd0\ud84a\udee6\u4e24\u4e81\u4e80\u4e87\u4ebf\u4eeb\u4f37\u344c\u4fbd\u3e48\u5003\u5088\u347d\u3493\u34a5\u5186\u5905\u51db\u51fc\u5205\u4e89\u5279\u5290\u5327\u35c7\u53a9\u3551\u53b0\u3553\u53c2\u5423\u356d\u3572\u3681\u5493\u54a3\u54b4\u54b9\u54d0\u54ef\u5518\u5523\u5528\u3598\u553f\u35a5\u35bf\u55d7\u35c5" ], [ "8a40", "\ud85f\udd84\u5525" ], [ "8a43", "\ud843\udc42\ud843\udd15\ud854\udd2b\u5590\ud84b\udcc6\u39ec\ud840\udf41\u8e46\ud853\uddb8\ud865\udce5\u4053\ud860\udcbe\u777a\ud84b\udc38\u3a34\u47d5\ud860\udd5d\ud85a\uddf2\ud853\uddea\u64dd\ud843\udd7c\ud843\udfb4\ud843\udcd5\ud844\udcf4\u648d\u8e7e\ud843\ude96\ud843\udc0b\ud843\udf64\ud84b\udca9\ud860\ude56\ud851\udcd3" ], [ "8a64", "\ud843\udd46\ud866\ude4d\ud860\udce9\u47f4\ud853\udea7\ud84b\udcc2\u9ab2\u3a67\ud865\uddf4\u3fed\u3506\ud854\udec7\ud865\udfd4\ud85e\udcc8\ud84b\udd44\u9d6e\u9815" ], [ "8a76", "\u43d9\ud858\udca5\u64b4\u54e3\ud84b\udd4c\ud84a\udfca\ud844\udc77\u39fb\ud844\udc6f" ], [ "8aa1", "\ud859\udeda\ud859\udf16\ud85e\udda0\u64ea\ud854\udc52\ud843\udc43\u8e68\ud848\udda1\ud862\udf4c\ud841\udf31" ], [ "8aac", "\u480b\ud840\udda9\u3ffa\u5873\ud84b\udd8d" ], [ "8ab2", "\ud851\uddc8\ud841\udcfc\ud858\udc97\ud843\udf4c\ud843\udd96\u5579\u40bb\u43ba" ], [ "8abb", "\u4ab4\ud84a\ude66\ud844\udc9d\u81aa\u98f5\ud843\udd9c\u6379\u39fe\ud849\udf75\u8dc0\u56a1\u647c\u3e43" ], [ "8ac9", "\ud869\ude01\ud843\ude09\ud84a\udecf\ud84b\udcc9" ], [ "8ace", "\ud844\udcc8\ud84e\uddc2\u3992\u3a06\ud860\ude9b\u3578\ud857\ude49\ud848\udcc7\u5652\ud843\udf31\ud84b\udcb2\ud865\udf20\u34bc\u6c3d\ud853\ude3b" ], [ "8adf", "\ud85d\udd74\ud84b\ude8b\ud848\ude08\ud869\ude5b\ud863\udccd\ud843\ude7a\ud843\udc34\ud85a\udc1c\u7f93\ud844\udccf\ud84a\udc03\ud84a\udd39\u35fb\ud854\udde3\ud843\ude8c\ud843\udf8d\ud843\udeaa\u3f93\ud843\udf30\ud843\udd47\ud844\udd4f\ud843\ude4c" ], [ "8af6", "\ud843\udeab\ud842\udfa9\ud843\udd48\ud844\udcc0\ud844\udd3d\u3ff9\ud849\ude96\u6432\ud843\udfad" ], [ "8b40", "\ud84c\udff4\ud85d\ude39\ud84a\udfce\ud843\udd7e\ud843\udd7f\ud84b\udc51\ud84b\udc55\u3a18\ud843\ude98\ud844\udcc7\ud843\udf2e\ud869\ude32\ud85a\udf50\ud863\udcd2\ud863\udd99\ud863\udcca\u95aa\u54cc\u82c4\u55b9" ], [ "8b55", "\ud867\udec3\u9c26\u9ab6\ud85d\udf5e\ud84b\uddee\u7140\u816d\u80ec\u5c1c\ud859\udd72\u8134\u3797\u535f\ud860\udcbd\u91b6\ud843\udefa\ud843\ude0f\ud843\ude77\ud843\udefb\u35dd\ud853\uddeb\u3609\ud843\udcd6\u56af\ud849\udfb5\ud844\udcc9\ud843\ude10\ud843\ude78\ud844\udc78\ud844\udd48\ud860\ude07\ud845\udc55\ud843\ude79\ud853\ude50\ud84b\udda4\u5a54\ud844\udc1d\ud844\udc1e\ud844\udcf5\ud844\udcf6\u579c\ud843\ude11" ], [ "8ba1", "\ud85d\ude94\ud860\udecd\ud843\udfb5\ud843\ude7b\ud854\udd7e\u3703\ud843\udfb6\ud844\udd80\ud854\uded8\ud868\udebd\ud852\uddda\ud846\udc3a\ud850\udd77\ud860\ude7c\u5899\u5268\u361a\ud855\udf3d\u7bb2\u5b68\u4800\u4b2c\u9f27\u49e7\u9c1f\u9b8d\ud856\udf74\ud84c\udd3d\u55fb\u35f2\u5689\u4e28\u5902\ud846\udfc1\ud87e\udc78\u9751\ud840\udc86\u4e5b\u4ebb\u353e\u5c23\u5f51\u5fc4\u38fa\u624c\u6535\u6b7a\u6c35\u6c3a\u706c\u722b\u4e2c\u72ad\ud852\udce9\u7f52\u793b\u7cf9\u7f53\ud858\ude6a\u34c1" ], [ "8bde", "\ud858\udf4b\u8002\u8080\ud859\ude12\ud85a\udd51\u535d\u8864\u89c1\ud85e\udcb2\u8ba0\u8d1d\u9485\u9578\u957f\u95e8\ud863\ude0f\u97e6\u9875\u98ce\u98de\u9963\ud866\udc10\u9c7c\u9e1f\u9ec4\u6b6f\uf907\u4e37\ud840\udc87\u961d\u6237\u94a2" ], [ "8c40", "\u503b\u6dfe\ud867\udc73\u9fa6\u3dc9\u888f\ud850\udd4e\u7077\u5cf5\u4b20\ud854\uddcd\u3559\ud857\udd30\u6122\ud862\ude32\u8fa7\u91f6\u7191\u6719\u73ba\ud84c\ude81\ud868\udd07\u3c8b\ud846\udd80\u4b10\u78e4\u7402\u51ae\ud861\udf0f\u4009\u6a63\ud868\udeba\u4223\u860f\ud842\ude6f\u7a2a\ud866\udd47\ud862\udeea\u9755\u704d\u5324\ud848\udc7e\u93f4\u76d9\ud862\udde3\u9fa7\u77dd\u4ea3\u4ff0\u50bc\u4e2f\u4f17\u9fa8\u5434\u7d8b\u5892\u58d0\ud847\uddb6\u5e92\u5e99\u5fc2\ud849\udf12\u658b" ], [ "8ca1", "\ud84c\udff9\u6919\u6a43\ud84f\udc63\u6cff" ], [ "8ca7", "\u7200\ud851\udd05\u738c\u3edb\ud852\ude13\u5b15\u74b9\u8b83\ud857\udca4\ud855\ude95\u7a93\u7bec\u7cc3\u7e6c\u82f8\u8597\u9fa9\u8890\u9faa\u8eb9\u9fab\u8fcf\u855f\u99e0\u9221\u9fac\ud863\uddb9\ud845\udc3f\u4071\u42a2\u5a1a" ], [ "8cc9", "\u9868\u676b\u4276\u573d" ], [ "8cce", "\u85d6\ud852\udd7b\u82bf\ud85c\udd0d\u4c81\ud85b\udd74\u5d7b\ud85a\udf15\ud85b\udfbe\u9fad\u9fae\u5b96\u9faf\u66e7\u7e5b\u6e57\u79ca\u3d88\u44c3\ud84c\ude56\ud849\udf96\u439a\u4536" ], [ "8ce6", "\u5cd5\ud84e\udf1a\u8af9\u5c78\u3d12\ud84d\udd51\u5d78\u9fb2\u7157\u4558\ud850\udcec\ud847\ude23\u4c77\u3978\u344a\ud840\udda4\ud85b\udc41\u8acc\u4fb4\ud840\ude39\u59bf\u816c\u9856\ud866\udcfa\u5f3b" ], [ "8d40", "\ud842\udf9f" ], [ "8d42", "\ud848\uddc1\ud862\udd6d\u4102\u46bb\ud864\udc79\u3f07\u9fb3\ud868\uddb5\u40f8\u37d6\u46f7\ud85b\udc46\u417c\ud861\udeb2\ud85c\udfff\u456d\u38d4\ud855\udc9a\u4561\u451b\u4d89\u4c7b\u4d76\u45ea\u3fc8\ud852\udf0f\u3661\u44de\u44bd\u41ed\u5d3e\u5d48\u5d56\u3dfc\u380f\u5da4\u5db9\u3820\u3838\u5e42\u5ebd\u5f25\u5f83\u3908\u3914\u393f\u394d\u60d7\u613d\u5ce5\u3989\u61b7\u61b9\u61cf\u39b8\u622c\u6290\u62e5\u6318\u39f8\u56b1" ], [ "8da1", "\u3a03\u63e2\u63fb\u6407\u645a\u3a4b\u64c0\u5d15\u5621\u9f9f\u3a97\u6586\u3abd\u65ff\u6653\u3af2\u6692\u3b22\u6716\u3b42\u67a4\u6800\u3b58\u684a\u6884\u3b72\u3b71\u3b7b\u6909\u6943\u725c\u6964\u699f\u6985\u3bbc\u69d6\u3bdd\u6a65\u6a74\u6a71\u6a82\u3bec\u6a99\u3bf2\u6aab\u6ab5\u6ad4\u6af6\u6b81\u6bc1\u6bea\u6c75\u6caa\u3ccb\u6d02\u6d06\u6d26\u6d81\u3cef\u6da4\u6db1\u6e15\u6e18\u6e29\u6e86\ud862\uddc0\u6ebb\u6ee2\u6eda\u9f7f\u6ee8\u6ee9\u6f24\u6f34\u3d46\ud84f\udf41\u6f81\u6fbe\u3d6a\u3d75\u71b7\u5c99\u3d8a\u702c\u3d91\u7050\u7054\u706f\u707f\u7089\ud840\udf25\u43c1\u35f1\ud843\uded8" ], [ "8e40", "\ud84f\uded7\u57be\ud85b\uded3\u713e\ud855\udfe0\u364e\u69a2\ud862\udfe9\u5b74\u7a49\ud856\udce1\ud865\udcd9\u7a65\u7a7d\ud856\uddac\u7abb\u7ab0\u7ac2\u7ac3\u71d1\ud859\udc8d\u41ca\u7ada\u7add\u7aea\u41ef\u54b2\ud857\udc01\u7b0b\u7b55\u7b29\ud854\udf0e\ud857\udcfe\u7ba2\u7b6f\u839c\ud856\udfb4\ud85b\udc7f\u7bd0\u8421\u7b92\u7bb8\ud857\udd20\u3dad\ud857\udc65\u8492\u7bfa\u7c06\u7c35\ud857\udcc1\u7c44\u7c83\ud852\udc82\u7ca6\u667d\ud851\udd78\u7cc9\u7cc7\u7ce6\u7c74\u7cf3\u7cf5\u7cce" ], [ "8ea1", "\u7e67\u451d\ud85b\ude44\u7d5d\ud85b\uded6\u748d\u7d89\u7dab\u7135\u7db3\u7dd2\ud850\udc57\ud858\udc29\u7de4\u3d13\u7df5\ud845\udff9\u7de5\ud860\udf6d\u7e1d\ud858\udd21\ud858\udd5a\u7e6e\u7e92\u432b\u946c\u7e27\u7f40\u7f41\u7f47\u7936\ud858\uded0\u99e1\u7f97\ud858\udf51\u7fa3\ud845\ude61\ud840\udc68\u455c\ud84d\udf66\u4503\ud860\udf3a\u7ffa\ud859\udc89\u8005\u8008\u801d\u8028\u802f\ud868\udc87\ud85b\udcc3\u803b\u803c\u8061\ud849\udf14\u4989\ud859\ude26\ud84f\udde3\ud859\udee8\u6725\u80a7\ud862\ude48\u8107\u811a\u58b0\ud849\udef6\u6c7f\ud859\udc98\ud853\udfb8\u64e7\ud845\udc8a\u8218\ud846\udc5e\u6a53\ud852\ude65\ud852\ude95\u447a\u8229\ud842\udf0d\ud85a\ude52\ud84f\udd7e\u4ff9\ud845\udcfd\u84e2\u8362\ud85a\udf0a\ud852\udda7\ud84d\udd30\ud845\udf73\ud84f\uddf8\u82aa\u691b\ud87e\udd94\u41db" ], [ "8f40", "\u854b\u82d0\u831a\ud843\ude16\ud845\udfb4\u36c1\ud84c\udd7d\ud84d\udd5a\u827b\u82e2\u8318\ud84f\ude8b\ud85b\udda3\ud85a\udf05\ud85a\udf97\ud84d\uddce\u3dbf\u831d\u55ec\u8385\u450b\ud85b\udda5\u83ac\u83c1\u83d3\u347e\ud85b\uded4\u6a57\u855a\u3496\ud85b\ude42\ud84b\udeef\u8458\ud856\udfe4\u8471\u3dd3\u44e4\u6aa7\u844a\ud84f\udcb5\u7958\u84a8\ud85a\udf96\ud85b\ude77\ud85b\ude43\u84de\u840f\u8391\u44a0\u8493\u84e4\ud857\udc91\u4240\ud857\udcc0\u4543\u8534\u5af2\ud85b\ude99\u4527\u8573\u4516\u67bf\u8616" ], [ "8fa1", "\ud861\ude25\ud861\ude3b\u85c1\ud85c\udc88\u8602\ud845\udd82\ud85c\udccd\ud87e\uddb2\u456a\u8628\u3648\ud846\udca2\u53f7\ud85c\udf9a\u867e\u8771\ud868\udcf8\u87ee\ud84b\udc27\u87b1\u87da\u880f\u5661\u866c\u6856\u460f\u8845\u8846\ud85d\udde0\ud84f\uddb9\ud85d\udde4\u885e\u889c\u465b\u88b4\u88b5\u63c1\u88c5\u7777\ud85d\udf0f\u8987\u898a\u89a6\u89a9\u89a7\u89bc\ud862\ude25\u89e7\ud85e\udd24\ud85e\udebd\u8a9c\u7793\u91fe\u8a90\ud85e\ude59\u7ae9\ud85e\udf3a\ud84f\udf8f\u4713\ud85e\udf38\u717c\u8b0c\u8b1f\ud855\udc30\ud855\udd65\u8b3f\u8b4c\u8b4d\u8aa9\ud852\ude7a\u8b90\u8b9b\u8aaf\ud845\udedf\u4615\u884f\u8c9b\ud85f\udd54\ud85f\udd8f\ud87e\uddd4\u3725\ud85f\udd53\u8cd6\ud85f\udd98\ud85f\uddbd\u8d12\u8d03\ud846\udd10\u8cdb\u705c\u8d11\ud853\udcc9\u3ed0\u8d77" ], [ "9040", "\u8da9\ud860\udc02\ud844\udc14\ud852\udd8a\u3b7c\ud860\uddbc\ud85c\udd0c\u7ae7\u8ead\u8eb6\u8ec3\u92d4\u8f19\u8f2d\ud860\udf65\ud861\udc12\u8fa5\u9303\ud868\ude9f\ud842\ude50\u8fb3\u492a\ud862\uddde\ud861\udd3d\ud84f\uddbb\u5ef8\ud84c\ude62\u8ff9\ud868\udc14\ud861\udebc\ud861\udd01\ud848\udf25\u3980\ud85b\uded7\u9037\ud861\udd3c\ud85e\udebe\u9061\ud861\udd6c\ud861\ude0b\u90a8\ud861\udf13\u90c4\ud861\udee6\u90ae\u90fd\u9167\u3af0\u91a9\u91c4\u7cac\ud862\udd33\ud847\ude89\u920e\u6c9f\u9241\u9262\ud855\uddb9\u92b9\ud862\udec6\ud84f\udc9b\ud862\udf0c\ud855\udddb" ], [ "90a1", "\ud843\udd31\u932c\u936b\ud862\udee1\ud862\udfeb\u708f\u5ac3\ud862\udee2\ud862\udee5\u4965\u9244\ud862\udfec\ud863\udc39\ud862\udfff\u9373\u945b\u8ebc\u9585\u95a6\u9426\u95a0\u6ff6\u42b9\ud849\ude7a\ud861\uded8\ud844\ude7c\ud84f\ude2e\u49df\u6c1c\u967b\u9696\u416c\u96a3\ud85b\uded5\u61da\u96b6\u78f5\ud862\udee0\u96bd\u53cc\u49a1\ud85b\udcb8\ud840\ude74\ud859\udc10\ud864\udcaf\ud864\udce5\ud852\uded1\ud846\udd15\ud84c\udf0a\u9731\u8642\u9736\u4a0f\u453d\u4585\ud852\udee9\u7075\u5b41\u971b\u975c\ud864\uddd5\u9757\u5b4a\ud864\uddeb\u975f\u9425\u50d0\ud84c\udcb7\ud84c\udcbc\u9789\u979f\u97b1\u97be\u97c0\u97d2\u97e0\ud855\udc6c\u97ee\u741c\ud865\udc33\u97ff\u97f5\ud865\udc1d\ud85e\udd7a\u4ad1\u9834\u9833\u984b\u9866\u3b0e\ud85c\udd75\u3d51\ud841\ude30\ud850\udd5c" ], [ "9140", "\ud855\udf06\u98ca\u98b7\u98c8\u98c7\u4aff\ud85b\udd27\ud845\uded3\u55b0\u98e1\u98e6\u98ec\u9378\u9939\ud852\ude29\u4b72\ud866\udc57\ud866\udd05\u99f5\u9a0c\u9a3b\u9a10\u9a58\ud855\udf25\u36c4\ud864\udcb1\ud866\udfd5\u9ae0\u9ae2\ud866\udf05\u9af4\u4c0e\u9b14\u9b2d\ud861\ude00\u5034\u9b34\ud85a\udda8\u38c3\ud84c\udc7d\u9b50\u9b40\ud867\udd3e\u5a45\ud846\udc63\u9b8e\ud850\ude4b\u9c02\u9bff\u9c0c\ud867\ude68\u9dd4\ud867\udfb7\ud868\udd92\ud868\uddab\ud868\udce1\ud868\udd23\ud868\udddf\u9d7e\u9d83\ud868\udd34\u9e0e\u6888" ], [ "91a1", "\u9dc4\ud848\udd5b\ud868\udd93\ud868\ude20\ud846\udd3b\ud868\ude33\u9d39\ud868\udcb9\ud868\udeb4\u9e90\u9e95\u9e9e\u9ea2\u4d34\u9eaa\u9eaf\ud850\udf64\u9ec1\u3b60\u39e5\u3d1d\u4f32\u37be\ud863\udc2b\u9f02\u9f08\u4b96\u9424\ud85b\udda2\u9f17\u9f16\u9f39\u569f\u568a\u9f45\u99b8\ud864\udc8b\u97f2\u847f\u9f62\u9f69\u7adc\u9f8e\u7216\u4bbe\ud852\udd75\ud852\uddbb\u7177\ud852\uddf8\ud850\udf48\ud852\ude51\u739e\ud862\udfda\ud846\udcfa\u799f\ud862\udd7e\ud863\ude36\u9369\u93f3\ud862\ude44\u92ec\u9381\u93cb\ud862\udd6c\ud851\udcb9\u7217\u3eeb\u7772\u7a43\u70d0\ud851\udc73\ud850\udff8\u717e\ud845\udfef\u70a3\ud846\udcbe\ud84d\udd99\u3ec7\ud846\udc85\ud855\udc2f\ud845\udff8\u3722\ud845\udefb\ud846\udc39\u36e1\ud845\udf74\ud846\udcd1\ud857\udf4b\u3723\ud845\udec0\u575b\ud852\ude25\ud844\udffe\ud844\udea8" ], [ "9240", "\ud844\udfc6\ud845\udcb6\u8503\ud84d\udea6\u8503\u8455\ud852\udd94\ud85c\udd65\ud84f\ude31\ud855\udd5c\ud84f\udefb\ud85c\udc52\u44f4\ud84d\udeee\ud866\udd9d\ud85b\udf26\u67f9\u3733\u3c15\u3de7\u586c\ud846\udd22\u6810\u4057\ud84d\udf3f\ud850\udce1\ud850\udc8b\ud850\udd0f\ud85b\udc21\u54cb\u569e\ud859\udeb1\u5692\ud843\udfdf\ud842\udfa8\ud843\ude0d\u93c6\ud862\udf13\u939c\u4ef8\u512b\u3819\ud851\udc36\u4ebc\ud841\udc65\ud840\udf7f\u4f4b\u4f8a\ud855\ude51\u5a68\ud840\uddab\ud840\udfcb\u3999\ud840\udf0a\ud841\udc14\u3435\u4f29\ud840\udec0\ud863\udeb3\ud840\ude75\u8ada\ud840\ude0c\u4e98" ], [ "92a1", "\u50cd\u510d\u4fa2\u4f03\ud852\ude0e\ud84f\ude8a\u4f42\u502e\u506c\u5081\u4fcc\u4fe5\u5058\u50fc\u5159\u515b\u515d\u515e\u6e76\ud84d\udd95\ud84f\ude39\ud84f\udebf\u6d72\ud846\udc84\ud84f\ude89\u51a8\u51c3\ud841\udde0\u44dd\ud841\udca3\ud841\udc92\ud841\udc91\u8d7a\ud862\ude9c\ud841\udf0e\u5259\u52a4\ud842\udc73\u52e1\u936e\u467a\u718c\ud850\udf8c\ud843\udc20\ud852\uddac\ud844\udce4\u69d1\ud843\ude1d\u7479\u3ede\u7499\u7414\u7456\u7398\u4b8e\ud852\udebc\ud850\udc8d\u53d0\u3584\u720f\ud850\udcc9\u55b4\ud840\udf45\u54cd\ud842\udfc6\u571d\u925d\u96f4\u9366\u57dd\u578d\u577f\u363e\u58cb\u5a99\ud862\ude46\ud845\udefa\ud845\udf6f\ud845\udf10\u5a2c\u59b8\u928f\u5a7e\u5acf\u5a12\ud856\udd46\ud846\uddf3\ud846\udc61\ud850\ude95\u36f5\u6d05\u7443\u5a21\ud857\ude83" ], [ "9340", "\u5a81\ud862\udfd7\ud841\udc13\u93e0\u748c\ud844\udf03\u7105\u4972\u9408\ud862\uddfb\u93bd\u37a0\u5c1e\u5c9e\u5e5e\u5e48\ud846\udd96\ud846\udd7c\ud84e\udeee\u5ecd\u5b4f\ud846\udd03\ud846\udd04\u3701\ud846\udca0\u36dd\ud845\udefe\u36d3\u812a\ud862\ude47\ud847\uddba\ud84d\udc72\ud862\udda8\u5f0c\u5f0e\ud846\udd27\ud845\udfab\u5a6b\ud845\udf3b\u5b44\u8614\ud85d\uddfd\u8860\u607e\ud84a\udc60\ud849\ude2b\u5fdb\u3eb8\ud849\uddaf\ud849\uddbe\ud864\udc88\ud85b\udf73\u61c0\ud840\udc3e\ud840\udc46\ud849\ude1b\u6199\u6198\u6075\ud84b\udc9b\ud84b\udd07\ud851\uded4\ud864\udd4d" ], [ "93a1", "\u6471\ud851\ude65\ud84a\udf6a\u3a29\ud84a\udf22\ud84d\udc50\ud866\udcea\ud84b\ude78\u6337\ud869\udc5b\u64b6\u6331\u63d1\ud852\udde3\ud84b\udd67\u62a4\ud84b\udca1\u643b\u656b\u6972\u3bf4\ud84c\udc8e\ud84c\udead\ud852\udd89\ud84c\udeab\u550d\ud84c\udee0\ud846\udcd9\ud865\udc3f\u66ce\ud84c\ude89\ud84c\uddb3\u3ae0\u4190\ud855\udd84\ud862\udf22\ud855\udd8f\ud845\udefc\ud855\udd5b\ud855\udc25\u78ee\ud84c\udd03\ud846\udc2a\ud84c\ude34\u3464\ud84c\ude0f\ud84c\udd82\ud850\udec9\u668e\ud85b\udd24\u666b\u4b93\u6630\ud85e\udc70\ud847\uddeb\u6663\ud84c\uded2\ud84c\udee1\u661e\ud856\udc72\u38d1\ud84e\udc3a\ud84d\udfbc\u3b99\ud84d\udfa2\ud84c\udffe\u74d0\u3b96\u678f\ud851\ude2a\u68b6\u681e\u3bc4\u6abe\u3863\ud84d\udfd5\ud851\udc87\u6a33\u6a52\u6ac9\u6b05\ud846\udd12\u6511\u6898\u6a4c\u3bd7\u6a7a\u6b57\ud84f\udfc0\ud84f\udc9a\u93a0\u92f2\ud862\udfea\ud862\udecb" ], [ "9440", "\u9289\ud860\udc1e\ud862\udddc\u9467\u6da5\u6f0b\ud852\uddec\u6d67\ud84f\udf7f\u3d8f\u6e04\ud850\udc3c\u5a3d\u6e0a\u5847\u6d24\u7842\u713b\ud850\udf1a\ud850\ude76\u70f1\u7250\u7287\u7294\ud851\udf8f\ud851\udf25\u5179\ud852\udea4\ud841\uddeb\u747a\ud84f\udef8\ud84d\ude5f\ud852\ude4a\ud852\udd17\ud857\udfe1\u3f06\u3eb1\ud852\udedf\ud863\udc23\ud84f\udf35\u60a7\u3ef3\u74cc\u743c\u9387\u7437\u449f\ud85b\uddea\u4551\u7583\u3f63\ud853\udcd9\ud853\udd06\u3f58\u7555\u7673\ud869\uddc6\u3b19\u7468\ud862\udecc\ud852\uddab\ud852\udd8e\u3afb" ], [ "94a1", "\u3dcd\ud852\ude4e\u3eff\ud852\uddc5\ud852\udcf3\u91fa\u5732\u9342\ud862\udee3\ud846\udc64\u50df\ud854\ude21\ud854\udde7\u7778\ud84c\ude32\u770e\u770f\u777b\ud851\ude97\ud84d\udf81\u3a5e\ud852\udcf0\u7438\u749b\u3ebf\ud852\udeba\ud852\udec7\u40c8\ud852\ude96\ud858\uddae\u9307\ud855\udd81\u781e\u788d\u7888\u78d2\u73d0\u7959\ud85d\udf41\ud855\udee3\u410e\u799b\u8496\u79a5\u6a2d\ud84f\udefa\u7a3a\u79f4\u416e\ud845\udee6\u4132\u9235\u79f1\ud843\udd4c\ud852\udd8c\ud840\ude99\ud84f\uddba\ud845\udf6e\u3597\u556b\u3570\u36aa\ud840\uddd4\ud843\udc0d\u7ae2\u5a59\ud849\udef5\ud856\udeaf\ud856\ude9c\u5a0d\ud840\ude5b\u78f0\u5a2a\ud856\udfc6\u7afe\u41f9\u7c5d\u7c6d\u4211\ud856\udfb3\ud857\udebc\ud857\udea6\u7ccd\ud852\uddf9\ud845\udfb0\u7c8e\u7c7c\u7cae\u6ab2\u7ddc\u7e07\u7dd3\u7f4e\ud858\ude61" ], [ "9540", "\ud858\udd5c\ud85e\udf48\u7d97\ud857\ude82\u426a\ud85a\udf75\ud842\udd16\u67d6\ud840\udc4e\ud84d\uddcf\u57c4\ud859\udc12\ud858\udff8\ud852\udd62\u7fdd\u7b27\ud842\udc2c\ud856\udee9\ud857\udd43\u7b0c\ud857\ude0e\u99e6\u8645\u9a63\u6a1c\ud84d\udc3f\u39e2\ud852\uddf7\ud859\uddad\u9a1f\ud859\udda0\u8480\ud85c\udd27\ud85b\udcd1\u44ea\u8137\u4402\u80c6\u8109\u8142\ud859\udfb4\u98c3\ud85a\ude42\u8262\u8265\ud85a\ude51\u8453\ud85b\udda7\u8610\ud85c\ude1b\u5a86\u417f\ud846\udc40\u5b2b\ud846\udca1\u5ae4\ud846\udcd8\u86a0\ud87e\uddbc\ud84f\udd8f\u882d\ud85d\udc22\u5a02" ], [ "95a1", "\u886e\u4f45\u8887\u88bf\u88e6\u8965\u894d\ud855\ude83\u8954\ud85d\udf85\ud85d\udf84\ud862\udff5\ud862\udfd9\ud862\udf9c\ud862\uddf9\u3ead\u84a3\u46f5\u46cf\u37f2\u8a3d\u8a1c\ud865\udc48\u5f4d\u922b\ud850\ude84\u65d4\u7129\u70c4\ud846\udc45\u9d6d\u8c9f\u8ce9\ud85f\udddc\u599a\u77c3\u59f0\u436e\u36d4\u8e2a\u8ea7\ud853\udc09\u8f30\u8f4a\u42f4\u6c58\u6fbb\ud848\udf21\u489b\u6f79\u6e8b\ud845\udfda\u9be9\u36b5\ud852\udd2f\u90bb\u9097\u5571\u4906\u91bb\u9404\ud862\ude4b\u4062\ud862\udefc\u9427\ud863\udc1d\ud863\udc3b\u84e5\u8a2b\u9599\u95a7\u9597\u9596\ud863\udd34\u7445\u3ec2\ud852\udcff\ud852\ude42\ud850\udfea\u3ee7\ud84c\ude25\u968f\ud863\udee7\ud863\ude66\ud863\ude65\u3ecc\ud852\udded\ud852\ude78\ud84f\udfee\u7412\u746b\u3efc\u9741\ud864\udcb0" ], [ "9640", "\u6847\u4a1d\ud864\udc93\ud855\udfdf\u975d\u9368\ud862\udd89\ud863\udc26\ud862\udf2f\ud858\udfbe\u92ba\u5b11\u8b69\u493c\u73f9\ud850\ude1b\u979b\u9771\u9938\ud843\udf26\u5dc1\ud862\udfc5\ud852\udeb2\u981f\ud865\udcda\u92f6\ud865\uddd7\u91e5\u44c0\ud862\udf50\ud852\ude67\ud862\udf64\u98dc\ud862\ude45\u3f00\u922a\u4925\u8414\u993b\u994d\ud85e\udf06\u3dfd\u999b\u4b6f\u99aa\u9a5c\ud862\udf65\ud856\udcc8\u6a8f\u9a21\u5afe\u9a2f\ud866\udcf1\u4b90\ud866\udd48\u99bc\u4bbd\u4b97\u937d\u5872\ud844\udf02\u5822\ud852\uddb8" ], [ "96a1", "\ud845\udce8\u7844\ud849\udf1f\ud84f\uddb8\u68c5\u3d7d\u9458\u3927\u6150\ud849\udf81\ud84a\udd6b\u6107\u9c4f\u9c53\u9c7b\u9c35\u9c10\u9b7f\u9bcf\ud867\ude2d\u9b9f\ud868\uddf5\ud868\udcfe\u9d21\u4cae\ud850\udd04\u9e18\u4cb0\u9d0c\ud868\uddb4\ud868\udced\ud868\udcf3\ud866\udd2f\u9da5\u84bd\ud85b\ude12\ud85b\udfdf\ud85a\udf82\u85fc\u4533\ud85b\udda4\ud85b\ude84\ud85b\uddf0\u8420\u85ee\ud85b\ude00\ud84d\udfd7\ud858\udc64\u79e2\ud84d\udd9c\ud84d\ude40\u492d\ud852\uddde\u3d62\u93db\u92be\u9348\ud840\udebf\u78b9\u9277\u944d\u4fe4\u3440\u9064\ud855\udd5d\u783d\u7854\u78b6\u784b\ud845\udf57\ud84c\uddc9\ud852\udd41\u369a\u4f72\u6fda\u6fd9\u701e\u701e\u5414\ud850\uddb5\u57bb\u58f3\u578a\u9d16\u57d7\u7134\u34af\ud850\uddac\u71eb\ud85b\udc40\ud853\udf97\u5b28\ud845\udfb5\ud862\ude49" ], [ "9740", "\u610c\u5ace\u5a0b\u42bc\ud851\udc88\u372c\u4b7b\ud862\uddfc\u93bb\u93b8\ud846\udcd6\ud843\udf1d\u8472\ud85b\udcc0\ud845\udc13\ud850\udefa\ud84b\udc26\ud850\udfc1\u5994\ud84f\uddb7\ud859\udf41\u7da8\ud858\udd5b\ud858\udca4\ud852\uddb9\ud852\udd8b\ud862\uddfa\u92e5\u73e2\u3ee9\u74b4\ud862\udf63\ud846\udc9f\u3ee1\ud852\udeb3\u6ad8\u73f3\u73fb\u3ed6\ud852\ude3e\ud852\ude94\ud845\udfd9\ud852\ude66\ud840\udfa7\ud845\udc24\ud852\udde5\u7448\ud852\udd16\u70a5\ud852\udd76\u9284\u73e6\u935f\ud841\udcfe\u9331\ud862\udece\ud862\ude16\u9386\ud862\udfe7\ud855\uddd5\u4935\ud862\ude82\u716b" ], [ "97a1", "\ud852\udd43\ud843\udcff\u56a4\ud841\ude1a\ud842\udfeb\ud843\udcb8\u5502\u79c4\ud845\udffa\u7dfe\ud845\udec2\ud852\ude50\ud846\udc52\u452e\u9401\u370a\ud862\udec0\ud852\uddad\u59b0\ud846\udcbf\ud846\udc83\ud85d\udc84\u5aa1\u36e2\ud84f\udd5b\u36b0\u925f\u5a79\ud862\ude81\ud846\udc62\u9374\u3ccd\ud842\udeb4\u4a96\u398a\u50f4\u3d69\u3d4c\ud844\udf9c\u7175\u42fb\ud860\ude18\u6e0f\ud864\udce4\u44eb\u6d57\ud85f\ude4f\u7067\u6caf\u3cd6\ud84f\udfed\ud84f\ude2d\u6e02\u6f0c\u3d6f\ud840\udff5\u7551\u36bc\u34c8\u4680\u3eda\u4871\u59c4\u926e\u493e\u8f41\ud863\udc1c\ud85a\udfc0\u5812\u57c8\u36d6\ud845\udc52\u70fe\ud850\udf62\ud852\ude71\ud84b\udfe3\ud844\udeb0\ud848\udfbd\u68b9\u6967\ud844\udf98\ud84d\udce5\ud85e\udff4\ud84d\udedf\ud862\ude83\ud84d\udfd6\ud84c\udffa\ud853\udc9f\u6a1a\ud84d\udead\ud85b\udcb7\u843e\u44df\u44ce" ], [ "9840", "\ud85b\udd26\ud85b\udd51\ud85b\udc82\ud85b\udfde\u6f17\ud85c\udd09\u833d\ud845\udf3a\u83ed\ud85b\udc80\ud85c\udc53\ud845\udfdb\u5989\u5a82\ud845\udfb3\u5a61\u5a71\ud846\udd05\ud850\uddfc\u372d\u59ef\ud845\udf3c\u36c7\u718e\u9390\u669a\ud850\udea5\u5a6e\u5a2b\ud850\ude93\u6a2b\ud84f\udef9\ud85d\udf36\ud851\udc5b\ud850\udeca\u711d\ud850\ude59\ud862\udde1\u4fb0\ud85b\udd28\u5cc2\ud851\udcce\ud85f\ude4d\ud850\udfbd\u6a0c\ud850\ude56\ud844\udf04\u70a6\u7133\ud850\udfe9\u3da5\u6cdf\ud87e\udc25\ud852\ude4f\u7e65\u59eb\u5d2f\u3df3\u5f5c\ud852\ude5d\ud845\udfdf\u7da4\u8426" ], [ "98a1", "\u5485\ud84e\udefa\ud84c\udf00\ud840\ude14\u577e\ud842\udcd5\ud841\ude19\u3fe5\ud847\udf9e\ud868\udeb6\u7003\ud864\udd5b\u5d70\u738f\u7cd3\ud862\ude59\ud865\udc20\u4fc8\u7fe7\u72cd\u7310\ud85e\udef4\u7338\u7339\ud855\udef6\u7341\u7348\u3ea9\ud85e\udf18\u906c\u71f5\ud852\udcf2\u73e1\u81f6\u3eca\u770c\u3ed1\u6ca2\u56fd\u7419\u741e\u741f\u3ee2\u3ef0\u3ef4\u3efa\u74d3\u3f0e\u3f53\u7542\u756d\u7572\u758d\u3f7c\u75c8\u75dc\u3fc0\u764d\u3fd7\u7674\u3fdc\u767a\ud853\udf5c\u7188\u5623\u8980\u5869\u401d\u7743\u4039\u6761\u4045\u35db\u7798\u406a\u406f\u5c5e\u77be\u77cb\u58f2\u7818\u70b9\u781c\u40a8\u7839\u7847\u7851\u7866\u8448\ud855\udd35\u7933\u6803\u7932\u4103" ], [ "9940", "\u4109\u7991\u7999\u8fbb\u7a06\u8fbc\u4167\u7a91\u41b2\u7abc\u8279\u41c4\u7acf\u7adb\u41cf\u4e21\u7b62\u7b6c\u7b7b\u7c12\u7c1b\u4260\u427a\u7c7b\u7c9c\u428c\u7cb8\u4294\u7ced\u8f93\u70c0\ud843\udccf\u7dcf\u7dd4\u7dd0\u7dfd\u7fae\u7fb4\u729f\u4397\u8020\u8025\u7b39\u802e\u8031\u8054\u3dcc\u57b4\u70a0\u80b7\u80e9\u43ed\u810c\u732a\u810e\u8112\u7560\u8114\u4401\u3b39\u8156\u8159\u815a" ], [ "99a1", "\u4413\u583a\u817c\u8184\u4425\u8193\u442d\u81a5\u57ef\u81c1\u81e4\u8254\u448f\u82a6\u8276\u82ca\u82d8\u82ff\u44b0\u8357\u9669\u698a\u8405\u70f5\u8464\u60e3\u8488\u4504\u84be\u84e1\u84f8\u8510\u8538\u8552\u453b\u856f\u8570\u85e0\u4577\u8672\u8692\u86b2\u86ef\u9645\u878b\u4606\u4617\u88ae\u88ff\u8924\u8947\u8991\ud85e\udd67\u8a29\u8a38\u8a94\u8ab4\u8c51\u8cd4\u8cf2\u8d1c\u4798\u585f\u8dc3\u47ed\u4eee\u8e3a\u55d8\u5754\u8e71\u55f5\u8eb0\u4837\u8ece\u8ee2\u8ee4\u8eed\u8ef2\u8fb7\u8fc1\u8fca\u8fcc\u9033\u99c4\u48ad\u98e0\u9213\u491e\u9228\u9258\u926b\u92b1\u92ae\u92bf" ], [ "9a40", "\u92e3\u92eb\u92f3\u92f4\u92fd\u9343\u9384\u93ad\u4945\u4951\u9ebf\u9417\u5301\u941d\u942d\u943e\u496a\u9454\u9479\u952d\u95a2\u49a7\u95f4\u9633\u49e5\u67a0\u4a24\u9740\u4a35\u97b2\u97c2\u5654\u4ae4\u60e8\u98b9\u4b19\u98f1\u5844\u990e\u9919\u51b4\u991c\u9937\u9942\u995d\u9962\u4b70\u99c5\u4b9d\u9a3c\u9b0f\u7a83\u9b69\u9b81\u9bdd\u9bf1\u9bf4\u4c6d\u9c20\u376f\ud846\udfc2\u9d49\u9c3a" ], [ "9aa1", "\u9efe\u5650\u9d93\u9dbd\u9dc0\u9dfc\u94f6\u8fb6\u9e7b\u9eac\u9eb1\u9ebd\u9ec6\u94dc\u9ee2\u9ef1\u9ef8\u7ac8\u9f44\ud840\udc94\ud840\udeb7\ud840\udfa0\u691a\u94c3\u59ac\ud841\udcd7\u5840\u94c1\u37b9\ud841\uddd5\ud841\ude15\ud841\ude76\ud845\udeba\u5757\u7173\ud842\udec2\ud842\udecd\ud842\udfbf\u546a\ud87e\udc3b\ud842\udfcb\u549e\ud842\udffb\ud843\udc3b\ud843\udc53\ud843\udc65\ud843\udc7c\u60e7\ud843\udc8d\u567a\ud843\udcb5\ud843\udcdd\ud843\udced\ud843\udd6f\ud843\uddb2\ud843\uddc8\u6955\u9c2f\u87a5\ud843\ude04\ud843\ude0e\ud843\uded7\ud843\udf90\ud843\udf2d\ud843\ude73\u5c20\ud843\udfbc\u5e0b\ud844\udc5c\ud844\udc4f\ud844\udc76\u671e\ud844\udc7b\ud844\udc88\ud844\udc96\u3647\ud844\udcbf\ud844\udcd3\ud844\udd2f\ud844\udd3b\u5364\u84ad\ud844\udee3\ud844\udf75\ud844\udf36\u8b81\ud845\udd77\ud845\ude19\ud845\udfc3\ud845\udfc7\u4e78\u70bb\ud846\udc2d\ud846\udd6a" ], [ "9b40", "\ud846\ude2d\ud846\ude45\ud847\udc2a\ud847\udc70\ud847\udcac\ud847\udec8\u62c3\ud847\uded5\ud847\udf15\u7198\u6855\ud848\udc45\u69e9\u36c8\ud848\ude7c\ud848\udfd7\ud848\udffa\ud849\udf2a\ud84a\udc71\ud84a\udd4f\u82fd\ud84a\udd67\ud84a\udd93\ud84a\uded5\u89a5\ud84a\udee8\u8fa0\ud84a\udf0e\u97b8\ud84a\udf3f\u9847\u9abd\ud84b\udc4c" ], [ "9b62", "\ud84b\udc88\ud84b\udcb7\ud856\udfe8\ud84b\udd08\ud84b\udd12\ud84b\uddb7\ud84b\udd95\ud84b\ude42\ud84b\udf74\ud84b\udfcc\ud84c\udc33\ud84c\udc66\ud84c\udf1f\ud84c\udfde\u5fb1\u6648\u66bf\ud85e\ude79\ud84d\udd67\ud84d\uddf3\u7201\ud852\uddba\u77d7\ud84d\ude1a\ud84d\udf16\u7e87\ud840\udf46\u58b5\u670e" ], [ "9ba1", "\u6918\ud84e\udea7\ud85d\ude57\ud857\udfe2\ud84f\ude11\ud84f\udeb9\ud85d\uddfe\ud848\udc9a\u48d0\u4ab8\ud850\udd19\ud862\ude9a\ud850\udeee\ud850\udf0d\ud850\udc3b\ud850\udf34\ud850\udf96\ud852\ude45\ud841\uddca\u51d2\ud841\ude11\u599f\ud847\udea8\u3bbe\ud84f\udcff\ud851\udc04\ud851\udcd6\u5788\ud851\ude74\u399b\ud851\udf2f\ud861\udde8\ud866\uddc9\u3762\ud848\uddc3\u8b5e\ud862\udf4e\u99d6\ud852\udc12\ud852\udcfb\ud852\ude15\u7209\ud852\udec0\ud843\udc78\u5965\ud853\udea5\ud853\udf86\ud841\udf79\u8eda\ud854\udc2c\u528f\u573f\u7171\ud854\ude99\ud855\udc19\ud84f\udf4a\ud852\udea7\u55bc\ud855\udc46\ud855\udc6e\ud85a\udf52\u91d4\u3473\ud855\udd3f\ud85d\ude32\ud855\udd5e\u4718\ud855\udd62\ud855\udd66\ud855\udfc7\ud852\udd3f\ud856\udc5d\u5066\u34fb\ud84c\udfcc\u60de\ud856\udd03\u477c\ud862\udd48\ud856\udeae\ud856\udf89\ud857\udc06\ud847\udd90\u57a1\u7151\u6fb6\ud858\udd02\ud85f\udc12\u9056\ud858\uddb2\ud853\udf9a\u8b62\ud859\udc02\ud859\udc4a" ], [ "9c40", "\u5d5b\ud85a\udff7\u8f36\ud859\udc84\ud846\udd1c\u8aea\ud852\uddf6\ud859\udc88\ud84f\udfef\ud859\udd12\u4bc0\ud859\uddbf\ud859\udeb5\ud849\udf1b\u9465\ud855\udfe1\u6195\u5a27\ud87e\udccd\u4fbb\u56b9\ud851\udd21\ud859\udefc\u4e6a\ud852\udd34\u9656\u6d8f\ud85b\udcbd\u3618\u8977\ud859\udf99\ud85a\udc6e\ud859\udc11\ud85a\udc5e\u71df\ud85a\udcc7\u7b42\ud864\udcc0\ud842\ude11\ud85a\udd26\u9104\ud85a\udd39\u7a45\u9df0\ud85a\uddfa\u9a26\ud85a\ude2d\u365f\ud859\udc69\ud840\udc21\u7983\ud85a\ude34\ud85a\udf5b\u5d2c\ud84d\udd19\u83cf\ud85a\udf9d\u46d0\ud85b\udca4\u753b\u8865\ud85b\uddae\u58b6" ], [ "9ca1", "\u371c\ud849\udd8d\ud85c\udc4b\ud85c\uddcd\u3c54\ud85c\ude80\ud85c\ude85\u9281\ud848\udd7a\ud85c\ude8b\u9330\ud85c\udee6\ud852\uddd0\u6c39\u949f\ud85d\udc50\ud843\udef8\u8827\u88f5\ud84a\udd26\ud861\udc73\ud845\udfb1\u6eb8\ud852\ude2a\ud846\udc20\u39a4\u36b9\u5c10\u79e3\u453f\u66b6\ud867\udcad\ud866\udca4\u8943\ud85d\udfcc\ud85e\udc58\u56d6\u40df\ud845\ude0a\u39a1\ud84d\udf2f\ud860\udce8\ud844\udfc5\u71ad\u8366\ud85e\udddd\ud864\udda8\u5a67\u4cb7\ud85c\udcaf\ud862\uddab\ud85e\uddfd\ud85e\ude0a\ud85e\udf0b\ud85f\udd66\ud850\udd7a\u7b43\u797e\ud860\udc09\u6fb5\ud868\udedf\u6a03\ud860\udf18\u53a2\ud85b\ude07\u93bf\u6836\u975d\ud860\udd6f\ud860\udc23\ud85a\uddb5\ud844\udfed\ud84c\ude2f\ud860\udc48\u5d85\ud863\udc30\ud860\udc83\u5715\u9823\ud862\udd49\u5dab\ud852\udd88\u65be\u69d5\u53d2\ud852\udea5\ud84f\udf81\u3c11\u6736\ud860\udc90\ud860\udcf4\ud860\udd2e\ud847\udfa1\ud860\udd4f" ], [ "9d40", "\ud860\udd89\ud860\uddaf\ud860\ude1a\ud860\udf06\ud860\udf2f\ud860\udf8a\u35ca\ud861\udc68\ud861\udeaa\u48fa\u63e6\ud862\udd56\u7808\u9255\ud862\uddb8\u43f2\ud862\udde7\u43df\ud862\udde8\ud862\udf46\ud862\udfd4\u59f8\ud863\udc09\u8f0b\ud863\udfc5\ud864\udcec\u7b51\ud864\udd10\ud864\udd3c\u3df7\ud864\udd5e\ud852\udeca\u8fd0\u728f\u568b\ud865\udce7\ud865\udde9\ud865\uddb0\ud865\uddb8\ud865\udf32\ud866\udcd1\ud866\udd49\ud866\udd6a\ud866\uddc3\ud866\ude28\ud866\udf0e\ud867\udd5a\ud867\udd9b\u7e9f\ud867\udef8\ud867\udf23\u4ca4\u9547\ud868\ude93\u71a2\ud868\udeff\u4d91\u9012\ud869\uddcb\u4d9c\ud843\udc9c\u8fbe\u55c1" ], [ "9da1", "\u8fba\ud849\udcb0\u8fb9\ud852\ude93\u4509\u7e7f\u6f56\u6ab1\u4eea\u34e4\ud862\udf2c\ud85e\udc9d\u373a\u8e80\ud845\udff5\ud860\udc24\ud862\udf6c\ud862\udf99\ud85e\ude3e\ud859\udeaf\u3deb\ud85d\ude55\ud84f\udcb7\ud855\ude35\ud856\udd56\u4e9a\ud857\ude81\ud858\ude58\u56bf\ud843\ude6d\u8e0e\u5b6d\ud84f\ude88\ud853\udc9e\u63de\u62d0\ud845\udff6\ud846\udc7b\u6530\u562d\ud857\udc4a\u541a\ud854\udf11\u3dc6\ud867\udd98\u4c7d\u5622\u561e\u7f49\ud857\uded8\u5975\ud84f\udd40\u8770\u4e1c\ud843\udfea\ud843\udd49\ud84d\udeba\u8117\u9d5e\u8d18\u763b\u9c45\u764e\u77b9\u9345\u5432\u8148\u82f7\u5625\u8132\u8418\u80bd\u55ea\u7962\u5643\u5416\ud843\ude9d\u35ce\u5605\u55f1\u66f1\ud860\udee2\u362d\u7534\u55f0\u55ba\u5497\u5572\ud843\udc41\ud843\udc96\u5ed0\ud854\udd48\ud843\ude76\ud84b\udc62" ], [ "9e40", "\ud843\udea2\u9eab\u7d5a\u55de\ud844\udc75\u629d\u976d\u5494\u8ccd\u71f6\u9176\u63fc\u63b9\u63fe\u5569\ud84a\udf43\u9c72\ud84b\udeb3\u519a\u34df\ud843\udda7\u51a7\u544d\u551e\u5513\u7666\u8e2d\ud85a\udc8a\u75b1\u80b6\u8804\u8786\u88c7\u81b6\u841c\ud844\udcc1\u44ec\u7304\ud851\udf06\u5b90\u830b\ud85a\udc93\u567b\ud849\udef4\ud85f\udd2f\ud850\udda3\ud85f\udd73\ud85b\uded0\ud85c\udeb6\u9170\ud844\uddd9\u9208\ud84f\udcfc\ud869\udea9\ud843\udeac\ud843\udef9\u7266\ud847\udca2\u474e\ud853\udfc2\ud85f\udff9\ud843\udfeb\u40fa" ], [ "9ea1", "\u9c5d\u651f\ud84b\udda0\u48f3\ud851\udfe0\ud867\udd7c\ud843\udfec\ud843\ude0a\u6062\ud85d\udda3\ud843\udfed" ], [ "9ead", "\ud858\udc48\ud844\udd87\u71a3\u7e8e\u9d50\u4e1a\u4e04\u3577\u5b0d\u6cb2\u5367\u36ac\u39dc\u537d\u36a5\ud851\ude18\u589a\ud852\udf6e\u822d\u544b\u57aa\ud856\ude95\ud842\udd79" ], [ "9ec5", "\u3a52\ud849\udc65\u7374\ud867\udeac\u4d09\u9bed\ud84f\udcfe\ud867\udf30\u4c5b\ud853\udfa9\ud865\udd9e\ud867\udfde\u845c\ud84f\uddb6\ud85c\udeb2\ud859\udfb3\ud84d\udf20\u632e\u7d25\ud84f\udef7\ud84f\ude2c\u3a2a\u9008\u52cc\u3e74\u367a\u45e9\ud841\udc8e\u7640\u5af0\ud843\udeb6\u787a\ud85f\udf2e\u58a7\u40bf\u567c\u9b8b\u5d74\u7654\ud869\udc34\u9e85\u4ce1\u75f9\u37fb\u6119\ud84c\udcda\ud850\udff2" ], [ "9ef5", "\u565d\ud844\udea9\u57a7\ud852\udd63\ud867\ude06\u5234\ud85c\udcae\u35ad\u6c4a\u9d7c" ], [ "9f40", "\u7c56\u9b39\u57de\ud845\udf6c\u5c53\u64d3\ud865\udcd0\ud858\udf35\ud85c\udd64\u86ad\ud843\udd28\ud85b\udd22\ud852\udee2\ud843\udd71" ], [ "9f4f", "\u51fe\ud847\udf0f\u5d8e\u9703\ud847\uddd1\u9e81\u904c\u7b1f\u9b02\u5cd1\u7ba3\u6268\u6335\u9aff\u7bcf\u9b2a\u7c7e\u9b2e\u7c42\u7c86\u9c15\u7bfc\u9b09\u9f17\u9c1b\ud852\udd3e\u9f5a\u5573\u5bc3\u4ffd\u9e98\u4ff2\u5260\u3e06\u52d1\u5767\u5056\u59b7\u5e12\u97c8\u9dab\u8f5c\u5469\u97b4\u9940\u97ba\u532c\u6130" ], [ "9fa1", "\u692c\u53da\u9c0a\u9d02\u4c3b\u9641\u6980\u50a6\u7546\ud845\udf6d\u99da\u5273" ], [ "9fae", "\u9159\u9681\u915c" ], [ "9fb2", "\u9151\ud863\ude97\u637f\ud85b\udd23\u6aca\u5611\u918e\u757a\u6285\ud840\udffc\u734f\u7c70\ud857\udc21\ud84f\udcfd" ], [ "9fc1", "\ud852\udd19\u76d6\u9b9d\u4e2a\ud843\udcd4\u83be\u8842" ], [ "9fc9", "\u5c4a\u69c0\u50ed\u577a\u521f\u5df5\u4ece\u6c31\ud840\uddf2\u4f39\u549c\u54da\u529a\u8d82\u35fe\u5f0c\u35f3" ], [ "9fdb", "\u6b52\u917c\u9fa5\u9b97\u982e\u98b4\u9aba\u9ea8\u9e84\u717a\u7b14" ], [ "9fe7", "\u6bfa\u8818\u7f78" ], [ "9feb", "\u5620\ud869\ude4a\u8e77\u9f53" ], [ "9ff0", "\u8dd4\u8e4f\u9e1c\u8e01\u6282\ud860\udf7d\u8e28\u8e75\u7ad3\ud852\ude77\u7a3e\u78d8\u6cea\u8a67\u7607" ], [ "a040", "\ud862\ude5a\u9f26\u6cce\u87d6\u75c3\ud868\udeb2\u7853\ud87e\udc40\u8d0c\u72e2\u7371\u8b2d\u7302\u74f1\u8ceb\ud852\udebb\u862f\u5fba\u88a0\u44b7" ], [ "a055", "\ud846\udc3b\ud85b\ude05" ], [ "a058", "\u8a7e\ud849\udd1b" ], [ "a05b", "\u60fd\u7667\u9ad7\u9d44\u936e\u9b8f\u87f5" ], [ "a063", "\u880f\u8cf7\u732c\u9721\u9bb0\u35d6\u72b2\u4c07\u7c51\u994a\ud858\udd59\u6159\u4c04\u9e96\u617d" ], [ "a073", "\u575f\u616f\u62a6\u6239\u62ce\u3a5c\u61e2\u53aa\ud84c\udff5\u6364\u6802\u35d2" ], [ "a0a1", "\u5d57\ud862\udfc2\u8fda\ud863\ude39" ], [ "a0a6", "\u50d9\ud847\udd46\u7906\u5332\u9638\ud843\udf3b\u4065" ], [ "a0ae", "\u77fe" ], [ "a0b0", "\u7cc2\ud857\udf1a\u7cda\u7a2d\u8066\u8063\u7d4d\u7505\u74f2\u8994\u821a\u670c\u8062\ud85d\udc86\u805b\u74f0\u8103\u7724\u8989\ud859\udfcc\u7553\ud85b\uded1\u87a9\u87ce\u81c8\u878c\u8a49\u8cad\u8b43\u772b\u74f8\u84da\u3635\u69b2\u8da6" ], [ "a0d4", "\u89a9\u7468\u6db9\u87c1\ud850\udc11\u74e7\u3ddb\u7176\u60a4\u619c\u3cd1\u7162\u6077" ], [ "a0e2", "\u7f71\ud862\udf2d\u7250\u60e9\u4b7e\u5220\u3c18\ud84f\udcc7\ud857\uded7\ud85d\ude56\ud855\udd31\ud846\udd44\ud844\udefe\ud866\udd03\ud85b\udddc\ud85c\udcad\u5cc1\ud858\uddad\ud862\ude0f\ud84d\ude77\ud840\udcee\ud85a\udc46\ud853\udf0e\u4562\u5b1f\ud858\udf4c\u9f50\u9ea6\ud858\ude6b" ], [ "a3c0", "\u2400", 31, "\u2421" ], [ "c6a1", "\u2460", 9, "\u2474", 9, "\u2170", 9, "\u4e36\u4e3f\u4e85\u4ea0\u5182\u5196\u51ab\u52f9\u5338\u5369\u53b6\u590a\u5b80\u5ddb\u2f33\u5e7f\u5ef4\u5f50\u5f61\u6534\u65e0\u7592\u7676\u8fb5\u96b6\xa8\u02c6\u30fd\u30fe\u309d\u309e\u3003\u4edd\u3005\u3006\u3007\u30fc\uff3b\uff3d\u273d\u3041", 23 ], [ "c740", "\u3059", 58, "\u30a1\u30a2\u30a3\u30a4" ], [ "c7a1", "\u30a5", 81, "\u0410", 5, "\u0401\u0416", 4 ], [ "c840", "\u041b", 26, "\u0451\u0436", 25, "\u21e7\u21b8\u21b9\u31cf\ud840\udccc\u4e5a\ud840\udc8a\u5202\u4491" ], [ "c8a1", "\u9fb0\u5188\u9fb1\ud85d\ude07" ], [ "c8cd", "\uffe2\uffe4\uff07\uff02\u3231\u2116\u2121\u309b\u309c\u2e80\u2e84\u2e86\u2e87\u2e88\u2e8a\u2e8c\u2e8d\u2e95\u2e9c\u2e9d\u2ea5\u2ea7\u2eaa\u2eac\u2eae\u2eb6\u2ebc\u2ebe\u2ec6\u2eca\u2ecc\u2ecd\u2ecf\u2ed6\u2ed7\u2ede\u2ee3" ], [ "c8f5", "\u0283\u0250\u025b\u0254\u0275\u0153\xf8\u014b\u028a\u026a" ], [ "f9fe", "\uffed" ], [ "fa40", "\ud841\udd47\u92db\ud841\udddf\ud84f\udfc5\u854c\u42b5\u73ef\u51b5\u3649\ud852\udd42\ud862\udde4\u9344\ud846\udddb\u82ee\ud84f\udcc8\u783c\u6744\u62df\ud852\udd33\ud862\uddaa\ud840\udea0\ud85a\udfb3\ud844\udf05\u4fab\ud849\udced\u5008\ud85b\udd29\ud85e\ude84\ud84d\ude00\ud852\udeb1\ud849\udd13\u5029\ud840\udf7e\u5fa4\ud840\udf80\ud840\udf47\u6edb\ud841\udc1f\u507d\u5101\u347a\u510e\u986c\u3743\u8416\ud852\udda4\ud841\udc87\u5160\ud84c\udfb4\u516a\ud842\udfff\ud848\udcfc\ud840\udee5\ud849\udd30\ud841\udd8e\ud84c\ude33\ud846\udd83\u5b82\u877d\ud841\uddb3\ud84f\udc99\u51b2\u51b8" ], [ "faa1", "\u9d34\u51c9\u51cf\u51d1\u3cdc\u51d3\ud852\udea6\u51b3\u51e2\u5342\u51ed\u83cd\u693e\ud84d\udf2d\u5f7b\u520b\u5226\u523c\u52b5\u5257\u5294\u52b9\u52c5\u7c15\u8542\u52e0\u860d\ud85a\udf13\u5305\ud862\udede\u5549\u6ed9\ud84f\udf80\ud842\udd54\ud84f\udfec\u5333\u5344\ud842\udfe2\u6ccb\ud845\udf26\u681b\u73d5\u604a\u3eaa\u38cc\ud845\udee8\u71dd\u44a2\u536d\u5374\ud861\udeab\u537e\u537f\ud845\udd96\ud845\ude13\u77e6\u5393\ud862\ude9b\u53a0\u53ab\u53ae\u73a7\ud855\udf72\u3f59\u739c\u53c1\u53c5\u6c49\u4e49\u57fe\u53d9\u3aab\ud842\udf8f\u53e0\ud84f\udfeb\ud84b\udda3\u53f6\ud843\udc77\u5413\u7079\u552b\u6657\u6d5b\u546d\ud85a\udf53\ud843\udd74\u555d\u548f\u54a4\u47a6\ud845\udf0d\ud843\udedd\u3db4\ud843\udd4d" ], [ "fb40", "\ud862\uddbc\ud849\ude98\u5547\u4ced\u542f\u7417\u5586\u55a9\u5605\ud846\udcd7\ud850\udc3a\u4552\ud851\udc35\u66b3\ud844\udcb4\u5637\u66cd\ud84c\ude8a\u66a4\u66ad\u564d\u564f\u78f1\u56f1\u9787\u53fe\u5700\u56ef\u56ed\ud862\udf66\u3623\ud844\ude4f\u5746\ud850\udda5\u6c6e\u708b\u5742\u36b1\ud85b\udc7e\u57e6\ud845\udc16\u5803\ud845\udc54\ud850\udf63\u5826\ud852\udff5\u585c\u58aa\u3561\u58e0\u58dc\ud844\ude3c\u58fb\u5bff\u5743\ud868\udd50\ud850\ude78\u93d3\u35a1\u591f\u68a6\u36c3\u6e59" ], [ "fba1", "\ud845\ude3e\u5a24\u5553\ud845\ude92\u8505\u59c9\ud843\udd4e\ud85b\udc81\ud85b\udd2a\ud845\udfdc\u59d9\ud845\udffb\ud845\udfb2\ud85b\udda6\u6d71\ud846\udc28\ud845\uded5\u59f9\ud85b\ude45\u5aab\u5a63\u36e6\ud852\udda9\u5a77\u3708\u5a96\u7465\u5ad3\ud85b\udfa1\ud849\udd54\u3d85\ud846\udd11\u3732\ud845\udeb8\u5e83\u52d0\u5b76\u6588\u5b7c\ud85e\ude0e\u4004\u485d\ud840\ude04\u5bd5\u6160\ud846\ude34\ud856\uddcc\ud841\udda5\u5bf3\u5b9d\u4d10\u5c05\ud846\udf44\u5c13\u73ce\u5c14\ud847\udca5\ud85a\udf28\u5c49\u48dd\u5c85\u5ce9\u5cef\u5d8b\ud847\uddf9\ud847\ude37\u5d10\u5d18\u5d46\ud847\udea4\u5cba\u5dd7\u82fc\u382d\ud852\udd01\ud848\udc49\ud848\udd73\u8287\u3836\u3bc2\u5e2e\u6a8a\u5e75\u5e7a\ud851\udcbc\ud843\udcd3\u53a6\u4eb7\u5ed0\u53a8\ud845\udf71\u5e09\u5ef4\ud861\udc82" ], [ "fc40", "\u5ef9\u5efb\u38a0\u5efc\u683e\u941b\u5f0d\ud840\uddc1\ud87e\udc94\u3ade\u48ae\ud844\udf3a\u5f3a\ud85a\udc88\ud848\udfd0\u5f58\ud849\udc71\u5f63\u97bd\ud85b\ude6e\u5f72\u9340\ud862\ude36\u5fa7\u5db6\u3d5f\ud854\ude50\ud847\udf6a\ud85c\udcf8\ud849\ude68\u91d6\ud840\ude9e\ud862\ude29\u6031\u6685\ud846\udc77\u3963\u3dc7\u3639\u5790\ud849\udfb4\u7971\u3e40\u609e\u60a4\u60b3\ud852\udd82\ud852\udd8f\ud85e\ude53\u74a4\u50e1\u5aa0\u6164\u8424\u6142\ud87e\udca6\ud85b\uded2\u6181\u51f4\ud841\ude56\u6187\u5baa\ud84f\udfb7" ], [ "fca1", "\ud84a\udc5f\u61d3\ud862\udf9d\ud866\udd5d\u61d0\u3932\ud84a\udd80\ud84a\udcc1\u6023\u615c\u651e\u638b\ud840\udd18\u62c5\ud845\udf70\u62d5\ud84b\ude0d\u636c\ud852\udddf\u3a17\u6438\u63f8\ud844\udf8e\ud845\udffc\u6490\u6f8a\ud84b\ude36\u9814\ud850\udc8c\ud855\udf1d\u64e1\u64e5\u947b\u3a66\u643a\u3a57\u654d\u6f16\ud852\ude28\ud852\ude23\u6585\u656d\u655f\ud84c\udc7e\u65b5\ud852\udd40\u4b37\u65d1\u40d8\ud846\udc29\u65e0\u65e3\u5fdf\ud84d\udc00\u6618\ud84c\uddf7\ud84c\uddf8\u6644\ud84c\udda4\ud84c\udda5\u664b\ud843\ude75\u6667\ud854\udde6\u6673\u6674\ud847\ude3d\ud84c\ude31\ud861\uddf4\ud84c\uddc8\ud854\udf13\u77c5\ud84a\udcf7\u99a4\u6702\ud850\udf9c\ud852\ude21\u3b2b\u69fa\ud84d\udfc2\u675e\u6767\u6762\ud850\uddcd\ud864\udced\u67d7\u44e9\u6822\u6e50\u923c\u6801\ud84c\udfe6\ud85b\udda0\u685d" ], [ "fd40", "\ud84d\udc6f\u69e1\u6a0b\ud862\udedf\u6973\u68c3\ud84d\uddcd\u6901\u6900\u3d32\u3a01\ud84d\ude3c\u3b80\u67ac\u6961\ud862\ude4a\u42fc\u6936\u6998\u3ba1\ud840\udfc9\u8363\u5090\u69f9\ud84d\ude59\ud848\udd2a\u6a45\ud84d\udf03\u6a9d\u3bf3\u67b1\u6ac8\ud864\udd9c\u3c0d\u6b1d\ud842\udd23\u60de\u6b35\u6b74\ud849\udfcd\u6eb5\ud84e\udedb\ud840\udfb5\ud846\udd58\u3740\u5421\ud84e\udf5a\u6be1\ud84f\udefc\u6bdc\u6c37\ud849\udc8b\ud852\udcf1\ud85a\udf51\u6c5a\u8226\u6c79\ud84f\uddbc\u44c5\ud84f\uddbd\ud850\udda4\ud852\udd0c\ud852\udd00" ], [ "fda1", "\ud84f\udcc9\u36e5\u3ceb\ud843\udd32\u9b83\ud84c\uddf9\ud849\udc91\u7f8f\u6837\ud85b\udd25\ud85b\udda1\ud85b\uddeb\u6d96\u6d5c\u6e7c\u6f04\ud852\udd7f\ud850\udc85\ud85b\ude72\u8533\ud85b\udf74\u51c7\u6c9c\u6e1d\u842e\ud862\udf21\u6e2f\ud84f\ude2f\u7453\ud84f\udf82\u79cc\u6e4f\u5a91\ud84c\udc4b\u6ff8\u370d\u6f9d\ud84f\ude30\u6efa\ud845\udc97\ud850\udc3d\u4555\u93f0\u6f44\u6f5c\u3d4e\u6f74\ud864\udd70\u3d3b\u6f9f\ud850\udd44\u6fd3\ud850\udc91\ud850\udd55\ud850\udc39\ud84f\udff0\ud84f\udfb4\ud850\udd3f\u51df\ud850\udd56\ud850\udd57\ud850\udd40\ud858\udddd\u704b\u707e\u70a7\u7081\u70cc\u70d5\u70d6\u70df\u4104\u3de8\u71b4\u7196\ud850\ude77\u712b\u7145\u5a88\u714a\u716e\u5c9c\ud850\udf65\u714f\u9362\ud850\udec1\u712c\ud851\udc5a\ud852\ude27\ud852\ude22\u71ba\ud862\udfe8\u70bd\u720e" ], [ "fe40", "\u9442\u7215\u5911\u9443\u7224\u9341\ud855\ude05\u722e\u7240\ud852\udd74\u68bd\u7255\u7257\u3e55\ud84c\udc44\u680d\u6f3d\u7282\u732a\u732b\ud852\udc23\ud862\udc2b\u48ed\ud862\udc04\u7328\u732e\u73cf\u73aa\ud843\udc3a\ud85a\ude2e\u73c9\u7449\ud850\udde2\ud845\udee7\ud852\ude24\u6623\u36c5\ud852\uddb7\ud852\udd8d\ud852\uddfb\u73f7\u7415\u6903\ud852\ude26\u7439\ud841\uddc3\u3ed7\u745c\ud84a\udcad\u7460\ud863\udeb2\u7447\u73e4\u7476\u83b9\u746c\u3730\u7474\u93f1\u6a2c\u7482\u4953\ud852\ude8c" ], [ "fea1", "\ud850\udd5f\ud852\ude79\ud862\udf8f\u5b46\ud863\udc03\ud846\udc9e\u74c8\ud846\udd88\u750e\u74e9\u751e\ud863\uded9\ud846\ude4b\u5bd7\ud863\udeac\u9385\u754d\u754a\u7567\u756e\ud853\udf82\u3f04\ud853\udd13\u758e\u745d\u759e\u75b4\u7602\u762c\u7651\u764f\u766f\u7676\ud858\udff5\u7690\u81ef\u37f8\ud85a\udd11\ud85a\udd0e\u76a1\u76a5\u76b7\u76cc\ud85b\udf9f\u8462\ud854\udc9d\ud854\udd7d\ud847\ude1c\u771e\u7726\u7740\u64af\ud854\ude20\u7758\ud84c\udeac\u77af\ud862\udd64\ud862\udd68\ud845\udec1\u77f4\u7809\ud844\udf76\ud852\ude12\u68ca\u78af\u78c7\u78d3\u96a5\u792e\ud855\udde0\u78d7\u7934\u78b1\ud85d\ude0c\u8fb8\u8884\ud862\udf2b\ud858\udc83\ud849\ude1c\u7986\u8900\u6902\u7980\ud856\udc57\u799d\ud85e\udf39\u793c\u79a9\u6e2a\ud85c\udd26\u3ea8\u79c6\ud864\udd0d\u79d4" ] ];
    cc._RF.pop();
  }, {} ],
  bind_function: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4b52d4b3jNOF4g+Gizf/NUP", "bind_function");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bf = void 0;
    const global_define_1 = require("./global_define");
    const global_data_1 = require("./global_data");
    const lobby_framework_1 = require("./lobby_framework");
    const AppGlobal_1 = require("../../AppGlobal");
    const platform_1 = require("./platform/platform");
    const sound_manager_1 = require("./sound_manager");
    const utils_1 = require("../common/utils");
    const game_controller_1 = require("./game/game_controller");
    const room_controller_1 = require("./game/room_controller");
    var UserHead_1 = require("../../Component/UserHead");
    Object.defineProperty(exports, "UserHead", {
      enumerable: true,
      get: function() {
        return UserHead_1.UserHead;
      }
    });
    const protocols_1 = require("./protocols");
    var protocols_2 = require("./protocols");
    Object.defineProperty(exports, "protocols", {
      enumerable: true,
      get: function() {
        return protocols_2.protocols;
      }
    });
    var ChatPlay_1 = require("../../Component/ChatPlay");
    Object.defineProperty(exports, "UserChatDirection", {
      enumerable: true,
      get: function() {
        return ChatPlay_1.UserChatDirection;
      }
    });
    var bf;
    (function(bf) {
      bf.ROOM_MODE_NORMAL = global_define_1.CONST.ROOM_MODE_NORMAL;
      bf.ROOM_MODE_MOBILE = global_define_1.CONST.ROOM_MODE_MOBILE;
      bf.ROOM_MODE_FRIEND = global_define_1.CONST.ROOM_MODE_FRIEND;
      bf.ROOM_MODE_REDPACKET = global_define_1.CONST.ROOM_MODE_REDPACKET;
      bf.ROOM_KIND_SCORE = global_define_1.CONST.ROOM_KIND_SCORE;
      bf.ROOM_KIND_EDUCATE = global_define_1.CONST.ROOM_KIND_EDUCATE;
      bf.ROOM_KIND_SCGOLD = global_define_1.CONST.ROOM_KIND_SCGOLD;
      bf.ROOM_KIND_NOCHEAT = global_define_1.CONST.ROOM_KIND_NOCHEAT;
      bf.ROOM_KIND_BETA = global_define_1.CONST.ROOM_KIND_BETA;
      bf.ROOM_KIND_LINEUP = global_define_1.CONST.ROOM_KIND_LINEUP;
      bf.ROOM_KIND_WEIGHT = global_define_1.CONST.ROOM_KIND_WEIGHT;
      bf.ROOM_KIND_TABLE_LIST = global_define_1.CONST.ROOM_KIND_TABLE_LIST;
      bf.ROOM_KIND_MIN_BEANS = global_define_1.CONST.ROOM_KIND_MIN_BEANS;
      bf.ROOM_KIND_MAX_BEANS = global_define_1.CONST.ROOM_KIND_MAX_BEANS;
      bf.ROOM_KIND_MINI_GAME = global_define_1.CONST.ROOM_KIND_MINI_GAME;
      function register_game_engine(id, game) {
        global_data_1.global_data.game_engine = game;
      }
      bf.register_game_engine = register_game_engine;
      function unregister_game_engine(id) {
        global_data_1.global_data.game_engine = null;
      }
      bf.unregister_game_engine = unregister_game_engine;
      function get_game_engine() {
        return global_data_1.global_data.game_engine;
      }
      bf.get_game_engine = get_game_engine;
      function switch_to_view_id(chair_id) {
        return game_controller_1.game_controller.switch_to_view_id(chair_id);
      }
      bf.switch_to_view_id = switch_to_view_id;
      function pause_message() {
        return game_controller_1.game_controller.pause_message();
      }
      bf.pause_message = pause_message;
      function restore_message() {
        return game_controller_1.game_controller.restore_message();
      }
      bf.restore_message = restore_message;
      function switch_to_chair_id(view_id) {
        return game_controller_1.game_controller.switch_to_chair_id(view_id);
      }
      bf.switch_to_chair_id = switch_to_chair_id;
      function send_ready_data() {
        return game_controller_1.game_controller.send_game_ready();
      }
      bf.send_ready_data = send_ready_data;
      function re_sit_down(table_id = global_define_1.CONST.INVALID_TABLE, chair_id = global_define_1.CONST.INVALID_CHAIR) {
        return game_controller_1.game_controller.re_sit_down(table_id, chair_id);
      }
      bf.re_sit_down = re_sit_down;
      function check_relief() {
        return lobby_framework_1.lobby_framework.check_relief();
      }
      bf.check_relief = check_relief;
      function send_game_data(param_id, param_json) {
        return game_controller_1.game_controller.send_game_data(param_id, param_json);
      }
      bf.send_game_data = send_game_data;
      function set_game_status(param_status) {
        game_controller_1.game_controller.set_game_status(param_status);
      }
      bf.set_game_status = set_game_status;
      function get_room_data() {
        return lobby_framework_1.lobby_framework.get_current_room_data();
      }
      bf.get_room_data = get_room_data;
      function get_game_status() {
        return game_controller_1.game_controller.get_game_status();
      }
      bf.get_game_status = get_game_status;
      function get_self_user_data() {
        let data = game_controller_1.game_controller.get_self_user_data();
        if (data) return data;
        return new protocols_1.protocols.tagUserData();
      }
      bf.get_self_user_data = get_self_user_data;
      function get_self_user_id() {
        if (global_data_1.global_data.get_the_user_data()) return global_data_1.global_data.get_the_user_data()._int_user_id;
        return 0;
      }
      bf.get_self_user_id = get_self_user_id;
      function get_self_ingot() {
        if (global_data_1.global_data.get_the_user_data()) return global_data_1.global_data.get_the_user_data()._long_ingot;
        return 0;
      }
      bf.get_self_ingot = get_self_ingot;
      function set_self_ingot(int_ingot) {
        if (global_data_1.global_data.get_the_user_data()) {
          global_data_1.global_data.get_the_user_data()._long_ingot = int_ingot;
          global_data_1.global_data.update_user_data();
        }
      }
      bf.set_self_ingot = set_self_ingot;
      function get_status_time_by_id(prop_id) {
        return global_data_1.global_data.get_status_time_by_id(prop_id);
      }
      bf.get_status_time_by_id = get_status_time_by_id;
      function set_status_time_by_id(prop_id, time) {
        global_data_1.global_data.set_status_time_by_id(prop_id, time);
      }
      bf.set_status_time_by_id = set_status_time_by_id;
      function get_prop_count_by_id(prop_id) {
        return global_data_1.global_data.get_prop_count_by_id(prop_id);
      }
      bf.get_prop_count_by_id = get_prop_count_by_id;
      function set_prop_count_by_id(prop_id, count) {
        global_data_1.global_data.set_prop_count_by_id(prop_id, count);
      }
      bf.set_prop_count_by_id = set_prop_count_by_id;
      function have_module_shop() {
        return global_data_1.global_data.have_module_shop();
      }
      bf.have_module_shop = have_module_shop;
      function have_module_wechat_share() {
        return global_data_1.global_data.have_module_wechat_share();
      }
      bf.have_module_wechat_share = have_module_wechat_share;
      function show_simple_shop(game_id) {
        let good_data = lobby_framework_1.lobby_framework.find_good_data_by_gameid(game_id);
        good_data && lobby_framework_1.lobby_framework.show_simple_shop(good_data);
      }
      bf.show_simple_shop = show_simple_shop;
      function hide_simple_shop() {
        lobby_framework_1.lobby_framework.hide_simple_shop();
      }
      bf.hide_simple_shop = hide_simple_shop;
      function show_red_package_time_label(show) {
        utils_1.utils.send("RedpacketShowTimeLabel", show);
      }
      bf.show_red_package_time_label = show_red_package_time_label;
      function show_need_gold(game_id, body_gold) {
        console.warn("bf.show_need_gold()\u5c06\u4e0d\u518d\u88ab\u652f\u6301\uff0c\u4f7f\u7528bf.check_show_need_gold()\u4ee3\u66ff");
        console.log(`show_need_gold: id: ${game_id} gold: ${body_gold} bank: ${global_data_1.global_data.get_the_user_data()._long_bank_gold}`);
        if (body_gold + global_data_1.global_data.get_the_user_data()._long_bank_gold >= 500) return false;
        return lobby_framework_1.lobby_framework.show_need_gold(game_id);
      }
      bf.show_need_gold = show_need_gold;
      function hide_need_gold() {
        lobby_framework_1.lobby_framework.hide_need_gold();
      }
      bf.hide_need_gold = hide_need_gold;
      function show_shop(target) {
        AppGlobal_1.AppGlobal.getInstance().showShopLayout(target);
      }
      bf.show_shop = show_shop;
      function hide_shop() {
        AppGlobal_1.AppGlobal.getInstance().hideShopLayout();
      }
      bf.hide_shop = hide_shop;
      function get_user_data_by_chair_id(param_chair_id) {
        return game_controller_1.game_controller.get_user_data_by_chair_id(param_chair_id);
      }
      bf.get_user_data_by_chair_id = get_user_data_by_chair_id;
      function close_game(legal = false, lobbyhint) {
        game_controller_1.game_controller.close_to_room(legal, lobbyhint);
      }
      bf.close_game = close_game;
      function show_hinting(str_message, int_style) {
        utils_1.utils.show_hint(str_message);
      }
      bf.show_hinting = show_hinting;
      function show_loading(bool_show, str_text) {
        bool_show ? utils_1.utils.show_loading(str_text) : utils_1.utils.hide_loading();
      }
      bf.show_loading = show_loading;
      function get_user_data_by_user_id(int_user_id) {
        return game_controller_1.game_controller.get_user_data_by_user_id(int_user_id);
      }
      bf.get_user_data_by_user_id = get_user_data_by_user_id;
      function request_user_data() {
        global_data_1.global_data.request_user_data();
      }
      bf.request_user_data = request_user_data;
      function share_private_wechat(message, code, copy_message, copy_hint, img) {
        utils_1.utils.is_wechat() ? lobby_framework_1.lobby_framework.share_to_enter_private(message, code, img) : platform_1.platform.inst.setClipboardData({
          data: copy_message,
          success: () => {
            show_hinting(copy_hint, "");
          }
        });
      }
      bf.share_private_wechat = share_private_wechat;
      function do_command(command) {
        return lobby_framework_1.lobby_framework.do_command(command, "");
      }
      bf.do_command = do_command;
      function show_game_grade(data, str_share) {
        "string" == typeof data ? utils_1.utils.send("ShowPrivateRoomResult", utils_1.utils.from_json(data), str_share) : utils_1.utils.send("ShowPrivateRoomResult", data, str_share);
      }
      bf.show_game_grade = show_game_grade;
      function show_system_message_box(param_title, param_content, param_confirmText) {
        platform_1.platform.inst.showModal({
          title: param_title,
          content: param_content,
          showCancel: false,
          confirmText: param_confirmText
        });
      }
      bf.show_system_message_box = show_system_message_box;
      function show_message_box(str_caption, str_title, int_type, str_name_ok, str_name_cancel, callback_ok, callback_cancel, any_param) {
        utils_1.utils.show_message_box({
          content: str_caption,
          button_count: 2,
          onClick: index => {
            0 == index ? callback_ok && callback_ok(any_param) : 1 != index && -1 != index || callback_cancel && callback_cancel(any_param);
          }
        });
      }
      bf.show_message_box = show_message_box;
      function show_game_chat() {
        AppGlobal_1.AppGlobal.getInstance().showGameChat();
      }
      bf.show_game_chat = show_game_chat;
      function init_game_chat(array_string) {
        cc.isValid(AppGlobal_1.AppGlobal.getInstance().gameChat) || AppGlobal_1.AppGlobal.getInstance().spawnGameChat();
        cc.isValid(AppGlobal_1.AppGlobal.getInstance().gameChat) && AppGlobal_1.AppGlobal.getInstance().gameChat.setCommonChat(array_string);
      }
      bf.init_game_chat = init_game_chat;
      function init_chat_play(root, any_param) {
        console.error("\u73b0\u5728\u4e0d\u63d0\u4f9b\u6570\u636e\u521d\u59cb\u5316init_chat_play\uff0c\u4f7f\u7528set_user_chat_node\u5206\u522b\u521d\u59cb\u5316\u6bcf\u4e2auserchat");
      }
      bf.init_chat_play = init_chat_play;
      function set_user_chat_node(index, node, param) {
        AppGlobal_1.AppGlobal.getInstance().setUserChatNode(index, node, param);
      }
      bf.set_user_chat_node = set_user_chat_node;
      function set_user_head_node(node) {
        return AppGlobal_1.AppGlobal.getInstance().generateUserHead(node);
      }
      bf.set_user_head_node = set_user_head_node;
      function play_user_chat(int_view_id, str_chat, str_nickname, chat_recode) {
        console.log("play_user_chat", int_view_id, str_chat, str_nickname, chat_recode);
        if (int_view_id < 0) return;
        if (null == AppGlobal_1.AppGlobal.getInstance().chatPlay) return;
        if (null == str_chat || "" == str_chat) return;
        if ("{" == str_chat[0]) {
          let tmpJson = utils_1.utils.from_json(str_chat);
          if (tmpJson && tmpJson.mp3_file) return;
        }
        let uc = AppGlobal_1.AppGlobal.getInstance().chatPlay.getUserChatByIndex(int_view_id);
        if (null == uc) {
          console.error("\u672a\u8bbe\u7f6euserchat, view_id: ", int_view_id);
          return;
        }
        if (0 == str_chat.indexOf("[EM]")) {
          let index = str_chat.substr(4, 2);
          uc.showEm(+index);
        } else uc.play(str_chat);
        if (null == chat_recode || true == chat_recode) {
          cc.isValid(AppGlobal_1.AppGlobal.getInstance().gameChat) || AppGlobal_1.AppGlobal.getInstance().spawnGameChat();
          cc.isValid(AppGlobal_1.AppGlobal.getInstance().gameChat) && AppGlobal_1.AppGlobal.getInstance().gameChat.appendChatRecord(str_nickname + ":" + str_chat);
        }
      }
      bf.play_user_chat = play_user_chat;
      function show_game_user_info(bool_report, int_user_id, callback_obj, callback_close, any_param) {
        if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) return;
        AppGlobal_1.AppGlobal.getInstance().showGameUserInfo(bool_report, int_user_id, callback_obj, callback_close, any_param);
      }
      bf.show_game_user_info = show_game_user_info;
      function send_user_chat(str_chat) {
        return game_controller_1.game_controller.send_user_chat(str_chat);
      }
      bf.send_user_chat = send_user_chat;
      function send_user_report(data) {
        let report_data = utils_1.utils.from_json(data);
        return game_controller_1.game_controller.send_user_report(report_data);
      }
      bf.send_user_report = send_user_report;
      function send_user_kick(userid, touserid) {
        return game_controller_1.game_controller.send_user_kick(userid, touserid);
      }
      bf.send_user_kick = send_user_kick;
      function set_play_gift_node(node) {
        AppGlobal_1.AppGlobal.getInstance().setGiftPlayNode(node);
      }
      bf.set_play_gift_node = set_play_gift_node;
      function play_gift(from, to, prop_id, count) {
        let giftId = utils_1.utils.resource_id_to_gift_id(prop_id);
        AppGlobal_1.AppGlobal.getInstance().playGift(from, to, giftId, count);
      }
      bf.play_gift = play_gift;
      function get_wifi_status() {
        return global_data_1.global_data.is_wifi;
      }
      bf.get_wifi_status = get_wifi_status;
      function show_setting() {
        AppGlobal_1.AppGlobal.getInstance().showSettingBox();
      }
      bf.show_setting = show_setting;
      function hide_setting() {
        AppGlobal_1.AppGlobal.getInstance().hideSettingBox();
      }
      bf.hide_setting = hide_setting;
      function is_music_on() {
        return lobby_framework_1.lobby_framework.get_music();
      }
      bf.is_music_on = is_music_on;
      function is_sound_on() {
        return lobby_framework_1.lobby_framework.get_sound();
      }
      bf.is_sound_on = is_sound_on;
      function set_music(on) {
        lobby_framework_1.lobby_framework.set_music(on);
      }
      bf.set_music = set_music;
      function set_sound(on) {
        lobby_framework_1.lobby_framework.set_sound(on);
      }
      bf.set_sound = set_sound;
      function play_sound(path, loop, callback) {
        sound_manager_1.sound_manager.play_sound(path, loop, callback);
      }
      bf.play_sound = play_sound;
      function play_click() {
        sound_manager_1.sound_manager.play_click();
      }
      bf.play_click = play_click;
      function play_music(path, loop, callback) {
        sound_manager_1.sound_manager.play_music(path, loop, callback);
      }
      bf.play_music = play_music;
      function stop_sound(id) {
        sound_manager_1.sound_manager.stop_sound(id);
      }
      bf.stop_sound = stop_sound;
      function stop_music() {
        sound_manager_1.sound_manager.stop_music();
      }
      bf.stop_music = stop_music;
      function stop_all_audio() {
        sound_manager_1.sound_manager.stop_all_audio();
      }
      bf.stop_all_audio = stop_all_audio;
      function get_server_time() {
        return global_data_1.global_data.get_server_time();
      }
      bf.get_server_time = get_server_time;
      function get_battery_level() {
        return lobby_framework_1.lobby_framework.get_battery_level();
      }
      bf.get_battery_level = get_battery_level;
      function set_keep_screen_on(on) {
        lobby_framework_1.lobby_framework.set_keep_screen_on(on);
      }
      bf.set_keep_screen_on = set_keep_screen_on;
      function post_custom_error_log(error) {
        lobby_framework_1.lobby_framework.onError(error);
      }
      bf.post_custom_error_log = post_custom_error_log;
      function register_callback(name, target, func) {
        utils_1.utils.on(name, target, func);
      }
      bf.register_callback = register_callback;
      function unregister_callback(name, target, func) {
        utils_1.utils.off(name, target, func);
      }
      bf.unregister_callback = unregister_callback;
      function on_game_event(name, target, func) {
        utils_1.utils.on("GameEvent_" + name, target, func);
      }
      bf.on_game_event = on_game_event;
      function off_game_event(name, target, func) {
        utils_1.utils.off("GameEvent_" + name, target, func);
      }
      bf.off_game_event = off_game_event;
      function send_game_event(name, ...param) {
        utils_1.utils.send("GameEvent_" + name, param[0], param[1], param[2], param[3], param[4], param[5], param[6], param[7], param[8], param[9]);
      }
      bf.send_game_event = send_game_event;
      function utf8_2_gbk(s) {
        return utils_1.utils.utf8_2_gbk(s);
      }
      bf.utf8_2_gbk = utf8_2_gbk;
      function gbk_2_utf8(s) {
        return utils_1.utils.gbk_2_utf8(s);
      }
      bf.gbk_2_utf8 = gbk_2_utf8;
      function from_json(value) {
        return utils_1.utils.from_json(value);
      }
      bf.from_json = from_json;
      function to_json(value) {
        return utils_1.utils.to_json(value);
      }
      bf.to_json = to_json;
      function parse_game_message_data(data, gbk2utf8) {
        return utils_1.utils.parse_game_message_data(data);
      }
      bf.parse_game_message_data = parse_game_message_data;
      function clamp_nickname(name, length = 5) {
        return utils_1.utils.clamp_nickname(name, length);
      }
      bf.clamp_nickname = clamp_nickname;
      function add_instance_to_root(prefab, root, comp) {
        return utils_1.utils.add_instance_to_root(prefab, root, comp);
      }
      bf.add_instance_to_root = add_instance_to_root;
      function string_replace_any(str_source, str_key, any_value) {
        return utils_1.utils.string_replace_any(str_source, str_key, any_value);
      }
      bf.string_replace_any = string_replace_any;
      function share(title, imageUrl, query, success, fail) {
        platform_1.platform.inst.share({
          title: title,
          imageUrl: imageUrl,
          query: query,
          success: () => {
            success && success();
          },
          fail: () => {
            fail && fail();
          }
        });
      }
      bf.share = share;
      function get_emotion_icon_by_id(index) {
        if (global_data_1.global_data.spriteFrameMap.has(`Emotion-${index}_se`)) return global_data_1.global_data.spriteFrameMap.get(`Emotion-${index}_se`);
        return null;
      }
      bf.get_emotion_icon_by_id = get_emotion_icon_by_id;
      function set_local_storage(key, value) {
        utils_1.utils.setLocalStorage(key, value);
      }
      bf.set_local_storage = set_local_storage;
      function get_local_storage(key) {
        return utils_1.utils.getLocalStorage(key);
      }
      bf.get_local_storage = get_local_storage;
      function send_http_request(url, method, data, success, fail) {
        utils_1.utils.send_http_request({
          url: global_data_1.global_data.fill_url(url),
          hint: false,
          method: method,
          data: data,
          success: (data, message) => {
            success && success(data, message);
          },
          fail: msg => {
            fail && fail(msg);
          }
        });
      }
      bf.send_http_request = send_http_request;
      function fetch_user_head_image(user_id, face_id, target_sprite) {
        lobby_framework_1.lobby_framework.fetch_user_head_image(user_id, face_id, target_sprite);
      }
      bf.fetch_user_head_image = fetch_user_head_image;
      function check_show_need_gold() {
        let user_data = game_controller_1.game_controller.get_self_user_data();
        let room_data = room_controller_1.room_controller.get_room_data();
        if (!user_data || !room_data) return true;
        if (0 == (room_data._int_room_kind & bf.ROOM_KIND_SCGOLD)) return false;
        let list = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == room_data._int_game_id && 0 == (x._int_room_mode & global_define_1.CONST.ROOM_MODE_FRIEND));
        if (0 == list.length) return true;
        list = list.sort((a, b) => a._int_min_gold - b._int_min_gold);
        if (user_data.lGold < list[0]._int_min_gold || 0 == user_data.lGold) {
          if (user_data.lGold + global_data_1.global_data.get_the_user_data()._long_bank_gold >= list[0]._int_min_gold) {
            global_data_1.global_data.have_module_shop() ? show_simple_shop(room_data._int_game_id) : utils_1.utils.show_message_box({
              content: "\u5f53\u524d\u91d1\u5e01\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5f00\u59cb\u6e38\u620f",
              button_count: 1,
              onClick: () => {
                game_controller_1.game_controller.close_to_room();
              }
            });
            return true;
          }
          return lobby_framework_1.lobby_framework.show_need_gold(room_data._int_game_id);
        }
        if (user_data.lGold < room_data._int_min_gold) {
          global_data_1.global_data.have_module_shop() ? show_simple_shop(room_data._int_game_id) : utils_1.utils.show_message_box({
            content: "\u5f53\u524d\u91d1\u5e01\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5f00\u59cb\u6e38\u620f\uff0c\u8bf7\u6362\u81f3\u5176\u4ed6\u573a\u8fdb\u884c\u6e38\u620f",
            button_count: 1,
            onClick: () => {
              game_controller_1.game_controller.close_to_room();
            }
          });
          return true;
        }
        return false;
      }
      bf.check_show_need_gold = check_show_need_gold;
      function get_emotion_animation_clip(index) {
        return lobby_framework_1.lobby_framework.get_emotion_animation_clip(index);
      }
      bf.get_emotion_animation_clip = get_emotion_animation_clip;
      function request_use_prop(prop_id, count, param) {
        lobby_framework_1.lobby_framework.request_use_prop(prop_id, count, param);
      }
      bf.request_use_prop = request_use_prop;
    })(bf = exports.bf || (exports.bf = {}));
    if (window) {
      window.bf = bf;
      window.lobby_framework = lobby_framework_1.lobby_framework;
      window.global_data = global_data_1.global_data;
      window.platform = platform_1.platform;
      window.utils = utils_1.utils;
    }
    cc._RF.pop();
  }, {
    "../../AppGlobal": "AppGlobal",
    "../../Component/ChatPlay": "ChatPlay",
    "../../Component/UserHead": "UserHead",
    "../common/utils": "utils",
    "./game/game_controller": "game_controller",
    "./game/room_controller": "room_controller",
    "./global_data": "global_data",
    "./global_define": "global_define",
    "./lobby_framework": "lobby_framework",
    "./platform/platform": "platform",
    "./protocols": "protocols",
    "./sound_manager": "sound_manager"
  } ],
  "bom-handling": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f2dc9tgJMxG3a+XBuoRhr/k", "bom-handling");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StripBOM = exports.PrependBOM = void 0;
    var BOMChar = "\ufeff";
    class PrependBOM {
      constructor(encoder, options) {
        this.encoder = encoder;
        this.addBOM = true;
      }
      write(str) {
        if (this.addBOM) {
          str = BOMChar + str;
          this.addBOM = false;
        }
        return this.encoder.write(str);
      }
      end() {
        return this.encoder.end();
      }
    }
    exports.PrependBOM = PrependBOM;
    class StripBOM {
      constructor(decoder, options) {
        this.decoder = decoder;
        this.pass = false;
        this.options = options || {};
      }
      write(buf) {
        var res = this.decoder.write(buf);
        if (this.pass || !res) return res;
        if (res[0] === BOMChar) {
          res = res.slice(1);
          "function" === typeof this.options.stripBOM && this.options.stripBOM();
        }
        this.pass = true;
        return res;
      }
      end() {
        return this.decoder.end();
      }
    }
    exports.StripBOM = StripBOM;
    cc._RF.pop();
  }, {} ],
  cards_3d_config: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "575b4zzMxJKkJSHFavLYIrE", "cards_3d_config");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LayoutConfig = exports.DarkGangConfig = exports.HandleButtonIndex = exports.LayoutCardsType = exports.TableFeng = exports.UserIndex = exports.LayoutZOrder = exports.HandleType = exports.InvalidValue = exports.LayoutIndex = exports.LayoutFrameworkVersion = void 0;
    exports.LayoutFrameworkVersion = 2;
    var LayoutIndex;
    (function(LayoutIndex) {
      LayoutIndex[LayoutIndex["heap_bottm"] = 0] = "heap_bottm";
      LayoutIndex[LayoutIndex["heap_left"] = 1] = "heap_left";
      LayoutIndex[LayoutIndex["heap_right"] = 2] = "heap_right";
      LayoutIndex[LayoutIndex["heap_top"] = 3] = "heap_top";
      LayoutIndex[LayoutIndex["hua_bottm"] = 4] = "hua_bottm";
      LayoutIndex[LayoutIndex["hua_left"] = 5] = "hua_left";
      LayoutIndex[LayoutIndex["hua_right"] = 6] = "hua_right";
      LayoutIndex[LayoutIndex["hua_top"] = 7] = "hua_top";
      LayoutIndex[LayoutIndex["out_bottm"] = 8] = "out_bottm";
      LayoutIndex[LayoutIndex["out_left"] = 9] = "out_left";
      LayoutIndex[LayoutIndex["out_right"] = 10] = "out_right";
      LayoutIndex[LayoutIndex["out_top"] = 11] = "out_top";
      LayoutIndex[LayoutIndex["show_bottm"] = 12] = "show_bottm";
      LayoutIndex[LayoutIndex["show_left"] = 13] = "show_left";
      LayoutIndex[LayoutIndex["show_right"] = 14] = "show_right";
      LayoutIndex[LayoutIndex["show_top"] = 15] = "show_top";
      LayoutIndex[LayoutIndex["wall_bottm"] = 16] = "wall_bottm";
      LayoutIndex[LayoutIndex["wall_left"] = 17] = "wall_left";
      LayoutIndex[LayoutIndex["wall_right"] = 18] = "wall_right";
      LayoutIndex[LayoutIndex["wall_top"] = 19] = "wall_top";
    })(LayoutIndex = exports.LayoutIndex || (exports.LayoutIndex = {}));
    exports.InvalidValue = 0;
    var HandleType;
    (function(HandleType) {
      HandleType[HandleType["null"] = 0] = "null";
      HandleType[HandleType["pass"] = 1] = "pass";
      HandleType[HandleType["jiang"] = 2] = "jiang";
      HandleType[HandleType["b_chi_left"] = 3] = "b_chi_left";
      HandleType[HandleType["b_chi_mid"] = 4] = "b_chi_mid";
      HandleType[HandleType["b_chi_right"] = 5] = "b_chi_right";
      HandleType[HandleType["b_peng"] = 6] = "b_peng";
      HandleType[HandleType["b_gang"] = 7] = "b_gang";
      HandleType[HandleType["d_chi"] = 8] = "d_chi";
      HandleType[HandleType["d_peng"] = 9] = "d_peng";
      HandleType[HandleType["d_gang"] = 10] = "d_gang";
      HandleType[HandleType["a_gang"] = 11] = "a_gang";
      HandleType[HandleType["hu"] = 12] = "hu";
      HandleType[HandleType["ting"] = 13] = "ting";
      HandleType[HandleType["buhua"] = 14] = "buhua";
      HandleType[HandleType["mopai"] = 15] = "mopai";
      HandleType[HandleType["dianpaohu"] = 16] = "dianpaohu";
      HandleType[HandleType["jiabai"] = 17] = "jiabai";
    })(HandleType = exports.HandleType || (exports.HandleType = {}));
    var LayoutZOrder;
    (function(LayoutZOrder) {
      LayoutZOrder[LayoutZOrder["LastOutCardIndicator"] = 1900] = "LastOutCardIndicator";
      LayoutZOrder[LayoutZOrder["HandleSelect"] = 2e3] = "HandleSelect";
      LayoutZOrder[LayoutZOrder["HandleAni"] = 3e3] = "HandleAni";
      LayoutZOrder[LayoutZOrder["Topest"] = 9999] = "Topest";
    })(LayoutZOrder = exports.LayoutZOrder || (exports.LayoutZOrder = {}));
    var UserIndex;
    (function(UserIndex) {
      UserIndex[UserIndex["left"] = 0] = "left";
      UserIndex[UserIndex["down"] = 1] = "down";
      UserIndex[UserIndex["right"] = 2] = "right";
      UserIndex[UserIndex["up"] = 3] = "up";
    })(UserIndex = exports.UserIndex || (exports.UserIndex = {}));
    var TableFeng;
    (function(TableFeng) {
      TableFeng[TableFeng["none"] = 0] = "none";
      TableFeng[TableFeng["east"] = 1] = "east";
      TableFeng[TableFeng["north"] = 2] = "north";
      TableFeng[TableFeng["west"] = 3] = "west";
      TableFeng[TableFeng["south"] = 4] = "south";
    })(TableFeng = exports.TableFeng || (exports.TableFeng = {}));
    var LayoutCardsType;
    (function(LayoutCardsType) {
      LayoutCardsType[LayoutCardsType["hand"] = 0] = "hand";
      LayoutCardsType[LayoutCardsType["heap"] = 1] = "heap";
      LayoutCardsType[LayoutCardsType["out"] = 2] = "out";
      LayoutCardsType[LayoutCardsType["hua"] = 3] = "hua";
    })(LayoutCardsType = exports.LayoutCardsType || (exports.LayoutCardsType = {}));
    var HandleButtonIndex;
    (function(HandleButtonIndex) {
      HandleButtonIndex[HandleButtonIndex["Chi"] = 0] = "Chi";
      HandleButtonIndex[HandleButtonIndex["Peng"] = 1] = "Peng";
      HandleButtonIndex[HandleButtonIndex["Gang"] = 2] = "Gang";
      HandleButtonIndex[HandleButtonIndex["Hu"] = 3] = "Hu";
      HandleButtonIndex[HandleButtonIndex["Ting"] = 4] = "Ting";
      HandleButtonIndex[HandleButtonIndex["Pass"] = 5] = "Pass";
    })(HandleButtonIndex = exports.HandleButtonIndex || (exports.HandleButtonIndex = {}));
    var DarkGangConfig;
    (function(DarkGangConfig) {
      DarkGangConfig[DarkGangConfig["Value"] = 0] = "Value";
      DarkGangConfig[DarkGangConfig["Back"] = 1] = "Back";
    })(DarkGangConfig = exports.DarkGangConfig || (exports.DarkGangConfig = {}));
    exports.LayoutConfig = {
      log_enable: false,
      print_enable: false,
      show_card_value_on_dark_gang: true,
      show_heap_arrow: false,
      tile_hua_card: false,
      play_insert_card: true,
      custom_self_handcard_scale: 1,
      show_self_dark_gang_card_value: true,
      auto_hide_handle_select: true
    };
    cc._RF.pop();
  }, {} ],
  cards_3d_layout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a5942Iro2lNY7jFWWwSPJch", "cards_3d_layout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const table_3d_layout_1 = require("./table_3d_layout");
    const cards_3d_config_1 = require("./cards_3d_config");
    const cards_3d_logic_1 = require("./cards_3d_logic");
    const CSelfCardsController_1 = require("./widget/CSelfCardsController");
    const CHandleSelect3D_1 = require("./widget/CHandleSelect3D");
    const CCardPoint3D_1 = require("./widget/CCardPoint3D");
    const game_tools_1 = require("./game_tools");
    const CSelfHandCard3D_1 = require("./widget/CSelfHandCard3D");
    const CTiledCard3D_1 = require("./widget/CTiledCard3D");
    const CHandCard3D_1 = require("./widget/CHandCard3D");
    const CHandledCards3D_1 = require("./widget/CHandledCards3D");
    const bind_function_1 = require("../../Script/Framework/lobby/bind_function");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let cards_3d_layout = (() => {
      var cards_3d_layout_1;
      let cards_3d_layout = cards_3d_layout_1 = class cards_3d_layout extends cc.Component {
        constructor() {
          super(...arguments);
          this._view_root = null;
          this._view_size = null;
          this._table_3d_layout = null;
          this._layout = null;
          this._layout_offset = null;
          this._corner_config = null;
          this._dark_card_value = null;
          this._hand_cards = null;
          this._heap_cards = null;
          this._out_cards = null;
          this._hua_cards = null;
          this._handle_ani = null;
          this._handle_ani_pos = null;
          this._hu_ineditor_ani = null;
          this.CSelfCardsController = null;
          this.cards_3d_logic = null;
          this._handle_select = null;
          this._last_out_card_indicator = null;
          this.CardExchangeTable = [];
          this.index_table = {
            heap: [ cards_3d_config_1.LayoutIndex.heap_bottm, cards_3d_config_1.LayoutIndex.heap_left, cards_3d_config_1.LayoutIndex.heap_right, cards_3d_config_1.LayoutIndex.heap_top ],
            hua: [ cards_3d_config_1.LayoutIndex.hua_bottm, cards_3d_config_1.LayoutIndex.hua_left, cards_3d_config_1.LayoutIndex.hua_right, cards_3d_config_1.LayoutIndex.hua_top ],
            out: [ cards_3d_config_1.LayoutIndex.out_bottm, cards_3d_config_1.LayoutIndex.out_left, cards_3d_config_1.LayoutIndex.out_right, cards_3d_config_1.LayoutIndex.out_top ],
            show: [ cards_3d_config_1.LayoutIndex.show_bottm, cards_3d_config_1.LayoutIndex.show_left, cards_3d_config_1.LayoutIndex.show_right, cards_3d_config_1.LayoutIndex.show_top ],
            wall: [ cards_3d_config_1.LayoutIndex.wall_bottm, cards_3d_config_1.LayoutIndex.wall_left, cards_3d_config_1.LayoutIndex.wall_right, cards_3d_config_1.LayoutIndex.wall_top ]
          };
        }
        onLoad() {
          this._view_root = null;
          this._view_size = null;
          this._table_3d_layout = null;
          this._layout = {};
          this._corner_config = {};
          this._dark_card_value = null;
          cards_3d_layout_1._inst = this;
          window && (window.cards_3d_layout = this);
        }
        start() {}
        static get() {
          if (!table_3d_layout_1.default.get() || !table_3d_layout_1.default.get().loadFinish) {
            console.error("cards_3d_layout.get() return null");
            return null;
          }
          return this._inst;
        }
        init(table_3d_layout) {
          game_tools_1.default.log("init");
          let view_root = this.node;
          let view_size = game_tools_1.default.getLayoutViewSize();
          this._view_root = view_root;
          this._view_size = view_size;
          this._table_3d_layout = table_3d_layout;
          this._layout = {};
          this._corner_config = {};
          this._dark_card_value = null;
          this._hand_cards = [ [], [], [], [] ];
          this._heap_cards = [ [], [], [], [] ];
          this._out_cards = [ [], [], [], [] ];
          this._hua_cards = [ [], [], [], [] ];
          let path = "layout_" + table_3d_layout.Layout3DUserCount + "_" + table_3d_layout.Layout3DMaxHandcardCount + "/";
          this.initLayout(path);
          this.CSelfCardsController = new cc.Node("CSelfCardsController").addComponent(CSelfCardsController_1.default);
          this.node.addChild(this.CSelfCardsController.node);
          this.CSelfCardsController.init(view_root, view_size, table_3d_layout.Layout3DMaxHandcardCount, this._hand_cards[cards_3d_config_1.UserIndex.down], this._heap_cards[cards_3d_config_1.UserIndex.down]);
          this.cards_3d_logic = new cc.Node("cards_3d_logic").addComponent(cards_3d_logic_1.default);
          this.node.addChild(this.cards_3d_logic.node);
          this.cards_3d_logic.init();
          let that = this;
          this.CSelfCardsController.setOnAnyTouchEventFunc(function(sender, event) {
            that._on_any_touch_event_func && that._on_any_touch_event_func(sender, event);
          });
          this.CSelfCardsController.setSelectedIndexFunc(function(int_index) {
            let handcards = that.cards_3d_logic.getCards(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand);
            handcards && int_index < handcards.length && that.setDarkCardValue(handcards[int_index]);
          });
          this.CSelfCardsController.setOnMoveCardOutFunc(function(card) {
            let byte_card = card.getCardValue();
            that.outCard(cards_3d_config_1.UserIndex.down, byte_card, card._touch_pos, that.CSelfCardsController.FindCardIndex(card));
            that._move_card_out_func && that._move_card_out_func(byte_card);
          });
          this.CSelfCardsController.setOnClickCardOutFunc(function(card) {
            let byte_card = card.getCardValue();
            that.outCard(cards_3d_config_1.UserIndex.down, byte_card, card._touch_pos, that.CSelfCardsController.FindCardIndex(card));
            that._click_card_out_func && that._click_card_out_func(byte_card);
          });
          this.CSelfCardsController.setOnClickCardFunc(function(card) {
            let byte_card = card.getCardValue();
            that._click_card_func && that._click_card_func(byte_card);
          });
          this.CSelfCardsController.setOnInsertHandCardFinishFunc(function() {});
          this.cards_3d_logic.setSortCardsFunc(function(list_card) {
            return that._sort_cards_func ? that._sort_cards_func(list_card) : null;
          });
          this._handle_select = new cc.Node("CHandleSelect3D").addComponent(CHandleSelect3D_1.default).node;
          this._handle_select.getComponent(CHandleSelect3D_1.default).init(this._view_size);
          this._handle_select.setPosition(cc.v2(0, 0));
          this._handle_select.zIndex = cards_3d_config_1.LayoutZOrder.HandleSelect;
          view_root.addChild(this._handle_select);
          this._handle_select.getComponent(CHandleSelect3D_1.default).setOnResultFunc(function(arg) {
            that._handle_clicked_func && that._handle_clicked_func(arg);
          });
          this._handle_ani = [];
          for (let i in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) if (null == this._handle_ani[i]) {
            this._handle_ani[i] = cc.instantiate(this._table_3d_layout.animationPrefab);
            this._handle_ani[i].name = "_handle_ani[" + i + "]";
            this._handle_ani[i].setPosition(this._handle_ani_pos[i]);
            this._handle_ani[i].zIndex = cards_3d_config_1.LayoutZOrder.HandleAni;
            view_root.addChild(this._handle_ani[i]);
          }
          this._hu_ineditor_ani = [];
          for (let i in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) if (null == this._hu_ineditor_ani[i]) {
            this._hu_ineditor_ani[i] = cc.instantiate(this._table_3d_layout.animationDianPaoHuPrefab);
            this._hu_ineditor_ani[i].name = "_dian_pao_ani[" + i + "]";
            this._hu_ineditor_ani[i].setPosition(cc.v2(0, 0));
            this._hu_ineditor_ani[i].zIndex = cards_3d_config_1.LayoutZOrder.HandleAni - 10;
            this._hu_ineditor_ani[i].active = false;
            view_root.addChild(this._hu_ineditor_ani[i]);
          }
        }
        reset() {
          game_tools_1.default.log("reset");
          for (let i = 0; i < 4; ++i) {
            this._hand_cards[i].forEach(cards => {
              i == cards_3d_config_1.UserIndex.down ? cards.getComponent(CSelfHandCard3D_1.default).hideCard() : cards.getComponent(CHandCard3D_1.default).hideCard();
            });
            this._heap_cards[i].forEach(cards => {
              cards.getComponent(CHandledCards3D_1.default).hideCards();
            });
            this._out_cards[i].forEach(cards => {
              cards.getComponent(CTiledCard3D_1.default).hideCard();
            });
            this._hua_cards[i].forEach(cards => {
              cards.getComponent(CTiledCard3D_1.default).hideCard();
            });
          }
          this.cards_3d_logic.reset();
          this.CSelfCardsController.reset();
          this._corner_config = {};
          this._last_out_card_indicator && this._last_out_card_indicator.getComponent(CCardPoint3D_1.default).hidePoint();
        }
        onDestroy() {}
        setHandCards(e_index, list_cards, int_show_count) {
          game_tools_1.default.log("setHandCards", e_index, list_cards, int_show_count);
          if (list_cards) {
            let list_cpy = game_tools_1.default.clone(list_cards);
            this.cards_3d_logic.setCards(e_index, cards_3d_config_1.LayoutCardsType.hand, list_cpy);
          }
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand, {
            show_count: int_show_count
          });
        }
        setOutCards(e_index, list_cards) {
          game_tools_1.default.log("setOutCards", e_index, list_cards);
          let list_cpy = game_tools_1.default.clone(list_cards);
          this.cards_3d_logic.setCards(e_index, cards_3d_config_1.LayoutCardsType.out, list_cpy);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.out);
        }
        setHeapCards(e_index, list_heaps) {
          game_tools_1.default.log("setHeapCards", e_index, list_heaps);
          let h = [];
          for (let i = 0; i < list_heaps.length; ++i) {
            let s = {
              value: list_heaps[i]._value,
              type: list_heaps[i]._type,
              from: list_heaps[i]._from,
              cai_value: list_heaps[i].cai_value
            };
            h.push(s);
          }
          this.cards_3d_logic.setHeaps(e_index, h);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.heap);
        }
        setHuaCards(e_index, list_cards) {
          game_tools_1.default.log("setHuaCards", e_index, list_cards);
          let list_cpy = game_tools_1.default.clone(list_cards);
          this.cards_3d_logic.setCards(e_index, cards_3d_config_1.LayoutCardsType.hua, list_cpy);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hua);
        }
        getLastHandCardInfo(e_index) {
          game_tools_1.default.log("getLastHandCardInfo", e_index);
          this.funcNotReadyError("getLastHandCardInfo");
          return {
            x: 1234567,
            y: 1234567,
            index: -1
          };
        }
        getHandleSelectButton(buttonIndex) {
          if (this._handle_select && this._handle_select.getComponent(CHandleSelect3D_1.default)._btn_handle) return this._handle_select.getComponent(CHandleSelect3D_1.default)._btn_handle[buttonIndex];
          return null;
        }
        setSortCardsFunc(cb_function) {
          game_tools_1.default.log("setSortCardsFunc", null);
          cb_function && "function" == typeof cb_function && (this._sort_cards_func = cb_function);
        }
        setOutCardEndFunc(cb_function) {
          game_tools_1.default.log("setOutCardEndFunc", null);
          cb_function && "function" == typeof cb_function && (this._outcard_end_func = cb_function);
        }
        setOnConfigDarkGangFunc(cb_function) {
          game_tools_1.default.log("setOnConfigDarkGangFunc", null);
          cb_function && "function" == typeof cb_function && (this._on_config_dark_gang_func = cb_function);
        }
        setOnAnyTouchEventFunc(cb_function) {
          game_tools_1.default.log("setOnAnyTouchEventFunc", null);
          cb_function && "function" == typeof cb_function && (this._on_any_touch_event_func = cb_function);
        }
        setMoveCardOutFunc(cb_function) {
          game_tools_1.default.log("setMoveCardOutFunc", null);
          cb_function && "function" == typeof cb_function && (this._move_card_out_func = cb_function);
        }
        setClickCardOutFunc(cb_function) {
          game_tools_1.default.log("setClickCardOutFunc", null);
          cb_function && "function" == typeof cb_function && (this._click_card_out_func = cb_function);
        }
        setClickCardFunc(cb_function) {
          game_tools_1.default.log("setClickCardFunc", null);
          cb_function && "function" == typeof cb_function && (this._click_card_func = cb_function);
        }
        setFindCardInHandPositionFunc(cb_function) {
          if (cb_function && "function" == typeof cb_function) {
            this._find_card_in_hand_position_func = cb_function;
            let that = this;
            this.CSelfCardsController.setFindCardInHandPositionFunc(function(cards, value) {
              return that._find_card_in_hand_position_func(cards, value);
            });
          }
        }
        setHandleClickedFunc(cb_function) {
          game_tools_1.default.log("setHandleClickedFunc", null);
          cb_function && "function" == typeof cb_function && (this._handle_clicked_func = cb_function);
        }
        setHandCardsCanTouch(bool_can_touch, list_index) {
          game_tools_1.default.log("setHandCardsCanTouch", bool_can_touch, list_index);
          let list_cpy = game_tools_1.default.clone(list_index);
          this.CSelfCardsController.setHandCardsCanTouch(bool_can_touch, list_cpy);
        }
        setHandCardsCanTouchByValue(bool_can_touch, list_value) {
          game_tools_1.default.log("setHandCardsCanTouchByValue", bool_can_touch, list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsCanTouchByValue(bool_can_touch, list_cpy);
        }
        setHandCardsCanOut(bool_can_out, list_index) {
          game_tools_1.default.log("setHandCardsCanOut", bool_can_out, list_index);
          let list_cpy = game_tools_1.default.clone(list_index);
          this.CSelfCardsController.setHandCardsCanOut(bool_can_out, list_cpy);
        }
        setHandCardsCanOutByValue(bool_can_out, list_value) {
          game_tools_1.default.log("setHandCardsCanOutByValue", bool_can_out, list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsCanOutByValue(bool_can_out, list_cpy);
        }
        setHandCardsDark(bool_set_dark, list_index) {
          game_tools_1.default.log("setHandCardsDark", bool_set_dark, list_index);
          let list_cpy = game_tools_1.default.clone(list_index);
          this.CSelfCardsController.setHandCardsDark(bool_set_dark, list_cpy);
        }
        setHandCardsDarkByValue(bool_set_dark, list_value) {
          game_tools_1.default.log("setHandCardsDarkByValue", bool_set_dark, list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsDarkByValue(bool_set_dark, list_cpy);
        }
        setHandCardsTing(list_index) {
          game_tools_1.default.log("setHandCardsTing", list_index);
          let list_cpy = game_tools_1.default.clone(list_index);
          this.CSelfCardsController.setHandCardsTing(list_cpy);
        }
        setHandCardsTingByValue(list_value) {
          game_tools_1.default.log("setHandCardsTingByValue", list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsTingByValue(list_cpy);
        }
        setHandCardsTingDaByValue(list_value) {
          game_tools_1.default.log("setHandCardsTingDaByValue", list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsTingDaByValue(list_cpy);
        }
        setHandCardsTingDuoByValue(list_value) {
          game_tools_1.default.log("setHandCardsTingDuoByValue", list_value);
          let list_cpy = game_tools_1.default.clone(list_value);
          this.CSelfCardsController.setHandCardsTingDuoByValue(list_cpy);
        }
        unselectAllHandCards() {
          this.CSelfCardsController.setSelectedIndex(-1);
          this.CSelfCardsController.refreshHandCards();
        }
        catchCard(e_index, byte_card) {
          game_tools_1.default.log("catchCard", e_index, byte_card);
          this.cards_3d_logic.catchCard(e_index, byte_card);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
        }
        outCard(e_index, byte_card, position, int_pos) {
          game_tools_1.default.log("outCard", e_index, byte_card, position, int_pos);
          let begin_info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.hand);
          if (position) {
            begin_info = {
              x: null,
              y: null,
              index: null
            };
            begin_info.x = position.x;
            begin_info.y = position.y;
          }
          if (cards_3d_config_1.LayoutConfig.play_insert_card && e_index == cards_3d_config_1.UserIndex.down) {
            this.CSelfCardsController._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).hideCard();
            this.CSelfCardsController.insertLastCardInHandCards(int_pos);
          }
          this.cards_3d_logic.outCard(e_index, byte_card);
          cards_3d_config_1.LayoutConfig.play_insert_card && e_index == cards_3d_config_1.UserIndex.down || this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.out);
          let visual_end_info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.out);
          let c = this._out_cards[e_index][visual_end_info.index];
          let end_position = cc.v2(visual_end_info.x - c.getComponent(CTiledCard3D_1.default)._card_img.position.x, visual_end_info.y - c.getComponent(CTiledCard3D_1.default)._card_img.position.y);
          if (!begin_info) {
            this._outcard_end_func && this._outcard_end_func(e_index, cc.v2(visual_end_info.x, visual_end_info.y));
            return;
          }
          let p1 = null;
          e_index == cards_3d_config_1.UserIndex.up || e_index == cards_3d_config_1.UserIndex.down ? p1 = cc.v2(begin_info.x, end_position.y) : e_index != cards_3d_config_1.UserIndex.left && e_index != cards_3d_config_1.UserIndex.right || (p1 = cc.v2(end_position.x, begin_info.y));
          let tmp_zorder = this._out_cards[e_index][visual_end_info.index].zIndex;
          this._out_cards[e_index][visual_end_info.index].runAction(cc.sequence(cc.callFunc(function() {
            bind_function_1.bf.pause_message();
            this._out_cards[e_index][visual_end_info.index].setPosition(cc.v2(begin_info.x, begin_info.y));
            this._out_cards[e_index][visual_end_info.index].zIndex = cards_3d_config_1.LayoutZOrder.Topest;
          }, this), cc.bezierTo(.2, [ cc.v2(begin_info.x, begin_info.y), p1, cc.v2(visual_end_info.x, visual_end_info.y) ]), cc.callFunc(function() {
            this._out_cards[e_index][visual_end_info.index].zIndex = tmp_zorder;
            this._out_cards[e_index][visual_end_info.index].setPosition(cc.v2(end_position.x, end_position.y));
            this._outcard_end_func && this._outcard_end_func(e_index, cc.v2(visual_end_info.x, visual_end_info.y));
            bind_function_1.bf.restore_message();
          }, this)));
        }
        outCardEX(e_index, byte_card, position, int_pos, byte_card_other) {
          game_tools_1.default.log("outCard", e_index, byte_card, position, int_pos);
          let begin_info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_card_other);
          if (position) {
            begin_info = {
              x: null,
              y: null,
              index: null
            };
            begin_info.x = position.x;
            begin_info.y = position.y;
          }
          if (cards_3d_config_1.LayoutConfig.play_insert_card && e_index == cards_3d_config_1.UserIndex.down) {
            this.CSelfCardsController._hand_cards[int_pos].getComponent(CSelfHandCard3D_1.default).hideCard();
            this.CSelfCardsController.insertLastCardInHandCards(int_pos);
          }
          this.cards_3d_logic.outCard(e_index, byte_card);
          cards_3d_config_1.LayoutConfig.play_insert_card && e_index == cards_3d_config_1.UserIndex.down || this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.out);
          let visual_end_info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.out);
          let c = this._out_cards[e_index][visual_end_info.index];
          let end_position = cc.v2(visual_end_info.x - c.getComponent(CTiledCard3D_1.default)._card_img.position.x, visual_end_info.y - c.getComponent(CTiledCard3D_1.default)._card_img.position.y);
          if (!begin_info) {
            this._outcard_end_func && this._outcard_end_func(e_index, cc.v2(visual_end_info.x, visual_end_info.y));
            return;
          }
          let p1 = null;
          e_index == cards_3d_config_1.UserIndex.up || e_index == cards_3d_config_1.UserIndex.down ? p1 = cc.v2(begin_info.x, end_position.y) : e_index != cards_3d_config_1.UserIndex.left && e_index != cards_3d_config_1.UserIndex.right || (p1 = cc.v2(end_position.x, begin_info.y));
          let tmp_zorder = this._out_cards[e_index][visual_end_info.index].zIndex;
          this._out_cards[e_index][visual_end_info.index].runAction(cc.sequence(cc.callFunc(function() {
            bind_function_1.bf.pause_message();
            this._out_cards[e_index][visual_end_info.index].setPosition(cc.v2(begin_info.x, begin_info.y));
            this._out_cards[e_index][visual_end_info.index].zIndex = cards_3d_config_1.LayoutZOrder.Topest;
          }, this), cc.bezierTo(.2, [ cc.v2(begin_info.x, begin_info.y), p1, cc.v2(visual_end_info.x, visual_end_info.y) ]), cc.callFunc(function() {
            this._out_cards[e_index][visual_end_info.index].zIndex = tmp_zorder;
            this._out_cards[e_index][visual_end_info.index].setPosition(cc.v2(end_position.x, end_position.y));
            this._outcard_end_func && this._outcard_end_func(e_index, cc.v2(visual_end_info.x, visual_end_info.y));
            bind_function_1.bf.restore_message();
            if (e_index != cards_3d_config_1.UserIndex.down) {
              let cardslist = cards_3d_logic_1.default.get().getCards(e_index, cards_3d_config_1.LayoutCardsType.hand);
              cardslist.sort();
              this.setHandCards(e_index, cardslist, cardslist.length);
              this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
            }
          }, this)));
        }
        buHua(e_index, byte_card) {
          game_tools_1.default.log("buHua", e_index, byte_card);
          this.cards_3d_logic.buHua(e_index, byte_card);
          this.cards_3d_logic.sortHandCards(e_index);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hua);
        }
        handle(e_index, e_from_index, e_kind, byte_value, cai_shen_value) {
          game_tools_1.default.log("handle", e_index, e_from_index, e_kind, byte_value);
          e_index != cards_3d_config_1.UserIndex.down || e_kind != cards_3d_config_1.HandleType.d_gang && e_kind != cards_3d_config_1.HandleType.a_gang || this.cards_3d_logic.sortHandCards(e_index);
          this.cards_3d_logic.handle(e_index, e_from_index, e_kind, byte_value, cai_shen_value);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.hand);
          this.refreshLayout(e_index, cards_3d_config_1.LayoutCardsType.heap);
          e_from_index && -1 != e_from_index && this.refreshLayout(e_from_index, cards_3d_config_1.LayoutCardsType.out);
        }
        setDarkCardValue(byte_card) {
          game_tools_1.default.log("setDarkCardValue", byte_card);
          this._dark_card_value = byte_card;
          this.CSelfCardsController.setDarkCardValue(byte_card);
          this.refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.out);
          this.refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.out);
          this.refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.out);
          this.refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.out);
          this.refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.heap);
          this.refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.heap);
          this.refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.heap);
          this.refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.heap);
          this.refreshLayout(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hua);
          this.refreshLayout(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.hua);
          this.refreshLayout(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.hua);
          this.refreshLayout(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.hua);
        }
        setHuCardValueLighting(seat_id, handle, byte_card) {
          game_tools_1.default.log("setHuCardLightingValue", byte_card);
          if (seat_id == cards_3d_config_1.UserIndex.down) {
            if (handle == cards_3d_config_1.LayoutCardsType.out) return this.lightingHuCard(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.out, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.heap) return this.lightingHuCard(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.heap, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.hand) return this.lightingHuCard(cards_3d_config_1.UserIndex.down, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          } else if (seat_id == cards_3d_config_1.UserIndex.left) {
            if (handle == cards_3d_config_1.LayoutCardsType.out) return this.lightingHuCard(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.out, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.heap) return this.lightingHuCard(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.heap, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.hand) return this.lightingHuCard(cards_3d_config_1.UserIndex.left, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          } else if (seat_id == cards_3d_config_1.UserIndex.right) {
            if (handle == cards_3d_config_1.LayoutCardsType.out) return this.lightingHuCard(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.out, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.heap) return this.lightingHuCard(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.heap, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.hand) return this.lightingHuCard(cards_3d_config_1.UserIndex.right, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          } else if (seat_id == cards_3d_config_1.UserIndex.up) {
            if (handle == cards_3d_config_1.LayoutCardsType.out) return this.lightingHuCard(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.out, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.heap) return this.lightingHuCard(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.heap, byte_card);
            if (handle == cards_3d_config_1.LayoutCardsType.hand) return this.lightingHuCard(cards_3d_config_1.UserIndex.up, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          }
          return null;
        }
        lightingHuCard(e_index, e_type, e_byte) {
          if (e_type == cards_3d_config_1.LayoutCardsType.out) {
            let cards = this.cards_3d_logic.getCards(e_index, e_type);
            for (let i = cards.length - 1; i >= 0; i--) if (cards[i] == e_byte || cards[i] - 50 == e_byte) return this._out_cards[e_index][i];
          } else if (e_type == cards_3d_config_1.LayoutCardsType.heap) {
            let heaps = this.cards_3d_logic.getCards(e_index, e_type);
            for (let i = heaps.length - 1; i >= 0; i--) if (heaps[i].value == e_byte) return this._heap_cards[e_index][i].getComponent(CHandledCards3D_1.default)._handled_card[3];
          } else if (e_type == cards_3d_config_1.LayoutCardsType.hand) {
            let hands = this.cards_3d_logic.getCards(e_index, e_type);
            for (let i = hands.length - 1; i >= 0; i--) if (hands[i] == e_byte) return this._hand_cards[e_index][i];
          }
          return null;
        }
        setCornerCardValue(config) {
          game_tools_1.default.log("setCornerCardValue", config);
          let list_cpy = game_tools_1.default.clone(config);
          this._corner_config = list_cpy;
          this.CSelfCardsController.setCornerCardValue(list_cpy);
        }
        showHuCardIndicator(e_index, e_x, e_y, e_scale) {
          this._hu_ineditor_ani[e_index].active = true;
          this._hu_ineditor_ani[e_index].setScale(e_scale);
          this._hu_ineditor_ani[e_index].getChildByName("hupaibiaoji").active = true;
          this._hu_ineditor_ani[e_index].getChildByName("hupaibiaoji").getComponent(cc.Animation).play();
          this._hu_ineditor_ani[e_index].setPosition(e_x, e_y);
        }
        showLastOutCardIndicator(e_index) {
          if (!this._last_out_card_indicator) {
            this._last_out_card_indicator = new cc.Node("_last_out_card_indicator").addComponent(CCardPoint3D_1.default).node;
            this._last_out_card_indicator.getComponent(CCardPoint3D_1.default).init();
            this._view_root.addChild(this._last_out_card_indicator);
            this._last_out_card_indicator.zIndex = cards_3d_config_1.LayoutZOrder.LastOutCardIndicator;
          }
          if (null != e_index) {
            let info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.out);
            if (info) {
              this._last_out_card_indicator.setPosition(cc.v2(info.x, info.y));
              this._last_out_card_indicator.getComponent(CCardPoint3D_1.default).showPoint();
            }
          } else this._last_out_card_indicator.getComponent(CCardPoint3D_1.default).hidePoint();
        }
        showHandleSelect(list_handle, cai_shen_value) {
          game_tools_1.default.log("showHandleSelect", list_handle);
          let list_cpy = game_tools_1.default.clone(list_handle);
          this._handle_select.getComponent(CHandleSelect3D_1.default).setHandleData(list_cpy, cai_shen_value);
          this._handle_select.getComponent(CHandleSelect3D_1.default).show();
        }
        showHandleSelectCanTouch(can) {
          this._handle_select.getComponent(CHandleSelect3D_1.default).canTouch(can);
        }
        hideHandleSelect() {
          game_tools_1.default.log("hideHandleSelect", null);
          this._handle_select.getComponent(CHandleSelect3D_1.default).hide();
        }
        playHandleAnimation(e_index, e_type, byte_card, cai_shen_value) {
          game_tools_1.default.log("playHandleAnimation", e_index, e_type, byte_card);
          this._handle_ani[e_index].active = true;
          let show_time = 1.5;
          this._card_imgs = [];
          let bone_card_scale = 1;
          let that = this;
          if (e_type == cards_3d_config_1.HandleType.b_peng) {
            let playNode = this._handle_ani[e_index].getChildByName("peng");
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), byte_card, bone_card_scale));
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), byte_card, bone_card_scale));
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), byte_card, bone_card_scale));
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.b_chi_left) {
            let playNode = this._handle_ani[e_index].getChildByName("chi");
            playNode.active = true;
            byte_card == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), byte_card, bone_card_scale));
            byte_card + 1 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), byte_card + 1, bone_card_scale));
            byte_card + 2 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), byte_card + 2, bone_card_scale));
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.b_chi_mid) {
            let playNode = this._handle_ani[e_index].getChildByName("chi");
            byte_card - 1 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), byte_card - 1, bone_card_scale));
            byte_card == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), byte_card, bone_card_scale));
            byte_card + 1 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), byte_card + 1, bone_card_scale));
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.b_chi_right) {
            let playNode = this._handle_ani[e_index].getChildByName("chi");
            byte_card - 2 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), byte_card - 2, bone_card_scale));
            byte_card - 1 == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), byte_card - 1, bone_card_scale));
            byte_card == cai_shen_value ? this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), 47, bone_card_scale)) : this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), byte_card, bone_card_scale));
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.b_gang) {
            let playNode = this._handle_ani[e_index].getChildByName("gang");
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2").getChildByName("own_block_bg_1"), byte_card, bone_card_scale));
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_2"), byte_card, bone_card_scale));
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3"), byte_card, bone_card_scale));
            this._card_imgs.push(this.replayBoneCard(playNode.getChildByName("own_block_bg_3").getChildByName("own_block_bg_4"), byte_card, bone_card_scale));
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.d_gang || e_type == cards_3d_config_1.HandleType.a_gang) {
            let playNode = this._handle_ani[e_index].getChildByName("angang");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.hu) {
            let playNode = this._handle_ani[e_index].getChildByName("hu");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.ting) {
            let playNode = this._handle_ani[e_index].getChildByName("ting");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.jiabai) {
            let playNode = this._handle_ani[e_index].getChildByName("jiebei");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.buhua) {
            let playNode = this._handle_ani[e_index].getChildByName("buhua");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.mopai) {
            let playNode = this._handle_ani[e_index].getChildByName("mopai");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          } else if (e_type == cards_3d_config_1.HandleType.dianpaohu) {
            let playNode = this._handle_ani[e_index].getChildByName("dianpaohu");
            playNode.active = true;
            playNode.getComponent(cc.Animation).play();
            playNode.stopAllActions();
            playNode.runAction(cc.sequence(cc.delayTime(show_time), cc.callFunc(function() {
              that.commonHandleAniFinished(playNode);
            })));
          }
        }
        replayBoneCard(bone, byte_card, card_scale, bool_lay = true, corner_id = null) {
          let card_value = byte_card;
          null != this.CardExchangeTable[card_value] && (card_value = this.CardExchangeTable[card_value]);
          bone.getComponent(cc.Sprite).enabled = false;
          let card = bone.getChildByName("HANDCARD");
          if (null == card) {
            card = this.CSelfCardsController.newHandCard();
            card.name = "HANDCARD";
            let info = this.CSelfCardsController.makeHandCardLayoutInfo(1, bool_lay);
            card.getComponent(CSelfHandCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
            card.setPosition(cc.v2(0, 0));
            card.setScale(card_scale);
            bone.addChild(card);
          }
          card.getComponent(CSelfHandCard3D_1.default).showCard(card_value, corner_id);
          return card.getComponent(CSelfHandCard3D_1.default)._card_img;
        }
        commonHandleAniFinished(playNode) {
          playNode.active = false;
        }
        getLogic() {
          return this.cards_3d_logic;
        }
        refreshSelfCards(e_type, args) {
          if (e_type == cards_3d_config_1.LayoutCardsType.hand) {
            let cards = this.cards_3d_logic.getCards(cards_3d_config_1.UserIndex.down, e_type);
            let int_show_count = cards.length;
            args && null != args.show_count && (int_show_count = args.show_count);
            this.CSelfCardsController.setHandCards(cards, int_show_count);
          } else if (e_type == cards_3d_config_1.LayoutCardsType.heap) {
            let heaps = this.cards_3d_logic.getCards(cards_3d_config_1.UserIndex.down, e_type);
            this.CSelfCardsController.setHeapCards(heaps);
          }
        }
        laySelfHandCards(bool_lay) {
          this.CSelfCardsController.layHandCards(bool_lay);
        }
        getNewHandCard(bool_lay) {
          let card = this.CSelfCardsController.newHandCard();
          let info = this.CSelfCardsController.makeHandCardLayoutInfo(1, bool_lay);
          card.getComponent(CSelfHandCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
          card.setPosition(cc.v2(0, 0));
          return card;
        }
        refreshLayout(e_index, e_type, args) {
          if (e_index == cards_3d_config_1.UserIndex.down && (e_type == cards_3d_config_1.LayoutCardsType.hand || e_type == cards_3d_config_1.LayoutCardsType.heap)) {
            this.refreshSelfCards(e_type, args);
            return;
          }
          if (e_type != cards_3d_config_1.LayoutCardsType.hand || this.isSelfIndex(e_index)) if (e_type == cards_3d_config_1.LayoutCardsType.out) {
            let cards = this.cards_3d_logic.getCards(e_index, e_type);
            for (let i = 0; i < cards.length; ++i) this.addOutCard(e_index, cards[i], i);
            for (let i = this._out_cards[e_index].length - 1; i >= cards.length; --i) this.removeOutCard(e_index, i);
          } else if (e_type != cards_3d_config_1.LayoutCardsType.heap || this.isSelfIndex(e_index)) {
            if (e_type == cards_3d_config_1.LayoutCardsType.hua) {
              let cards = this.cards_3d_logic.getCards(e_index, e_type);
              if (cards_3d_config_1.LayoutConfig.tile_hua_card) {
                let count_list = {};
                let final_cards = [];
                for (let i = 0; i < cards.length; ++i) if (count_list[cards[i]]) count_list[cards[i]] = count_list[cards[i]] + 1; else {
                  count_list[cards[i]] = 1;
                  final_cards.push(cards[i]);
                }
                for (let i = 0; i < final_cards.length; ++i) {
                  this.addHuaCard(e_index, final_cards[i], i);
                  let count = count_list[final_cards[i]];
                  count > 4 && (count = 4);
                  count < 1 && (count = 1);
                  count > 1 ? this._hua_cards[e_index][i].getComponent(CTiledCard3D_1.default).showCorner(count + 2) : this._hua_cards[e_index][i].getComponent(CTiledCard3D_1.default).hideCorner();
                }
                for (let i = this._hua_cards[e_index].length - 1; i >= final_cards.length; --i) this.removeHuaCard(e_index, i);
              } else {
                for (let i = 0; i < cards.length; ++i) this.addHuaCard(e_index, cards[i], i);
                for (let i = this._hua_cards[e_index].length - 1; i >= cards.length; --i) this.removeHuaCard(e_index, i);
              }
            }
          } else {
            let heaps = this.cards_3d_logic.getCards(e_index, e_type);
            for (let i = 0; i < heaps.length; ++i) this.addHeapCard(e_index, heaps[i].from, heaps[i].type, heaps[i].value, i, heaps[i].cai_value);
            for (let i = this._heap_cards[e_index].length - 1; i >= heaps.length + 1; --i) this.removeHeapCard(e_index, i);
          } else {
            let cards = this.cards_3d_logic.getCards(e_index, e_type);
            let int_count = cards.length;
            let int_show_count = int_count;
            args && args.show_count && 0 != args.show_count && (int_show_count = args.show_count);
            let item_name;
            int_count < 3 ? item_name = "items_2" : int_count < 6 ? item_name = "items_5" : int_count < 9 ? item_name = "items_8" : int_count < 12 ? item_name = "items_11" : int_count < 15 ? item_name = "items_14" : int_count < 18 && (item_name = "items_17");
            for (let i = 0; i < int_show_count; ++i) this.addHandCard(e_index, item_name, cards[i], i);
            for (let i = this._hand_cards[e_index].length - 1; i >= int_show_count; --i) this.removeHandCard(e_index, i);
          }
        }
        getLastVisibleCardInfo(e_index, e_type, e_value) {
          let target = null;
          e_type == cards_3d_config_1.LayoutCardsType.hand ? target = this._hand_cards[e_index] : e_type == cards_3d_config_1.LayoutCardsType.heap ? target = this._heap_cards[e_index] : e_type == cards_3d_config_1.LayoutCardsType.out ? target = this._out_cards[e_index] : e_type == cards_3d_config_1.LayoutCardsType.hua && (target = this._hua_cards[e_index]);
          let ret_tbl = {
            x: null,
            y: null,
            index: null
          };
          let n = this.cards_3d_logic.getCardsLength(e_index, e_type);
          if (n > 0) {
            if (e_value) {
              if (e_type == cards_3d_config_1.LayoutCardsType.hand && e_index != cards_3d_config_1.UserIndex.down) {
                let first_card_value = 0;
                target[0] && (first_card_value = target[0].getComponent(CHandCard3D_1.default).getCardValue());
                if (0 == first_card_value) {
                  for (let i = n - 1; i >= 0; --i) if (target[i] && target[i].active) {
                    ret_tbl.x = target[i].position.x;
                    ret_tbl.y = target[i].position.y;
                    ret_tbl.index = i;
                    break;
                  }
                } else for (let i = n - 1; i >= 0; --i) if (target[i] && target[i].active && target[i].getComponent(CHandCard3D_1.default).getCardValue() == e_value) {
                  ret_tbl.x = target[i].position.x;
                  ret_tbl.y = target[i].position.y;
                  ret_tbl.index = i;
                  break;
                }
              }
              return ret_tbl;
            }
            for (let i = n - 1; i >= 0; --i) if (target[i] && target[i].active) {
              ret_tbl.x = target[i].position.x;
              ret_tbl.y = target[i].position.y;
              if (e_type == cards_3d_config_1.LayoutCardsType.out) {
                ret_tbl.x = ret_tbl.x + target[i].getComponent(CTiledCard3D_1.default)._card_img.position.x;
                ret_tbl.y = ret_tbl.y + target[i].getComponent(CTiledCard3D_1.default)._card_img.position.y;
              }
              ret_tbl.index = i;
              break;
            }
            return ret_tbl;
          }
        }
        isSelfIndex(e_index) {
          if (e_index == cards_3d_config_1.UserIndex.down) return true;
          return false;
        }
        addHandCard(e_index, s_item, byte_card, int_pos) {
          if (this.isSelfIndex(e_index)) return;
          let bool_wall = byte_card == cards_3d_config_1.InvalidValue;
          null == int_pos && (int_pos = this._hand_cards[e_index].length);
          if (!this._hand_cards[e_index][int_pos]) {
            this._hand_cards[e_index][int_pos] = new cc.Node("_hand_cards[" + e_index + "][" + int_pos + "]").addComponent(CHandCard3D_1.default).node;
            this._view_root.addChild(this._hand_cards[e_index][int_pos]);
          }
          if (this._hand_cards[e_index][int_pos]) {
            let word = "show";
            bool_wall && (word = "wall");
            let info = this.getLayoutInfo(e_index, word, s_item, int_pos);
            this._hand_cards[e_index][int_pos].getComponent(CHandCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
            this._hand_cards[e_index][int_pos].getComponent(CHandCard3D_1.default).showCard(byte_card, this._corner_config[byte_card], false);
          }
        }
        removeHandCard(e_index, int_pos) {
          if (this._hand_cards[e_index] && this._hand_cards[e_index].length > 0) {
            if (null == int_pos) {
              let info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.hand);
              int_pos = info.index;
            }
            this._hand_cards[e_index][int_pos].getComponent(CHandCard3D_1.default).hideCard();
          }
        }
        addOutCard(e_index, byte_card, int_pos) {
          if (null == int_pos) {
            let info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.out);
            int_pos = info ? info.index + 1 : 0;
          }
          if (!this._out_cards[e_index][int_pos]) {
            let info = this.getLayoutInfo(e_index, "out", "items", int_pos);
            if (info.card_info.id == int_pos) {
              this._out_cards[e_index][int_pos] = new cc.Node("_out_cards[" + e_index + "][" + int_pos + "]").addComponent(CTiledCard3D_1.default).node;
              this._out_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
              this._view_root.addChild(this._out_cards[e_index][int_pos]);
            }
          }
          this._out_cards[e_index][int_pos] && (byte_card > 60 ? this._out_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).showCard(byte_card - 50, this._corner_config[byte_card], false, true) : this._out_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).showCard(byte_card, this._corner_config[byte_card], byte_card == this._dark_card_value));
        }
        removeOutCard(e_index, int_pos) {
          if (this._out_cards[e_index] && this._out_cards[e_index].length > 0) {
            if (null == int_pos) {
              let info = this.getLastVisibleCardInfo(e_index, cards_3d_config_1.LayoutCardsType.out);
              int_pos = info.index;
            }
            this._out_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).hideCard();
          }
        }
        addHeapCard(e_index, e_fromIndex, e_kind, byte_card, int_pos, cai_shen_value) {
          null == int_pos && (int_pos = this._heap_cards[e_index].length);
          if (!this._heap_cards[e_index][int_pos]) {
            let info = this.getLayoutInfo(e_index, "heap", "items", int_pos);
            if (info.card_info.id == int_pos) {
              this._heap_cards[e_index][int_pos] = new cc.Node("_heap_cards[" + e_index + "][" + int_pos + "]").addComponent(CHandledCards3D_1.default).node;
              this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
              for (let i = 0; i < 4; ++i) this._view_root.addChild(this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default)._handled_card[i]);
              this._view_root.addChild(this._heap_cards[e_index][int_pos]);
              this._view_root.addChild(this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default)._arrow);
            }
          }
          if (this._heap_cards[e_index][int_pos]) {
            this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default).setHandledData(e_fromIndex, e_kind, byte_card, cai_shen_value);
            this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default).showCards(this._corner_config, this._dark_card_value);
          }
        }
        removeHeapCard(e_index, int_pos) {
          if (this._heap_cards[e_index] && this._heap_cards[e_index].length > 0) {
            null == int_pos && (int_pos = this._heap_cards[e_index].length - 1);
            this._heap_cards[e_index][int_pos].getComponent(CHandledCards3D_1.default).hideCards();
          }
        }
        addHuaCard(e_index, byte_card, int_pos) {
          null == int_pos && (int_pos = this._hua_cards[e_index].length);
          if (!this._hua_cards[e_index][int_pos]) {
            let info = this.getLayoutInfo(e_index, "hua", "items", int_pos);
            if (info.card_info.id == int_pos) {
              this._hua_cards[e_index][int_pos] = new cc.Node("_hua_cards[" + e_index + "][" + int_pos + "]").addComponent(CTiledCard3D_1.default).node;
              this._hua_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).init(info.card_info, info.base_x, info.base_y, info.base_zorder);
              this._view_root.addChild(this._hua_cards[e_index][int_pos]);
            }
          }
          this._hua_cards[e_index][int_pos] && this._hua_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).showCard(byte_card, this._corner_config[byte_card], byte_card == this._dark_card_value);
        }
        removeHuaCard(e_index, int_pos) {
          if (this._hua_cards[e_index] && this._hua_cards[e_index].length > 0) {
            null == int_pos && (int_pos = this._hua_cards[e_index].length - 1);
            this._hua_cards[e_index][int_pos].getComponent(CTiledCard3D_1.default).hideCard();
          }
        }
        getLayoutIndex(e_index, s_type) {
          let ret_tbl = this.index_table[s_type];
          if (null == ret_tbl) return null;
          if (e_index == cards_3d_config_1.UserIndex.down) return ret_tbl[0];
          if (e_index == cards_3d_config_1.UserIndex.left) return ret_tbl[1];
          if (e_index == cards_3d_config_1.UserIndex.right) return ret_tbl[2];
          if (e_index == cards_3d_config_1.UserIndex.up) return ret_tbl[3];
          return null;
        }
        getLayoutInfo(e_index, s_type, s_inner_type, int_pos) {
          let i = this.getLayoutIndex(e_index, s_type);
          let layout = this._layout[i];
          if (null == layout[s_inner_type]) {
            console.error("\u5e03\u5c40\u8d8a\u754c\uff0c\u8bf7\u68c0\u67e5\u914d\u7f6e\u662f14\u621617\u4eba\uff0c\u786e\u8ba4\u4f20\u5165\u53c2\u6570:", s_type, s_inner_type, int_pos);
            return null;
          }
          let base_zorder = layout.zorder;
          let base_x;
          let base_y;
          base_x = this._layout_offset[i].forceX ? this._layout_offset[i].x : layout.x;
          base_y = this._layout_offset[i].forceY ? this._layout_offset[i].y : layout.y;
          let card_info = layout[s_inner_type][int_pos];
          return {
            card_info: card_info,
            base_x: base_x,
            base_y: base_y,
            base_zorder: base_zorder
          };
        }
        readLayoutFromFile(s_path, e_index) {
          game_tools_1.default.log("readLayoutFromFile", s_path, e_index);
          this._layout[e_index] = table_3d_layout_1.Layout3DResources.jsonMap[s_path].json;
        }
        initLayout(s_path) {
          this.readLayoutFromFile("layout_heap_cards_bottom", cards_3d_config_1.LayoutIndex.heap_bottm);
          this.readLayoutFromFile("layout_heap_cards_left", cards_3d_config_1.LayoutIndex.heap_left);
          this.readLayoutFromFile("layout_heap_cards_right", cards_3d_config_1.LayoutIndex.heap_right);
          this.readLayoutFromFile("layout_heap_cards_top", cards_3d_config_1.LayoutIndex.heap_top);
          this.readLayoutFromFile("layout_hua_cards_bottom", cards_3d_config_1.LayoutIndex.hua_bottm);
          this.readLayoutFromFile("layout_hua_cards_left", cards_3d_config_1.LayoutIndex.hua_left);
          this.readLayoutFromFile("layout_hua_cards_right", cards_3d_config_1.LayoutIndex.hua_right);
          this.readLayoutFromFile("layout_hua_cards_top", cards_3d_config_1.LayoutIndex.hua_top);
          this.readLayoutFromFile("layout_out_cards_bottom", cards_3d_config_1.LayoutIndex.out_bottm);
          this.readLayoutFromFile("layout_out_cards_left", cards_3d_config_1.LayoutIndex.out_left);
          this.readLayoutFromFile("layout_out_cards_right", cards_3d_config_1.LayoutIndex.out_right);
          this.readLayoutFromFile("layout_out_cards_top", cards_3d_config_1.LayoutIndex.out_top);
          this.readLayoutFromFile("layout_show_cards_bottom", cards_3d_config_1.LayoutIndex.show_bottm);
          this.readLayoutFromFile("layout_show_cards_left", cards_3d_config_1.LayoutIndex.show_left);
          this.readLayoutFromFile("layout_show_cards_right", cards_3d_config_1.LayoutIndex.show_right);
          this.readLayoutFromFile("layout_show_cards_top", cards_3d_config_1.LayoutIndex.show_top);
          this.readLayoutFromFile("layout_wall_cards_bottom", cards_3d_config_1.LayoutIndex.wall_bottm);
          this.readLayoutFromFile("layout_wall_cards_left", cards_3d_config_1.LayoutIndex.wall_left);
          this.readLayoutFromFile("layout_wall_cards_right", cards_3d_config_1.LayoutIndex.wall_right);
          this.readLayoutFromFile("layout_wall_cards_top", cards_3d_config_1.LayoutIndex.wall_top);
          this.configLayoutOffset();
          let view_size = this._view_size;
          this._handle_ani_pos = [];
          this._handle_ani_pos[cards_3d_config_1.UserIndex.left] = cc.v2(320, .5 * view_size.height + 80);
          this._handle_ani_pos[cards_3d_config_1.UserIndex.down] = cc.v2(.5 * view_size.width, (view_size.width + 800) / view_size.height * 125 - 100 + 30);
          this._handle_ani_pos[cards_3d_config_1.UserIndex.right] = cc.v2(view_size.width - 320, .5 * view_size.height + 80);
          this._handle_ani_pos[cards_3d_config_1.UserIndex.up] = cc.v2(.5 * view_size.width, view_size.height - 180);
        }
        configLayoutOffset() {
          let view_size = this._view_size;
          let left_anchor_x = this._table_3d_layout._left_table_bg.position.x;
          let right_anchor_x = this._table_3d_layout._right_table_bg.position.x;
          left_anchor_x = view_size.width / 2 + left_anchor_x;
          right_anchor_x = view_size.width / 2 + right_anchor_x;
          let x_offset = 40;
          left_anchor_x += x_offset;
          right_anchor_x -= x_offset;
          let out_left_anchor_x = left_anchor_x + 150;
          let out_right_anchor_x = right_anchor_x - 150;
          let pad_screen_mode = cc.Canvas.instance.node.width / cc.Canvas.instance.node.height < 1.334;
          if (pad_screen_mode) {
            out_left_anchor_x -= 100;
            out_right_anchor_x += 100;
          }
          this._layout_offset = [];
          this._layout_offset[cards_3d_config_1.LayoutIndex.heap_top] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.hua_top] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.show_top] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.wall_top] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.out_top] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.heap_bottm] = {
            forceX: false,
            forceY: false,
            x: 0,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.hua_bottm] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.show_bottm] = {
            forceX: false,
            forceY: false,
            x: 0,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.wall_bottm] = {
            forceX: false,
            forceY: false,
            x: 0,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.out_bottm] = {
            forceX: true,
            forceY: false,
            x: view_size.width / 2,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.heap_left] = {
            forceX: true,
            forceY: false,
            x: left_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.hua_left] = {
            forceX: true,
            forceY: false,
            x: left_anchor_x + 60,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.show_left] = {
            forceX: true,
            forceY: false,
            x: left_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.wall_left] = {
            forceX: true,
            forceY: false,
            x: left_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.out_left] = {
            forceX: true,
            forceY: false,
            x: out_left_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.heap_right] = {
            forceX: true,
            forceY: false,
            x: right_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.hua_right] = {
            forceX: true,
            forceY: false,
            x: right_anchor_x - 60,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.show_right] = {
            forceX: true,
            forceY: false,
            x: right_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.wall_right] = {
            forceX: true,
            forceY: false,
            x: right_anchor_x,
            y: 0
          };
          this._layout_offset[cards_3d_config_1.LayoutIndex.out_right] = {
            forceX: true,
            forceY: false,
            x: out_right_anchor_x,
            y: 0
          };
        }
        funcNotReadyError(funcName) {
          console.error(funcName + " is not implemented yet.");
        }
      };
      cards_3d_layout._inst = null;
      cards_3d_layout = cards_3d_layout_1 = __decorate([ ccclass ], cards_3d_layout);
      return cards_3d_layout;
    })();
    exports.default = cards_3d_layout;
    cc._RF.pop();
  }, {
    "../../Script/Framework/lobby/bind_function": "bind_function",
    "./cards_3d_config": "cards_3d_config",
    "./cards_3d_logic": "cards_3d_logic",
    "./game_tools": "game_tools",
    "./table_3d_layout": "table_3d_layout",
    "./widget/CCardPoint3D": "CCardPoint3D",
    "./widget/CHandCard3D": "CHandCard3D",
    "./widget/CHandleSelect3D": "CHandleSelect3D",
    "./widget/CHandledCards3D": "CHandledCards3D",
    "./widget/CSelfCardsController": "CSelfCardsController",
    "./widget/CSelfHandCard3D": "CSelfHandCard3D",
    "./widget/CTiledCard3D": "CTiledCard3D"
  } ],
  cards_3d_logic: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "173d95QkUNLI7pbxLLGt+Xi", "cards_3d_logic");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const cards_3d_config_1 = require("./cards_3d_config");
    const game_tools_1 = require("./game_tools");
    const YiFuGameData_1 = require("../../Script/Game/150/YiFuGameData");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let cards_3d_logic = (() => {
      var cards_3d_logic_1;
      let cards_3d_logic = cards_3d_logic_1 = class cards_3d_logic extends cc.Component {
        constructor() {
          super(...arguments);
          this._cards = null;
          this._sort_cards_func = null;
        }
        onLoad() {
          cards_3d_logic_1._inst = this;
        }
        start() {}
        static get() {
          return this._inst;
        }
        onDestroy() {
          this.reset();
        }
        init() {
          this.reset();
        }
        reset() {
          this._cards = [];
          for (let t in game_tools_1.default.enumValues(cards_3d_config_1.LayoutCardsType)) {
            this._cards[t] = [];
            for (let i in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) this._cards[t][i] = [];
          }
        }
        catchCard(e_index, byte_card) {
          this.addCard(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_card);
        }
        outCard(e_index, byte_card) {
          this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          this.addCard(e_index, cards_3d_config_1.LayoutCardsType.out, byte_card);
        }
        handle(e_index, e_fromIndex, e_heapType, byte_value, cai_shen_value) {
          if (e_heapType == cards_3d_config_1.HandleType.b_chi_left) {
            this.removeCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out);
            cai_shen_value && YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && byte_value == cai_shen_value ? this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, 97) : this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, byte_value + 50);
            cai_shen_value && byte_value + 1 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value + 1);
            cai_shen_value && byte_value + 2 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value + 2);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value, cai_shen_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.b_chi_mid) {
            this.removeCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out);
            cai_shen_value && YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && byte_value == cai_shen_value ? this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, 97) : this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, byte_value + 50);
            cai_shen_value && byte_value - 1 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value - 1);
            cai_shen_value && byte_value + 1 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value + 1);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value, cai_shen_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.b_chi_right) {
            this.removeCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out);
            cai_shen_value && YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && byte_value == cai_shen_value ? this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, 97) : this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, byte_value + 50);
            cai_shen_value && byte_value - 2 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value - 2);
            cai_shen_value && byte_value - 1 == cai_shen_value ? this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, 47) : this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value - 1);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value, cai_shen_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.b_peng) {
            this.removeCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out);
            cai_shen_value && YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && byte_value == cai_shen_value ? this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, 97) : this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, byte_value + 50);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.b_gang) {
            this.removeCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out);
            cai_shen_value && YiFuGameData_1.get_share_game_data().BAIBANSWITCHCAISHEN && byte_value == cai_shen_value ? this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, 97) : this.addCard(e_fromIndex, cards_3d_config_1.LayoutCardsType.out, byte_value + 50);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.d_gang) {
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            this.addHeap(e_index, e_fromIndex, e_heapType, byte_value);
          } else if (e_heapType == cards_3d_config_1.HandleType.a_gang) {
            this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_value);
            for (let i = 0; i < this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index].length; ++i) {
              let heap = this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index][i];
              if (heap.type == cards_3d_config_1.HandleType.b_peng && heap.value == byte_value) {
                heap.type = cards_3d_config_1.HandleType.a_gang;
                break;
              }
            }
          }
        }
        getCardsLength(e_index, e_type) {
          return this._cards[e_type][e_index].length;
        }
        buHua(e_index, byte_card) {
          this.removeCardByValue(e_index, cards_3d_config_1.LayoutCardsType.hand, byte_card);
          this.addCard(e_index, cards_3d_config_1.LayoutCardsType.hua, byte_card);
        }
        getCards(e_index, e_type) {
          return this._cards[e_type][e_index];
        }
        remove(array, index) {
          index >= 0 && array && index < array.length ? array.splice(index, 1) : game_tools_1.default.log("removeAt failed", array, index);
        }
        insert(array, index, element) {
          index >= 0 && array ? array.splice(index, 0, element) : game_tools_1.default.log("insertAt failed", array, index);
        }
        moveCard(e_index, e_type, int_pos_from, int_pos_to) {
          if (int_pos_from < int_pos_to) {
            let c = this._cards[e_type][e_index][int_pos_from];
            this.insert(this._cards[e_type][e_index], int_pos_to, c);
            this.remove(this._cards[e_type][e_index], int_pos_from);
          } else if (int_pos_from > int_pos_to) {
            let c = this._cards[e_type][e_index][int_pos_from];
            this.remove(this._cards[e_type][e_index], int_pos_from);
            this.insert(this._cards[e_type][e_index], int_pos_to, c);
          }
        }
        setSortCardsFunc(func_sortCard) {
          func_sortCard && (this._sort_cards_func = func_sortCard);
        }
        sortHandCards(e_index) {
          if (this._sort_cards_func && null != e_index) {
            let cards = this._sort_cards_func(this._cards[cards_3d_config_1.LayoutCardsType.hand][e_index]);
            let list_cpy = game_tools_1.default.clone(cards);
            this.setCards(e_index, cards_3d_config_1.LayoutCardsType.hand, list_cpy);
          }
        }
        setCards(e_index, e_type, cards) {
          if (e_type == cards_3d_config_1.LayoutCardsType.heap) return;
          this._cards[e_type][e_index] = cards;
        }
        addCard(e_index, e_type, byte_card, int_pos) {
          if (e_type == cards_3d_config_1.LayoutCardsType.heap) return;
          null == int_pos && (int_pos = this._cards[e_type][e_index].length);
          this.insert(this._cards[e_type][e_index], int_pos, byte_card);
        }
        removeCard(e_index, e_type, int_pos) {
          if (e_type == cards_3d_config_1.LayoutCardsType.heap) return;
          null == int_pos && (int_pos = this._cards[e_type][e_index].length - 1);
          this.remove(this._cards[e_type][e_index], int_pos);
        }
        removeCardByValue(e_index, e_type, byte_card) {
          if (e_type == cards_3d_config_1.LayoutCardsType.heap) return;
          for (let i = this._cards[e_type][e_index].length - 1; i >= 0; --i) if (this._cards[e_type][e_index][i] == byte_card) {
            this.remove(this._cards[e_type][e_index], i);
            return;
          }
          e_type == cards_3d_config_1.LayoutCardsType.hand && this.removeCard(e_index, cards_3d_config_1.LayoutCardsType.hand);
        }
        setHeaps(e_index, heaps) {
          this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index] = heaps;
        }
        addHeap(e_index, e_fromIndex, e_heapType, byte_value, cai_shen_value) {
          let pos = this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index].length;
          this.insert(this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index], pos, {
            type: e_heapType,
            value: byte_value,
            from: e_fromIndex,
            cai_value: cai_shen_value
          });
        }
        removeHeap(e_index, pos) {
          null == pos && (pos = this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index].length - 1);
          this.remove(this._cards[cards_3d_config_1.LayoutCardsType.heap][e_index], pos);
        }
      };
      cards_3d_logic = cards_3d_logic_1 = __decorate([ ccclass ], cards_3d_logic);
      return cards_3d_logic;
    })();
    exports.default = cards_3d_logic;
    cc._RF.pop();
  }, {
    "../../Script/Game/150/YiFuGameData": "YiFuGameData",
    "./cards_3d_config": "cards_3d_config",
    "./game_tools": "game_tools"
  } ],
  cp936: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "20600xgyVZFTbhQBlQ76IUh", "cp936");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.cp936 = void 0;
    exports.cp936 = [ [ "0", "\0", 127, "\u20ac" ], [ "8140", "\u4e02\u4e04\u4e05\u4e06\u4e0f\u4e12\u4e17\u4e1f\u4e20\u4e21\u4e23\u4e26\u4e29\u4e2e\u4e2f\u4e31\u4e33\u4e35\u4e37\u4e3c\u4e40\u4e41\u4e42\u4e44\u4e46\u4e4a\u4e51\u4e55\u4e57\u4e5a\u4e5b\u4e62\u4e63\u4e64\u4e65\u4e67\u4e68\u4e6a", 5, "\u4e72\u4e74", 9, "\u4e7f", 6, "\u4e87\u4e8a" ], [ "8180", "\u4e90\u4e96\u4e97\u4e99\u4e9c\u4e9d\u4e9e\u4ea3\u4eaa\u4eaf\u4eb0\u4eb1\u4eb4\u4eb6\u4eb7\u4eb8\u4eb9\u4ebc\u4ebd\u4ebe\u4ec8\u4ecc\u4ecf\u4ed0\u4ed2\u4eda\u4edb\u4edc\u4ee0\u4ee2\u4ee6\u4ee7\u4ee9\u4eed\u4eee\u4eef\u4ef1\u4ef4\u4ef8\u4ef9\u4efa\u4efc\u4efe\u4f00\u4f02", 6, "\u4f0b\u4f0c\u4f12", 4, "\u4f1c\u4f1d\u4f21\u4f23\u4f28\u4f29\u4f2c\u4f2d\u4f2e\u4f31\u4f33\u4f35\u4f37\u4f39\u4f3b\u4f3e", 4, "\u4f44\u4f45\u4f47", 5, "\u4f52\u4f54\u4f56\u4f61\u4f62\u4f66\u4f68\u4f6a\u4f6b\u4f6d\u4f6e\u4f71\u4f72\u4f75\u4f77\u4f78\u4f79\u4f7a\u4f7d\u4f80\u4f81\u4f82\u4f85\u4f86\u4f87\u4f8a\u4f8c\u4f8e\u4f90\u4f92\u4f93\u4f95\u4f96\u4f98\u4f99\u4f9a\u4f9c\u4f9e\u4f9f\u4fa1\u4fa2" ], [ "8240", "\u4fa4\u4fab\u4fad\u4fb0", 4, "\u4fb6", 8, "\u4fc0\u4fc1\u4fc2\u4fc6\u4fc7\u4fc8\u4fc9\u4fcb\u4fcc\u4fcd\u4fd2", 4, "\u4fd9\u4fdb\u4fe0\u4fe2\u4fe4\u4fe5\u4fe7\u4feb\u4fec\u4ff0\u4ff2\u4ff4\u4ff5\u4ff6\u4ff7\u4ff9\u4ffb\u4ffc\u4ffd\u4fff", 11 ], [ "8280", "\u500b\u500e\u5010\u5011\u5013\u5015\u5016\u5017\u501b\u501d\u501e\u5020\u5022\u5023\u5024\u5027\u502b\u502f", 10, "\u503b\u503d\u503f\u5040\u5041\u5042\u5044\u5045\u5046\u5049\u504a\u504b\u504d\u5050", 4, "\u5056\u5057\u5058\u5059\u505b\u505d", 7, "\u5066", 5, "\u506d", 8, "\u5078\u5079\u507a\u507c\u507d\u5081\u5082\u5083\u5084\u5086\u5087\u5089\u508a\u508b\u508c\u508e", 20, "\u50a4\u50a6\u50aa\u50ab\u50ad", 4, "\u50b3", 6, "\u50bc" ], [ "8340", "\u50bd", 17, "\u50d0", 5, "\u50d7\u50d8\u50d9\u50db", 10, "\u50e8\u50e9\u50ea\u50eb\u50ef\u50f0\u50f1\u50f2\u50f4\u50f6", 4, "\u50fc", 9, "\u5108" ], [ "8380", "\u5109\u510a\u510c", 5, "\u5113", 13, "\u5122", 28, "\u5142\u5147\u514a\u514c\u514e\u514f\u5150\u5152\u5153\u5157\u5158\u5159\u515b\u515d", 4, "\u5163\u5164\u5166\u5167\u5169\u516a\u516f\u5172\u517a\u517e\u517f\u5183\u5184\u5186\u5187\u518a\u518b\u518e\u518f\u5190\u5191\u5193\u5194\u5198\u519a\u519d\u519e\u519f\u51a1\u51a3\u51a6", 4, "\u51ad\u51ae\u51b4\u51b8\u51b9\u51ba\u51be\u51bf\u51c1\u51c2\u51c3\u51c5\u51c8\u51ca\u51cd\u51ce\u51d0\u51d2", 5 ], [ "8440", "\u51d8\u51d9\u51da\u51dc\u51de\u51df\u51e2\u51e3\u51e5", 5, "\u51ec\u51ee\u51f1\u51f2\u51f4\u51f7\u51fe\u5204\u5205\u5209\u520b\u520c\u520f\u5210\u5213\u5214\u5215\u521c\u521e\u521f\u5221\u5222\u5223\u5225\u5226\u5227\u522a\u522c\u522f\u5231\u5232\u5234\u5235\u523c\u523e\u5244", 5, "\u524b\u524e\u524f\u5252\u5253\u5255\u5257\u5258" ], [ "8480", "\u5259\u525a\u525b\u525d\u525f\u5260\u5262\u5263\u5264\u5266\u5268\u526b\u526c\u526d\u526e\u5270\u5271\u5273", 9, "\u527e\u5280\u5283", 4, "\u5289", 6, "\u5291\u5292\u5294", 6, "\u529c\u52a4\u52a5\u52a6\u52a7\u52ae\u52af\u52b0\u52b4", 9, "\u52c0\u52c1\u52c2\u52c4\u52c5\u52c6\u52c8\u52ca\u52cc\u52cd\u52ce\u52cf\u52d1\u52d3\u52d4\u52d5\u52d7\u52d9", 5, "\u52e0\u52e1\u52e2\u52e3\u52e5", 10, "\u52f1", 7, "\u52fb\u52fc\u52fd\u5301\u5302\u5303\u5304\u5307\u5309\u530a\u530b\u530c\u530e" ], [ "8540", "\u5311\u5312\u5313\u5314\u5318\u531b\u531c\u531e\u531f\u5322\u5324\u5325\u5327\u5328\u5329\u532b\u532c\u532d\u532f", 9, "\u533c\u533d\u5340\u5342\u5344\u5346\u534b\u534c\u534d\u5350\u5354\u5358\u5359\u535b\u535d\u5365\u5368\u536a\u536c\u536d\u5372\u5376\u5379\u537b\u537c\u537d\u537e\u5380\u5381\u5383\u5387\u5388\u538a\u538e\u538f" ], [ "8580", "\u5390", 4, "\u5396\u5397\u5399\u539b\u539c\u539e\u53a0\u53a1\u53a4\u53a7\u53aa\u53ab\u53ac\u53ad\u53af", 6, "\u53b7\u53b8\u53b9\u53ba\u53bc\u53bd\u53be\u53c0\u53c3", 4, "\u53ce\u53cf\u53d0\u53d2\u53d3\u53d5\u53da\u53dc\u53dd\u53de\u53e1\u53e2\u53e7\u53f4\u53fa\u53fe\u53ff\u5400\u5402\u5405\u5407\u540b\u5414\u5418\u5419\u541a\u541c\u5422\u5424\u5425\u542a\u5430\u5433\u5436\u5437\u543a\u543d\u543f\u5441\u5442\u5444\u5445\u5447\u5449\u544c\u544d\u544e\u544f\u5451\u545a\u545d", 4, "\u5463\u5465\u5467\u5469", 7, "\u5474\u5479\u547a\u547e\u547f\u5481\u5483\u5485\u5487\u5488\u5489\u548a\u548d\u5491\u5493\u5497\u5498\u549c\u549e\u549f\u54a0\u54a1" ], [ "8640", "\u54a2\u54a5\u54ae\u54b0\u54b2\u54b5\u54b6\u54b7\u54b9\u54ba\u54bc\u54be\u54c3\u54c5\u54ca\u54cb\u54d6\u54d8\u54db\u54e0", 4, "\u54eb\u54ec\u54ef\u54f0\u54f1\u54f4", 5, "\u54fb\u54fe\u5500\u5502\u5503\u5504\u5505\u5508\u550a", 4, "\u5512\u5513\u5515", 5, "\u551c\u551d\u551e\u551f\u5521\u5525\u5526" ], [ "8680", "\u5528\u5529\u552b\u552d\u5532\u5534\u5535\u5536\u5538\u5539\u553a\u553b\u553d\u5540\u5542\u5545\u5547\u5548\u554b", 4, "\u5551\u5552\u5553\u5554\u5557", 4, "\u555d\u555e\u555f\u5560\u5562\u5563\u5568\u5569\u556b\u556f", 5, "\u5579\u557a\u557d\u557f\u5585\u5586\u558c\u558d\u558e\u5590\u5592\u5593\u5595\u5596\u5597\u559a\u559b\u559e\u55a0", 6, "\u55a8", 8, "\u55b2\u55b4\u55b6\u55b8\u55ba\u55bc\u55bf", 4, "\u55c6\u55c7\u55c8\u55ca\u55cb\u55ce\u55cf\u55d0\u55d5\u55d7", 4, "\u55de\u55e0\u55e2\u55e7\u55e9\u55ed\u55ee\u55f0\u55f1\u55f4\u55f6\u55f8", 4, "\u55ff\u5602\u5603\u5604\u5605" ], [ "8740", "\u5606\u5607\u560a\u560b\u560d\u5610", 7, "\u5619\u561a\u561c\u561d\u5620\u5621\u5622\u5625\u5626\u5628\u5629\u562a\u562b\u562e\u562f\u5630\u5633\u5635\u5637\u5638\u563a\u563c\u563d\u563e\u5640", 11, "\u564f", 4, "\u5655\u5656\u565a\u565b\u565d", 4 ], [ "8780", "\u5663\u5665\u5666\u5667\u566d\u566e\u566f\u5670\u5672\u5673\u5674\u5675\u5677\u5678\u5679\u567a\u567d", 7, "\u5687", 6, "\u5690\u5691\u5692\u5694", 14, "\u56a4", 10, "\u56b0", 6, "\u56b8\u56b9\u56ba\u56bb\u56bd", 12, "\u56cb", 8, "\u56d5\u56d6\u56d8\u56d9\u56dc\u56e3\u56e5", 5, "\u56ec\u56ee\u56ef\u56f2\u56f3\u56f6\u56f7\u56f8\u56fb\u56fc\u5700\u5701\u5702\u5705\u5707\u570b", 6 ], [ "8840", "\u5712", 9, "\u571d\u571e\u5720\u5721\u5722\u5724\u5725\u5726\u5727\u572b\u5731\u5732\u5734", 4, "\u573c\u573d\u573f\u5741\u5743\u5744\u5745\u5746\u5748\u5749\u574b\u5752", 4, "\u5758\u5759\u5762\u5763\u5765\u5767\u576c\u576e\u5770\u5771\u5772\u5774\u5775\u5778\u5779\u577a\u577d\u577e\u577f\u5780" ], [ "8880", "\u5781\u5787\u5788\u5789\u578a\u578d", 4, "\u5794", 6, "\u579c\u579d\u579e\u579f\u57a5\u57a8\u57aa\u57ac\u57af\u57b0\u57b1\u57b3\u57b5\u57b6\u57b7\u57b9", 8, "\u57c4", 6, "\u57cc\u57cd\u57d0\u57d1\u57d3\u57d6\u57d7\u57db\u57dc\u57de\u57e1\u57e2\u57e3\u57e5", 7, "\u57ee\u57f0\u57f1\u57f2\u57f3\u57f5\u57f6\u57f7\u57fb\u57fc\u57fe\u57ff\u5801\u5803\u5804\u5805\u5808\u5809\u580a\u580c\u580e\u580f\u5810\u5812\u5813\u5814\u5816\u5817\u5818\u581a\u581b\u581c\u581d\u581f\u5822\u5823\u5825", 4, "\u582b", 4, "\u5831\u5832\u5833\u5834\u5836", 7 ], [ "8940", "\u583e", 5, "\u5845", 6, "\u584e\u584f\u5850\u5852\u5853\u5855\u5856\u5857\u5859", 4, "\u585f", 5, "\u5866", 4, "\u586d", 16, "\u587f\u5882\u5884\u5886\u5887\u5888\u588a\u588b\u588c" ], [ "8980", "\u588d", 4, "\u5894", 4, "\u589b\u589c\u589d\u58a0", 7, "\u58aa", 17, "\u58bd\u58be\u58bf\u58c0\u58c2\u58c3\u58c4\u58c6", 10, "\u58d2\u58d3\u58d4\u58d6", 13, "\u58e5", 5, "\u58ed\u58ef\u58f1\u58f2\u58f4\u58f5\u58f7\u58f8\u58fa", 7, "\u5903\u5905\u5906\u5908", 4, "\u590e\u5910\u5911\u5912\u5913\u5917\u5918\u591b\u591d\u591e\u5920\u5921\u5922\u5923\u5926\u5928\u592c\u5930\u5932\u5933\u5935\u5936\u593b" ], [ "8a40", "\u593d\u593e\u593f\u5940\u5943\u5945\u5946\u594a\u594c\u594d\u5950\u5952\u5953\u5959\u595b", 4, "\u5961\u5963\u5964\u5966", 12, "\u5975\u5977\u597a\u597b\u597c\u597e\u597f\u5980\u5985\u5989\u598b\u598c\u598e\u598f\u5990\u5991\u5994\u5995\u5998\u599a\u599b\u599c\u599d\u599f\u59a0\u59a1\u59a2\u59a6" ], [ "8a80", "\u59a7\u59ac\u59ad\u59b0\u59b1\u59b3", 5, "\u59ba\u59bc\u59bd\u59bf", 6, "\u59c7\u59c8\u59c9\u59cc\u59cd\u59ce\u59cf\u59d5\u59d6\u59d9\u59db\u59de", 4, "\u59e4\u59e6\u59e7\u59e9\u59ea\u59eb\u59ed", 11, "\u59fa\u59fc\u59fd\u59fe\u5a00\u5a02\u5a0a\u5a0b\u5a0d\u5a0e\u5a0f\u5a10\u5a12\u5a14\u5a15\u5a16\u5a17\u5a19\u5a1a\u5a1b\u5a1d\u5a1e\u5a21\u5a22\u5a24\u5a26\u5a27\u5a28\u5a2a", 6, "\u5a33\u5a35\u5a37", 4, "\u5a3d\u5a3e\u5a3f\u5a41", 4, "\u5a47\u5a48\u5a4b", 9, "\u5a56\u5a57\u5a58\u5a59\u5a5b", 5 ], [ "8b40", "\u5a61\u5a63\u5a64\u5a65\u5a66\u5a68\u5a69\u5a6b", 8, "\u5a78\u5a79\u5a7b\u5a7c\u5a7d\u5a7e\u5a80", 17, "\u5a93", 6, "\u5a9c", 13, "\u5aab\u5aac" ], [ "8b80", "\u5aad", 4, "\u5ab4\u5ab6\u5ab7\u5ab9", 4, "\u5abf\u5ac0\u5ac3", 5, "\u5aca\u5acb\u5acd", 4, "\u5ad3\u5ad5\u5ad7\u5ad9\u5ada\u5adb\u5add\u5ade\u5adf\u5ae2\u5ae4\u5ae5\u5ae7\u5ae8\u5aea\u5aec", 4, "\u5af2", 22, "\u5b0a", 11, "\u5b18", 25, "\u5b33\u5b35\u5b36\u5b38", 7, "\u5b41", 6 ], [ "8c40", "\u5b48", 7, "\u5b52\u5b56\u5b5e\u5b60\u5b61\u5b67\u5b68\u5b6b\u5b6d\u5b6e\u5b6f\u5b72\u5b74\u5b76\u5b77\u5b78\u5b79\u5b7b\u5b7c\u5b7e\u5b7f\u5b82\u5b86\u5b8a\u5b8d\u5b8e\u5b90\u5b91\u5b92\u5b94\u5b96\u5b9f\u5ba7\u5ba8\u5ba9\u5bac\u5bad\u5bae\u5baf\u5bb1\u5bb2\u5bb7\u5bba\u5bbb\u5bbc\u5bc0\u5bc1\u5bc3\u5bc8\u5bc9\u5bca\u5bcb\u5bcd\u5bce\u5bcf" ], [ "8c80", "\u5bd1\u5bd4", 8, "\u5be0\u5be2\u5be3\u5be6\u5be7\u5be9", 4, "\u5bef\u5bf1", 6, "\u5bfd\u5bfe\u5c00\u5c02\u5c03\u5c05\u5c07\u5c08\u5c0b\u5c0c\u5c0d\u5c0e\u5c10\u5c12\u5c13\u5c17\u5c19\u5c1b\u5c1e\u5c1f\u5c20\u5c21\u5c23\u5c26\u5c28\u5c29\u5c2a\u5c2b\u5c2d\u5c2e\u5c2f\u5c30\u5c32\u5c33\u5c35\u5c36\u5c37\u5c43\u5c44\u5c46\u5c47\u5c4c\u5c4d\u5c52\u5c53\u5c54\u5c56\u5c57\u5c58\u5c5a\u5c5b\u5c5c\u5c5d\u5c5f\u5c62\u5c64\u5c67", 6, "\u5c70\u5c72", 6, "\u5c7b\u5c7c\u5c7d\u5c7e\u5c80\u5c83", 4, "\u5c89\u5c8a\u5c8b\u5c8e\u5c8f\u5c92\u5c93\u5c95\u5c9d", 4, "\u5ca4", 4 ], [ "8d40", "\u5caa\u5cae\u5caf\u5cb0\u5cb2\u5cb4\u5cb6\u5cb9\u5cba\u5cbb\u5cbc\u5cbe\u5cc0\u5cc2\u5cc3\u5cc5", 5, "\u5ccc", 5, "\u5cd3", 5, "\u5cda", 6, "\u5ce2\u5ce3\u5ce7\u5ce9\u5ceb\u5cec\u5cee\u5cef\u5cf1", 9, "\u5cfc", 4 ], [ "8d80", "\u5d01\u5d04\u5d05\u5d08", 5, "\u5d0f", 4, "\u5d15\u5d17\u5d18\u5d19\u5d1a\u5d1c\u5d1d\u5d1f", 4, "\u5d25\u5d28\u5d2a\u5d2b\u5d2c\u5d2f", 4, "\u5d35", 7, "\u5d3f", 7, "\u5d48\u5d49\u5d4d", 10, "\u5d59\u5d5a\u5d5c\u5d5e", 10, "\u5d6a\u5d6d\u5d6e\u5d70\u5d71\u5d72\u5d73\u5d75", 12, "\u5d83", 21, "\u5d9a\u5d9b\u5d9c\u5d9e\u5d9f\u5da0" ], [ "8e40", "\u5da1", 21, "\u5db8", 12, "\u5dc6", 6, "\u5dce", 12, "\u5ddc\u5ddf\u5de0\u5de3\u5de4\u5dea\u5dec\u5ded" ], [ "8e80", "\u5df0\u5df5\u5df6\u5df8", 4, "\u5dff\u5e00\u5e04\u5e07\u5e09\u5e0a\u5e0b\u5e0d\u5e0e\u5e12\u5e13\u5e17\u5e1e", 7, "\u5e28", 4, "\u5e2f\u5e30\u5e32", 4, "\u5e39\u5e3a\u5e3e\u5e3f\u5e40\u5e41\u5e43\u5e46", 5, "\u5e4d", 6, "\u5e56", 4, "\u5e5c\u5e5d\u5e5f\u5e60\u5e63", 14, "\u5e75\u5e77\u5e79\u5e7e\u5e81\u5e82\u5e83\u5e85\u5e88\u5e89\u5e8c\u5e8d\u5e8e\u5e92\u5e98\u5e9b\u5e9d\u5ea1\u5ea2\u5ea3\u5ea4\u5ea8", 4, "\u5eae", 4, "\u5eb4\u5eba\u5ebb\u5ebc\u5ebd\u5ebf", 6 ], [ "8f40", "\u5ec6\u5ec7\u5ec8\u5ecb", 5, "\u5ed4\u5ed5\u5ed7\u5ed8\u5ed9\u5eda\u5edc", 11, "\u5ee9\u5eeb", 8, "\u5ef5\u5ef8\u5ef9\u5efb\u5efc\u5efd\u5f05\u5f06\u5f07\u5f09\u5f0c\u5f0d\u5f0e\u5f10\u5f12\u5f14\u5f16\u5f19\u5f1a\u5f1c\u5f1d\u5f1e\u5f21\u5f22\u5f23\u5f24" ], [ "8f80", "\u5f28\u5f2b\u5f2c\u5f2e\u5f30\u5f32", 6, "\u5f3b\u5f3d\u5f3e\u5f3f\u5f41", 14, "\u5f51\u5f54\u5f59\u5f5a\u5f5b\u5f5c\u5f5e\u5f5f\u5f60\u5f63\u5f65\u5f67\u5f68\u5f6b\u5f6e\u5f6f\u5f72\u5f74\u5f75\u5f76\u5f78\u5f7a\u5f7d\u5f7e\u5f7f\u5f83\u5f86\u5f8d\u5f8e\u5f8f\u5f91\u5f93\u5f94\u5f96\u5f9a\u5f9b\u5f9d\u5f9e\u5f9f\u5fa0\u5fa2", 5, "\u5fa9\u5fab\u5fac\u5faf", 5, "\u5fb6\u5fb8\u5fb9\u5fba\u5fbb\u5fbe", 4, "\u5fc7\u5fc8\u5fca\u5fcb\u5fce\u5fd3\u5fd4\u5fd5\u5fda\u5fdb\u5fdc\u5fde\u5fdf\u5fe2\u5fe3\u5fe5\u5fe6\u5fe8\u5fe9\u5fec\u5fef\u5ff0\u5ff2\u5ff3\u5ff4\u5ff6\u5ff7\u5ff9\u5ffa\u5ffc\u6007" ], [ "9040", "\u6008\u6009\u600b\u600c\u6010\u6011\u6013\u6017\u6018\u601a\u601e\u601f\u6022\u6023\u6024\u602c\u602d\u602e\u6030", 4, "\u6036", 4, "\u603d\u603e\u6040\u6044", 6, "\u604c\u604e\u604f\u6051\u6053\u6054\u6056\u6057\u6058\u605b\u605c\u605e\u605f\u6060\u6061\u6065\u6066\u606e\u6071\u6072\u6074\u6075\u6077\u607e\u6080" ], [ "9080", "\u6081\u6082\u6085\u6086\u6087\u6088\u608a\u608b\u608e\u608f\u6090\u6091\u6093\u6095\u6097\u6098\u6099\u609c\u609e\u60a1\u60a2\u60a4\u60a5\u60a7\u60a9\u60aa\u60ae\u60b0\u60b3\u60b5\u60b6\u60b7\u60b9\u60ba\u60bd", 7, "\u60c7\u60c8\u60c9\u60cc", 4, "\u60d2\u60d3\u60d4\u60d6\u60d7\u60d9\u60db\u60de\u60e1", 4, "\u60ea\u60f1\u60f2\u60f5\u60f7\u60f8\u60fb", 4, "\u6102\u6103\u6104\u6105\u6107\u610a\u610b\u610c\u6110", 4, "\u6116\u6117\u6118\u6119\u611b\u611c\u611d\u611e\u6121\u6122\u6125\u6128\u6129\u612a\u612c", 18, "\u6140", 6 ], [ "9140", "\u6147\u6149\u614b\u614d\u614f\u6150\u6152\u6153\u6154\u6156", 6, "\u615e\u615f\u6160\u6161\u6163\u6164\u6165\u6166\u6169", 6, "\u6171\u6172\u6173\u6174\u6176\u6178", 18, "\u618c\u618d\u618f", 4, "\u6195" ], [ "9180", "\u6196", 6, "\u619e", 8, "\u61aa\u61ab\u61ad", 9, "\u61b8", 5, "\u61bf\u61c0\u61c1\u61c3", 4, "\u61c9\u61cc", 4, "\u61d3\u61d5", 16, "\u61e7", 13, "\u61f6", 8, "\u6200", 5, "\u6207\u6209\u6213\u6214\u6219\u621c\u621d\u621e\u6220\u6223\u6226\u6227\u6228\u6229\u622b\u622d\u622f\u6230\u6231\u6232\u6235\u6236\u6238", 4, "\u6242\u6244\u6245\u6246\u624a" ], [ "9240", "\u624f\u6250\u6255\u6256\u6257\u6259\u625a\u625c", 6, "\u6264\u6265\u6268\u6271\u6272\u6274\u6275\u6277\u6278\u627a\u627b\u627d\u6281\u6282\u6283\u6285\u6286\u6287\u6288\u628b", 5, "\u6294\u6299\u629c\u629d\u629e\u62a3\u62a6\u62a7\u62a9\u62aa\u62ad\u62ae\u62af\u62b0\u62b2\u62b3\u62b4\u62b6\u62b7\u62b8\u62ba\u62be\u62c0\u62c1" ], [ "9280", "\u62c3\u62cb\u62cf\u62d1\u62d5\u62dd\u62de\u62e0\u62e1\u62e4\u62ea\u62eb\u62f0\u62f2\u62f5\u62f8\u62f9\u62fa\u62fb\u6300\u6303\u6304\u6305\u6306\u630a\u630b\u630c\u630d\u630f\u6310\u6312\u6313\u6314\u6315\u6317\u6318\u6319\u631c\u6326\u6327\u6329\u632c\u632d\u632e\u6330\u6331\u6333", 5, "\u633b\u633c\u633e\u633f\u6340\u6341\u6344\u6347\u6348\u634a\u6351\u6352\u6353\u6354\u6356", 7, "\u6360\u6364\u6365\u6366\u6368\u636a\u636b\u636c\u636f\u6370\u6372\u6373\u6374\u6375\u6378\u6379\u637c\u637d\u637e\u637f\u6381\u6383\u6384\u6385\u6386\u638b\u638d\u6391\u6393\u6394\u6395\u6397\u6399", 6, "\u63a1\u63a4\u63a6\u63ab\u63af\u63b1\u63b2\u63b5\u63b6\u63b9\u63bb\u63bd\u63bf\u63c0" ], [ "9340", "\u63c1\u63c2\u63c3\u63c5\u63c7\u63c8\u63ca\u63cb\u63cc\u63d1\u63d3\u63d4\u63d5\u63d7", 6, "\u63df\u63e2\u63e4", 4, "\u63eb\u63ec\u63ee\u63ef\u63f0\u63f1\u63f3\u63f5\u63f7\u63f9\u63fa\u63fb\u63fc\u63fe\u6403\u6404\u6406", 4, "\u640d\u640e\u6411\u6412\u6415", 5, "\u641d\u641f\u6422\u6423\u6424" ], [ "9380", "\u6425\u6427\u6428\u6429\u642b\u642e", 5, "\u6435", 4, "\u643b\u643c\u643e\u6440\u6442\u6443\u6449\u644b", 6, "\u6453\u6455\u6456\u6457\u6459", 4, "\u645f", 7, "\u6468\u646a\u646b\u646c\u646e", 9, "\u647b", 6, "\u6483\u6486\u6488", 8, "\u6493\u6494\u6497\u6498\u649a\u649b\u649c\u649d\u649f", 4, "\u64a5\u64a6\u64a7\u64a8\u64aa\u64ab\u64af\u64b1\u64b2\u64b3\u64b4\u64b6\u64b9\u64bb\u64bd\u64be\u64bf\u64c1\u64c3\u64c4\u64c6", 6, "\u64cf\u64d1\u64d3\u64d4\u64d5\u64d6\u64d9\u64da" ], [ "9440", "\u64db\u64dc\u64dd\u64df\u64e0\u64e1\u64e3\u64e5\u64e7", 24, "\u6501", 7, "\u650a", 7, "\u6513", 4, "\u6519", 8 ], [ "9480", "\u6522\u6523\u6524\u6526", 4, "\u652c\u652d\u6530\u6531\u6532\u6533\u6537\u653a\u653c\u653d\u6540", 4, "\u6546\u6547\u654a\u654b\u654d\u654e\u6550\u6552\u6553\u6554\u6557\u6558\u655a\u655c\u655f\u6560\u6561\u6564\u6565\u6567\u6568\u6569\u656a\u656d\u656e\u656f\u6571\u6573\u6575\u6576\u6578", 14, "\u6588\u6589\u658a\u658d\u658e\u658f\u6592\u6594\u6595\u6596\u6598\u659a\u659d\u659e\u65a0\u65a2\u65a3\u65a6\u65a8\u65aa\u65ac\u65ae\u65b1", 7, "\u65ba\u65bb\u65be\u65bf\u65c0\u65c2\u65c7\u65c8\u65c9\u65ca\u65cd\u65d0\u65d1\u65d3\u65d4\u65d5\u65d8", 7, "\u65e1\u65e3\u65e4\u65ea\u65eb" ], [ "9540", "\u65f2\u65f3\u65f4\u65f5\u65f8\u65f9\u65fb", 4, "\u6601\u6604\u6605\u6607\u6608\u6609\u660b\u660d\u6610\u6611\u6612\u6616\u6617\u6618\u661a\u661b\u661c\u661e\u6621\u6622\u6623\u6624\u6626\u6629\u662a\u662b\u662c\u662e\u6630\u6632\u6633\u6637", 4, "\u663d\u663f\u6640\u6642\u6644", 6, "\u664d\u664e\u6650\u6651\u6658" ], [ "9580", "\u6659\u665b\u665c\u665d\u665e\u6660\u6662\u6663\u6665\u6667\u6669", 4, "\u6671\u6672\u6673\u6675\u6678\u6679\u667b\u667c\u667d\u667f\u6680\u6681\u6683\u6685\u6686\u6688\u6689\u668a\u668b\u668d\u668e\u668f\u6690\u6692\u6693\u6694\u6695\u6698", 4, "\u669e", 8, "\u66a9", 4, "\u66af", 4, "\u66b5\u66b6\u66b7\u66b8\u66ba\u66bb\u66bc\u66bd\u66bf", 25, "\u66da\u66de", 7, "\u66e7\u66e8\u66ea", 5, "\u66f1\u66f5\u66f6\u66f8\u66fa\u66fb\u66fd\u6701\u6702\u6703" ], [ "9640", "\u6704\u6705\u6706\u6707\u670c\u670e\u670f\u6711\u6712\u6713\u6716\u6718\u6719\u671a\u671c\u671e\u6720", 5, "\u6727\u6729\u672e\u6730\u6732\u6733\u6736\u6737\u6738\u6739\u673b\u673c\u673e\u673f\u6741\u6744\u6745\u6747\u674a\u674b\u674d\u6752\u6754\u6755\u6757", 4, "\u675d\u6762\u6763\u6764\u6766\u6767\u676b\u676c\u676e\u6771\u6774\u6776" ], [ "9680", "\u6778\u6779\u677a\u677b\u677d\u6780\u6782\u6783\u6785\u6786\u6788\u678a\u678c\u678d\u678e\u678f\u6791\u6792\u6793\u6794\u6796\u6799\u679b\u679f\u67a0\u67a1\u67a4\u67a6\u67a9\u67ac\u67ae\u67b1\u67b2\u67b4\u67b9", 7, "\u67c2\u67c5", 9, "\u67d5\u67d6\u67d7\u67db\u67df\u67e1\u67e3\u67e4\u67e6\u67e7\u67e8\u67ea\u67eb\u67ed\u67ee\u67f2\u67f5", 7, "\u67fe\u6801\u6802\u6803\u6804\u6806\u680d\u6810\u6812\u6814\u6815\u6818", 4, "\u681e\u681f\u6820\u6822", 6, "\u682b", 6, "\u6834\u6835\u6836\u683a\u683b\u683f\u6847\u684b\u684d\u684f\u6852\u6856", 5 ], [ "9740", "\u685c\u685d\u685e\u685f\u686a\u686c", 7, "\u6875\u6878", 8, "\u6882\u6884\u6887", 7, "\u6890\u6891\u6892\u6894\u6895\u6896\u6898", 9, "\u68a3\u68a4\u68a5\u68a9\u68aa\u68ab\u68ac\u68ae\u68b1\u68b2\u68b4\u68b6\u68b7\u68b8" ], [ "9780", "\u68b9", 6, "\u68c1\u68c3", 5, "\u68ca\u68cc\u68ce\u68cf\u68d0\u68d1\u68d3\u68d4\u68d6\u68d7\u68d9\u68db", 4, "\u68e1\u68e2\u68e4", 9, "\u68ef\u68f2\u68f3\u68f4\u68f6\u68f7\u68f8\u68fb\u68fd\u68fe\u68ff\u6900\u6902\u6903\u6904\u6906", 4, "\u690c\u690f\u6911\u6913", 11, "\u6921\u6922\u6923\u6925", 7, "\u692e\u692f\u6931\u6932\u6933\u6935\u6936\u6937\u6938\u693a\u693b\u693c\u693e\u6940\u6941\u6943", 16, "\u6955\u6956\u6958\u6959\u695b\u695c\u695f" ], [ "9840", "\u6961\u6962\u6964\u6965\u6967\u6968\u6969\u696a\u696c\u696d\u696f\u6970\u6972", 4, "\u697a\u697b\u697d\u697e\u697f\u6981\u6983\u6985\u698a\u698b\u698c\u698e", 5, "\u6996\u6997\u6999\u699a\u699d", 9, "\u69a9\u69aa\u69ac\u69ae\u69af\u69b0\u69b2\u69b3\u69b5\u69b6\u69b8\u69b9\u69ba\u69bc\u69bd" ], [ "9880", "\u69be\u69bf\u69c0\u69c2", 7, "\u69cb\u69cd\u69cf\u69d1\u69d2\u69d3\u69d5", 5, "\u69dc\u69dd\u69de\u69e1", 11, "\u69ee\u69ef\u69f0\u69f1\u69f3", 9, "\u69fe\u6a00", 9, "\u6a0b", 11, "\u6a19", 5, "\u6a20\u6a22", 5, "\u6a29\u6a2b\u6a2c\u6a2d\u6a2e\u6a30\u6a32\u6a33\u6a34\u6a36", 6, "\u6a3f", 4, "\u6a45\u6a46\u6a48", 7, "\u6a51", 6, "\u6a5a" ], [ "9940", "\u6a5c", 4, "\u6a62\u6a63\u6a64\u6a66", 10, "\u6a72", 6, "\u6a7a\u6a7b\u6a7d\u6a7e\u6a7f\u6a81\u6a82\u6a83\u6a85", 8, "\u6a8f\u6a92", 4, "\u6a98", 7, "\u6aa1", 5 ], [ "9980", "\u6aa7\u6aa8\u6aaa\u6aad", 114, "\u6b25\u6b26\u6b28", 6 ], [ "9a40", "\u6b2f\u6b30\u6b31\u6b33\u6b34\u6b35\u6b36\u6b38\u6b3b\u6b3c\u6b3d\u6b3f\u6b40\u6b41\u6b42\u6b44\u6b45\u6b48\u6b4a\u6b4b\u6b4d", 11, "\u6b5a", 7, "\u6b68\u6b69\u6b6b", 13, "\u6b7a\u6b7d\u6b7e\u6b7f\u6b80\u6b85\u6b88" ], [ "9a80", "\u6b8c\u6b8e\u6b8f\u6b90\u6b91\u6b94\u6b95\u6b97\u6b98\u6b99\u6b9c", 4, "\u6ba2", 7, "\u6bab", 7, "\u6bb6\u6bb8", 6, "\u6bc0\u6bc3\u6bc4\u6bc6", 4, "\u6bcc\u6bce\u6bd0\u6bd1\u6bd8\u6bda\u6bdc", 4, "\u6be2", 7, "\u6bec\u6bed\u6bee\u6bf0\u6bf1\u6bf2\u6bf4\u6bf6\u6bf7\u6bf8\u6bfa\u6bfb\u6bfc\u6bfe", 6, "\u6c08", 4, "\u6c0e\u6c12\u6c17\u6c1c\u6c1d\u6c1e\u6c20\u6c23\u6c25\u6c2b\u6c2c\u6c2d\u6c31\u6c33\u6c36\u6c37\u6c39\u6c3a\u6c3b\u6c3c\u6c3e\u6c3f\u6c43\u6c44\u6c45\u6c48\u6c4b", 4, "\u6c51\u6c52\u6c53\u6c56\u6c58" ], [ "9b40", "\u6c59\u6c5a\u6c62\u6c63\u6c65\u6c66\u6c67\u6c6b", 4, "\u6c71\u6c73\u6c75\u6c77\u6c78\u6c7a\u6c7b\u6c7c\u6c7f\u6c80\u6c84\u6c87\u6c8a\u6c8b\u6c8d\u6c8e\u6c91\u6c92\u6c95\u6c96\u6c97\u6c98\u6c9a\u6c9c\u6c9d\u6c9e\u6ca0\u6ca2\u6ca8\u6cac\u6caf\u6cb0\u6cb4\u6cb5\u6cb6\u6cb7\u6cba\u6cc0\u6cc1\u6cc2\u6cc3\u6cc6\u6cc7\u6cc8\u6ccb\u6ccd\u6cce\u6ccf\u6cd1\u6cd2\u6cd8" ], [ "9b80", "\u6cd9\u6cda\u6cdc\u6cdd\u6cdf\u6ce4\u6ce6\u6ce7\u6ce9\u6cec\u6ced\u6cf2\u6cf4\u6cf9\u6cff\u6d00\u6d02\u6d03\u6d05\u6d06\u6d08\u6d09\u6d0a\u6d0d\u6d0f\u6d10\u6d11\u6d13\u6d14\u6d15\u6d16\u6d18\u6d1c\u6d1d\u6d1f", 5, "\u6d26\u6d28\u6d29\u6d2c\u6d2d\u6d2f\u6d30\u6d34\u6d36\u6d37\u6d38\u6d3a\u6d3f\u6d40\u6d42\u6d44\u6d49\u6d4c\u6d50\u6d55\u6d56\u6d57\u6d58\u6d5b\u6d5d\u6d5f\u6d61\u6d62\u6d64\u6d65\u6d67\u6d68\u6d6b\u6d6c\u6d6d\u6d70\u6d71\u6d72\u6d73\u6d75\u6d76\u6d79\u6d7a\u6d7b\u6d7d", 4, "\u6d83\u6d84\u6d86\u6d87\u6d8a\u6d8b\u6d8d\u6d8f\u6d90\u6d92\u6d96", 4, "\u6d9c\u6da2\u6da5\u6dac\u6dad\u6db0\u6db1\u6db3\u6db4\u6db6\u6db7\u6db9", 5, "\u6dc1\u6dc2\u6dc3\u6dc8\u6dc9\u6dca" ], [ "9c40", "\u6dcd\u6dce\u6dcf\u6dd0\u6dd2\u6dd3\u6dd4\u6dd5\u6dd7\u6dda\u6ddb\u6ddc\u6ddf\u6de2\u6de3\u6de5\u6de7\u6de8\u6de9\u6dea\u6ded\u6def\u6df0\u6df2\u6df4\u6df5\u6df6\u6df8\u6dfa\u6dfd", 7, "\u6e06\u6e07\u6e08\u6e09\u6e0b\u6e0f\u6e12\u6e13\u6e15\u6e18\u6e19\u6e1b\u6e1c\u6e1e\u6e1f\u6e22\u6e26\u6e27\u6e28\u6e2a\u6e2c\u6e2e\u6e30\u6e31\u6e33\u6e35" ], [ "9c80", "\u6e36\u6e37\u6e39\u6e3b", 7, "\u6e45", 7, "\u6e4f\u6e50\u6e51\u6e52\u6e55\u6e57\u6e59\u6e5a\u6e5c\u6e5d\u6e5e\u6e60", 10, "\u6e6c\u6e6d\u6e6f", 14, "\u6e80\u6e81\u6e82\u6e84\u6e87\u6e88\u6e8a", 4, "\u6e91", 6, "\u6e99\u6e9a\u6e9b\u6e9d\u6e9e\u6ea0\u6ea1\u6ea3\u6ea4\u6ea6\u6ea8\u6ea9\u6eab\u6eac\u6ead\u6eae\u6eb0\u6eb3\u6eb5\u6eb8\u6eb9\u6ebc\u6ebe\u6ebf\u6ec0\u6ec3\u6ec4\u6ec5\u6ec6\u6ec8\u6ec9\u6eca\u6ecc\u6ecd\u6ece\u6ed0\u6ed2\u6ed6\u6ed8\u6ed9\u6edb\u6edc\u6edd\u6ee3\u6ee7\u6eea", 5 ], [ "9d40", "\u6ef0\u6ef1\u6ef2\u6ef3\u6ef5\u6ef6\u6ef7\u6ef8\u6efa", 7, "\u6f03\u6f04\u6f05\u6f07\u6f08\u6f0a", 4, "\u6f10\u6f11\u6f12\u6f16", 9, "\u6f21\u6f22\u6f23\u6f25\u6f26\u6f27\u6f28\u6f2c\u6f2e\u6f30\u6f32\u6f34\u6f35\u6f37", 6, "\u6f3f\u6f40\u6f41\u6f42" ], [ "9d80", "\u6f43\u6f44\u6f45\u6f48\u6f49\u6f4a\u6f4c\u6f4e", 9, "\u6f59\u6f5a\u6f5b\u6f5d\u6f5f\u6f60\u6f61\u6f63\u6f64\u6f65\u6f67", 5, "\u6f6f\u6f70\u6f71\u6f73\u6f75\u6f76\u6f77\u6f79\u6f7b\u6f7d", 6, "\u6f85\u6f86\u6f87\u6f8a\u6f8b\u6f8f", 12, "\u6f9d\u6f9e\u6f9f\u6fa0\u6fa2", 4, "\u6fa8", 10, "\u6fb4\u6fb5\u6fb7\u6fb8\u6fba", 5, "\u6fc1\u6fc3", 5, "\u6fca", 6, "\u6fd3", 10, "\u6fdf\u6fe2\u6fe3\u6fe4\u6fe5" ], [ "9e40", "\u6fe6", 7, "\u6ff0", 32, "\u7012", 7, "\u701c", 6, "\u7024", 6 ], [ "9e80", "\u702b", 9, "\u7036\u7037\u7038\u703a", 17, "\u704d\u704e\u7050", 13, "\u705f", 11, "\u706e\u7071\u7072\u7073\u7074\u7077\u7079\u707a\u707b\u707d\u7081\u7082\u7083\u7084\u7086\u7087\u7088\u708b\u708c\u708d\u708f\u7090\u7091\u7093\u7097\u7098\u709a\u709b\u709e", 12, "\u70b0\u70b2\u70b4\u70b5\u70b6\u70ba\u70be\u70bf\u70c4\u70c5\u70c6\u70c7\u70c9\u70cb", 12, "\u70da" ], [ "9f40", "\u70dc\u70dd\u70de\u70e0\u70e1\u70e2\u70e3\u70e5\u70ea\u70ee\u70f0", 6, "\u70f8\u70fa\u70fb\u70fc\u70fe", 10, "\u710b", 4, "\u7111\u7112\u7114\u7117\u711b", 10, "\u7127", 7, "\u7132\u7133\u7134" ], [ "9f80", "\u7135\u7137", 13, "\u7146\u7147\u7148\u7149\u714b\u714d\u714f", 12, "\u715d\u715f", 4, "\u7165\u7169", 4, "\u716f\u7170\u7171\u7174\u7175\u7176\u7177\u7179\u717b\u717c\u717e", 5, "\u7185", 4, "\u718b\u718c\u718d\u718e\u7190\u7191\u7192\u7193\u7195\u7196\u7197\u719a", 4, "\u71a1", 6, "\u71a9\u71aa\u71ab\u71ad", 5, "\u71b4\u71b6\u71b7\u71b8\u71ba", 8, "\u71c4", 9, "\u71cf", 4 ], [ "a040", "\u71d6", 9, "\u71e1\u71e2\u71e3\u71e4\u71e6\u71e8", 5, "\u71ef", 9, "\u71fa", 11, "\u7207", 19 ], [ "a080", "\u721b\u721c\u721e", 9, "\u7229\u722b\u722d\u722e\u722f\u7232\u7233\u7234\u723a\u723c\u723e\u7240", 6, "\u7249\u724a\u724b\u724e\u724f\u7250\u7251\u7253\u7254\u7255\u7257\u7258\u725a\u725c\u725e\u7260\u7263\u7264\u7265\u7268\u726a\u726b\u726c\u726d\u7270\u7271\u7273\u7274\u7276\u7277\u7278\u727b\u727c\u727d\u7282\u7283\u7285", 4, "\u728c\u728e\u7290\u7291\u7293", 11, "\u72a0", 11, "\u72ae\u72b1\u72b2\u72b3\u72b5\u72ba", 6, "\u72c5\u72c6\u72c7\u72c9\u72ca\u72cb\u72cc\u72cf\u72d1\u72d3\u72d4\u72d5\u72d6\u72d8\u72da\u72db" ], [ "a1a1", "\u3000\u3001\u3002\xb7\u02c9\u02c7\xa8\u3003\u3005\u2014\uff5e\u2016\u2026\u2018\u2019\u201c\u201d\u3014\u3015\u3008", 7, "\u3016\u3017\u3010\u3011\xb1\xd7\xf7\u2236\u2227\u2228\u2211\u220f\u222a\u2229\u2208\u2237\u221a\u22a5\u2225\u2220\u2312\u2299\u222b\u222e\u2261\u224c\u2248\u223d\u221d\u2260\u226e\u226f\u2264\u2265\u221e\u2235\u2234\u2642\u2640\xb0\u2032\u2033\u2103\uff04\xa4\uffe0\uffe1\u2030\xa7\u2116\u2606\u2605\u25cb\u25cf\u25ce\u25c7\u25c6\u25a1\u25a0\u25b3\u25b2\u203b\u2192\u2190\u2191\u2193\u3013" ], [ "a2a1", "\u2170", 9 ], [ "a2b1", "\u2488", 19, "\u2474", 19, "\u2460", 9 ], [ "a2e5", "\u3220", 9 ], [ "a2f1", "\u2160", 11 ], [ "a3a1", "\uff01\uff02\uff03\uffe5\uff05", 88, "\uffe3" ], [ "a4a1", "\u3041", 82 ], [ "a5a1", "\u30a1", 85 ], [ "a6a1", "\u0391", 16, "\u03a3", 6 ], [ "a6c1", "\u03b1", 16, "\u03c3", 6 ], [ "a6e0", "\ufe35\ufe36\ufe39\ufe3a\ufe3f\ufe40\ufe3d\ufe3e\ufe41\ufe42\ufe43\ufe44" ], [ "a6ee", "\ufe3b\ufe3c\ufe37\ufe38\ufe31" ], [ "a6f4", "\ufe33\ufe34" ], [ "a7a1", "\u0410", 5, "\u0401\u0416", 25 ], [ "a7d1", "\u0430", 5, "\u0451\u0436", 25 ], [ "a840", "\u02ca\u02cb\u02d9\u2013\u2015\u2025\u2035\u2105\u2109\u2196\u2197\u2198\u2199\u2215\u221f\u2223\u2252\u2266\u2267\u22bf\u2550", 35, "\u2581", 6 ], [ "a880", "\u2588", 7, "\u2593\u2594\u2595\u25bc\u25bd\u25e2\u25e3\u25e4\u25e5\u2609\u2295\u3012\u301d\u301e" ], [ "a8a1", "\u0101\xe1\u01ce\xe0\u0113\xe9\u011b\xe8\u012b\xed\u01d0\xec\u014d\xf3\u01d2\xf2\u016b\xfa\u01d4\xf9\u01d6\u01d8\u01da\u01dc\xfc\xea\u0251" ], [ "a8bd", "\u0144\u0148" ], [ "a8c0", "\u0261" ], [ "a8c5", "\u3105", 36 ], [ "a940", "\u3021", 8, "\u32a3\u338e\u338f\u339c\u339d\u339e\u33a1\u33c4\u33ce\u33d1\u33d2\u33d5\ufe30\uffe2\uffe4" ], [ "a959", "\u2121\u3231" ], [ "a95c", "\u2010" ], [ "a960", "\u30fc\u309b\u309c\u30fd\u30fe\u3006\u309d\u309e\ufe49", 9, "\ufe54\ufe55\ufe56\ufe57\ufe59", 8 ], [ "a980", "\ufe62", 4, "\ufe68\ufe69\ufe6a\ufe6b" ], [ "a996", "\u3007" ], [ "a9a4", "\u2500", 75 ], [ "aa40", "\u72dc\u72dd\u72df\u72e2", 5, "\u72ea\u72eb\u72f5\u72f6\u72f9\u72fd\u72fe\u72ff\u7300\u7302\u7304", 5, "\u730b\u730c\u730d\u730f\u7310\u7311\u7312\u7314\u7318\u7319\u731a\u731f\u7320\u7323\u7324\u7326\u7327\u7328\u732d\u732f\u7330\u7332\u7333\u7335\u7336\u733a\u733b\u733c\u733d\u7340", 8 ], [ "aa80", "\u7349\u734a\u734b\u734c\u734e\u734f\u7351\u7353\u7354\u7355\u7356\u7358", 7, "\u7361", 10, "\u736e\u7370\u7371" ], [ "ab40", "\u7372", 11, "\u737f", 4, "\u7385\u7386\u7388\u738a\u738c\u738d\u738f\u7390\u7392\u7393\u7394\u7395\u7397\u7398\u7399\u739a\u739c\u739d\u739e\u73a0\u73a1\u73a3", 5, "\u73aa\u73ac\u73ad\u73b1\u73b4\u73b5\u73b6\u73b8\u73b9\u73bc\u73bd\u73be\u73bf\u73c1\u73c3", 4 ], [ "ab80", "\u73cb\u73cc\u73ce\u73d2", 6, "\u73da\u73db\u73dc\u73dd\u73df\u73e1\u73e2\u73e3\u73e4\u73e6\u73e8\u73ea\u73eb\u73ec\u73ee\u73ef\u73f0\u73f1\u73f3", 4 ], [ "ac40", "\u73f8", 10, "\u7404\u7407\u7408\u740b\u740c\u740d\u740e\u7411", 8, "\u741c", 5, "\u7423\u7424\u7427\u7429\u742b\u742d\u742f\u7431\u7432\u7437", 4, "\u743d\u743e\u743f\u7440\u7442", 11 ], [ "ac80", "\u744e", 6, "\u7456\u7458\u745d\u7460", 12, "\u746e\u746f\u7471", 4, "\u7478\u7479\u747a" ], [ "ad40", "\u747b\u747c\u747d\u747f\u7482\u7484\u7485\u7486\u7488\u7489\u748a\u748c\u748d\u748f\u7491", 10, "\u749d\u749f", 7, "\u74aa", 15, "\u74bb", 12 ], [ "ad80", "\u74c8", 9, "\u74d3", 8, "\u74dd\u74df\u74e1\u74e5\u74e7", 6, "\u74f0\u74f1\u74f2" ], [ "ae40", "\u74f3\u74f5\u74f8", 6, "\u7500\u7501\u7502\u7503\u7505", 7, "\u750e\u7510\u7512\u7514\u7515\u7516\u7517\u751b\u751d\u751e\u7520", 4, "\u7526\u7527\u752a\u752e\u7534\u7536\u7539\u753c\u753d\u753f\u7541\u7542\u7543\u7544\u7546\u7547\u7549\u754a\u754d\u7550\u7551\u7552\u7553\u7555\u7556\u7557\u7558" ], [ "ae80", "\u755d", 7, "\u7567\u7568\u7569\u756b", 6, "\u7573\u7575\u7576\u7577\u757a", 4, "\u7580\u7581\u7582\u7584\u7585\u7587" ], [ "af40", "\u7588\u7589\u758a\u758c\u758d\u758e\u7590\u7593\u7595\u7598\u759b\u759c\u759e\u75a2\u75a6", 4, "\u75ad\u75b6\u75b7\u75ba\u75bb\u75bf\u75c0\u75c1\u75c6\u75cb\u75cc\u75ce\u75cf\u75d0\u75d1\u75d3\u75d7\u75d9\u75da\u75dc\u75dd\u75df\u75e0\u75e1\u75e5\u75e9\u75ec\u75ed\u75ee\u75ef\u75f2\u75f3\u75f5\u75f6\u75f7\u75f8\u75fa\u75fb\u75fd\u75fe\u7602\u7604\u7606\u7607" ], [ "af80", "\u7608\u7609\u760b\u760d\u760e\u760f\u7611\u7612\u7613\u7614\u7616\u761a\u761c\u761d\u761e\u7621\u7623\u7627\u7628\u762c\u762e\u762f\u7631\u7632\u7636\u7637\u7639\u763a\u763b\u763d\u7641\u7642\u7644" ], [ "b040", "\u7645", 6, "\u764e", 5, "\u7655\u7657", 4, "\u765d\u765f\u7660\u7661\u7662\u7664", 6, "\u766c\u766d\u766e\u7670", 7, "\u7679\u767a\u767c\u767f\u7680\u7681\u7683\u7685\u7689\u768a\u768c\u768d\u768f\u7690\u7692\u7694\u7695\u7697\u7698\u769a\u769b" ], [ "b080", "\u769c", 7, "\u76a5", 8, "\u76af\u76b0\u76b3\u76b5", 9, "\u76c0\u76c1\u76c3\u554a\u963f\u57c3\u6328\u54ce\u5509\u54c0\u7691\u764c\u853c\u77ee\u827e\u788d\u7231\u9698\u978d\u6c28\u5b89\u4ffa\u6309\u6697\u5cb8\u80fa\u6848\u80ae\u6602\u76ce\u51f9\u6556\u71ac\u7ff1\u8884\u50b2\u5965\u61ca\u6fb3\u82ad\u634c\u6252\u53ed\u5427\u7b06\u516b\u75a4\u5df4\u62d4\u8dcb\u9776\u628a\u8019\u575d\u9738\u7f62\u7238\u767d\u67cf\u767e\u6446\u4f70\u8d25\u62dc\u7a17\u6591\u73ed\u642c\u6273\u822c\u9881\u677f\u7248\u626e\u62cc\u4f34\u74e3\u534a\u529e\u7eca\u90a6\u5e2e\u6886\u699c\u8180\u7ed1\u68d2\u78c5\u868c\u9551\u508d\u8c24\u82de\u80de\u5305\u8912\u5265" ], [ "b140", "\u76c4\u76c7\u76c9\u76cb\u76cc\u76d3\u76d5\u76d9\u76da\u76dc\u76dd\u76de\u76e0", 4, "\u76e6", 7, "\u76f0\u76f3\u76f5\u76f6\u76f7\u76fa\u76fb\u76fd\u76ff\u7700\u7702\u7703\u7705\u7706\u770a\u770c\u770e", 10, "\u771b\u771c\u771d\u771e\u7721\u7723\u7724\u7725\u7727\u772a\u772b" ], [ "b180", "\u772c\u772e\u7730", 4, "\u7739\u773b\u773d\u773e\u773f\u7742\u7744\u7745\u7746\u7748", 7, "\u7752", 7, "\u775c\u8584\u96f9\u4fdd\u5821\u9971\u5b9d\u62b1\u62a5\u66b4\u8c79\u9c8d\u7206\u676f\u7891\u60b2\u5351\u5317\u8f88\u80cc\u8d1d\u94a1\u500d\u72c8\u5907\u60eb\u7119\u88ab\u5954\u82ef\u672c\u7b28\u5d29\u7ef7\u752d\u6cf5\u8e66\u8ff8\u903c\u9f3b\u6bd4\u9119\u7b14\u5f7c\u78a7\u84d6\u853d\u6bd5\u6bd9\u6bd6\u5e01\u5e87\u75f9\u95ed\u655d\u5f0a\u5fc5\u8f9f\u58c1\u81c2\u907f\u965b\u97ad\u8fb9\u7f16\u8d2c\u6241\u4fbf\u53d8\u535e\u8fa8\u8fa9\u8fab\u904d\u6807\u5f6a\u8198\u8868\u9cd6\u618b\u522b\u762a\u5f6c\u658c\u6fd2\u6ee8\u5bbe\u6448\u5175\u51b0\u67c4\u4e19\u79c9\u997c\u70b3" ], [ "b240", "\u775d\u775e\u775f\u7760\u7764\u7767\u7769\u776a\u776d", 11, "\u777a\u777b\u777c\u7781\u7782\u7783\u7786", 5, "\u778f\u7790\u7793", 11, "\u77a1\u77a3\u77a4\u77a6\u77a8\u77ab\u77ad\u77ae\u77af\u77b1\u77b2\u77b4\u77b6", 4 ], [ "b280", "\u77bc\u77be\u77c0", 12, "\u77ce", 8, "\u77d8\u77d9\u77da\u77dd", 4, "\u77e4\u75c5\u5e76\u73bb\u83e0\u64ad\u62e8\u94b5\u6ce2\u535a\u52c3\u640f\u94c2\u7b94\u4f2f\u5e1b\u8236\u8116\u818a\u6e24\u6cca\u9a73\u6355\u535c\u54fa\u8865\u57e0\u4e0d\u5e03\u6b65\u7c3f\u90e8\u6016\u64e6\u731c\u88c1\u6750\u624d\u8d22\u776c\u8e29\u91c7\u5f69\u83dc\u8521\u9910\u53c2\u8695\u6b8b\u60ed\u60e8\u707f\u82cd\u8231\u4ed3\u6ca7\u85cf\u64cd\u7cd9\u69fd\u66f9\u8349\u5395\u7b56\u4fa7\u518c\u6d4b\u5c42\u8e6d\u63d2\u53c9\u832c\u8336\u67e5\u78b4\u643d\u5bdf\u5c94\u5dee\u8be7\u62c6\u67f4\u8c7a\u6400\u63ba\u8749\u998b\u8c17\u7f20\u94f2\u4ea7\u9610\u98a4\u660c\u7316" ], [ "b340", "\u77e6\u77e8\u77ea\u77ef\u77f0\u77f1\u77f2\u77f4\u77f5\u77f7\u77f9\u77fa\u77fb\u77fc\u7803", 5, "\u780a\u780b\u780e\u780f\u7810\u7813\u7815\u7819\u781b\u781e\u7820\u7821\u7822\u7824\u7828\u782a\u782b\u782e\u782f\u7831\u7832\u7833\u7835\u7836\u783d\u783f\u7841\u7842\u7843\u7844\u7846\u7848\u7849\u784a\u784b\u784d\u784f\u7851\u7853\u7854\u7858\u7859\u785a" ], [ "b380", "\u785b\u785c\u785e", 11, "\u786f", 7, "\u7878\u7879\u787a\u787b\u787d", 6, "\u573a\u5c1d\u5e38\u957f\u507f\u80a0\u5382\u655e\u7545\u5531\u5021\u8d85\u6284\u949e\u671d\u5632\u6f6e\u5de2\u5435\u7092\u8f66\u626f\u64a4\u63a3\u5f7b\u6f88\u90f4\u81e3\u8fb0\u5c18\u6668\u5ff1\u6c89\u9648\u8d81\u886c\u6491\u79f0\u57ce\u6a59\u6210\u5448\u4e58\u7a0b\u60e9\u6f84\u8bda\u627f\u901e\u9a8b\u79e4\u5403\u75f4\u6301\u5319\u6c60\u8fdf\u5f1b\u9a70\u803b\u9f7f\u4f88\u5c3a\u8d64\u7fc5\u65a5\u70bd\u5145\u51b2\u866b\u5d07\u5ba0\u62bd\u916c\u7574\u8e0c\u7a20\u6101\u7b79\u4ec7\u7ef8\u7785\u4e11\u81ed\u521d\u51fa\u6a71\u53a8\u8e87\u9504\u96cf\u6ec1\u9664\u695a" ], [ "b440", "\u7884\u7885\u7886\u7888\u788a\u788b\u788f\u7890\u7892\u7894\u7895\u7896\u7899\u789d\u789e\u78a0\u78a2\u78a4\u78a6\u78a8", 7, "\u78b5\u78b6\u78b7\u78b8\u78ba\u78bb\u78bc\u78bd\u78bf\u78c0\u78c2\u78c3\u78c4\u78c6\u78c7\u78c8\u78cc\u78cd\u78ce\u78cf\u78d1\u78d2\u78d3\u78d6\u78d7\u78d8\u78da", 9 ], [ "b480", "\u78e4\u78e5\u78e6\u78e7\u78e9\u78ea\u78eb\u78ed", 4, "\u78f3\u78f5\u78f6\u78f8\u78f9\u78fb", 5, "\u7902\u7903\u7904\u7906", 6, "\u7840\u50a8\u77d7\u6410\u89e6\u5904\u63e3\u5ddd\u7a7f\u693d\u4f20\u8239\u5598\u4e32\u75ae\u7a97\u5e62\u5e8a\u95ef\u521b\u5439\u708a\u6376\u9524\u5782\u6625\u693f\u9187\u5507\u6df3\u7eaf\u8822\u6233\u7ef0\u75b5\u8328\u78c1\u96cc\u8f9e\u6148\u74f7\u8bcd\u6b64\u523a\u8d50\u6b21\u806a\u8471\u56f1\u5306\u4ece\u4e1b\u51d1\u7c97\u918b\u7c07\u4fc3\u8e7f\u7be1\u7a9c\u6467\u5d14\u50ac\u8106\u7601\u7cb9\u6dec\u7fe0\u6751\u5b58\u5bf8\u78cb\u64ae\u6413\u63aa\u632b\u9519\u642d\u8fbe\u7b54\u7629\u6253\u5927\u5446\u6b79\u50a3\u6234\u5e26\u6b86\u4ee3\u8d37\u888b\u5f85\u902e" ], [ "b540", "\u790d", 5, "\u7914", 9, "\u791f", 4, "\u7925", 14, "\u7935", 4, "\u793d\u793f\u7942\u7943\u7944\u7945\u7947\u794a", 8, "\u7954\u7955\u7958\u7959\u7961\u7963" ], [ "b580", "\u7964\u7966\u7969\u796a\u796b\u796c\u796e\u7970", 6, "\u7979\u797b", 4, "\u7982\u7983\u7986\u7987\u7988\u7989\u798b\u798c\u798d\u798e\u7990\u7991\u7992\u6020\u803d\u62c5\u4e39\u5355\u90f8\u63b8\u80c6\u65e6\u6c2e\u4f46\u60ee\u6de1\u8bde\u5f39\u86cb\u5f53\u6321\u515a\u8361\u6863\u5200\u6363\u8e48\u5012\u5c9b\u7977\u5bfc\u5230\u7a3b\u60bc\u9053\u76d7\u5fb7\u5f97\u7684\u8e6c\u706f\u767b\u7b49\u77aa\u51f3\u9093\u5824\u4f4e\u6ef4\u8fea\u654c\u7b1b\u72c4\u6da4\u7fdf\u5ae1\u62b5\u5e95\u5730\u8482\u7b2c\u5e1d\u5f1f\u9012\u7f14\u98a0\u6382\u6ec7\u7898\u70b9\u5178\u975b\u57ab\u7535\u4f43\u7538\u5e97\u60e6\u5960\u6dc0\u6bbf\u7889\u53fc\u96d5\u51cb\u5201\u6389\u540a\u9493\u8c03\u8dcc\u7239\u789f\u8776\u8fed\u8c0d\u53e0" ], [ "b640", "\u7993", 6, "\u799b", 11, "\u79a8", 10, "\u79b4", 4, "\u79bc\u79bf\u79c2\u79c4\u79c5\u79c7\u79c8\u79ca\u79cc\u79ce\u79cf\u79d0\u79d3\u79d4\u79d6\u79d7\u79d9", 5, "\u79e0\u79e1\u79e2\u79e5\u79e8\u79ea" ], [ "b680", "\u79ec\u79ee\u79f1", 6, "\u79f9\u79fa\u79fc\u79fe\u79ff\u7a01\u7a04\u7a05\u7a07\u7a08\u7a09\u7a0a\u7a0c\u7a0f", 4, "\u7a15\u7a16\u7a18\u7a19\u7a1b\u7a1c\u4e01\u76ef\u53ee\u9489\u9876\u9f0e\u952d\u5b9a\u8ba2\u4e22\u4e1c\u51ac\u8463\u61c2\u52a8\u680b\u4f97\u606b\u51bb\u6d1e\u515c\u6296\u6597\u9661\u8c46\u9017\u75d8\u90fd\u7763\u6bd2\u728a\u72ec\u8bfb\u5835\u7779\u8d4c\u675c\u9540\u809a\u5ea6\u6e21\u5992\u7aef\u77ed\u953b\u6bb5\u65ad\u7f0e\u5806\u5151\u961f\u5bf9\u58a9\u5428\u8e72\u6566\u987f\u56e4\u949d\u76fe\u9041\u6387\u54c6\u591a\u593a\u579b\u8eb2\u6735\u8dfa\u8235\u5241\u60f0\u5815\u86fe\u5ce8\u9e45\u4fc4\u989d\u8bb9\u5a25\u6076\u5384\u627c\u904f\u9102\u997f\u6069\u800c\u513f\u8033\u5c14\u9975\u6d31\u4e8c" ], [ "b740", "\u7a1d\u7a1f\u7a21\u7a22\u7a24", 14, "\u7a34\u7a35\u7a36\u7a38\u7a3a\u7a3e\u7a40", 5, "\u7a47", 9, "\u7a52", 4, "\u7a58", 16 ], [ "b780", "\u7a69", 6, "\u7a71\u7a72\u7a73\u7a75\u7a7b\u7a7c\u7a7d\u7a7e\u7a82\u7a85\u7a87\u7a89\u7a8a\u7a8b\u7a8c\u7a8e\u7a8f\u7a90\u7a93\u7a94\u7a99\u7a9a\u7a9b\u7a9e\u7aa1\u7aa2\u8d30\u53d1\u7f5a\u7b4f\u4f10\u4e4f\u9600\u6cd5\u73d0\u85e9\u5e06\u756a\u7ffb\u6a0a\u77fe\u9492\u7e41\u51e1\u70e6\u53cd\u8fd4\u8303\u8d29\u72af\u996d\u6cdb\u574a\u82b3\u65b9\u80aa\u623f\u9632\u59a8\u4eff\u8bbf\u7eba\u653e\u83f2\u975e\u5561\u98de\u80a5\u532a\u8bfd\u5420\u80ba\u5e9f\u6cb8\u8d39\u82ac\u915a\u5429\u6c1b\u5206\u7eb7\u575f\u711a\u6c7e\u7c89\u594b\u4efd\u5fff\u6124\u7caa\u4e30\u5c01\u67ab\u8702\u5cf0\u950b\u98ce\u75af\u70fd\u9022\u51af\u7f1d\u8bbd\u5949\u51e4\u4f5b\u5426\u592b\u6577\u80a4\u5b75\u6276\u62c2\u8f90\u5e45\u6c1f\u7b26\u4f0f\u4fd8\u670d" ], [ "b840", "\u7aa3\u7aa4\u7aa7\u7aa9\u7aaa\u7aab\u7aae", 4, "\u7ab4", 10, "\u7ac0", 10, "\u7acc", 9, "\u7ad7\u7ad8\u7ada\u7adb\u7adc\u7add\u7ae1\u7ae2\u7ae4\u7ae7", 5, "\u7aee\u7af0\u7af1\u7af2\u7af3" ], [ "b880", "\u7af4", 4, "\u7afb\u7afc\u7afe\u7b00\u7b01\u7b02\u7b05\u7b07\u7b09\u7b0c\u7b0d\u7b0e\u7b10\u7b12\u7b13\u7b16\u7b17\u7b18\u7b1a\u7b1c\u7b1d\u7b1f\u7b21\u7b22\u7b23\u7b27\u7b29\u7b2d\u6d6e\u6daa\u798f\u88b1\u5f17\u752b\u629a\u8f85\u4fef\u91dc\u65a7\u812f\u8151\u5e9c\u8150\u8d74\u526f\u8986\u8d4b\u590d\u5085\u4ed8\u961c\u7236\u8179\u8d1f\u5bcc\u8ba3\u9644\u5987\u7f1a\u5490\u5676\u560e\u8be5\u6539\u6982\u9499\u76d6\u6e89\u5e72\u7518\u6746\u67d1\u7aff\u809d\u8d76\u611f\u79c6\u6562\u8d63\u5188\u521a\u94a2\u7f38\u809b\u7eb2\u5c97\u6e2f\u6760\u7bd9\u768b\u9ad8\u818f\u7f94\u7cd5\u641e\u9550\u7a3f\u544a\u54e5\u6b4c\u6401\u6208\u9e3d\u80f3\u7599\u5272\u9769\u845b\u683c\u86e4\u9601\u9694\u94ec\u4e2a\u5404\u7ed9\u6839\u8ddf\u8015\u66f4\u5e9a\u7fb9" ], [ "b940", "\u7b2f\u7b30\u7b32\u7b34\u7b35\u7b36\u7b37\u7b39\u7b3b\u7b3d\u7b3f", 5, "\u7b46\u7b48\u7b4a\u7b4d\u7b4e\u7b53\u7b55\u7b57\u7b59\u7b5c\u7b5e\u7b5f\u7b61\u7b63", 10, "\u7b6f\u7b70\u7b73\u7b74\u7b76\u7b78\u7b7a\u7b7c\u7b7d\u7b7f\u7b81\u7b82\u7b83\u7b84\u7b86", 6, "\u7b8e\u7b8f" ], [ "b980", "\u7b91\u7b92\u7b93\u7b96\u7b98\u7b99\u7b9a\u7b9b\u7b9e\u7b9f\u7ba0\u7ba3\u7ba4\u7ba5\u7bae\u7baf\u7bb0\u7bb2\u7bb3\u7bb5\u7bb6\u7bb7\u7bb9", 7, "\u7bc2\u7bc3\u7bc4\u57c2\u803f\u6897\u5de5\u653b\u529f\u606d\u9f9a\u4f9b\u8eac\u516c\u5bab\u5f13\u5de9\u6c5e\u62f1\u8d21\u5171\u94a9\u52fe\u6c9f\u82df\u72d7\u57a2\u6784\u8d2d\u591f\u8f9c\u83c7\u5495\u7b8d\u4f30\u6cbd\u5b64\u59d1\u9f13\u53e4\u86ca\u9aa8\u8c37\u80a1\u6545\u987e\u56fa\u96c7\u522e\u74dc\u5250\u5be1\u6302\u8902\u4e56\u62d0\u602a\u68fa\u5173\u5b98\u51a0\u89c2\u7ba1\u9986\u7f50\u60ef\u704c\u8d2f\u5149\u5e7f\u901b\u7470\u89c4\u572d\u7845\u5f52\u9f9f\u95fa\u8f68\u9b3c\u8be1\u7678\u6842\u67dc\u8dea\u8d35\u523d\u8f8a\u6eda\u68cd\u9505\u90ed\u56fd\u679c\u88f9\u8fc7\u54c8" ], [ "ba40", "\u7bc5\u7bc8\u7bc9\u7bca\u7bcb\u7bcd\u7bce\u7bcf\u7bd0\u7bd2\u7bd4", 4, "\u7bdb\u7bdc\u7bde\u7bdf\u7be0\u7be2\u7be3\u7be4\u7be7\u7be8\u7be9\u7beb\u7bec\u7bed\u7bef\u7bf0\u7bf2", 4, "\u7bf8\u7bf9\u7bfa\u7bfb\u7bfd\u7bff", 7, "\u7c08\u7c09\u7c0a\u7c0d\u7c0e\u7c10", 5, "\u7c17\u7c18\u7c19" ], [ "ba80", "\u7c1a", 4, "\u7c20", 5, "\u7c28\u7c29\u7c2b", 12, "\u7c39", 5, "\u7c42\u9ab8\u5b69\u6d77\u6c26\u4ea5\u5bb3\u9a87\u9163\u61a8\u90af\u97e9\u542b\u6db5\u5bd2\u51fd\u558a\u7f55\u7ff0\u64bc\u634d\u65f1\u61be\u608d\u710a\u6c57\u6c49\u592f\u676d\u822a\u58d5\u568e\u8c6a\u6beb\u90dd\u597d\u8017\u53f7\u6d69\u5475\u559d\u8377\u83cf\u6838\u79be\u548c\u4f55\u5408\u76d2\u8c89\u9602\u6cb3\u6db8\u8d6b\u8910\u9e64\u8d3a\u563f\u9ed1\u75d5\u5f88\u72e0\u6068\u54fc\u4ea8\u6a2a\u8861\u6052\u8f70\u54c4\u70d8\u8679\u9e3f\u6d2a\u5b8f\u5f18\u7ea2\u5589\u4faf\u7334\u543c\u539a\u5019\u540e\u547c\u4e4e\u5ffd\u745a\u58f6\u846b\u80e1\u8774\u72d0\u7cca\u6e56" ], [ "bb40", "\u7c43", 9, "\u7c4e", 36, "\u7c75", 5, "\u7c7e", 9 ], [ "bb80", "\u7c88\u7c8a", 6, "\u7c93\u7c94\u7c96\u7c99\u7c9a\u7c9b\u7ca0\u7ca1\u7ca3\u7ca6\u7ca7\u7ca8\u7ca9\u7cab\u7cac\u7cad\u7caf\u7cb0\u7cb4", 4, "\u7cba\u7cbb\u5f27\u864e\u552c\u62a4\u4e92\u6caa\u6237\u82b1\u54d7\u534e\u733e\u6ed1\u753b\u5212\u5316\u8bdd\u69d0\u5f8a\u6000\u6dee\u574f\u6b22\u73af\u6853\u8fd8\u7f13\u6362\u60a3\u5524\u75ea\u8c62\u7115\u6da3\u5ba6\u5e7b\u8352\u614c\u9ec4\u78fa\u8757\u7c27\u7687\u51f0\u60f6\u714c\u6643\u5e4c\u604d\u8c0e\u7070\u6325\u8f89\u5fbd\u6062\u86d4\u56de\u6bc1\u6094\u6167\u5349\u60e0\u6666\u8d3f\u79fd\u4f1a\u70e9\u6c47\u8bb3\u8bf2\u7ed8\u8364\u660f\u5a5a\u9b42\u6d51\u6df7\u8c41\u6d3b\u4f19\u706b\u83b7\u6216\u60d1\u970d\u8d27\u7978\u51fb\u573e\u57fa\u673a\u7578\u7a3d\u79ef\u7b95" ], [ "bc40", "\u7cbf\u7cc0\u7cc2\u7cc3\u7cc4\u7cc6\u7cc9\u7ccb\u7cce", 6, "\u7cd8\u7cda\u7cdb\u7cdd\u7cde\u7ce1", 6, "\u7ce9", 5, "\u7cf0", 7, "\u7cf9\u7cfa\u7cfc", 13, "\u7d0b", 5 ], [ "bc80", "\u7d11", 14, "\u7d21\u7d23\u7d24\u7d25\u7d26\u7d28\u7d29\u7d2a\u7d2c\u7d2d\u7d2e\u7d30", 6, "\u808c\u9965\u8ff9\u6fc0\u8ba5\u9e21\u59ec\u7ee9\u7f09\u5409\u6781\u68d8\u8f91\u7c4d\u96c6\u53ca\u6025\u75be\u6c72\u5373\u5ac9\u7ea7\u6324\u51e0\u810a\u5df1\u84df\u6280\u5180\u5b63\u4f0e\u796d\u5242\u60b8\u6d4e\u5bc4\u5bc2\u8ba1\u8bb0\u65e2\u5fcc\u9645\u5993\u7ee7\u7eaa\u5609\u67b7\u5939\u4f73\u5bb6\u52a0\u835a\u988a\u8d3e\u7532\u94be\u5047\u7a3c\u4ef7\u67b6\u9a7e\u5ac1\u6b7c\u76d1\u575a\u5c16\u7b3a\u95f4\u714e\u517c\u80a9\u8270\u5978\u7f04\u8327\u68c0\u67ec\u78b1\u7877\u62e3\u6361\u7b80\u4fed\u526a\u51cf\u8350\u69db\u9274\u8df5\u8d31\u89c1\u952e\u7bad\u4ef6" ], [ "bd40", "\u7d37", 54, "\u7d6f", 7 ], [ "bd80", "\u7d78", 32, "\u5065\u8230\u5251\u996f\u6e10\u6e85\u6da7\u5efa\u50f5\u59dc\u5c06\u6d46\u6c5f\u7586\u848b\u6868\u5956\u8bb2\u5320\u9171\u964d\u8549\u6912\u7901\u7126\u80f6\u4ea4\u90ca\u6d47\u9a84\u5a07\u56bc\u6405\u94f0\u77eb\u4fa5\u811a\u72e1\u89d2\u997a\u7f34\u7ede\u527f\u6559\u9175\u8f7f\u8f83\u53eb\u7a96\u63ed\u63a5\u7686\u79f8\u8857\u9636\u622a\u52ab\u8282\u6854\u6770\u6377\u776b\u7aed\u6d01\u7ed3\u89e3\u59d0\u6212\u85c9\u82a5\u754c\u501f\u4ecb\u75a5\u8beb\u5c4a\u5dfe\u7b4b\u65a4\u91d1\u4eca\u6d25\u895f\u7d27\u9526\u4ec5\u8c28\u8fdb\u9773\u664b\u7981\u8fd1\u70ec\u6d78" ], [ "be40", "\u7d99", 12, "\u7da7", 6, "\u7daf", 42 ], [ "be80", "\u7dda", 32, "\u5c3d\u52b2\u8346\u5162\u830e\u775b\u6676\u9cb8\u4eac\u60ca\u7cbe\u7cb3\u7ecf\u4e95\u8b66\u666f\u9888\u9759\u5883\u656c\u955c\u5f84\u75c9\u9756\u7adf\u7ade\u51c0\u70af\u7a98\u63ea\u7a76\u7ea0\u7396\u97ed\u4e45\u7078\u4e5d\u9152\u53a9\u6551\u65e7\u81fc\u8205\u548e\u5c31\u759a\u97a0\u62d8\u72d9\u75bd\u5c45\u9a79\u83ca\u5c40\u5480\u77e9\u4e3e\u6cae\u805a\u62d2\u636e\u5de8\u5177\u8ddd\u8e1e\u952f\u4ff1\u53e5\u60e7\u70ac\u5267\u6350\u9e43\u5a1f\u5026\u7737\u5377\u7ee2\u6485\u652b\u6289\u6398\u5014\u7235\u89c9\u51b3\u8bc0\u7edd\u5747\u83cc\u94a7\u519b\u541b\u5cfb" ], [ "bf40", "\u7dfb", 62 ], [ "bf80", "\u7e3a\u7e3c", 4, "\u7e42", 4, "\u7e48", 21, "\u4fca\u7ae3\u6d5a\u90e1\u9a8f\u5580\u5496\u5361\u54af\u5f00\u63e9\u6977\u51ef\u6168\u520a\u582a\u52d8\u574e\u780d\u770b\u5eb7\u6177\u7ce0\u625b\u6297\u4ea2\u7095\u8003\u62f7\u70e4\u9760\u5777\u82db\u67ef\u68f5\u78d5\u9897\u79d1\u58f3\u54b3\u53ef\u6e34\u514b\u523b\u5ba2\u8bfe\u80af\u5543\u57a6\u6073\u5751\u542d\u7a7a\u6050\u5b54\u63a7\u62a0\u53e3\u6263\u5bc7\u67af\u54ed\u7a9f\u82e6\u9177\u5e93\u88e4\u5938\u57ae\u630e\u8de8\u80ef\u5757\u7b77\u4fa9\u5feb\u5bbd\u6b3e\u5321\u7b50\u72c2\u6846\u77ff\u7736\u65f7\u51b5\u4e8f\u76d4\u5cbf\u7aa5\u8475\u594e\u9b41\u5080" ], [ "c040", "\u7e5e", 35, "\u7e83", 23, "\u7e9c\u7e9d\u7e9e" ], [ "c080", "\u7eae\u7eb4\u7ebb\u7ebc\u7ed6\u7ee4\u7eec\u7ef9\u7f0a\u7f10\u7f1e\u7f37\u7f39\u7f3b", 6, "\u7f43\u7f46", 9, "\u7f52\u7f53\u9988\u6127\u6e83\u5764\u6606\u6346\u56f0\u62ec\u6269\u5ed3\u9614\u5783\u62c9\u5587\u8721\u814a\u8fa3\u5566\u83b1\u6765\u8d56\u84dd\u5a6a\u680f\u62e6\u7bee\u9611\u5170\u6f9c\u8c30\u63fd\u89c8\u61d2\u7f06\u70c2\u6ee5\u7405\u6994\u72fc\u5eca\u90ce\u6717\u6d6a\u635e\u52b3\u7262\u8001\u4f6c\u59e5\u916a\u70d9\u6d9d\u52d2\u4e50\u96f7\u956d\u857e\u78ca\u7d2f\u5121\u5792\u64c2\u808b\u7c7b\u6cea\u68f1\u695e\u51b7\u5398\u68a8\u7281\u9ece\u7bf1\u72f8\u79bb\u6f13\u7406\u674e\u91cc\u9ca4\u793c\u8389\u8354\u540f\u6817\u4e3d\u5389\u52b1\u783e\u5386\u5229\u5088\u4f8b\u4fd0" ], [ "c140", "\u7f56\u7f59\u7f5b\u7f5c\u7f5d\u7f5e\u7f60\u7f63", 4, "\u7f6b\u7f6c\u7f6d\u7f6f\u7f70\u7f73\u7f75\u7f76\u7f77\u7f78\u7f7a\u7f7b\u7f7c\u7f7d\u7f7f\u7f80\u7f82", 7, "\u7f8b\u7f8d\u7f8f", 4, "\u7f95", 4, "\u7f9b\u7f9c\u7fa0\u7fa2\u7fa3\u7fa5\u7fa6\u7fa8", 6, "\u7fb1" ], [ "c180", "\u7fb3", 4, "\u7fba\u7fbb\u7fbe\u7fc0\u7fc2\u7fc3\u7fc4\u7fc6\u7fc7\u7fc8\u7fc9\u7fcb\u7fcd\u7fcf", 4, "\u7fd6\u7fd7\u7fd9", 5, "\u7fe2\u7fe3\u75e2\u7acb\u7c92\u6ca5\u96b6\u529b\u7483\u54e9\u4fe9\u8054\u83b2\u8fde\u9570\u5ec9\u601c\u6d9f\u5e18\u655b\u8138\u94fe\u604b\u70bc\u7ec3\u7cae\u51c9\u6881\u7cb1\u826f\u4e24\u8f86\u91cf\u667e\u4eae\u8c05\u64a9\u804a\u50da\u7597\u71ce\u5be5\u8fbd\u6f66\u4e86\u6482\u9563\u5ed6\u6599\u5217\u88c2\u70c8\u52a3\u730e\u7433\u6797\u78f7\u9716\u4e34\u90bb\u9cde\u6dcb\u51db\u8d41\u541d\u62ce\u73b2\u83f1\u96f6\u9f84\u94c3\u4f36\u7f9a\u51cc\u7075\u9675\u5cad\u9886\u53e6\u4ee4\u6e9c\u7409\u69b4\u786b\u998f\u7559\u5218\u7624\u6d41\u67f3\u516d\u9f99\u804b\u5499\u7b3c\u7abf" ], [ "c240", "\u7fe4\u7fe7\u7fe8\u7fea\u7feb\u7fec\u7fed\u7fef\u7ff2\u7ff4", 6, "\u7ffd\u7ffe\u7fff\u8002\u8007\u8008\u8009\u800a\u800e\u800f\u8011\u8013\u801a\u801b\u801d\u801e\u801f\u8021\u8023\u8024\u802b", 5, "\u8032\u8034\u8039\u803a\u803c\u803e\u8040\u8041\u8044\u8045\u8047\u8048\u8049\u804e\u804f\u8050\u8051\u8053\u8055\u8056\u8057" ], [ "c280", "\u8059\u805b", 13, "\u806b", 5, "\u8072", 11, "\u9686\u5784\u62e2\u9647\u697c\u5a04\u6402\u7bd3\u6f0f\u964b\u82a6\u5362\u9885\u5e90\u7089\u63b3\u5364\u864f\u9c81\u9e93\u788c\u9732\u8def\u8d42\u9e7f\u6f5e\u7984\u5f55\u9646\u622e\u9a74\u5415\u94dd\u4fa3\u65c5\u5c65\u5c61\u7f15\u8651\u6c2f\u5f8b\u7387\u6ee4\u7eff\u5ce6\u631b\u5b6a\u6ee6\u5375\u4e71\u63a0\u7565\u62a1\u8f6e\u4f26\u4ed1\u6ca6\u7eb6\u8bba\u841d\u87ba\u7f57\u903b\u9523\u7ba9\u9aa1\u88f8\u843d\u6d1b\u9a86\u7edc\u5988\u9ebb\u739b\u7801\u8682\u9a6c\u9a82\u561b\u5417\u57cb\u4e70\u9ea6\u5356\u8fc8\u8109\u7792\u9992\u86ee\u6ee1\u8513\u66fc\u6162\u6f2b" ], [ "c340", "\u807e\u8081\u8082\u8085\u8088\u808a\u808d", 5, "\u8094\u8095\u8097\u8099\u809e\u80a3\u80a6\u80a7\u80a8\u80ac\u80b0\u80b3\u80b5\u80b6\u80b8\u80b9\u80bb\u80c5\u80c7", 4, "\u80cf", 6, "\u80d8\u80df\u80e0\u80e2\u80e3\u80e6\u80ee\u80f5\u80f7\u80f9\u80fb\u80fe\u80ff\u8100\u8101\u8103\u8104\u8105\u8107\u8108\u810b" ], [ "c380", "\u810c\u8115\u8117\u8119\u811b\u811c\u811d\u811f", 12, "\u812d\u812e\u8130\u8133\u8134\u8135\u8137\u8139", 4, "\u813f\u8c29\u8292\u832b\u76f2\u6c13\u5fd9\u83bd\u732b\u8305\u951a\u6bdb\u77db\u94c6\u536f\u8302\u5192\u5e3d\u8c8c\u8d38\u4e48\u73ab\u679a\u6885\u9176\u9709\u7164\u6ca1\u7709\u5a92\u9541\u6bcf\u7f8e\u6627\u5bd0\u59b9\u5a9a\u95e8\u95f7\u4eec\u840c\u8499\u6aac\u76df\u9530\u731b\u68a6\u5b5f\u772f\u919a\u9761\u7cdc\u8ff7\u8c1c\u5f25\u7c73\u79d8\u89c5\u6ccc\u871c\u5bc6\u5e42\u68c9\u7720\u7ef5\u5195\u514d\u52c9\u5a29\u7f05\u9762\u82d7\u63cf\u7784\u85d0\u79d2\u6e3a\u5e99\u5999\u8511\u706d\u6c11\u62bf\u76bf\u654f\u60af\u95fd\u660e\u879f\u9e23\u94ed\u540d\u547d\u8c2c\u6478" ], [ "c440", "\u8140", 5, "\u8147\u8149\u814d\u814e\u814f\u8152\u8156\u8157\u8158\u815b", 4, "\u8161\u8162\u8163\u8164\u8166\u8168\u816a\u816b\u816c\u816f\u8172\u8173\u8175\u8176\u8177\u8178\u8181\u8183", 4, "\u8189\u818b\u818c\u818d\u818e\u8190\u8192", 5, "\u8199\u819a\u819e", 4, "\u81a4\u81a5" ], [ "c480", "\u81a7\u81a9\u81ab", 7, "\u81b4", 5, "\u81bc\u81bd\u81be\u81bf\u81c4\u81c5\u81c7\u81c8\u81c9\u81cb\u81cd", 6, "\u6479\u8611\u6a21\u819c\u78e8\u6469\u9b54\u62b9\u672b\u83ab\u58a8\u9ed8\u6cab\u6f20\u5bde\u964c\u8c0b\u725f\u67d0\u62c7\u7261\u4ea9\u59c6\u6bcd\u5893\u66ae\u5e55\u52df\u6155\u6728\u76ee\u7766\u7267\u7a46\u62ff\u54ea\u5450\u94a0\u90a3\u5a1c\u7eb3\u6c16\u4e43\u5976\u8010\u5948\u5357\u7537\u96be\u56ca\u6320\u8111\u607c\u95f9\u6dd6\u5462\u9981\u5185\u5ae9\u80fd\u59ae\u9713\u502a\u6ce5\u5c3c\u62df\u4f60\u533f\u817b\u9006\u6eba\u852b\u62c8\u5e74\u78be\u64b5\u637b\u5ff5\u5a18\u917f\u9e1f\u5c3f\u634f\u8042\u5b7d\u556e\u954a\u954d\u6d85\u60a8\u67e0\u72de\u51dd\u5b81" ], [ "c540", "\u81d4", 14, "\u81e4\u81e5\u81e6\u81e8\u81e9\u81eb\u81ee", 4, "\u81f5", 5, "\u81fd\u81ff\u8203\u8207", 4, "\u820e\u820f\u8211\u8213\u8215", 5, "\u821d\u8220\u8224\u8225\u8226\u8227\u8229\u822e\u8232\u823a\u823c\u823d\u823f" ], [ "c580", "\u8240\u8241\u8242\u8243\u8245\u8246\u8248\u824a\u824c\u824d\u824e\u8250", 7, "\u8259\u825b\u825c\u825d\u825e\u8260", 7, "\u8269\u62e7\u6cde\u725b\u626d\u94ae\u7ebd\u8113\u6d53\u519c\u5f04\u5974\u52aa\u6012\u5973\u6696\u8650\u759f\u632a\u61e6\u7cef\u8bfa\u54e6\u6b27\u9e25\u6bb4\u85d5\u5455\u5076\u6ca4\u556a\u8db4\u722c\u5e15\u6015\u7436\u62cd\u6392\u724c\u5f98\u6e43\u6d3e\u6500\u6f58\u76d8\u78d0\u76fc\u7554\u5224\u53db\u4e53\u5e9e\u65c1\u802a\u80d6\u629b\u5486\u5228\u70ae\u888d\u8dd1\u6ce1\u5478\u80da\u57f9\u88f4\u8d54\u966a\u914d\u4f69\u6c9b\u55b7\u76c6\u7830\u62a8\u70f9\u6f8e\u5f6d\u84ec\u68da\u787c\u7bf7\u81a8\u670b\u9e4f\u6367\u78b0\u576f\u7812\u9739\u6279\u62ab\u5288\u7435\u6bd7" ], [ "c640", "\u826a\u826b\u826c\u826d\u8271\u8275\u8276\u8277\u8278\u827b\u827c\u8280\u8281\u8283\u8285\u8286\u8287\u8289\u828c\u8290\u8293\u8294\u8295\u8296\u829a\u829b\u829e\u82a0\u82a2\u82a3\u82a7\u82b2\u82b5\u82b6\u82ba\u82bb\u82bc\u82bf\u82c0\u82c2\u82c3\u82c5\u82c6\u82c9\u82d0\u82d6\u82d9\u82da\u82dd\u82e2\u82e7\u82e8\u82e9\u82ea\u82ec\u82ed\u82ee\u82f0\u82f2\u82f3\u82f5\u82f6\u82f8" ], [ "c680", "\u82fa\u82fc", 4, "\u830a\u830b\u830d\u8310\u8312\u8313\u8316\u8318\u8319\u831d", 9, "\u8329\u832a\u832e\u8330\u8332\u8337\u833b\u833d\u5564\u813e\u75b2\u76ae\u5339\u75de\u50fb\u5c41\u8b6c\u7bc7\u504f\u7247\u9a97\u98d8\u6f02\u74e2\u7968\u6487\u77a5\u62fc\u9891\u8d2b\u54c1\u8058\u4e52\u576a\u82f9\u840d\u5e73\u51ed\u74f6\u8bc4\u5c4f\u5761\u6cfc\u9887\u5a46\u7834\u9b44\u8feb\u7c95\u5256\u6251\u94fa\u4ec6\u8386\u8461\u83e9\u84b2\u57d4\u6734\u5703\u666e\u6d66\u8c31\u66dd\u7011\u671f\u6b3a\u6816\u621a\u59bb\u4e03\u51c4\u6f06\u67d2\u6c8f\u5176\u68cb\u5947\u6b67\u7566\u5d0e\u8110\u9f50\u65d7\u7948\u7941\u9a91\u8d77\u5c82\u4e5e\u4f01\u542f\u5951\u780c\u5668\u6c14\u8fc4\u5f03\u6c7d\u6ce3\u8bab\u6390" ], [ "c740", "\u833e\u833f\u8341\u8342\u8344\u8345\u8348\u834a", 4, "\u8353\u8355", 4, "\u835d\u8362\u8370", 6, "\u8379\u837a\u837e", 6, "\u8387\u8388\u838a\u838b\u838c\u838d\u838f\u8390\u8391\u8394\u8395\u8396\u8397\u8399\u839a\u839d\u839f\u83a1", 6, "\u83ac\u83ad\u83ae" ], [ "c780", "\u83af\u83b5\u83bb\u83be\u83bf\u83c2\u83c3\u83c4\u83c6\u83c8\u83c9\u83cb\u83cd\u83ce\u83d0\u83d1\u83d2\u83d3\u83d5\u83d7\u83d9\u83da\u83db\u83de\u83e2\u83e3\u83e4\u83e6\u83e7\u83e8\u83eb\u83ec\u83ed\u6070\u6d3d\u7275\u6266\u948e\u94c5\u5343\u8fc1\u7b7e\u4edf\u8c26\u4e7e\u9ed4\u94b1\u94b3\u524d\u6f5c\u9063\u6d45\u8c34\u5811\u5d4c\u6b20\u6b49\u67aa\u545b\u8154\u7f8c\u5899\u8537\u5f3a\u62a2\u6a47\u9539\u6572\u6084\u6865\u77a7\u4e54\u4fa8\u5de7\u9798\u64ac\u7fd8\u5ced\u4fcf\u7a8d\u5207\u8304\u4e14\u602f\u7a83\u94a6\u4fb5\u4eb2\u79e6\u7434\u52e4\u82b9\u64d2\u79bd\u5bdd\u6c81\u9752\u8f7b\u6c22\u503e\u537f\u6e05\u64ce\u6674\u6c30\u60c5\u9877\u8bf7\u5e86\u743c\u7a77\u79cb\u4e18\u90b1\u7403\u6c42\u56da\u914b\u6cc5\u8d8b\u533a\u86c6\u66f2\u8eaf\u5c48\u9a71\u6e20" ], [ "c840", "\u83ee\u83ef\u83f3", 4, "\u83fa\u83fb\u83fc\u83fe\u83ff\u8400\u8402\u8405\u8407\u8408\u8409\u840a\u8410\u8412", 5, "\u8419\u841a\u841b\u841e", 5, "\u8429", 7, "\u8432", 5, "\u8439\u843a\u843b\u843e", 7, "\u8447\u8448\u8449" ], [ "c880", "\u844a", 6, "\u8452", 4, "\u8458\u845d\u845e\u845f\u8460\u8462\u8464", 4, "\u846a\u846e\u846f\u8470\u8472\u8474\u8477\u8479\u847b\u847c\u53d6\u5a36\u9f8b\u8da3\u53bb\u5708\u98a7\u6743\u919b\u6cc9\u5168\u75ca\u62f3\u72ac\u5238\u529d\u7f3a\u7094\u7638\u5374\u9e4a\u69b7\u786e\u96c0\u88d9\u7fa4\u7136\u71c3\u5189\u67d3\u74e4\u58e4\u6518\u56b7\u8ba9\u9976\u6270\u7ed5\u60f9\u70ed\u58ec\u4ec1\u4eba\u5fcd\u97e7\u4efb\u8ba4\u5203\u598a\u7eab\u6254\u4ecd\u65e5\u620e\u8338\u84c9\u8363\u878d\u7194\u6eb6\u5bb9\u7ed2\u5197\u63c9\u67d4\u8089\u8339\u8815\u5112\u5b7a\u5982\u8fb1\u4e73\u6c5d\u5165\u8925\u8f6f\u962e\u854a\u745e\u9510\u95f0\u6da6\u82e5\u5f31\u6492\u6d12\u8428\u816e\u9cc3\u585e\u8d5b\u4e09\u53c1" ], [ "c940", "\u847d", 4, "\u8483\u8484\u8485\u8486\u848a\u848d\u848f", 7, "\u8498\u849a\u849b\u849d\u849e\u849f\u84a0\u84a2", 12, "\u84b0\u84b1\u84b3\u84b5\u84b6\u84b7\u84bb\u84bc\u84be\u84c0\u84c2\u84c3\u84c5\u84c6\u84c7\u84c8\u84cb\u84cc\u84ce\u84cf\u84d2\u84d4\u84d5\u84d7" ], [ "c980", "\u84d8", 4, "\u84de\u84e1\u84e2\u84e4\u84e7", 4, "\u84ed\u84ee\u84ef\u84f1", 10, "\u84fd\u84fe\u8500\u8501\u8502\u4f1e\u6563\u6851\u55d3\u4e27\u6414\u9a9a\u626b\u5ac2\u745f\u8272\u6da9\u68ee\u50e7\u838e\u7802\u6740\u5239\u6c99\u7eb1\u50bb\u5565\u715e\u7b5b\u6652\u73ca\u82eb\u6749\u5c71\u5220\u717d\u886b\u95ea\u9655\u64c5\u8d61\u81b3\u5584\u6c55\u6247\u7f2e\u5892\u4f24\u5546\u8d4f\u664c\u4e0a\u5c1a\u88f3\u68a2\u634e\u7a0d\u70e7\u828d\u52fa\u97f6\u5c11\u54e8\u90b5\u7ecd\u5962\u8d4a\u86c7\u820c\u820d\u8d66\u6444\u5c04\u6151\u6d89\u793e\u8bbe\u7837\u7533\u547b\u4f38\u8eab\u6df1\u5a20\u7ec5\u795e\u6c88\u5ba1\u5a76\u751a\u80be\u614e\u6e17\u58f0\u751f\u7525\u7272\u5347\u7ef3" ], [ "ca40", "\u8503", 8, "\u850d\u850e\u850f\u8510\u8512\u8514\u8515\u8516\u8518\u8519\u851b\u851c\u851d\u851e\u8520\u8522", 8, "\u852d", 9, "\u853e", 4, "\u8544\u8545\u8546\u8547\u854b", 10 ], [ "ca80", "\u8557\u8558\u855a\u855b\u855c\u855d\u855f", 4, "\u8565\u8566\u8567\u8569", 8, "\u8573\u8575\u8576\u8577\u8578\u857c\u857d\u857f\u8580\u8581\u7701\u76db\u5269\u80dc\u5723\u5e08\u5931\u72ee\u65bd\u6e7f\u8bd7\u5c38\u8671\u5341\u77f3\u62fe\u65f6\u4ec0\u98df\u8680\u5b9e\u8bc6\u53f2\u77e2\u4f7f\u5c4e\u9a76\u59cb\u5f0f\u793a\u58eb\u4e16\u67ff\u4e8b\u62ed\u8a93\u901d\u52bf\u662f\u55dc\u566c\u9002\u4ed5\u4f8d\u91ca\u9970\u6c0f\u5e02\u6043\u5ba4\u89c6\u8bd5\u6536\u624b\u9996\u5b88\u5bff\u6388\u552e\u53d7\u7626\u517d\u852c\u67a2\u68b3\u6b8a\u6292\u8f93\u53d4\u8212\u6dd1\u758f\u4e66\u8d4e\u5b70\u719f\u85af\u6691\u66d9\u7f72\u8700\u9ecd\u9f20\u5c5e\u672f\u8ff0\u6811\u675f\u620d\u7ad6\u5885\u5eb6\u6570\u6f31" ], [ "cb40", "\u8582\u8583\u8586\u8588", 6, "\u8590", 10, "\u859d", 6, "\u85a5\u85a6\u85a7\u85a9\u85ab\u85ac\u85ad\u85b1", 5, "\u85b8\u85ba", 6, "\u85c2", 6, "\u85ca", 4, "\u85d1\u85d2" ], [ "cb80", "\u85d4\u85d6", 5, "\u85dd", 6, "\u85e5\u85e6\u85e7\u85e8\u85ea", 14, "\u6055\u5237\u800d\u6454\u8870\u7529\u5e05\u6813\u62f4\u971c\u53cc\u723d\u8c01\u6c34\u7761\u7a0e\u542e\u77ac\u987a\u821c\u8bf4\u7855\u6714\u70c1\u65af\u6495\u5636\u601d\u79c1\u53f8\u4e1d\u6b7b\u8086\u5bfa\u55e3\u56db\u4f3a\u4f3c\u9972\u5df3\u677e\u8038\u6002\u9882\u9001\u5b8b\u8bbc\u8bf5\u641c\u8258\u64de\u55fd\u82cf\u9165\u4fd7\u7d20\u901f\u7c9f\u50f3\u5851\u6eaf\u5bbf\u8bc9\u8083\u9178\u849c\u7b97\u867d\u968b\u968f\u7ee5\u9ad3\u788e\u5c81\u7a57\u9042\u96a7\u795f\u5b59\u635f\u7b0b\u84d1\u68ad\u5506\u7f29\u7410\u7d22\u9501\u6240\u584c\u4ed6\u5b83\u5979\u5854" ], [ "cc40", "\u85f9\u85fa\u85fc\u85fd\u85fe\u8600", 4, "\u8606", 10, "\u8612\u8613\u8614\u8615\u8617", 15, "\u8628\u862a", 13, "\u8639\u863a\u863b\u863d\u863e\u863f\u8640" ], [ "cc80", "\u8641", 11, "\u8652\u8653\u8655", 4, "\u865b\u865c\u865d\u865f\u8660\u8661\u8663", 7, "\u736d\u631e\u8e4b\u8e0f\u80ce\u82d4\u62ac\u53f0\u6cf0\u915e\u592a\u6001\u6c70\u574d\u644a\u8d2a\u762b\u6ee9\u575b\u6a80\u75f0\u6f6d\u8c2d\u8c08\u5766\u6bef\u8892\u78b3\u63a2\u53f9\u70ad\u6c64\u5858\u642a\u5802\u68e0\u819b\u5510\u7cd6\u5018\u8eba\u6dcc\u8d9f\u70eb\u638f\u6d9b\u6ed4\u7ee6\u8404\u6843\u9003\u6dd8\u9676\u8ba8\u5957\u7279\u85e4\u817e\u75bc\u8a8a\u68af\u5254\u8e22\u9511\u63d0\u9898\u8e44\u557c\u4f53\u66ff\u568f\u60d5\u6d95\u5243\u5c49\u5929\u6dfb\u586b\u7530\u751c\u606c\u8214\u8146\u6311\u6761\u8fe2\u773a\u8df3\u8d34\u94c1\u5e16\u5385\u542c\u70c3" ], [ "cd40", "\u866d\u866f\u8670\u8672", 6, "\u8683", 6, "\u868e", 4, "\u8694\u8696", 5, "\u869e", 4, "\u86a5\u86a6\u86ab\u86ad\u86ae\u86b2\u86b3\u86b7\u86b8\u86b9\u86bb", 4, "\u86c1\u86c2\u86c3\u86c5\u86c8\u86cc\u86cd\u86d2\u86d3\u86d5\u86d6\u86d7\u86da\u86dc" ], [ "cd80", "\u86dd\u86e0\u86e1\u86e2\u86e3\u86e5\u86e6\u86e7\u86e8\u86ea\u86eb\u86ec\u86ef\u86f5\u86f6\u86f7\u86fa\u86fb\u86fc\u86fd\u86ff\u8701\u8704\u8705\u8706\u870b\u870c\u870e\u870f\u8710\u8711\u8714\u8716\u6c40\u5ef7\u505c\u4ead\u5ead\u633a\u8247\u901a\u6850\u916e\u77b3\u540c\u94dc\u5f64\u7ae5\u6876\u6345\u7b52\u7edf\u75db\u5077\u6295\u5934\u900f\u51f8\u79c3\u7a81\u56fe\u5f92\u9014\u6d82\u5c60\u571f\u5410\u5154\u6e4d\u56e2\u63a8\u9893\u817f\u8715\u892a\u9000\u541e\u5c6f\u81c0\u62d6\u6258\u8131\u9e35\u9640\u9a6e\u9a7c\u692d\u59a5\u62d3\u553e\u6316\u54c7\u86d9\u6d3c\u5a03\u74e6\u889c\u6b6a\u5916\u8c4c\u5f2f\u6e7e\u73a9\u987d\u4e38\u70f7\u5b8c\u7897\u633d\u665a\u7696\u60cb\u5b9b\u5a49\u4e07\u8155\u6c6a\u738b\u4ea1\u6789\u7f51\u5f80\u65fa\u671b\u5fd8\u5984\u5a01" ], [ "ce40", "\u8719\u871b\u871d\u871f\u8720\u8724\u8726\u8727\u8728\u872a\u872b\u872c\u872d\u872f\u8730\u8732\u8733\u8735\u8736\u8738\u8739\u873a\u873c\u873d\u8740", 6, "\u874a\u874b\u874d\u874f\u8750\u8751\u8752\u8754\u8755\u8756\u8758\u875a", 5, "\u8761\u8762\u8766", 7, "\u876f\u8771\u8772\u8773\u8775" ], [ "ce80", "\u8777\u8778\u8779\u877a\u877f\u8780\u8781\u8784\u8786\u8787\u8789\u878a\u878c\u878e", 4, "\u8794\u8795\u8796\u8798", 6, "\u87a0", 4, "\u5dcd\u5fae\u5371\u97e6\u8fdd\u6845\u56f4\u552f\u60df\u4e3a\u6f4d\u7ef4\u82c7\u840e\u59d4\u4f1f\u4f2a\u5c3e\u7eac\u672a\u851a\u5473\u754f\u80c3\u5582\u9b4f\u4f4d\u6e2d\u8c13\u5c09\u6170\u536b\u761f\u6e29\u868a\u6587\u95fb\u7eb9\u543b\u7a33\u7d0a\u95ee\u55e1\u7fc1\u74ee\u631d\u8717\u6da1\u7a9d\u6211\u65a1\u5367\u63e1\u6c83\u5deb\u545c\u94a8\u4e4c\u6c61\u8bec\u5c4b\u65e0\u829c\u68a7\u543e\u5434\u6bcb\u6b66\u4e94\u6342\u5348\u821e\u4f0d\u4fae\u575e\u620a\u96fe\u6664\u7269\u52ff\u52a1\u609f\u8bef\u6614\u7199\u6790\u897f\u7852\u77fd\u6670\u563b\u5438\u9521\u727a" ], [ "cf40", "\u87a5\u87a6\u87a7\u87a9\u87aa\u87ae\u87b0\u87b1\u87b2\u87b4\u87b6\u87b7\u87b8\u87b9\u87bb\u87bc\u87be\u87bf\u87c1", 4, "\u87c7\u87c8\u87c9\u87cc", 4, "\u87d4", 6, "\u87dc\u87dd\u87de\u87df\u87e1\u87e2\u87e3\u87e4\u87e6\u87e7\u87e8\u87e9\u87eb\u87ec\u87ed\u87ef", 9 ], [ "cf80", "\u87fa\u87fb\u87fc\u87fd\u87ff\u8800\u8801\u8802\u8804", 5, "\u880b", 7, "\u8814\u8817\u8818\u8819\u881a\u881c", 4, "\u8823\u7a00\u606f\u5e0c\u6089\u819d\u5915\u60dc\u7184\u70ef\u6eaa\u6c50\u7280\u6a84\u88ad\u5e2d\u4e60\u5ab3\u559c\u94e3\u6d17\u7cfb\u9699\u620f\u7ec6\u778e\u867e\u5323\u971e\u8f96\u6687\u5ce1\u4fa0\u72ed\u4e0b\u53a6\u590f\u5413\u6380\u9528\u5148\u4ed9\u9c9c\u7ea4\u54b8\u8d24\u8854\u8237\u95f2\u6d8e\u5f26\u5acc\u663e\u9669\u73b0\u732e\u53bf\u817a\u9985\u7fa1\u5baa\u9677\u9650\u7ebf\u76f8\u53a2\u9576\u9999\u7bb1\u8944\u6e58\u4e61\u7fd4\u7965\u8be6\u60f3\u54cd\u4eab\u9879\u5df7\u6a61\u50cf\u5411\u8c61\u8427\u785d\u9704\u524a\u54ee\u56a3\u9500\u6d88\u5bb5\u6dc6\u6653" ], [ "d040", "\u8824", 13, "\u8833", 5, "\u883a\u883b\u883d\u883e\u883f\u8841\u8842\u8843\u8846", 5, "\u884e", 5, "\u8855\u8856\u8858\u885a", 6, "\u8866\u8867\u886a\u886d\u886f\u8871\u8873\u8874\u8875\u8876\u8878\u8879\u887a" ], [ "d080", "\u887b\u887c\u8880\u8883\u8886\u8887\u8889\u888a\u888c\u888e\u888f\u8890\u8891\u8893\u8894\u8895\u8897", 4, "\u889d", 4, "\u88a3\u88a5", 5, "\u5c0f\u5b5d\u6821\u8096\u5578\u7b11\u6548\u6954\u4e9b\u6b47\u874e\u978b\u534f\u631f\u643a\u90aa\u659c\u80c1\u8c10\u5199\u68b0\u5378\u87f9\u61c8\u6cc4\u6cfb\u8c22\u5c51\u85aa\u82af\u950c\u6b23\u8f9b\u65b0\u5ffb\u5fc3\u4fe1\u8845\u661f\u8165\u7329\u60fa\u5174\u5211\u578b\u5f62\u90a2\u884c\u9192\u5e78\u674f\u6027\u59d3\u5144\u51f6\u80f8\u5308\u6c79\u96c4\u718a\u4f11\u4fee\u7f9e\u673d\u55c5\u9508\u79c0\u8896\u7ee3\u589f\u620c\u9700\u865a\u5618\u987b\u5f90\u8bb8\u84c4\u9157\u53d9\u65ed\u5e8f\u755c\u6064\u7d6e\u5a7f\u7eea\u7eed\u8f69\u55a7\u5ba3\u60ac\u65cb\u7384" ], [ "d140", "\u88ac\u88ae\u88af\u88b0\u88b2", 4, "\u88b8\u88b9\u88ba\u88bb\u88bd\u88be\u88bf\u88c0\u88c3\u88c4\u88c7\u88c8\u88ca\u88cb\u88cc\u88cd\u88cf\u88d0\u88d1\u88d3\u88d6\u88d7\u88da", 4, "\u88e0\u88e1\u88e6\u88e7\u88e9", 6, "\u88f2\u88f5\u88f6\u88f7\u88fa\u88fb\u88fd\u88ff\u8900\u8901\u8903", 5 ], [ "d180", "\u8909\u890b", 4, "\u8911\u8914", 4, "\u891c", 4, "\u8922\u8923\u8924\u8926\u8927\u8928\u8929\u892c\u892d\u892e\u892f\u8931\u8932\u8933\u8935\u8937\u9009\u7663\u7729\u7eda\u9774\u859b\u5b66\u7a74\u96ea\u8840\u52cb\u718f\u5faa\u65ec\u8be2\u5bfb\u9a6f\u5de1\u6b89\u6c5b\u8bad\u8baf\u900a\u8fc5\u538b\u62bc\u9e26\u9e2d\u5440\u4e2b\u82bd\u7259\u869c\u5d16\u8859\u6daf\u96c5\u54d1\u4e9a\u8bb6\u7109\u54bd\u9609\u70df\u6df9\u76d0\u4e25\u7814\u8712\u5ca9\u5ef6\u8a00\u989c\u960e\u708e\u6cbf\u5944\u63a9\u773c\u884d\u6f14\u8273\u5830\u71d5\u538c\u781a\u96c1\u5501\u5f66\u7130\u5bb4\u8c1a\u9a8c\u6b83\u592e\u9e2f\u79e7\u6768\u626c\u4f6f\u75a1\u7f8a\u6d0b\u9633\u6c27\u4ef0\u75d2\u517b\u6837\u6f3e\u9080\u8170\u5996\u7476" ], [ "d240", "\u8938", 8, "\u8942\u8943\u8945", 24, "\u8960", 5, "\u8967", 19, "\u897c" ], [ "d280", "\u897d\u897e\u8980\u8982\u8984\u8985\u8987", 26, "\u6447\u5c27\u9065\u7a91\u8c23\u59da\u54ac\u8200\u836f\u8981\u8000\u6930\u564e\u8036\u7237\u91ce\u51b6\u4e5f\u9875\u6396\u4e1a\u53f6\u66f3\u814b\u591c\u6db2\u4e00\u58f9\u533b\u63d6\u94f1\u4f9d\u4f0a\u8863\u9890\u5937\u9057\u79fb\u4eea\u80f0\u7591\u6c82\u5b9c\u59e8\u5f5d\u6905\u8681\u501a\u5df2\u4e59\u77e3\u4ee5\u827a\u6291\u6613\u9091\u5c79\u4ebf\u5f79\u81c6\u9038\u8084\u75ab\u4ea6\u88d4\u610f\u6bc5\u5fc6\u4e49\u76ca\u6ea2\u8be3\u8bae\u8c0a\u8bd1\u5f02\u7ffc\u7fcc\u7ece\u8335\u836b\u56e0\u6bb7\u97f3\u9634\u59fb\u541f\u94f6\u6deb\u5bc5\u996e\u5c39\u5f15\u9690" ], [ "d340", "\u89a2", 30, "\u89c3\u89cd\u89d3\u89d4\u89d5\u89d7\u89d8\u89d9\u89db\u89dd\u89df\u89e0\u89e1\u89e2\u89e4\u89e7\u89e8\u89e9\u89ea\u89ec\u89ed\u89ee\u89f0\u89f1\u89f2\u89f4", 6 ], [ "d380", "\u89fb", 4, "\u8a01", 5, "\u8a08", 21, "\u5370\u82f1\u6a31\u5a74\u9e70\u5e94\u7f28\u83b9\u8424\u8425\u8367\u8747\u8fce\u8d62\u76c8\u5f71\u9896\u786c\u6620\u54df\u62e5\u4f63\u81c3\u75c8\u5eb8\u96cd\u8e0a\u86f9\u548f\u6cf3\u6d8c\u6c38\u607f\u52c7\u7528\u5e7d\u4f18\u60a0\u5fe7\u5c24\u7531\u90ae\u94c0\u72b9\u6cb9\u6e38\u9149\u6709\u53cb\u53f3\u4f51\u91c9\u8bf1\u53c8\u5e7c\u8fc2\u6de4\u4e8e\u76c2\u6986\u865e\u611a\u8206\u4f59\u4fde\u903e\u9c7c\u6109\u6e1d\u6e14\u9685\u4e88\u5a31\u96e8\u4e0e\u5c7f\u79b9\u5b87\u8bed\u7fbd\u7389\u57df\u828b\u90c1\u5401\u9047\u55bb\u5cea\u5fa1\u6108\u6b32\u72f1\u80b2\u8a89" ], [ "d440", "\u8a1e", 31, "\u8a3f", 8, "\u8a49", 21 ], [ "d480", "\u8a5f", 25, "\u8a7a", 6, "\u6d74\u5bd3\u88d5\u9884\u8c6b\u9a6d\u9e33\u6e0a\u51a4\u5143\u57a3\u8881\u539f\u63f4\u8f95\u56ed\u5458\u5706\u733f\u6e90\u7f18\u8fdc\u82d1\u613f\u6028\u9662\u66f0\u7ea6\u8d8a\u8dc3\u94a5\u5cb3\u7ca4\u6708\u60a6\u9605\u8018\u4e91\u90e7\u5300\u9668\u5141\u8fd0\u8574\u915d\u6655\u97f5\u5b55\u531d\u7838\u6742\u683d\u54c9\u707e\u5bb0\u8f7d\u518d\u5728\u54b1\u6512\u6682\u8d5e\u8d43\u810f\u846c\u906d\u7cdf\u51ff\u85fb\u67a3\u65e9\u6fa1\u86a4\u8e81\u566a\u9020\u7682\u7076\u71e5\u8d23\u62e9\u5219\u6cfd\u8d3c\u600e\u589e\u618e\u66fe\u8d60\u624e\u55b3\u6e23\u672d\u8f67" ], [ "d540", "\u8a81", 7, "\u8a8b", 7, "\u8a94", 46 ], [ "d580", "\u8ac3", 32, "\u94e1\u95f8\u7728\u6805\u69a8\u548b\u4e4d\u70b8\u8bc8\u6458\u658b\u5b85\u7a84\u503a\u5be8\u77bb\u6be1\u8a79\u7c98\u6cbe\u76cf\u65a9\u8f97\u5d2d\u5c55\u8638\u6808\u5360\u6218\u7ad9\u6e5b\u7efd\u6a1f\u7ae0\u5f70\u6f33\u5f20\u638c\u6da8\u6756\u4e08\u5e10\u8d26\u4ed7\u80c0\u7634\u969c\u62db\u662d\u627e\u6cbc\u8d75\u7167\u7f69\u5146\u8087\u53ec\u906e\u6298\u54f2\u86f0\u8f99\u8005\u9517\u8517\u8fd9\u6d59\u73cd\u659f\u771f\u7504\u7827\u81fb\u8d1e\u9488\u4fa6\u6795\u75b9\u8bca\u9707\u632f\u9547\u9635\u84b8\u6323\u7741\u5f81\u72f0\u4e89\u6014\u6574\u62ef\u6b63\u653f" ], [ "d640", "\u8ae4", 34, "\u8b08", 27 ], [ "d680", "\u8b24\u8b25\u8b27", 30, "\u5e27\u75c7\u90d1\u8bc1\u829d\u679d\u652f\u5431\u8718\u77e5\u80a2\u8102\u6c41\u4e4b\u7ec7\u804c\u76f4\u690d\u6b96\u6267\u503c\u4f84\u5740\u6307\u6b62\u8dbe\u53ea\u65e8\u7eb8\u5fd7\u631a\u63b7\u81f3\u81f4\u7f6e\u5e1c\u5cd9\u5236\u667a\u79e9\u7a1a\u8d28\u7099\u75d4\u6ede\u6cbb\u7a92\u4e2d\u76c5\u5fe0\u949f\u8877\u7ec8\u79cd\u80bf\u91cd\u4ef2\u4f17\u821f\u5468\u5dde\u6d32\u8bcc\u7ca5\u8f74\u8098\u5e1a\u5492\u76b1\u5b99\u663c\u9aa4\u73e0\u682a\u86db\u6731\u732a\u8bf8\u8bdb\u9010\u7af9\u70db\u716e\u62c4\u77a9\u5631\u4e3b\u8457\u67f1\u52a9\u86c0\u8d2e\u94f8\u7b51" ], [ "d740", "\u8b46", 31, "\u8b67", 4, "\u8b6d", 25 ], [ "d780", "\u8b87", 24, "\u8bac\u8bb1\u8bbb\u8bc7\u8bd0\u8bea\u8c09\u8c1e\u4f4f\u6ce8\u795d\u9a7b\u6293\u722a\u62fd\u4e13\u7816\u8f6c\u64b0\u8d5a\u7bc6\u6869\u5e84\u88c5\u5986\u649e\u58ee\u72b6\u690e\u9525\u8ffd\u8d58\u5760\u7f00\u8c06\u51c6\u6349\u62d9\u5353\u684c\u7422\u8301\u914c\u5544\u7740\u707c\u6d4a\u5179\u54a8\u8d44\u59ff\u6ecb\u6dc4\u5b5c\u7d2b\u4ed4\u7c7d\u6ed3\u5b50\u81ea\u6e0d\u5b57\u9b03\u68d5\u8e2a\u5b97\u7efc\u603b\u7eb5\u90b9\u8d70\u594f\u63cd\u79df\u8db3\u5352\u65cf\u7956\u8bc5\u963b\u7ec4\u94bb\u7e82\u5634\u9189\u6700\u7f6a\u5c0a\u9075\u6628\u5de6\u4f50\u67de\u505a\u4f5c\u5750\u5ea7" ], [ "d840", "\u8c38", 8, "\u8c42\u8c43\u8c44\u8c45\u8c48\u8c4a\u8c4b\u8c4d", 7, "\u8c56\u8c57\u8c58\u8c59\u8c5b", 5, "\u8c63", 6, "\u8c6c", 6, "\u8c74\u8c75\u8c76\u8c77\u8c7b", 6, "\u8c83\u8c84\u8c86\u8c87" ], [ "d880", "\u8c88\u8c8b\u8c8d", 6, "\u8c95\u8c96\u8c97\u8c99", 20, "\u4e8d\u4e0c\u5140\u4e10\u5eff\u5345\u4e15\u4e98\u4e1e\u9b32\u5b6c\u5669\u4e28\u79ba\u4e3f\u5315\u4e47\u592d\u723b\u536e\u6c10\u56df\u80e4\u9997\u6bd3\u777e\u9f17\u4e36\u4e9f\u9f10\u4e5c\u4e69\u4e93\u8288\u5b5b\u556c\u560f\u4ec4\u538d\u539d\u53a3\u53a5\u53ae\u9765\u8d5d\u531a\u53f5\u5326\u532e\u533e\u8d5c\u5366\u5363\u5202\u5208\u520e\u522d\u5233\u523f\u5240\u524c\u525e\u5261\u525c\u84af\u527d\u5282\u5281\u5290\u5293\u5182\u7f54\u4ebb\u4ec3\u4ec9\u4ec2\u4ee8\u4ee1\u4eeb\u4ede\u4f1b\u4ef3\u4f22\u4f64\u4ef5\u4f25\u4f27\u4f09\u4f2b\u4f5e\u4f67\u6538\u4f5a\u4f5d" ], [ "d940", "\u8cae", 62 ], [ "d980", "\u8ced", 32, "\u4f5f\u4f57\u4f32\u4f3d\u4f76\u4f74\u4f91\u4f89\u4f83\u4f8f\u4f7e\u4f7b\u4faa\u4f7c\u4fac\u4f94\u4fe6\u4fe8\u4fea\u4fc5\u4fda\u4fe3\u4fdc\u4fd1\u4fdf\u4ff8\u5029\u504c\u4ff3\u502c\u500f\u502e\u502d\u4ffe\u501c\u500c\u5025\u5028\u507e\u5043\u5055\u5048\u504e\u506c\u507b\u50a5\u50a7\u50a9\u50ba\u50d6\u5106\u50ed\u50ec\u50e6\u50ee\u5107\u510b\u4edd\u6c3d\u4f58\u4f65\u4fce\u9fa0\u6c46\u7c74\u516e\u5dfd\u9ec9\u9998\u5181\u5914\u52f9\u530d\u8a07\u5310\u51eb\u5919\u5155\u4ea0\u5156\u4eb3\u886e\u88a4\u4eb5\u8114\u88d2\u7980\u5b34\u8803\u7fb8\u51ab\u51b1\u51bd\u51bc" ], [ "da40", "\u8d0e", 14, "\u8d20\u8d51\u8d52\u8d57\u8d5f\u8d65\u8d68\u8d69\u8d6a\u8d6c\u8d6e\u8d6f\u8d71\u8d72\u8d78", 8, "\u8d82\u8d83\u8d86\u8d87\u8d88\u8d89\u8d8c", 4, "\u8d92\u8d93\u8d95", 9, "\u8da0\u8da1" ], [ "da80", "\u8da2\u8da4", 12, "\u8db2\u8db6\u8db7\u8db9\u8dbb\u8dbd\u8dc0\u8dc1\u8dc2\u8dc5\u8dc7\u8dc8\u8dc9\u8dca\u8dcd\u8dd0\u8dd2\u8dd3\u8dd4\u51c7\u5196\u51a2\u51a5\u8ba0\u8ba6\u8ba7\u8baa\u8bb4\u8bb5\u8bb7\u8bc2\u8bc3\u8bcb\u8bcf\u8bce\u8bd2\u8bd3\u8bd4\u8bd6\u8bd8\u8bd9\u8bdc\u8bdf\u8be0\u8be4\u8be8\u8be9\u8bee\u8bf0\u8bf3\u8bf6\u8bf9\u8bfc\u8bff\u8c00\u8c02\u8c04\u8c07\u8c0c\u8c0f\u8c11\u8c12\u8c14\u8c15\u8c16\u8c19\u8c1b\u8c18\u8c1d\u8c1f\u8c20\u8c21\u8c25\u8c27\u8c2a\u8c2b\u8c2e\u8c2f\u8c32\u8c33\u8c35\u8c36\u5369\u537a\u961d\u9622\u9621\u9631\u962a\u963d\u963c\u9642\u9649\u9654\u965f\u9667\u966c\u9672\u9674\u9688\u968d\u9697\u96b0\u9097\u909b\u909d\u9099\u90ac\u90a1\u90b4\u90b3\u90b6\u90ba" ], [ "db40", "\u8dd5\u8dd8\u8dd9\u8ddc\u8de0\u8de1\u8de2\u8de5\u8de6\u8de7\u8de9\u8ded\u8dee\u8df0\u8df1\u8df2\u8df4\u8df6\u8dfc\u8dfe", 6, "\u8e06\u8e07\u8e08\u8e0b\u8e0d\u8e0e\u8e10\u8e11\u8e12\u8e13\u8e15", 7, "\u8e20\u8e21\u8e24", 4, "\u8e2b\u8e2d\u8e30\u8e32\u8e33\u8e34\u8e36\u8e37\u8e38\u8e3b\u8e3c\u8e3e" ], [ "db80", "\u8e3f\u8e43\u8e45\u8e46\u8e4c", 4, "\u8e53", 5, "\u8e5a", 11, "\u8e67\u8e68\u8e6a\u8e6b\u8e6e\u8e71\u90b8\u90b0\u90cf\u90c5\u90be\u90d0\u90c4\u90c7\u90d3\u90e6\u90e2\u90dc\u90d7\u90db\u90eb\u90ef\u90fe\u9104\u9122\u911e\u9123\u9131\u912f\u9139\u9143\u9146\u520d\u5942\u52a2\u52ac\u52ad\u52be\u54ff\u52d0\u52d6\u52f0\u53df\u71ee\u77cd\u5ef4\u51f5\u51fc\u9b2f\u53b6\u5f01\u755a\u5def\u574c\u57a9\u57a1\u587e\u58bc\u58c5\u58d1\u5729\u572c\u572a\u5733\u5739\u572e\u572f\u575c\u573b\u5742\u5769\u5785\u576b\u5786\u577c\u577b\u5768\u576d\u5776\u5773\u57ad\u57a4\u578c\u57b2\u57cf\u57a7\u57b4\u5793\u57a0\u57d5\u57d8\u57da\u57d9\u57d2\u57b8\u57f4\u57ef\u57f8\u57e4\u57dd" ], [ "dc40", "\u8e73\u8e75\u8e77", 4, "\u8e7d\u8e7e\u8e80\u8e82\u8e83\u8e84\u8e86\u8e88", 6, "\u8e91\u8e92\u8e93\u8e95", 6, "\u8e9d\u8e9f", 11, "\u8ead\u8eae\u8eb0\u8eb1\u8eb3", 6, "\u8ebb", 7 ], [ "dc80", "\u8ec3", 10, "\u8ecf", 21, "\u580b\u580d\u57fd\u57ed\u5800\u581e\u5819\u5844\u5820\u5865\u586c\u5881\u5889\u589a\u5880\u99a8\u9f19\u61ff\u8279\u827d\u827f\u828f\u828a\u82a8\u8284\u828e\u8291\u8297\u8299\u82ab\u82b8\u82be\u82b0\u82c8\u82ca\u82e3\u8298\u82b7\u82ae\u82cb\u82cc\u82c1\u82a9\u82b4\u82a1\u82aa\u829f\u82c4\u82ce\u82a4\u82e1\u8309\u82f7\u82e4\u830f\u8307\u82dc\u82f4\u82d2\u82d8\u830c\u82fb\u82d3\u8311\u831a\u8306\u8314\u8315\u82e0\u82d5\u831c\u8351\u835b\u835c\u8308\u8392\u833c\u8334\u8331\u839b\u835e\u832f\u834f\u8347\u8343\u835f\u8340\u8317\u8360\u832d\u833a\u8333\u8366\u8365" ], [ "dd40", "\u8ee5", 62 ], [ "dd80", "\u8f24", 32, "\u8368\u831b\u8369\u836c\u836a\u836d\u836e\u83b0\u8378\u83b3\u83b4\u83a0\u83aa\u8393\u839c\u8385\u837c\u83b6\u83a9\u837d\u83b8\u837b\u8398\u839e\u83a8\u83ba\u83bc\u83c1\u8401\u83e5\u83d8\u5807\u8418\u840b\u83dd\u83fd\u83d6\u841c\u8438\u8411\u8406\u83d4\u83df\u840f\u8403\u83f8\u83f9\u83ea\u83c5\u83c0\u8426\u83f0\u83e1\u845c\u8451\u845a\u8459\u8473\u8487\u8488\u847a\u8489\u8478\u843c\u8446\u8469\u8476\u848c\u848e\u8431\u846d\u84c1\u84cd\u84d0\u84e6\u84bd\u84d3\u84ca\u84bf\u84ba\u84e0\u84a1\u84b9\u84b4\u8497\u84e5\u84e3\u850c\u750d\u8538\u84f0\u8539\u851f\u853a" ], [ "de40", "\u8f45", 32, "\u8f6a\u8f80\u8f8c\u8f92\u8f9d\u8fa0\u8fa1\u8fa2\u8fa4\u8fa5\u8fa6\u8fa7\u8faa\u8fac\u8fad\u8fae\u8faf\u8fb2\u8fb3\u8fb4\u8fb5\u8fb7\u8fb8\u8fba\u8fbb\u8fbc\u8fbf\u8fc0\u8fc3\u8fc6" ], [ "de80", "\u8fc9", 4, "\u8fcf\u8fd2\u8fd6\u8fd7\u8fda\u8fe0\u8fe1\u8fe3\u8fe7\u8fec\u8fef\u8ff1\u8ff2\u8ff4\u8ff5\u8ff6\u8ffa\u8ffb\u8ffc\u8ffe\u8fff\u9007\u9008\u900c\u900e\u9013\u9015\u9018\u8556\u853b\u84ff\u84fc\u8559\u8548\u8568\u8564\u855e\u857a\u77a2\u8543\u8572\u857b\u85a4\u85a8\u8587\u858f\u8579\u85ae\u859c\u8585\u85b9\u85b7\u85b0\u85d3\u85c1\u85dc\u85ff\u8627\u8605\u8629\u8616\u863c\u5efe\u5f08\u593c\u5941\u8037\u5955\u595a\u5958\u530f\u5c22\u5c25\u5c2c\u5c34\u624c\u626a\u629f\u62bb\u62ca\u62da\u62d7\u62ee\u6322\u62f6\u6339\u634b\u6343\u63ad\u63f6\u6371\u637a\u638e\u63b4\u636d\u63ac\u638a\u6369\u63ae\u63bc\u63f2\u63f8\u63e0\u63ff\u63c4\u63de\u63ce\u6452\u63c6\u63be\u6445\u6441\u640b\u641b\u6420\u640c\u6426\u6421\u645e\u6484\u646d\u6496" ], [ "df40", "\u9019\u901c\u9023\u9024\u9025\u9027", 5, "\u9030", 4, "\u9037\u9039\u903a\u903d\u903f\u9040\u9043\u9045\u9046\u9048", 4, "\u904e\u9054\u9055\u9056\u9059\u905a\u905c", 5, "\u9064\u9066\u9067\u9069\u906a\u906b\u906c\u906f", 4, "\u9076", 6, "\u907e\u9081" ], [ "df80", "\u9084\u9085\u9086\u9087\u9089\u908a\u908c", 4, "\u9092\u9094\u9096\u9098\u909a\u909c\u909e\u909f\u90a0\u90a4\u90a5\u90a7\u90a8\u90a9\u90ab\u90ad\u90b2\u90b7\u90bc\u90bd\u90bf\u90c0\u647a\u64b7\u64b8\u6499\u64ba\u64c0\u64d0\u64d7\u64e4\u64e2\u6509\u6525\u652e\u5f0b\u5fd2\u7519\u5f11\u535f\u53f1\u53fd\u53e9\u53e8\u53fb\u5412\u5416\u5406\u544b\u5452\u5453\u5454\u5456\u5443\u5421\u5457\u5459\u5423\u5432\u5482\u5494\u5477\u5471\u5464\u549a\u549b\u5484\u5476\u5466\u549d\u54d0\u54ad\u54c2\u54b4\u54d2\u54a7\u54a6\u54d3\u54d4\u5472\u54a3\u54d5\u54bb\u54bf\u54cc\u54d9\u54da\u54dc\u54a9\u54aa\u54a4\u54dd\u54cf\u54de\u551b\u54e7\u5520\u54fd\u5514\u54f3\u5522\u5523\u550f\u5511\u5527\u552a\u5567\u558f\u55b5\u5549\u556d\u5541\u5555\u553f\u5550\u553c" ], [ "e040", "\u90c2\u90c3\u90c6\u90c8\u90c9\u90cb\u90cc\u90cd\u90d2\u90d4\u90d5\u90d6\u90d8\u90d9\u90da\u90de\u90df\u90e0\u90e3\u90e4\u90e5\u90e9\u90ea\u90ec\u90ee\u90f0\u90f1\u90f2\u90f3\u90f5\u90f6\u90f7\u90f9\u90fa\u90fb\u90fc\u90ff\u9100\u9101\u9103\u9105", 19, "\u911a\u911b\u911c" ], [ "e080", "\u911d\u911f\u9120\u9121\u9124", 10, "\u9130\u9132", 6, "\u913a", 8, "\u9144\u5537\u5556\u5575\u5576\u5577\u5533\u5530\u555c\u558b\u55d2\u5583\u55b1\u55b9\u5588\u5581\u559f\u557e\u55d6\u5591\u557b\u55df\u55bd\u55be\u5594\u5599\u55ea\u55f7\u55c9\u561f\u55d1\u55eb\u55ec\u55d4\u55e6\u55dd\u55c4\u55ef\u55e5\u55f2\u55f3\u55cc\u55cd\u55e8\u55f5\u55e4\u8f94\u561e\u5608\u560c\u5601\u5624\u5623\u55fe\u5600\u5627\u562d\u5658\u5639\u5657\u562c\u564d\u5662\u5659\u565c\u564c\u5654\u5686\u5664\u5671\u566b\u567b\u567c\u5685\u5693\u56af\u56d4\u56d7\u56dd\u56e1\u56f5\u56eb\u56f9\u56ff\u5704\u570a\u5709\u571c\u5e0f\u5e19\u5e14\u5e11\u5e31\u5e3b\u5e3c" ], [ "e140", "\u9145\u9147\u9148\u9151\u9153\u9154\u9155\u9156\u9158\u9159\u915b\u915c\u915f\u9160\u9166\u9167\u9168\u916b\u916d\u9173\u917a\u917b\u917c\u9180", 4, "\u9186\u9188\u918a\u918e\u918f\u9193", 6, "\u919c", 5, "\u91a4", 5, "\u91ab\u91ac\u91b0\u91b1\u91b2\u91b3\u91b6\u91b7\u91b8\u91b9\u91bb" ], [ "e180", "\u91bc", 10, "\u91c8\u91cb\u91d0\u91d2", 9, "\u91dd", 8, "\u5e37\u5e44\u5e54\u5e5b\u5e5e\u5e61\u5c8c\u5c7a\u5c8d\u5c90\u5c96\u5c88\u5c98\u5c99\u5c91\u5c9a\u5c9c\u5cb5\u5ca2\u5cbd\u5cac\u5cab\u5cb1\u5ca3\u5cc1\u5cb7\u5cc4\u5cd2\u5ce4\u5ccb\u5ce5\u5d02\u5d03\u5d27\u5d26\u5d2e\u5d24\u5d1e\u5d06\u5d1b\u5d58\u5d3e\u5d34\u5d3d\u5d6c\u5d5b\u5d6f\u5d5d\u5d6b\u5d4b\u5d4a\u5d69\u5d74\u5d82\u5d99\u5d9d\u8c73\u5db7\u5dc5\u5f73\u5f77\u5f82\u5f87\u5f89\u5f8c\u5f95\u5f99\u5f9c\u5fa8\u5fad\u5fb5\u5fbc\u8862\u5f61\u72ad\u72b0\u72b4\u72b7\u72b8\u72c3\u72c1\u72ce\u72cd\u72d2\u72e8\u72ef\u72e9\u72f2\u72f4\u72f7\u7301\u72f3\u7303\u72fa" ], [ "e240", "\u91e6", 62 ], [ "e280", "\u9225", 32, "\u72fb\u7317\u7313\u7321\u730a\u731e\u731d\u7315\u7322\u7339\u7325\u732c\u7338\u7331\u7350\u734d\u7357\u7360\u736c\u736f\u737e\u821b\u5925\u98e7\u5924\u5902\u9963\u9967", 5, "\u9974\u9977\u997d\u9980\u9984\u9987\u998a\u998d\u9990\u9991\u9993\u9994\u9995\u5e80\u5e91\u5e8b\u5e96\u5ea5\u5ea0\u5eb9\u5eb5\u5ebe\u5eb3\u8d53\u5ed2\u5ed1\u5edb\u5ee8\u5eea\u81ba\u5fc4\u5fc9\u5fd6\u5fcf\u6003\u5fee\u6004\u5fe1\u5fe4\u5ffe\u6005\u6006\u5fea\u5fed\u5ff8\u6019\u6035\u6026\u601b\u600f\u600d\u6029\u602b\u600a\u603f\u6021\u6078\u6079\u607b\u607a\u6042" ], [ "e340", "\u9246", 45, "\u9275", 16 ], [ "e380", "\u9286", 7, "\u928f", 24, "\u606a\u607d\u6096\u609a\u60ad\u609d\u6083\u6092\u608c\u609b\u60ec\u60bb\u60b1\u60dd\u60d8\u60c6\u60da\u60b4\u6120\u6126\u6115\u6123\u60f4\u6100\u610e\u612b\u614a\u6175\u61ac\u6194\u61a7\u61b7\u61d4\u61f5\u5fdd\u96b3\u95e9\u95eb\u95f1\u95f3\u95f5\u95f6\u95fc\u95fe\u9603\u9604\u9606\u9608\u960a\u960b\u960c\u960d\u960f\u9612\u9615\u9616\u9617\u9619\u961a\u4e2c\u723f\u6215\u6c35\u6c54\u6c5c\u6c4a\u6ca3\u6c85\u6c90\u6c94\u6c8c\u6c68\u6c69\u6c74\u6c76\u6c86\u6ca9\u6cd0\u6cd4\u6cad\u6cf7\u6cf8\u6cf1\u6cd7\u6cb2\u6ce0\u6cd6\u6cfa\u6ceb\u6cee\u6cb1\u6cd3\u6cef\u6cfe" ], [ "e440", "\u92a8", 5, "\u92af", 24, "\u92c9", 31 ], [ "e480", "\u92e9", 32, "\u6d39\u6d27\u6d0c\u6d43\u6d48\u6d07\u6d04\u6d19\u6d0e\u6d2b\u6d4d\u6d2e\u6d35\u6d1a\u6d4f\u6d52\u6d54\u6d33\u6d91\u6d6f\u6d9e\u6da0\u6d5e\u6d93\u6d94\u6d5c\u6d60\u6d7c\u6d63\u6e1a\u6dc7\u6dc5\u6dde\u6e0e\u6dbf\u6de0\u6e11\u6de6\u6ddd\u6dd9\u6e16\u6dab\u6e0c\u6dae\u6e2b\u6e6e\u6e4e\u6e6b\u6eb2\u6e5f\u6e86\u6e53\u6e54\u6e32\u6e25\u6e44\u6edf\u6eb1\u6e98\u6ee0\u6f2d\u6ee2\u6ea5\u6ea7\u6ebd\u6ebb\u6eb7\u6ed7\u6eb4\u6ecf\u6e8f\u6ec2\u6e9f\u6f62\u6f46\u6f47\u6f24\u6f15\u6ef9\u6f2f\u6f36\u6f4b\u6f74\u6f2a\u6f09\u6f29\u6f89\u6f8d\u6f8c\u6f78\u6f72\u6f7c\u6f7a\u6fd1" ], [ "e540", "\u930a", 51, "\u933f", 10 ], [ "e580", "\u934a", 31, "\u936b\u6fc9\u6fa7\u6fb9\u6fb6\u6fc2\u6fe1\u6fee\u6fde\u6fe0\u6fef\u701a\u7023\u701b\u7039\u7035\u704f\u705e\u5b80\u5b84\u5b95\u5b93\u5ba5\u5bb8\u752f\u9a9e\u6434\u5be4\u5bee\u8930\u5bf0\u8e47\u8b07\u8fb6\u8fd3\u8fd5\u8fe5\u8fee\u8fe4\u8fe9\u8fe6\u8ff3\u8fe8\u9005\u9004\u900b\u9026\u9011\u900d\u9016\u9021\u9035\u9036\u902d\u902f\u9044\u9051\u9052\u9050\u9068\u9058\u9062\u905b\u66b9\u9074\u907d\u9082\u9088\u9083\u908b\u5f50\u5f57\u5f56\u5f58\u5c3b\u54ab\u5c50\u5c59\u5b71\u5c63\u5c66\u7fbc\u5f2a\u5f29\u5f2d\u8274\u5f3c\u9b3b\u5c6e\u5981\u5983\u598d\u59a9\u59aa\u59a3" ], [ "e640", "\u936c", 34, "\u9390", 27 ], [ "e680", "\u93ac", 29, "\u93cb\u93cc\u93cd\u5997\u59ca\u59ab\u599e\u59a4\u59d2\u59b2\u59af\u59d7\u59be\u5a05\u5a06\u59dd\u5a08\u59e3\u59d8\u59f9\u5a0c\u5a09\u5a32\u5a34\u5a11\u5a23\u5a13\u5a40\u5a67\u5a4a\u5a55\u5a3c\u5a62\u5a75\u80ec\u5aaa\u5a9b\u5a77\u5a7a\u5abe\u5aeb\u5ab2\u5ad2\u5ad4\u5ab8\u5ae0\u5ae3\u5af1\u5ad6\u5ae6\u5ad8\u5adc\u5b09\u5b17\u5b16\u5b32\u5b37\u5b40\u5c15\u5c1c\u5b5a\u5b65\u5b73\u5b51\u5b53\u5b62\u9a75\u9a77\u9a78\u9a7a\u9a7f\u9a7d\u9a80\u9a81\u9a85\u9a88\u9a8a\u9a90\u9a92\u9a93\u9a96\u9a98\u9a9b\u9a9c\u9a9d\u9a9f\u9aa0\u9aa2\u9aa3\u9aa5\u9aa7\u7e9f\u7ea1\u7ea3\u7ea5\u7ea8\u7ea9" ], [ "e740", "\u93ce", 7, "\u93d7", 54 ], [ "e780", "\u940e", 32, "\u7ead\u7eb0\u7ebe\u7ec0\u7ec1\u7ec2\u7ec9\u7ecb\u7ecc\u7ed0\u7ed4\u7ed7\u7edb\u7ee0\u7ee1\u7ee8\u7eeb\u7eee\u7eef\u7ef1\u7ef2\u7f0d\u7ef6\u7efa\u7efb\u7efe\u7f01\u7f02\u7f03\u7f07\u7f08\u7f0b\u7f0c\u7f0f\u7f11\u7f12\u7f17\u7f19\u7f1c\u7f1b\u7f1f\u7f21", 6, "\u7f2a\u7f2b\u7f2c\u7f2d\u7f2f", 4, "\u7f35\u5e7a\u757f\u5ddb\u753e\u9095\u738e\u7391\u73ae\u73a2\u739f\u73cf\u73c2\u73d1\u73b7\u73b3\u73c0\u73c9\u73c8\u73e5\u73d9\u987c\u740a\u73e9\u73e7\u73de\u73ba\u73f2\u740f\u742a\u745b\u7426\u7425\u7428\u7430\u742e\u742c" ], [ "e840", "\u942f", 14, "\u943f", 43, "\u946c\u946d\u946e\u946f" ], [ "e880", "\u9470", 20, "\u9491\u9496\u9498\u94c7\u94cf\u94d3\u94d4\u94da\u94e6\u94fb\u951c\u9520\u741b\u741a\u7441\u745c\u7457\u7455\u7459\u7477\u746d\u747e\u749c\u748e\u7480\u7481\u7487\u748b\u749e\u74a8\u74a9\u7490\u74a7\u74d2\u74ba\u97ea\u97eb\u97ec\u674c\u6753\u675e\u6748\u6769\u67a5\u6787\u676a\u6773\u6798\u67a7\u6775\u67a8\u679e\u67ad\u678b\u6777\u677c\u67f0\u6809\u67d8\u680a\u67e9\u67b0\u680c\u67d9\u67b5\u67da\u67b3\u67dd\u6800\u67c3\u67b8\u67e2\u680e\u67c1\u67fd\u6832\u6833\u6860\u6861\u684e\u6862\u6844\u6864\u6883\u681d\u6855\u6866\u6841\u6867\u6840\u683e\u684a\u6849\u6829\u68b5\u688f\u6874\u6877\u6893\u686b\u68c2\u696e\u68fc\u691f\u6920\u68f9" ], [ "e940", "\u9527\u9533\u953d\u9543\u9548\u954b\u9555\u955a\u9560\u956e\u9574\u9575\u9577", 7, "\u9580", 42 ], [ "e980", "\u95ab", 32, "\u6924\u68f0\u690b\u6901\u6957\u68e3\u6910\u6971\u6939\u6960\u6942\u695d\u6984\u696b\u6980\u6998\u6978\u6934\u69cc\u6987\u6988\u69ce\u6989\u6966\u6963\u6979\u699b\u69a7\u69bb\u69ab\u69ad\u69d4\u69b1\u69c1\u69ca\u69df\u6995\u69e0\u698d\u69ff\u6a2f\u69ed\u6a17\u6a18\u6a65\u69f2\u6a44\u6a3e\u6aa0\u6a50\u6a5b\u6a35\u6a8e\u6a79\u6a3d\u6a28\u6a58\u6a7c\u6a91\u6a90\u6aa9\u6a97\u6aab\u7337\u7352\u6b81\u6b82\u6b87\u6b84\u6b92\u6b93\u6b8d\u6b9a\u6b9b\u6ba1\u6baa\u8f6b\u8f6d\u8f71\u8f72\u8f73\u8f75\u8f76\u8f78\u8f77\u8f79\u8f7a\u8f7c\u8f7e\u8f81\u8f82\u8f84\u8f87\u8f8b" ], [ "ea40", "\u95cc", 27, "\u95ec\u95ff\u9607\u9613\u9618\u961b\u961e\u9620\u9623", 6, "\u962b\u962c\u962d\u962f\u9630\u9637\u9638\u9639\u963a\u963e\u9641\u9643\u964a\u964e\u964f\u9651\u9652\u9653\u9656\u9657" ], [ "ea80", "\u9658\u9659\u965a\u965c\u965d\u965e\u9660\u9663\u9665\u9666\u966b\u966d", 4, "\u9673\u9678", 12, "\u9687\u9689\u968a\u8f8d\u8f8e\u8f8f\u8f98\u8f9a\u8ece\u620b\u6217\u621b\u621f\u6222\u6221\u6225\u6224\u622c\u81e7\u74ef\u74f4\u74ff\u750f\u7511\u7513\u6534\u65ee\u65ef\u65f0\u660a\u6619\u6772\u6603\u6615\u6600\u7085\u66f7\u661d\u6634\u6631\u6636\u6635\u8006\u665f\u6654\u6641\u664f\u6656\u6661\u6657\u6677\u6684\u668c\u66a7\u669d\u66be\u66db\u66dc\u66e6\u66e9\u8d32\u8d33\u8d36\u8d3b\u8d3d\u8d40\u8d45\u8d46\u8d48\u8d49\u8d47\u8d4d\u8d55\u8d59\u89c7\u89ca\u89cb\u89cc\u89ce\u89cf\u89d0\u89d1\u726e\u729f\u725d\u7266\u726f\u727e\u727f\u7284\u728b\u728d\u728f\u7292\u6308\u6332\u63b0" ], [ "eb40", "\u968c\u968e\u9691\u9692\u9693\u9695\u9696\u969a\u969b\u969d", 9, "\u96a8", 7, "\u96b1\u96b2\u96b4\u96b5\u96b7\u96b8\u96ba\u96bb\u96bf\u96c2\u96c3\u96c8\u96ca\u96cb\u96d0\u96d1\u96d3\u96d4\u96d6", 9, "\u96e1", 6, "\u96eb" ], [ "eb80", "\u96ec\u96ed\u96ee\u96f0\u96f1\u96f2\u96f4\u96f5\u96f8\u96fa\u96fb\u96fc\u96fd\u96ff\u9702\u9703\u9705\u970a\u970b\u970c\u9710\u9711\u9712\u9714\u9715\u9717", 4, "\u971d\u971f\u9720\u643f\u64d8\u8004\u6bea\u6bf3\u6bfd\u6bf5\u6bf9\u6c05\u6c07\u6c06\u6c0d\u6c15\u6c18\u6c19\u6c1a\u6c21\u6c29\u6c24\u6c2a\u6c32\u6535\u6555\u656b\u724d\u7252\u7256\u7230\u8662\u5216\u809f\u809c\u8093\u80bc\u670a\u80bd\u80b1\u80ab\u80ad\u80b4\u80b7\u80e7\u80e8\u80e9\u80ea\u80db\u80c2\u80c4\u80d9\u80cd\u80d7\u6710\u80dd\u80eb\u80f1\u80f4\u80ed\u810d\u810e\u80f2\u80fc\u6715\u8112\u8c5a\u8136\u811e\u812c\u8118\u8132\u8148\u814c\u8153\u8174\u8159\u815a\u8171\u8160\u8169\u817c\u817d\u816d\u8167\u584d\u5ab5\u8188\u8182\u8191\u6ed5\u81a3\u81aa\u81cc\u6726\u81ca\u81bb" ], [ "ec40", "\u9721", 8, "\u972b\u972c\u972e\u972f\u9731\u9733", 4, "\u973a\u973b\u973c\u973d\u973f", 18, "\u9754\u9755\u9757\u9758\u975a\u975c\u975d\u975f\u9763\u9764\u9766\u9767\u9768\u976a", 7 ], [ "ec80", "\u9772\u9775\u9777", 4, "\u977d", 7, "\u9786", 4, "\u978c\u978e\u978f\u9790\u9793\u9795\u9796\u9797\u9799", 4, "\u81c1\u81a6\u6b24\u6b37\u6b39\u6b43\u6b46\u6b59\u98d1\u98d2\u98d3\u98d5\u98d9\u98da\u6bb3\u5f40\u6bc2\u89f3\u6590\u9f51\u6593\u65bc\u65c6\u65c4\u65c3\u65cc\u65ce\u65d2\u65d6\u7080\u709c\u7096\u709d\u70bb\u70c0\u70b7\u70ab\u70b1\u70e8\u70ca\u7110\u7113\u7116\u712f\u7131\u7173\u715c\u7168\u7145\u7172\u714a\u7178\u717a\u7198\u71b3\u71b5\u71a8\u71a0\u71e0\u71d4\u71e7\u71f9\u721d\u7228\u706c\u7118\u7166\u71b9\u623e\u623d\u6243\u6248\u6249\u793b\u7940\u7946\u7949\u795b\u795c\u7953\u795a\u7962\u7957\u7960\u796f\u7967\u797a\u7985\u798a\u799a\u79a7\u79b3\u5fd1\u5fd0" ], [ "ed40", "\u979e\u979f\u97a1\u97a2\u97a4", 6, "\u97ac\u97ae\u97b0\u97b1\u97b3\u97b5", 46 ], [ "ed80", "\u97e4\u97e5\u97e8\u97ee", 4, "\u97f4\u97f7", 23, "\u603c\u605d\u605a\u6067\u6041\u6059\u6063\u60ab\u6106\u610d\u615d\u61a9\u619d\u61cb\u61d1\u6206\u8080\u807f\u6c93\u6cf6\u6dfc\u77f6\u77f8\u7800\u7809\u7817\u7818\u7811\u65ab\u782d\u781c\u781d\u7839\u783a\u783b\u781f\u783c\u7825\u782c\u7823\u7829\u784e\u786d\u7856\u7857\u7826\u7850\u7847\u784c\u786a\u789b\u7893\u789a\u7887\u789c\u78a1\u78a3\u78b2\u78b9\u78a5\u78d4\u78d9\u78c9\u78ec\u78f2\u7905\u78f4\u7913\u7924\u791e\u7934\u9f9b\u9ef9\u9efb\u9efc\u76f1\u7704\u770d\u76f9\u7707\u7708\u771a\u7722\u7719\u772d\u7726\u7735\u7738\u7750\u7751\u7747\u7743\u775a\u7768" ], [ "ee40", "\u980f", 62 ], [ "ee80", "\u984e", 32, "\u7762\u7765\u777f\u778d\u777d\u7780\u778c\u7791\u779f\u77a0\u77b0\u77b5\u77bd\u753a\u7540\u754e\u754b\u7548\u755b\u7572\u7579\u7583\u7f58\u7f61\u7f5f\u8a48\u7f68\u7f74\u7f71\u7f79\u7f81\u7f7e\u76cd\u76e5\u8832\u9485\u9486\u9487\u948b\u948a\u948c\u948d\u948f\u9490\u9494\u9497\u9495\u949a\u949b\u949c\u94a3\u94a4\u94ab\u94aa\u94ad\u94ac\u94af\u94b0\u94b2\u94b4\u94b6", 4, "\u94bc\u94bd\u94bf\u94c4\u94c8", 6, "\u94d0\u94d1\u94d2\u94d5\u94d6\u94d7\u94d9\u94d8\u94db\u94de\u94df\u94e0\u94e2\u94e4\u94e5\u94e7\u94e8\u94ea" ], [ "ef40", "\u986f", 5, "\u988b\u988e\u9892\u9895\u9899\u98a3\u98a8", 37, "\u98cf\u98d0\u98d4\u98d6\u98d7\u98db\u98dc\u98dd\u98e0", 4 ], [ "ef80", "\u98e5\u98e6\u98e9", 30, "\u94e9\u94eb\u94ee\u94ef\u94f3\u94f4\u94f5\u94f7\u94f9\u94fc\u94fd\u94ff\u9503\u9502\u9506\u9507\u9509\u950a\u950d\u950e\u950f\u9512", 4, "\u9518\u951b\u951d\u951e\u951f\u9522\u952a\u952b\u9529\u952c\u9531\u9532\u9534\u9536\u9537\u9538\u953c\u953e\u953f\u9542\u9535\u9544\u9545\u9546\u9549\u954c\u954e\u954f\u9552\u9553\u9554\u9556\u9557\u9558\u9559\u955b\u955e\u955f\u955d\u9561\u9562\u9564", 8, "\u956f\u9571\u9572\u9573\u953a\u77e7\u77ec\u96c9\u79d5\u79ed\u79e3\u79eb\u7a06\u5d47\u7a03\u7a02\u7a1e\u7a14" ], [ "f040", "\u9908", 4, "\u990e\u990f\u9911", 28, "\u992f", 26 ], [ "f080", "\u994a", 9, "\u9956", 12, "\u9964\u9966\u9973\u9978\u9979\u997b\u997e\u9982\u9983\u9989\u7a39\u7a37\u7a51\u9ecf\u99a5\u7a70\u7688\u768e\u7693\u7699\u76a4\u74de\u74e0\u752c\u9e20\u9e22\u9e28", 4, "\u9e32\u9e31\u9e36\u9e38\u9e37\u9e39\u9e3a\u9e3e\u9e41\u9e42\u9e44\u9e46\u9e47\u9e48\u9e49\u9e4b\u9e4c\u9e4e\u9e51\u9e55\u9e57\u9e5a\u9e5b\u9e5c\u9e5e\u9e63\u9e66", 6, "\u9e71\u9e6d\u9e73\u7592\u7594\u7596\u75a0\u759d\u75ac\u75a3\u75b3\u75b4\u75b8\u75c4\u75b1\u75b0\u75c3\u75c2\u75d6\u75cd\u75e3\u75e8\u75e6\u75e4\u75eb\u75e7\u7603\u75f1\u75fc\u75ff\u7610\u7600\u7605\u760c\u7617\u760a\u7625\u7618\u7615\u7619" ], [ "f140", "\u998c\u998e\u999a", 10, "\u99a6\u99a7\u99a9", 47 ], [ "f180", "\u99d9", 32, "\u761b\u763c\u7622\u7620\u7640\u762d\u7630\u763f\u7635\u7643\u763e\u7633\u764d\u765e\u7654\u765c\u7656\u766b\u766f\u7fca\u7ae6\u7a78\u7a79\u7a80\u7a86\u7a88\u7a95\u7aa6\u7aa0\u7aac\u7aa8\u7aad\u7ab3\u8864\u8869\u8872\u887d\u887f\u8882\u88a2\u88c6\u88b7\u88bc\u88c9\u88e2\u88ce\u88e3\u88e5\u88f1\u891a\u88fc\u88e8\u88fe\u88f0\u8921\u8919\u8913\u891b\u890a\u8934\u892b\u8936\u8941\u8966\u897b\u758b\u80e5\u76b2\u76b4\u77dc\u8012\u8014\u8016\u801c\u8020\u8022\u8025\u8026\u8027\u8029\u8028\u8031\u800b\u8035\u8043\u8046\u804d\u8052\u8069\u8071\u8983\u9878\u9880\u9883" ], [ "f240", "\u99fa", 62 ], [ "f280", "\u9a39", 32, "\u9889\u988c\u988d\u988f\u9894\u989a\u989b\u989e\u989f\u98a1\u98a2\u98a5\u98a6\u864d\u8654\u866c\u866e\u867f\u867a\u867c\u867b\u86a8\u868d\u868b\u86ac\u869d\u86a7\u86a3\u86aa\u8693\u86a9\u86b6\u86c4\u86b5\u86ce\u86b0\u86ba\u86b1\u86af\u86c9\u86cf\u86b4\u86e9\u86f1\u86f2\u86ed\u86f3\u86d0\u8713\u86de\u86f4\u86df\u86d8\u86d1\u8703\u8707\u86f8\u8708\u870a\u870d\u8709\u8723\u873b\u871e\u8725\u872e\u871a\u873e\u8748\u8734\u8731\u8729\u8737\u873f\u8782\u8722\u877d\u877e\u877b\u8760\u8770\u874c\u876e\u878b\u8753\u8763\u877c\u8764\u8759\u8765\u8793\u87af\u87a8\u87d2" ], [ "f340", "\u9a5a", 17, "\u9a72\u9a83\u9a89\u9a8d\u9a8e\u9a94\u9a95\u9a99\u9aa6\u9aa9", 6, "\u9ab2\u9ab3\u9ab4\u9ab5\u9ab9\u9abb\u9abd\u9abe\u9abf\u9ac3\u9ac4\u9ac6", 4, "\u9acd\u9ace\u9acf\u9ad0\u9ad2\u9ad4\u9ad5\u9ad6\u9ad7\u9ad9\u9ada\u9adb\u9adc" ], [ "f380", "\u9add\u9ade\u9ae0\u9ae2\u9ae3\u9ae4\u9ae5\u9ae7\u9ae8\u9ae9\u9aea\u9aec\u9aee\u9af0", 8, "\u9afa\u9afc", 6, "\u9b04\u9b05\u9b06\u87c6\u8788\u8785\u87ad\u8797\u8783\u87ab\u87e5\u87ac\u87b5\u87b3\u87cb\u87d3\u87bd\u87d1\u87c0\u87ca\u87db\u87ea\u87e0\u87ee\u8816\u8813\u87fe\u880a\u881b\u8821\u8839\u883c\u7f36\u7f42\u7f44\u7f45\u8210\u7afa\u7afd\u7b08\u7b03\u7b04\u7b15\u7b0a\u7b2b\u7b0f\u7b47\u7b38\u7b2a\u7b19\u7b2e\u7b31\u7b20\u7b25\u7b24\u7b33\u7b3e\u7b1e\u7b58\u7b5a\u7b45\u7b75\u7b4c\u7b5d\u7b60\u7b6e\u7b7b\u7b62\u7b72\u7b71\u7b90\u7ba6\u7ba7\u7bb8\u7bac\u7b9d\u7ba8\u7b85\u7baa\u7b9c\u7ba2\u7bab\u7bb4\u7bd1\u7bc1\u7bcc\u7bdd\u7bda\u7be5\u7be6\u7bea\u7c0c\u7bfe\u7bfc\u7c0f\u7c16\u7c0b" ], [ "f440", "\u9b07\u9b09", 5, "\u9b10\u9b11\u9b12\u9b14", 10, "\u9b20\u9b21\u9b22\u9b24", 10, "\u9b30\u9b31\u9b33", 7, "\u9b3d\u9b3e\u9b3f\u9b40\u9b46\u9b4a\u9b4b\u9b4c\u9b4e\u9b50\u9b52\u9b53\u9b55", 5 ], [ "f480", "\u9b5b", 32, "\u7c1f\u7c2a\u7c26\u7c38\u7c41\u7c40\u81fe\u8201\u8202\u8204\u81ec\u8844\u8221\u8222\u8223\u822d\u822f\u8228\u822b\u8238\u823b\u8233\u8234\u823e\u8244\u8249\u824b\u824f\u825a\u825f\u8268\u887e\u8885\u8888\u88d8\u88df\u895e\u7f9d\u7f9f\u7fa7\u7faf\u7fb0\u7fb2\u7c7c\u6549\u7c91\u7c9d\u7c9c\u7c9e\u7ca2\u7cb2\u7cbc\u7cbd\u7cc1\u7cc7\u7ccc\u7ccd\u7cc8\u7cc5\u7cd7\u7ce8\u826e\u66a8\u7fbf\u7fce\u7fd5\u7fe5\u7fe1\u7fe6\u7fe9\u7fee\u7ff3\u7cf8\u7d77\u7da6\u7dae\u7e47\u7e9b\u9eb8\u9eb4\u8d73\u8d84\u8d94\u8d91\u8db1\u8d67\u8d6d\u8c47\u8c49\u914a\u9150\u914e\u914f\u9164" ], [ "f540", "\u9b7c", 62 ], [ "f580", "\u9bbb", 32, "\u9162\u9161\u9170\u9169\u916f\u917d\u917e\u9172\u9174\u9179\u918c\u9185\u9190\u918d\u9191\u91a2\u91a3\u91aa\u91ad\u91ae\u91af\u91b5\u91b4\u91ba\u8c55\u9e7e\u8db8\u8deb\u8e05\u8e59\u8e69\u8db5\u8dbf\u8dbc\u8dba\u8dc4\u8dd6\u8dd7\u8dda\u8dde\u8dce\u8dcf\u8ddb\u8dc6\u8dec\u8df7\u8df8\u8de3\u8df9\u8dfb\u8de4\u8e09\u8dfd\u8e14\u8e1d\u8e1f\u8e2c\u8e2e\u8e23\u8e2f\u8e3a\u8e40\u8e39\u8e35\u8e3d\u8e31\u8e49\u8e41\u8e42\u8e51\u8e52\u8e4a\u8e70\u8e76\u8e7c\u8e6f\u8e74\u8e85\u8e8f\u8e94\u8e90\u8e9c\u8e9e\u8c78\u8c82\u8c8a\u8c85\u8c98\u8c94\u659b\u89d6\u89de\u89da\u89dc" ], [ "f640", "\u9bdc", 62 ], [ "f680", "\u9c1b", 32, "\u89e5\u89eb\u89ef\u8a3e\u8b26\u9753\u96e9\u96f3\u96ef\u9706\u9701\u9708\u970f\u970e\u972a\u972d\u9730\u973e\u9f80\u9f83\u9f85", 5, "\u9f8c\u9efe\u9f0b\u9f0d\u96b9\u96bc\u96bd\u96ce\u96d2\u77bf\u96e0\u928e\u92ae\u92c8\u933e\u936a\u93ca\u938f\u943e\u946b\u9c7f\u9c82\u9c85\u9c86\u9c87\u9c88\u7a23\u9c8b\u9c8e\u9c90\u9c91\u9c92\u9c94\u9c95\u9c9a\u9c9b\u9c9e", 5, "\u9ca5", 4, "\u9cab\u9cad\u9cae\u9cb0", 7, "\u9cba\u9cbb\u9cbc\u9cbd\u9cc4\u9cc5\u9cc6\u9cc7\u9cca\u9ccb" ], [ "f740", "\u9c3c", 62 ], [ "f780", "\u9c7b\u9c7d\u9c7e\u9c80\u9c83\u9c84\u9c89\u9c8a\u9c8c\u9c8f\u9c93\u9c96\u9c97\u9c98\u9c99\u9c9d\u9caa\u9cac\u9caf\u9cb9\u9cbe", 4, "\u9cc8\u9cc9\u9cd1\u9cd2\u9cda\u9cdb\u9ce0\u9ce1\u9ccc", 4, "\u9cd3\u9cd4\u9cd5\u9cd7\u9cd8\u9cd9\u9cdc\u9cdd\u9cdf\u9ce2\u977c\u9785\u9791\u9792\u9794\u97af\u97ab\u97a3\u97b2\u97b4\u9ab1\u9ab0\u9ab7\u9e58\u9ab6\u9aba\u9abc\u9ac1\u9ac0\u9ac5\u9ac2\u9acb\u9acc\u9ad1\u9b45\u9b43\u9b47\u9b49\u9b48\u9b4d\u9b51\u98e8\u990d\u992e\u9955\u9954\u9adf\u9ae1\u9ae6\u9aef\u9aeb\u9afb\u9aed\u9af9\u9b08\u9b0f\u9b13\u9b1f\u9b23\u9ebd\u9ebe\u7e3b\u9e82\u9e87\u9e88\u9e8b\u9e92\u93d6\u9e9d\u9e9f\u9edb\u9edc\u9edd\u9ee0\u9edf\u9ee2\u9ee9\u9ee7\u9ee5\u9eea\u9eef\u9f22\u9f2c\u9f2f\u9f39\u9f37\u9f3d\u9f3e\u9f44" ], [ "f840", "\u9ce3", 62 ], [ "f880", "\u9d22", 32 ], [ "f940", "\u9d43", 62 ], [ "f980", "\u9d82", 32 ], [ "fa40", "\u9da3", 62 ], [ "fa80", "\u9de2", 32 ], [ "fb40", "\u9e03", 27, "\u9e24\u9e27\u9e2e\u9e30\u9e34\u9e3b\u9e3c\u9e40\u9e4d\u9e50\u9e52\u9e53\u9e54\u9e56\u9e59\u9e5d\u9e5f\u9e60\u9e61\u9e62\u9e65\u9e6e\u9e6f\u9e72\u9e74", 9, "\u9e80" ], [ "fb80", "\u9e81\u9e83\u9e84\u9e85\u9e86\u9e89\u9e8a\u9e8c", 5, "\u9e94", 8, "\u9e9e\u9ea0", 5, "\u9ea7\u9ea8\u9ea9\u9eaa" ], [ "fc40", "\u9eab", 8, "\u9eb5\u9eb6\u9eb7\u9eb9\u9eba\u9ebc\u9ebf", 4, "\u9ec5\u9ec6\u9ec7\u9ec8\u9eca\u9ecb\u9ecc\u9ed0\u9ed2\u9ed3\u9ed5\u9ed6\u9ed7\u9ed9\u9eda\u9ede\u9ee1\u9ee3\u9ee4\u9ee6\u9ee8\u9eeb\u9eec\u9eed\u9eee\u9ef0", 8, "\u9efa\u9efd\u9eff", 6 ], [ "fc80", "\u9f06", 4, "\u9f0c\u9f0f\u9f11\u9f12\u9f14\u9f15\u9f16\u9f18\u9f1a", 5, "\u9f21\u9f23", 8, "\u9f2d\u9f2e\u9f30\u9f31" ], [ "fd40", "\u9f32", 4, "\u9f38\u9f3a\u9f3c\u9f3f", 4, "\u9f45", 10, "\u9f52", 38 ], [ "fd80", "\u9f79", 5, "\u9f81\u9f82\u9f8d", 11, "\u9f9c\u9f9d\u9f9e\u9fa1", 4, "\uf92c\uf979\uf995\uf9e7\uf9f1" ], [ "fe40", "\ufa0c\ufa0d\ufa0e\ufa0f\ufa11\ufa13\ufa14\ufa18\ufa1f\ufa20\ufa21\ufa23\ufa24\ufa27\ufa28\ufa29" ] ];
    cc._RF.pop();
  }, {} ],
  cp949: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "77b340N5xBNC54oGzIPT4S7", "cp949");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.cp949 = void 0;
    exports.cp949 = [ [ "0", "\0", 127 ], [ "8141", "\uac02\uac03\uac05\uac06\uac0b", 4, "\uac18\uac1e\uac1f\uac21\uac22\uac23\uac25", 6, "\uac2e\uac32\uac33\uac34" ], [ "8161", "\uac35\uac36\uac37\uac3a\uac3b\uac3d\uac3e\uac3f\uac41", 9, "\uac4c\uac4e", 5, "\uac55" ], [ "8181", "\uac56\uac57\uac59\uac5a\uac5b\uac5d", 18, "\uac72\uac73\uac75\uac76\uac79\uac7b", 4, "\uac82\uac87\uac88\uac8d\uac8e\uac8f\uac91\uac92\uac93\uac95", 6, "\uac9e\uaca2", 5, "\uacab\uacad\uacae\uacb1", 6, "\uacba\uacbe\uacbf\uacc0\uacc2\uacc3\uacc5\uacc6\uacc7\uacc9\uacca\uaccb\uaccd", 7, "\uacd6\uacd8", 7, "\uace2\uace3\uace5\uace6\uace9\uaceb\uaced\uacee\uacf2\uacf4\uacf7", 4, "\uacfe\uacff\uad01\uad02\uad03\uad05\uad07", 4, "\uad0e\uad10\uad12\uad13" ], [ "8241", "\uad14\uad15\uad16\uad17\uad19\uad1a\uad1b\uad1d\uad1e\uad1f\uad21", 7, "\uad2a\uad2b\uad2e", 5 ], [ "8261", "\uad36\uad37\uad39\uad3a\uad3b\uad3d", 6, "\uad46\uad48\uad4a", 5, "\uad51\uad52\uad53\uad55\uad56\uad57" ], [ "8281", "\uad59", 7, "\uad62\uad64", 7, "\uad6e\uad6f\uad71\uad72\uad77\uad78\uad79\uad7a\uad7e\uad80\uad83", 4, "\uad8a\uad8b\uad8d\uad8e\uad8f\uad91", 10, "\uad9e", 5, "\uada5", 17, "\uadb8", 7, "\uadc2\uadc3\uadc5\uadc6\uadc7\uadc9", 6, "\uadd2\uadd4", 7, "\uaddd\uadde\uaddf\uade1\uade2\uade3\uade5", 18 ], [ "8341", "\uadfa\uadfb\uadfd\uadfe\uae02", 5, "\uae0a\uae0c\uae0e", 5, "\uae15", 7 ], [ "8361", "\uae1d", 18, "\uae32\uae33\uae35\uae36\uae39\uae3b\uae3c" ], [ "8381", "\uae3d\uae3e\uae3f\uae42\uae44\uae47\uae48\uae49\uae4b\uae4f\uae51\uae52\uae53\uae55\uae57", 4, "\uae5e\uae62\uae63\uae64\uae66\uae67\uae6a\uae6b\uae6d\uae6e\uae6f\uae71", 6, "\uae7a\uae7e", 5, "\uae86", 5, "\uae8d", 46, "\uaebf\uaec1\uaec2\uaec3\uaec5", 6, "\uaece\uaed2", 5, "\uaeda\uaedb\uaedd", 8 ], [ "8441", "\uaee6\uaee7\uaee9\uaeea\uaeec\uaeee", 5, "\uaef5\uaef6\uaef7\uaef9\uaefa\uaefb\uaefd", 8 ], [ "8461", "\uaf06\uaf09\uaf0a\uaf0b\uaf0c\uaf0e\uaf0f\uaf11", 18 ], [ "8481", "\uaf24", 7, "\uaf2e\uaf2f\uaf31\uaf33\uaf35", 6, "\uaf3e\uaf40\uaf44\uaf45\uaf46\uaf47\uaf4a", 5, "\uaf51", 10, "\uaf5e", 5, "\uaf66", 18, "\uaf7a", 5, "\uaf81\uaf82\uaf83\uaf85\uaf86\uaf87\uaf89", 6, "\uaf92\uaf93\uaf94\uaf96", 5, "\uaf9d", 26, "\uafba\uafbb\uafbd\uafbe" ], [ "8541", "\uafbf\uafc1", 5, "\uafca\uafcc\uafcf", 4, "\uafd5", 6, "\uafdd", 4 ], [ "8561", "\uafe2", 5, "\uafea", 5, "\uaff2\uaff3\uaff5\uaff6\uaff7\uaff9", 6, "\ub002\ub003" ], [ "8581", "\ub005", 6, "\ub00d\ub00e\ub00f\ub011\ub012\ub013\ub015", 6, "\ub01e", 9, "\ub029", 26, "\ub046\ub047\ub049\ub04b\ub04d\ub04f\ub050\ub051\ub052\ub056\ub058\ub05a\ub05b\ub05c\ub05e", 29, "\ub07e\ub07f\ub081\ub082\ub083\ub085", 6, "\ub08e\ub090\ub092", 5, "\ub09b\ub09d\ub09e\ub0a3\ub0a4" ], [ "8641", "\ub0a5\ub0a6\ub0a7\ub0aa\ub0b0\ub0b2\ub0b6\ub0b7\ub0b9\ub0ba\ub0bb\ub0bd", 6, "\ub0c6\ub0ca", 5, "\ub0d2" ], [ "8661", "\ub0d3\ub0d5\ub0d6\ub0d7\ub0d9", 6, "\ub0e1\ub0e2\ub0e3\ub0e4\ub0e6", 10 ], [ "8681", "\ub0f1", 22, "\ub10a\ub10d\ub10e\ub10f\ub111\ub114\ub115\ub116\ub117\ub11a\ub11e", 4, "\ub126\ub127\ub129\ub12a\ub12b\ub12d", 6, "\ub136\ub13a", 5, "\ub142\ub143\ub145\ub146\ub147\ub149", 6, "\ub152\ub153\ub156\ub157\ub159\ub15a\ub15b\ub15d\ub15e\ub15f\ub161", 22, "\ub17a\ub17b\ub17d\ub17e\ub17f\ub181\ub183", 4, "\ub18a\ub18c\ub18e\ub18f\ub190\ub191\ub195\ub196\ub197\ub199\ub19a\ub19b\ub19d" ], [ "8741", "\ub19e", 9, "\ub1a9", 15 ], [ "8761", "\ub1b9", 18, "\ub1cd\ub1ce\ub1cf\ub1d1\ub1d2\ub1d3\ub1d5" ], [ "8781", "\ub1d6", 5, "\ub1de\ub1e0", 7, "\ub1ea\ub1eb\ub1ed\ub1ee\ub1ef\ub1f1", 7, "\ub1fa\ub1fc\ub1fe", 5, "\ub206\ub207\ub209\ub20a\ub20d", 6, "\ub216\ub218\ub21a", 5, "\ub221", 18, "\ub235", 6, "\ub23d", 26, "\ub259\ub25a\ub25b\ub25d\ub25e\ub25f\ub261", 6, "\ub26a", 4 ], [ "8841", "\ub26f", 4, "\ub276", 5, "\ub27d", 6, "\ub286\ub287\ub288\ub28a", 4 ], [ "8861", "\ub28f\ub292\ub293\ub295\ub296\ub297\ub29b", 4, "\ub2a2\ub2a4\ub2a7\ub2a8\ub2a9\ub2ab\ub2ad\ub2ae\ub2af\ub2b1\ub2b2\ub2b3\ub2b5\ub2b6\ub2b7" ], [ "8881", "\ub2b8", 15, "\ub2ca\ub2cb\ub2cd\ub2ce\ub2cf\ub2d1\ub2d3", 4, "\ub2da\ub2dc\ub2de\ub2df\ub2e0\ub2e1\ub2e3\ub2e7\ub2e9\ub2ea\ub2f0\ub2f1\ub2f2\ub2f6\ub2fc\ub2fd\ub2fe\ub302\ub303\ub305\ub306\ub307\ub309", 6, "\ub312\ub316", 5, "\ub31d", 54, "\ub357\ub359\ub35a\ub35d\ub360\ub361\ub362\ub363" ], [ "8941", "\ub366\ub368\ub36a\ub36c\ub36d\ub36f\ub372\ub373\ub375\ub376\ub377\ub379", 6, "\ub382\ub386", 5, "\ub38d" ], [ "8961", "\ub38e\ub38f\ub391\ub392\ub393\ub395", 10, "\ub3a2", 5, "\ub3a9\ub3aa\ub3ab\ub3ad" ], [ "8981", "\ub3ae", 21, "\ub3c6\ub3c7\ub3c9\ub3ca\ub3cd\ub3cf\ub3d1\ub3d2\ub3d3\ub3d6\ub3d8\ub3da\ub3dc\ub3de\ub3df\ub3e1\ub3e2\ub3e3\ub3e5\ub3e6\ub3e7\ub3e9", 18, "\ub3fd", 18, "\ub411", 6, "\ub419\ub41a\ub41b\ub41d\ub41e\ub41f\ub421", 6, "\ub42a\ub42c", 7, "\ub435", 15 ], [ "8a41", "\ub445", 10, "\ub452\ub453\ub455\ub456\ub457\ub459", 6, "\ub462\ub464\ub466" ], [ "8a61", "\ub467", 4, "\ub46d", 18, "\ub481\ub482" ], [ "8a81", "\ub483", 4, "\ub489", 19, "\ub49e", 5, "\ub4a5\ub4a6\ub4a7\ub4a9\ub4aa\ub4ab\ub4ad", 7, "\ub4b6\ub4b8\ub4ba", 5, "\ub4c1\ub4c2\ub4c3\ub4c5\ub4c6\ub4c7\ub4c9", 6, "\ub4d1\ub4d2\ub4d3\ub4d4\ub4d6", 5, "\ub4de\ub4df\ub4e1\ub4e2\ub4e5\ub4e7", 4, "\ub4ee\ub4f0\ub4f2", 5, "\ub4f9", 26, "\ub516\ub517\ub519\ub51a\ub51d" ], [ "8b41", "\ub51e", 5, "\ub526\ub52b", 4, "\ub532\ub533\ub535\ub536\ub537\ub539", 6, "\ub542\ub546" ], [ "8b61", "\ub547\ub548\ub549\ub54a\ub54e\ub54f\ub551\ub552\ub553\ub555", 6, "\ub55e\ub562", 8 ], [ "8b81", "\ub56b", 52, "\ub5a2\ub5a3\ub5a5\ub5a6\ub5a7\ub5a9\ub5ac\ub5ad\ub5ae\ub5af\ub5b2\ub5b6", 4, "\ub5be\ub5bf\ub5c1\ub5c2\ub5c3\ub5c5", 6, "\ub5ce\ub5d2", 5, "\ub5d9", 18, "\ub5ed", 18 ], [ "8c41", "\ub600", 15, "\ub612\ub613\ub615\ub616\ub617\ub619", 4 ], [ "8c61", "\ub61e", 6, "\ub626", 5, "\ub62d", 6, "\ub635", 5 ], [ "8c81", "\ub63b", 12, "\ub649", 26, "\ub665\ub666\ub667\ub669", 50, "\ub69e\ub69f\ub6a1\ub6a2\ub6a3\ub6a5", 5, "\ub6ad\ub6ae\ub6af\ub6b0\ub6b2", 16 ], [ "8d41", "\ub6c3", 16, "\ub6d5", 8 ], [ "8d61", "\ub6de", 17, "\ub6f1\ub6f2\ub6f3\ub6f5\ub6f6\ub6f7\ub6f9\ub6fa" ], [ "8d81", "\ub6fb", 4, "\ub702\ub703\ub704\ub706", 33, "\ub72a\ub72b\ub72d\ub72e\ub731", 6, "\ub73a\ub73c", 7, "\ub745\ub746\ub747\ub749\ub74a\ub74b\ub74d", 6, "\ub756", 9, "\ub761\ub762\ub763\ub765\ub766\ub767\ub769", 6, "\ub772\ub774\ub776", 5, "\ub77e\ub77f\ub781\ub782\ub783\ub785", 6, "\ub78e\ub793\ub794\ub795\ub79a\ub79b\ub79d\ub79e" ], [ "8e41", "\ub79f\ub7a1", 6, "\ub7aa\ub7ae", 5, "\ub7b6\ub7b7\ub7b9", 8 ], [ "8e61", "\ub7c2", 4, "\ub7c8\ub7ca", 19 ], [ "8e81", "\ub7de", 13, "\ub7ee\ub7ef\ub7f1\ub7f2\ub7f3\ub7f5", 6, "\ub7fe\ub802", 4, "\ub80a\ub80b\ub80d\ub80e\ub80f\ub811", 6, "\ub81a\ub81c\ub81e", 5, "\ub826\ub827\ub829\ub82a\ub82b\ub82d", 6, "\ub836\ub83a", 5, "\ub841\ub842\ub843\ub845", 11, "\ub852\ub854", 7, "\ub85e\ub85f\ub861\ub862\ub863\ub865", 6, "\ub86e\ub870\ub872", 5, "\ub879\ub87a\ub87b\ub87d", 7 ], [ "8f41", "\ub885", 7, "\ub88e", 17 ], [ "8f61", "\ub8a0", 7, "\ub8a9", 6, "\ub8b1\ub8b2\ub8b3\ub8b5\ub8b6\ub8b7\ub8b9", 4 ], [ "8f81", "\ub8be\ub8bf\ub8c2\ub8c4\ub8c6", 5, "\ub8cd\ub8ce\ub8cf\ub8d1\ub8d2\ub8d3\ub8d5", 7, "\ub8de\ub8e0\ub8e2", 5, "\ub8ea\ub8eb\ub8ed\ub8ee\ub8ef\ub8f1", 6, "\ub8fa\ub8fc\ub8fe", 5, "\ub905", 18, "\ub919", 6, "\ub921", 26, "\ub93e\ub93f\ub941\ub942\ub943\ub945", 6, "\ub94d\ub94e\ub950\ub952", 5 ], [ "9041", "\ub95a\ub95b\ub95d\ub95e\ub95f\ub961", 6, "\ub96a\ub96c\ub96e", 5, "\ub976\ub977\ub979\ub97a\ub97b\ub97d" ], [ "9061", "\ub97e", 5, "\ub986\ub988\ub98b\ub98c\ub98f", 15 ], [ "9081", "\ub99f", 12, "\ub9ae\ub9af\ub9b1\ub9b2\ub9b3\ub9b5", 6, "\ub9be\ub9c0\ub9c2", 5, "\ub9ca\ub9cb\ub9cd\ub9d3", 4, "\ub9da\ub9dc\ub9df\ub9e0\ub9e2\ub9e6\ub9e7\ub9e9\ub9ea\ub9eb\ub9ed", 6, "\ub9f6\ub9fb", 4, "\uba02", 5, "\uba09", 11, "\uba16", 33, "\uba3a\uba3b\uba3d\uba3e\uba3f\uba41\uba43\uba44\uba45\uba46" ], [ "9141", "\uba47\uba4a\uba4c\uba4f\uba50\uba51\uba52\uba56\uba57\uba59\uba5a\uba5b\uba5d", 6, "\uba66\uba6a", 5 ], [ "9161", "\uba72\uba73\uba75\uba76\uba77\uba79", 9, "\uba86\uba88\uba89\uba8a\uba8b\uba8d", 5 ], [ "9181", "\uba93", 20, "\ubaaa\ubaad\ubaae\ubaaf\ubab1\ubab3", 4, "\ubaba\ubabc\ubabe", 5, "\ubac5\ubac6\ubac7\ubac9", 14, "\ubada", 33, "\ubafd\ubafe\ubaff\ubb01\ubb02\ubb03\ubb05", 7, "\ubb0e\ubb10\ubb12", 5, "\ubb19\ubb1a\ubb1b\ubb1d\ubb1e\ubb1f\ubb21", 6 ], [ "9241", "\ubb28\ubb2a\ubb2c", 7, "\ubb37\ubb39\ubb3a\ubb3f", 4, "\ubb46\ubb48\ubb4a\ubb4b\ubb4c\ubb4e\ubb51\ubb52" ], [ "9261", "\ubb53\ubb55\ubb56\ubb57\ubb59", 7, "\ubb62\ubb64", 7, "\ubb6d", 4 ], [ "9281", "\ubb72", 21, "\ubb89\ubb8a\ubb8b\ubb8d\ubb8e\ubb8f\ubb91", 18, "\ubba5\ubba6\ubba7\ubba9\ubbaa\ubbab\ubbad", 6, "\ubbb5\ubbb6\ubbb8", 7, "\ubbc1\ubbc2\ubbc3\ubbc5\ubbc6\ubbc7\ubbc9", 6, "\ubbd1\ubbd2\ubbd4", 35, "\ubbfa\ubbfb\ubbfd\ubbfe\ubc01" ], [ "9341", "\ubc03", 4, "\ubc0a\ubc0e\ubc10\ubc12\ubc13\ubc19\ubc1a\ubc20\ubc21\ubc22\ubc23\ubc26\ubc28\ubc2a\ubc2b\ubc2c\ubc2e\ubc2f\ubc32\ubc33\ubc35" ], [ "9361", "\ubc36\ubc37\ubc39", 6, "\ubc42\ubc46\ubc47\ubc48\ubc4a\ubc4b\ubc4e\ubc4f\ubc51", 8 ], [ "9381", "\ubc5a\ubc5b\ubc5c\ubc5e", 37, "\ubc86\ubc87\ubc89\ubc8a\ubc8d\ubc8f", 4, "\ubc96\ubc98\ubc9b", 4, "\ubca2\ubca3\ubca5\ubca6\ubca9", 6, "\ubcb2\ubcb6", 5, "\ubcbe\ubcbf\ubcc1\ubcc2\ubcc3\ubcc5", 7, "\ubcce\ubcd2\ubcd3\ubcd4\ubcd6\ubcd7\ubcd9\ubcda\ubcdb\ubcdd", 22, "\ubcf7\ubcf9\ubcfa\ubcfb\ubcfd" ], [ "9441", "\ubcfe", 5, "\ubd06\ubd08\ubd0a", 5, "\ubd11\ubd12\ubd13\ubd15", 8 ], [ "9461", "\ubd1e", 5, "\ubd25", 6, "\ubd2d", 12 ], [ "9481", "\ubd3a", 5, "\ubd41", 6, "\ubd4a\ubd4b\ubd4d\ubd4e\ubd4f\ubd51", 6, "\ubd5a", 9, "\ubd65\ubd66\ubd67\ubd69", 22, "\ubd82\ubd83\ubd85\ubd86\ubd8b", 4, "\ubd92\ubd94\ubd96\ubd97\ubd98\ubd9b\ubd9d", 6, "\ubda5", 10, "\ubdb1", 6, "\ubdb9", 24 ], [ "9541", "\ubdd2\ubdd3\ubdd6\ubdd7\ubdd9\ubdda\ubddb\ubddd", 11, "\ubdea", 5, "\ubdf1" ], [ "9561", "\ubdf2\ubdf3\ubdf5\ubdf6\ubdf7\ubdf9", 6, "\ube01\ube02\ube04\ube06", 5, "\ube0e\ube0f\ube11\ube12\ube13" ], [ "9581", "\ube15", 6, "\ube1e\ube20", 35, "\ube46\ube47\ube49\ube4a\ube4b\ube4d\ube4f", 4, "\ube56\ube58\ube5c\ube5d\ube5e\ube5f\ube62\ube63\ube65\ube66\ube67\ube69\ube6b", 4, "\ube72\ube76", 4, "\ube7e\ube7f\ube81\ube82\ube83\ube85", 6, "\ube8e\ube92", 5, "\ube9a", 13, "\ubea9", 14 ], [ "9641", "\ubeb8", 23, "\ubed2\ubed3" ], [ "9661", "\ubed5\ubed6\ubed9", 6, "\ubee1\ubee2\ubee6", 5, "\ubeed", 8 ], [ "9681", "\ubef6", 10, "\ubf02", 5, "\ubf0a", 13, "\ubf1a\ubf1e", 33, "\ubf42\ubf43\ubf45\ubf46\ubf47\ubf49", 6, "\ubf52\ubf53\ubf54\ubf56", 44 ], [ "9741", "\ubf83", 16, "\ubf95", 8 ], [ "9761", "\ubf9e", 17, "\ubfb1", 7 ], [ "9781", "\ubfb9", 11, "\ubfc6", 5, "\ubfce\ubfcf\ubfd1\ubfd2\ubfd3\ubfd5", 6, "\ubfdd\ubfde\ubfe0\ubfe2", 89, "\uc03d\uc03e\uc03f" ], [ "9841", "\uc040", 16, "\uc052", 5, "\uc059\uc05a\uc05b" ], [ "9861", "\uc05d\uc05e\uc05f\uc061", 6, "\uc06a", 15 ], [ "9881", "\uc07a", 21, "\uc092\uc093\uc095\uc096\uc097\uc099", 6, "\uc0a2\uc0a4\uc0a6", 5, "\uc0ae\uc0b1\uc0b2\uc0b7", 4, "\uc0be\uc0c2\uc0c3\uc0c4\uc0c6\uc0c7\uc0ca\uc0cb\uc0cd\uc0ce\uc0cf\uc0d1", 6, "\uc0da\uc0de", 5, "\uc0e6\uc0e7\uc0e9\uc0ea\uc0eb\uc0ed", 6, "\uc0f6\uc0f8\uc0fa", 5, "\uc101\uc102\uc103\uc105\uc106\uc107\uc109", 6, "\uc111\uc112\uc113\uc114\uc116", 5, "\uc121\uc122\uc125\uc128\uc129\uc12a\uc12b\uc12e" ], [ "9941", "\uc132\uc133\uc134\uc135\uc137\uc13a\uc13b\uc13d\uc13e\uc13f\uc141", 6, "\uc14a\uc14e", 5, "\uc156\uc157" ], [ "9961", "\uc159\uc15a\uc15b\uc15d", 6, "\uc166\uc16a", 5, "\uc171\uc172\uc173\uc175\uc176\uc177\uc179\uc17a\uc17b" ], [ "9981", "\uc17c", 8, "\uc186", 5, "\uc18f\uc191\uc192\uc193\uc195\uc197", 4, "\uc19e\uc1a0\uc1a2\uc1a3\uc1a4\uc1a6\uc1a7\uc1aa\uc1ab\uc1ad\uc1ae\uc1af\uc1b1", 11, "\uc1be", 5, "\uc1c5\uc1c6\uc1c7\uc1c9\uc1ca\uc1cb\uc1cd", 6, "\uc1d5\uc1d6\uc1d9", 6, "\uc1e1\uc1e2\uc1e3\uc1e5\uc1e6\uc1e7\uc1e9", 6, "\uc1f2\uc1f4", 7, "\uc1fe\uc1ff\uc201\uc202\uc203\uc205", 6, "\uc20e\uc210\uc212", 5, "\uc21a\uc21b\uc21d\uc21e\uc221\uc222\uc223" ], [ "9a41", "\uc224\uc225\uc226\uc227\uc22a\uc22c\uc22e\uc230\uc233\uc235", 16 ], [ "9a61", "\uc246\uc247\uc249", 6, "\uc252\uc253\uc255\uc256\uc257\uc259", 6, "\uc261\uc262\uc263\uc264\uc266" ], [ "9a81", "\uc267", 4, "\uc26e\uc26f\uc271\uc272\uc273\uc275", 6, "\uc27e\uc280\uc282", 5, "\uc28a", 5, "\uc291", 6, "\uc299\uc29a\uc29c\uc29e", 5, "\uc2a6\uc2a7\uc2a9\uc2aa\uc2ab\uc2ae", 5, "\uc2b6\uc2b8\uc2ba", 33, "\uc2de\uc2df\uc2e1\uc2e2\uc2e5", 5, "\uc2ee\uc2f0\uc2f2\uc2f3\uc2f4\uc2f5\uc2f7\uc2fa\uc2fd\uc2fe\uc2ff\uc301", 6, "\uc30a\uc30b\uc30e\uc30f" ], [ "9b41", "\uc310\uc311\uc312\uc316\uc317\uc319\uc31a\uc31b\uc31d", 6, "\uc326\uc327\uc32a", 8 ], [ "9b61", "\uc333", 17, "\uc346", 7 ], [ "9b81", "\uc34e", 25, "\uc36a\uc36b\uc36d\uc36e\uc36f\uc371\uc373", 4, "\uc37a\uc37b\uc37e", 5, "\uc385\uc386\uc387\uc389\uc38a\uc38b\uc38d", 50, "\uc3c1", 22, "\uc3da" ], [ "9c41", "\uc3db\uc3dd\uc3de\uc3e1\uc3e3", 4, "\uc3ea\uc3eb\uc3ec\uc3ee", 5, "\uc3f6\uc3f7\uc3f9", 5 ], [ "9c61", "\uc3ff", 8, "\uc409", 6, "\uc411", 9 ], [ "9c81", "\uc41b", 8, "\uc425", 6, "\uc42d\uc42e\uc42f\uc431\uc432\uc433\uc435", 6, "\uc43e", 9, "\uc449", 26, "\uc466\uc467\uc469\uc46a\uc46b\uc46d", 6, "\uc476\uc477\uc478\uc47a", 5, "\uc481", 18, "\uc495", 6, "\uc49d", 12 ], [ "9d41", "\uc4aa", 13, "\uc4b9\uc4ba\uc4bb\uc4bd", 8 ], [ "9d61", "\uc4c6", 25 ], [ "9d81", "\uc4e0", 8, "\uc4ea", 5, "\uc4f2\uc4f3\uc4f5\uc4f6\uc4f7\uc4f9\uc4fb\uc4fc\uc4fd\uc4fe\uc502", 9, "\uc50d\uc50e\uc50f\uc511\uc512\uc513\uc515", 6, "\uc51d", 10, "\uc52a\uc52b\uc52d\uc52e\uc52f\uc531", 6, "\uc53a\uc53c\uc53e", 5, "\uc546\uc547\uc54b\uc54f\uc550\uc551\uc552\uc556\uc55a\uc55b\uc55c\uc55f\uc562\uc563\uc565\uc566\uc567\uc569", 6, "\uc572\uc576", 5, "\uc57e\uc57f\uc581\uc582\uc583\uc585\uc586\uc588\uc589\uc58a\uc58b\uc58e\uc590\uc592\uc593\uc594" ], [ "9e41", "\uc596\uc599\uc59a\uc59b\uc59d\uc59e\uc59f\uc5a1", 7, "\uc5aa", 9, "\uc5b6" ], [ "9e61", "\uc5b7\uc5ba\uc5bf", 4, "\uc5cb\uc5cd\uc5cf\uc5d2\uc5d3\uc5d5\uc5d6\uc5d7\uc5d9", 6, "\uc5e2\uc5e4\uc5e6\uc5e7" ], [ "9e81", "\uc5e8\uc5e9\uc5ea\uc5eb\uc5ef\uc5f1\uc5f2\uc5f3\uc5f5\uc5f8\uc5f9\uc5fa\uc5fb\uc602\uc603\uc604\uc609\uc60a\uc60b\uc60d\uc60e\uc60f\uc611", 6, "\uc61a\uc61d", 6, "\uc626\uc627\uc629\uc62a\uc62b\uc62f\uc631\uc632\uc636\uc638\uc63a\uc63c\uc63d\uc63e\uc63f\uc642\uc643\uc645\uc646\uc647\uc649", 6, "\uc652\uc656", 5, "\uc65e\uc65f\uc661", 10, "\uc66d\uc66e\uc670\uc672", 5, "\uc67a\uc67b\uc67d\uc67e\uc67f\uc681", 6, "\uc68a\uc68c\uc68e", 5, "\uc696\uc697\uc699\uc69a\uc69b\uc69d", 6, "\uc6a6" ], [ "9f41", "\uc6a8\uc6aa", 5, "\uc6b2\uc6b3\uc6b5\uc6b6\uc6b7\uc6bb", 4, "\uc6c2\uc6c4\uc6c6", 5, "\uc6ce" ], [ "9f61", "\uc6cf\uc6d1\uc6d2\uc6d3\uc6d5", 6, "\uc6de\uc6df\uc6e2", 5, "\uc6ea\uc6eb\uc6ed\uc6ee\uc6ef\uc6f1\uc6f2" ], [ "9f81", "\uc6f3", 4, "\uc6fa\uc6fb\uc6fc\uc6fe", 5, "\uc706\uc707\uc709\uc70a\uc70b\uc70d", 6, "\uc716\uc718\uc71a", 5, "\uc722\uc723\uc725\uc726\uc727\uc729", 6, "\uc732\uc734\uc736\uc738\uc739\uc73a\uc73b\uc73e\uc73f\uc741\uc742\uc743\uc745", 4, "\uc74b\uc74e\uc750\uc759\uc75a\uc75b\uc75d\uc75e\uc75f\uc761", 6, "\uc769\uc76a\uc76c", 7, "\uc776\uc777\uc779\uc77a\uc77b\uc77f\uc780\uc781\uc782\uc786\uc78b\uc78c\uc78d\uc78f\uc792\uc793\uc795\uc799\uc79b", 4, "\uc7a2\uc7a7", 4, "\uc7ae\uc7af\uc7b1\uc7b2\uc7b3\uc7b5\uc7b6\uc7b7" ], [ "a041", "\uc7b8\uc7b9\uc7ba\uc7bb\uc7be\uc7c2", 5, "\uc7ca\uc7cb\uc7cd\uc7cf\uc7d1", 6, "\uc7d9\uc7da\uc7db\uc7dc" ], [ "a061", "\uc7de", 5, "\uc7e5\uc7e6\uc7e7\uc7e9\uc7ea\uc7eb\uc7ed", 13 ], [ "a081", "\uc7fb", 4, "\uc802\uc803\uc805\uc806\uc807\uc809\uc80b", 4, "\uc812\uc814\uc817", 4, "\uc81e\uc81f\uc821\uc822\uc823\uc825", 6, "\uc82e\uc830\uc832", 5, "\uc839\uc83a\uc83b\uc83d\uc83e\uc83f\uc841", 6, "\uc84a\uc84b\uc84e", 5, "\uc855", 26, "\uc872\uc873\uc875\uc876\uc877\uc879\uc87b", 4, "\uc882\uc884\uc888\uc889\uc88a\uc88e", 5, "\uc895", 7, "\uc89e\uc8a0\uc8a2\uc8a3\uc8a4" ], [ "a141", "\uc8a5\uc8a6\uc8a7\uc8a9", 18, "\uc8be\uc8bf\uc8c0\uc8c1" ], [ "a161", "\uc8c2\uc8c3\uc8c5\uc8c6\uc8c7\uc8c9\uc8ca\uc8cb\uc8cd", 6, "\uc8d6\uc8d8\uc8da", 5, "\uc8e2\uc8e3\uc8e5" ], [ "a181", "\uc8e6", 14, "\uc8f6", 5, "\uc8fe\uc8ff\uc901\uc902\uc903\uc907", 4, "\uc90e\u3000\u3001\u3002\xb7\u2025\u2026\xa8\u3003\xad\u2015\u2225\uff3c\u223c\u2018\u2019\u201c\u201d\u3014\u3015\u3008", 9, "\xb1\xd7\xf7\u2260\u2264\u2265\u221e\u2234\xb0\u2032\u2033\u2103\u212b\uffe0\uffe1\uffe5\u2642\u2640\u2220\u22a5\u2312\u2202\u2207\u2261\u2252\xa7\u203b\u2606\u2605\u25cb\u25cf\u25ce\u25c7\u25c6\u25a1\u25a0\u25b3\u25b2\u25bd\u25bc\u2192\u2190\u2191\u2193\u2194\u3013\u226a\u226b\u221a\u223d\u221d\u2235\u222b\u222c\u2208\u220b\u2286\u2287\u2282\u2283\u222a\u2229\u2227\u2228\uffe2" ], [ "a241", "\uc910\uc912", 5, "\uc919", 18 ], [ "a261", "\uc92d", 6, "\uc935", 18 ], [ "a281", "\uc948", 7, "\uc952\uc953\uc955\uc956\uc957\uc959", 6, "\uc962\uc964", 7, "\uc96d\uc96e\uc96f\u21d2\u21d4\u2200\u2203\xb4\uff5e\u02c7\u02d8\u02dd\u02da\u02d9\xb8\u02db\xa1\xbf\u02d0\u222e\u2211\u220f\xa4\u2109\u2030\u25c1\u25c0\u25b7\u25b6\u2664\u2660\u2661\u2665\u2667\u2663\u2299\u25c8\u25a3\u25d0\u25d1\u2592\u25a4\u25a5\u25a8\u25a7\u25a6\u25a9\u2668\u260f\u260e\u261c\u261e\xb6\u2020\u2021\u2195\u2197\u2199\u2196\u2198\u266d\u2669\u266a\u266c\u327f\u321c\u2116\u33c7\u2122\u33c2\u33d8\u2121\u20ac\xae" ], [ "a341", "\uc971\uc972\uc973\uc975", 6, "\uc97d", 10, "\uc98a\uc98b\uc98d\uc98e\uc98f" ], [ "a361", "\uc991", 6, "\uc99a\uc99c\uc99e", 16 ], [ "a381", "\uc9af", 16, "\uc9c2\uc9c3\uc9c5\uc9c6\uc9c9\uc9cb", 4, "\uc9d2\uc9d4\uc9d7\uc9d8\uc9db\uff01", 58, "\uffe6\uff3d", 32, "\uffe3" ], [ "a441", "\uc9de\uc9df\uc9e1\uc9e3\uc9e5\uc9e6\uc9e8\uc9e9\uc9ea\uc9eb\uc9ee\uc9f2", 5, "\uc9fa\uc9fb\uc9fd\uc9fe\uc9ff\uca01\uca02\uca03\uca04" ], [ "a461", "\uca05\uca06\uca07\uca0a\uca0e", 5, "\uca15\uca16\uca17\uca19", 12 ], [ "a481", "\uca26\uca27\uca28\uca2a", 28, "\u3131", 93 ], [ "a541", "\uca47", 4, "\uca4e\uca4f\uca51\uca52\uca53\uca55", 6, "\uca5e\uca62", 5, "\uca69\uca6a" ], [ "a561", "\uca6b", 17, "\uca7e", 5, "\uca85\uca86" ], [ "a581", "\uca87", 16, "\uca99", 14, "\u2170", 9 ], [ "a5b0", "\u2160", 9 ], [ "a5c1", "\u0391", 16, "\u03a3", 6 ], [ "a5e1", "\u03b1", 16, "\u03c3", 6 ], [ "a641", "\ucaa8", 19, "\ucabe\ucabf\ucac1\ucac2\ucac3\ucac5" ], [ "a661", "\ucac6", 5, "\ucace\ucad0\ucad2\ucad4\ucad5\ucad6\ucad7\ucada", 5, "\ucae1", 6 ], [ "a681", "\ucae8\ucae9\ucaea\ucaeb\ucaed", 6, "\ucaf5", 18, "\ucb09\ucb0a\u2500\u2502\u250c\u2510\u2518\u2514\u251c\u252c\u2524\u2534\u253c\u2501\u2503\u250f\u2513\u251b\u2517\u2523\u2533\u252b\u253b\u254b\u2520\u252f\u2528\u2537\u253f\u251d\u2530\u2525\u2538\u2542\u2512\u2511\u251a\u2519\u2516\u2515\u250e\u250d\u251e\u251f\u2521\u2522\u2526\u2527\u2529\u252a\u252d\u252e\u2531\u2532\u2535\u2536\u2539\u253a\u253d\u253e\u2540\u2541\u2543", 7 ], [ "a741", "\ucb0b", 4, "\ucb11\ucb12\ucb13\ucb15\ucb16\ucb17\ucb19", 6, "\ucb22", 7 ], [ "a761", "\ucb2a", 22, "\ucb42\ucb43\ucb44" ], [ "a781", "\ucb45\ucb46\ucb47\ucb4a\ucb4b\ucb4d\ucb4e\ucb4f\ucb51", 6, "\ucb5a\ucb5b\ucb5c\ucb5e", 5, "\ucb65", 7, "\u3395\u3396\u3397\u2113\u3398\u33c4\u33a3\u33a4\u33a5\u33a6\u3399", 9, "\u33ca\u338d\u338e\u338f\u33cf\u3388\u3389\u33c8\u33a7\u33a8\u33b0", 9, "\u3380", 4, "\u33ba", 5, "\u3390", 4, "\u2126\u33c0\u33c1\u338a\u338b\u338c\u33d6\u33c5\u33ad\u33ae\u33af\u33db\u33a9\u33aa\u33ab\u33ac\u33dd\u33d0\u33d3\u33c3\u33c9\u33dc\u33c6" ], [ "a841", "\ucb6d", 10, "\ucb7a", 14 ], [ "a861", "\ucb89", 18, "\ucb9d", 6 ], [ "a881", "\ucba4", 19, "\ucbb9", 11, "\xc6\xd0\xaa\u0126" ], [ "a8a6", "\u0132" ], [ "a8a8", "\u013f\u0141\xd8\u0152\xba\xde\u0166\u014a" ], [ "a8b1", "\u3260", 27, "\u24d0", 25, "\u2460", 14, "\xbd\u2153\u2154\xbc\xbe\u215b\u215c\u215d\u215e" ], [ "a941", "\ucbc5", 14, "\ucbd5", 10 ], [ "a961", "\ucbe0\ucbe1\ucbe2\ucbe3\ucbe5\ucbe6\ucbe8\ucbea", 18 ], [ "a981", "\ucbfd", 14, "\ucc0e\ucc0f\ucc11\ucc12\ucc13\ucc15", 6, "\ucc1e\ucc1f\ucc20\ucc23\ucc24\xe6\u0111\xf0\u0127\u0131\u0133\u0138\u0140\u0142\xf8\u0153\xdf\xfe\u0167\u014b\u0149\u3200", 27, "\u249c", 25, "\u2474", 14, "\xb9\xb2\xb3\u2074\u207f\u2081\u2082\u2083\u2084" ], [ "aa41", "\ucc25\ucc26\ucc2a\ucc2b\ucc2d\ucc2f\ucc31", 6, "\ucc3a\ucc3f", 4, "\ucc46\ucc47\ucc49\ucc4a\ucc4b\ucc4d\ucc4e" ], [ "aa61", "\ucc4f", 4, "\ucc56\ucc5a", 5, "\ucc61\ucc62\ucc63\ucc65\ucc67\ucc69", 6, "\ucc71\ucc72" ], [ "aa81", "\ucc73\ucc74\ucc76", 29, "\u3041", 82 ], [ "ab41", "\ucc94\ucc95\ucc96\ucc97\ucc9a\ucc9b\ucc9d\ucc9e\ucc9f\ucca1", 6, "\uccaa\uccae", 5, "\uccb6\uccb7\uccb9" ], [ "ab61", "\uccba\uccbb\uccbd", 6, "\uccc6\uccc8\uccca", 5, "\uccd1\uccd2\uccd3\uccd5", 5 ], [ "ab81", "\uccdb", 8, "\ucce5", 6, "\ucced\uccee\uccef\uccf1", 12, "\u30a1", 85 ], [ "ac41", "\uccfe\uccff\ucd00\ucd02", 5, "\ucd0a\ucd0b\ucd0d\ucd0e\ucd0f\ucd11", 6, "\ucd1a\ucd1c\ucd1e\ucd1f\ucd20" ], [ "ac61", "\ucd21\ucd22\ucd23\ucd25\ucd26\ucd27\ucd29\ucd2a\ucd2b\ucd2d", 11, "\ucd3a", 4 ], [ "ac81", "\ucd3f", 28, "\ucd5d\ucd5e\ucd5f\u0410", 5, "\u0401\u0416", 25 ], [ "acd1", "\u0430", 5, "\u0451\u0436", 25 ], [ "ad41", "\ucd61\ucd62\ucd63\ucd65", 6, "\ucd6e\ucd70\ucd72", 5, "\ucd79", 7 ], [ "ad61", "\ucd81", 6, "\ucd89", 10, "\ucd96\ucd97\ucd99\ucd9a\ucd9b\ucd9d\ucd9e\ucd9f" ], [ "ad81", "\ucda0\ucda1\ucda2\ucda3\ucda6\ucda8\ucdaa", 5, "\ucdb1", 18, "\ucdc5" ], [ "ae41", "\ucdc6", 5, "\ucdcd\ucdce\ucdcf\ucdd1", 16 ], [ "ae61", "\ucde2", 5, "\ucde9\ucdea\ucdeb\ucded\ucdee\ucdef\ucdf1", 6, "\ucdfa\ucdfc\ucdfe", 4 ], [ "ae81", "\uce03\uce05\uce06\uce07\uce09\uce0a\uce0b\uce0d", 6, "\uce15\uce16\uce17\uce18\uce1a", 5, "\uce22\uce23\uce25\uce26\uce27\uce29\uce2a\uce2b" ], [ "af41", "\uce2c\uce2d\uce2e\uce2f\uce32\uce34\uce36", 19 ], [ "af61", "\uce4a", 13, "\uce5a\uce5b\uce5d\uce5e\uce62", 5, "\uce6a\uce6c" ], [ "af81", "\uce6e", 5, "\uce76\uce77\uce79\uce7a\uce7b\uce7d", 6, "\uce86\uce88\uce8a", 5, "\uce92\uce93\uce95\uce96\uce97\uce99" ], [ "b041", "\uce9a", 5, "\ucea2\ucea6", 5, "\uceae", 12 ], [ "b061", "\ucebb", 5, "\ucec2", 19 ], [ "b081", "\uced6", 13, "\ucee6\ucee7\ucee9\uceea\uceed", 6, "\ucef6\ucefa", 5, "\uac00\uac01\uac04\uac07\uac08\uac09\uac0a\uac10", 7, "\uac19", 4, "\uac20\uac24\uac2c\uac2d\uac2f\uac30\uac31\uac38\uac39\uac3c\uac40\uac4b\uac4d\uac54\uac58\uac5c\uac70\uac71\uac74\uac77\uac78\uac7a\uac80\uac81\uac83\uac84\uac85\uac86\uac89\uac8a\uac8b\uac8c\uac90\uac94\uac9c\uac9d\uac9f\uaca0\uaca1\uaca8\uaca9\uacaa\uacac\uacaf\uacb0\uacb8\uacb9\uacbb\uacbc\uacbd\uacc1\uacc4\uacc8\uaccc\uacd5\uacd7\uace0\uace1\uace4\uace7\uace8\uacea\uacec\uacef\uacf0\uacf1\uacf3\uacf5\uacf6\uacfc\uacfd\uad00\uad04\uad06" ], [ "b141", "\ucf02\ucf03\ucf05\ucf06\ucf07\ucf09", 6, "\ucf12\ucf14\ucf16", 5, "\ucf1d\ucf1e\ucf1f\ucf21\ucf22\ucf23" ], [ "b161", "\ucf25", 6, "\ucf2e\ucf32", 5, "\ucf39", 11 ], [ "b181", "\ucf45", 14, "\ucf56\ucf57\ucf59\ucf5a\ucf5b\ucf5d", 6, "\ucf66\ucf68\ucf6a\ucf6b\ucf6c\uad0c\uad0d\uad0f\uad11\uad18\uad1c\uad20\uad29\uad2c\uad2d\uad34\uad35\uad38\uad3c\uad44\uad45\uad47\uad49\uad50\uad54\uad58\uad61\uad63\uad6c\uad6d\uad70\uad73\uad74\uad75\uad76\uad7b\uad7c\uad7d\uad7f\uad81\uad82\uad88\uad89\uad8c\uad90\uad9c\uad9d\uada4\uadb7\uadc0\uadc1\uadc4\uadc8\uadd0\uadd1\uadd3\uaddc\uade0\uade4\uadf8\uadf9\uadfc\uadff\uae00\uae01\uae08\uae09\uae0b\uae0d\uae14\uae30\uae31\uae34\uae37\uae38\uae3a\uae40\uae41\uae43\uae45\uae46\uae4a\uae4c\uae4d\uae4e\uae50\uae54\uae56\uae5c\uae5d\uae5f\uae60\uae61\uae65\uae68\uae69\uae6c\uae70\uae78" ], [ "b241", "\ucf6d\ucf6e\ucf6f\ucf72\ucf73\ucf75\ucf76\ucf77\ucf79", 6, "\ucf81\ucf82\ucf83\ucf84\ucf86", 5, "\ucf8d" ], [ "b261", "\ucf8e", 18, "\ucfa2", 5, "\ucfa9" ], [ "b281", "\ucfaa", 5, "\ucfb1", 18, "\ucfc5", 6, "\uae79\uae7b\uae7c\uae7d\uae84\uae85\uae8c\uaebc\uaebd\uaebe\uaec0\uaec4\uaecc\uaecd\uaecf\uaed0\uaed1\uaed8\uaed9\uaedc\uaee8\uaeeb\uaeed\uaef4\uaef8\uaefc\uaf07\uaf08\uaf0d\uaf10\uaf2c\uaf2d\uaf30\uaf32\uaf34\uaf3c\uaf3d\uaf3f\uaf41\uaf42\uaf43\uaf48\uaf49\uaf50\uaf5c\uaf5d\uaf64\uaf65\uaf79\uaf80\uaf84\uaf88\uaf90\uaf91\uaf95\uaf9c\uafb8\uafb9\uafbc\uafc0\uafc7\uafc8\uafc9\uafcb\uafcd\uafce\uafd4\uafdc\uafe8\uafe9\uaff0\uaff1\uaff4\uaff8\ub000\ub001\ub004\ub00c\ub010\ub014\ub01c\ub01d\ub028\ub044\ub045\ub048\ub04a\ub04c\ub04e\ub053\ub054\ub055\ub057\ub059" ], [ "b341", "\ucfcc", 19, "\ucfe2\ucfe3\ucfe5\ucfe6\ucfe7\ucfe9" ], [ "b361", "\ucfea", 5, "\ucff2\ucff4\ucff6", 5, "\ucffd\ucffe\ucfff\ud001\ud002\ud003\ud005", 5 ], [ "b381", "\ud00b", 5, "\ud012", 5, "\ud019", 19, "\ub05d\ub07c\ub07d\ub080\ub084\ub08c\ub08d\ub08f\ub091\ub098\ub099\ub09a\ub09c\ub09f\ub0a0\ub0a1\ub0a2\ub0a8\ub0a9\ub0ab", 4, "\ub0b1\ub0b3\ub0b4\ub0b5\ub0b8\ub0bc\ub0c4\ub0c5\ub0c7\ub0c8\ub0c9\ub0d0\ub0d1\ub0d4\ub0d8\ub0e0\ub0e5\ub108\ub109\ub10b\ub10c\ub110\ub112\ub113\ub118\ub119\ub11b\ub11c\ub11d\ub123\ub124\ub125\ub128\ub12c\ub134\ub135\ub137\ub138\ub139\ub140\ub141\ub144\ub148\ub150\ub151\ub154\ub155\ub158\ub15c\ub160\ub178\ub179\ub17c\ub180\ub182\ub188\ub189\ub18b\ub18d\ub192\ub193\ub194\ub198\ub19c\ub1a8\ub1cc\ub1d0\ub1d4\ub1dc\ub1dd" ], [ "b441", "\ud02e", 5, "\ud036\ud037\ud039\ud03a\ud03b\ud03d", 6, "\ud046\ud048\ud04a", 5 ], [ "b461", "\ud051\ud052\ud053\ud055\ud056\ud057\ud059", 6, "\ud061", 10, "\ud06e\ud06f" ], [ "b481", "\ud071\ud072\ud073\ud075", 6, "\ud07e\ud07f\ud080\ud082", 18, "\ub1df\ub1e8\ub1e9\ub1ec\ub1f0\ub1f9\ub1fb\ub1fd\ub204\ub205\ub208\ub20b\ub20c\ub214\ub215\ub217\ub219\ub220\ub234\ub23c\ub258\ub25c\ub260\ub268\ub269\ub274\ub275\ub27c\ub284\ub285\ub289\ub290\ub291\ub294\ub298\ub299\ub29a\ub2a0\ub2a1\ub2a3\ub2a5\ub2a6\ub2aa\ub2ac\ub2b0\ub2b4\ub2c8\ub2c9\ub2cc\ub2d0\ub2d2\ub2d8\ub2d9\ub2db\ub2dd\ub2e2\ub2e4\ub2e5\ub2e6\ub2e8\ub2eb", 4, "\ub2f3\ub2f4\ub2f5\ub2f7", 4, "\ub2ff\ub300\ub301\ub304\ub308\ub310\ub311\ub313\ub314\ub315\ub31c\ub354\ub355\ub356\ub358\ub35b\ub35c\ub35e\ub35f\ub364\ub365" ], [ "b541", "\ud095", 14, "\ud0a6\ud0a7\ud0a9\ud0aa\ud0ab\ud0ad", 5 ], [ "b561", "\ud0b3\ud0b6\ud0b8\ud0ba", 5, "\ud0c2\ud0c3\ud0c5\ud0c6\ud0c7\ud0ca", 5, "\ud0d2\ud0d6", 4 ], [ "b581", "\ud0db\ud0de\ud0df\ud0e1\ud0e2\ud0e3\ud0e5", 6, "\ud0ee\ud0f2", 5, "\ud0f9", 11, "\ub367\ub369\ub36b\ub36e\ub370\ub371\ub374\ub378\ub380\ub381\ub383\ub384\ub385\ub38c\ub390\ub394\ub3a0\ub3a1\ub3a8\ub3ac\ub3c4\ub3c5\ub3c8\ub3cb\ub3cc\ub3ce\ub3d0\ub3d4\ub3d5\ub3d7\ub3d9\ub3db\ub3dd\ub3e0\ub3e4\ub3e8\ub3fc\ub410\ub418\ub41c\ub420\ub428\ub429\ub42b\ub434\ub450\ub451\ub454\ub458\ub460\ub461\ub463\ub465\ub46c\ub480\ub488\ub49d\ub4a4\ub4a8\ub4ac\ub4b5\ub4b7\ub4b9\ub4c0\ub4c4\ub4c8\ub4d0\ub4d5\ub4dc\ub4dd\ub4e0\ub4e3\ub4e4\ub4e6\ub4ec\ub4ed\ub4ef\ub4f1\ub4f8\ub514\ub515\ub518\ub51b\ub51c\ub524\ub525\ub527\ub528\ub529\ub52a\ub530\ub531\ub534\ub538" ], [ "b641", "\ud105", 7, "\ud10e", 17 ], [ "b661", "\ud120", 15, "\ud132\ud133\ud135\ud136\ud137\ud139\ud13b\ud13c\ud13d\ud13e" ], [ "b681", "\ud13f\ud142\ud146", 5, "\ud14e\ud14f\ud151\ud152\ud153\ud155", 6, "\ud15e\ud160\ud162", 5, "\ud169\ud16a\ud16b\ud16d\ub540\ub541\ub543\ub544\ub545\ub54b\ub54c\ub54d\ub550\ub554\ub55c\ub55d\ub55f\ub560\ub561\ub5a0\ub5a1\ub5a4\ub5a8\ub5aa\ub5ab\ub5b0\ub5b1\ub5b3\ub5b4\ub5b5\ub5bb\ub5bc\ub5bd\ub5c0\ub5c4\ub5cc\ub5cd\ub5cf\ub5d0\ub5d1\ub5d8\ub5ec\ub610\ub611\ub614\ub618\ub625\ub62c\ub634\ub648\ub664\ub668\ub69c\ub69d\ub6a0\ub6a4\ub6ab\ub6ac\ub6b1\ub6d4\ub6f0\ub6f4\ub6f8\ub700\ub701\ub705\ub728\ub729\ub72c\ub72f\ub730\ub738\ub739\ub73b\ub744\ub748\ub74c\ub754\ub755\ub760\ub764\ub768\ub770\ub771\ub773\ub775\ub77c\ub77d\ub780\ub784\ub78c\ub78d\ub78f\ub790\ub791\ub792\ub796\ub797" ], [ "b741", "\ud16e", 13, "\ud17d", 6, "\ud185\ud186\ud187\ud189\ud18a" ], [ "b761", "\ud18b", 20, "\ud1a2\ud1a3\ud1a5\ud1a6\ud1a7" ], [ "b781", "\ud1a9", 6, "\ud1b2\ud1b4\ud1b6\ud1b7\ud1b8\ud1b9\ud1bb\ud1bd\ud1be\ud1bf\ud1c1", 14, "\ub798\ub799\ub79c\ub7a0\ub7a8\ub7a9\ub7ab\ub7ac\ub7ad\ub7b4\ub7b5\ub7b8\ub7c7\ub7c9\ub7ec\ub7ed\ub7f0\ub7f4\ub7fc\ub7fd\ub7ff\ub800\ub801\ub807\ub808\ub809\ub80c\ub810\ub818\ub819\ub81b\ub81d\ub824\ub825\ub828\ub82c\ub834\ub835\ub837\ub838\ub839\ub840\ub844\ub851\ub853\ub85c\ub85d\ub860\ub864\ub86c\ub86d\ub86f\ub871\ub878\ub87c\ub88d\ub8a8\ub8b0\ub8b4\ub8b8\ub8c0\ub8c1\ub8c3\ub8c5\ub8cc\ub8d0\ub8d4\ub8dd\ub8df\ub8e1\ub8e8\ub8e9\ub8ec\ub8f0\ub8f8\ub8f9\ub8fb\ub8fd\ub904\ub918\ub920\ub93c\ub93d\ub940\ub944\ub94c\ub94f\ub951\ub958\ub959\ub95c\ub960\ub968\ub969" ], [ "b841", "\ud1d0", 7, "\ud1d9", 17 ], [ "b861", "\ud1eb", 8, "\ud1f5\ud1f6\ud1f7\ud1f9", 13 ], [ "b881", "\ud208\ud20a", 5, "\ud211", 24, "\ub96b\ub96d\ub974\ub975\ub978\ub97c\ub984\ub985\ub987\ub989\ub98a\ub98d\ub98e\ub9ac\ub9ad\ub9b0\ub9b4\ub9bc\ub9bd\ub9bf\ub9c1\ub9c8\ub9c9\ub9cc\ub9ce", 4, "\ub9d8\ub9d9\ub9db\ub9dd\ub9de\ub9e1\ub9e3\ub9e4\ub9e5\ub9e8\ub9ec\ub9f4\ub9f5\ub9f7\ub9f8\ub9f9\ub9fa\uba00\uba01\uba08\uba15\uba38\uba39\uba3c\uba40\uba42\uba48\uba49\uba4b\uba4d\uba4e\uba53\uba54\uba55\uba58\uba5c\uba64\uba65\uba67\uba68\uba69\uba70\uba71\uba74\uba78\uba83\uba84\uba85\uba87\uba8c\ubaa8\ubaa9\ubaab\ubaac\ubab0\ubab2\ubab8\ubab9\ubabb\ubabd\ubac4\ubac8\ubad8\ubad9\ubafc" ], [ "b941", "\ud22a\ud22b\ud22e\ud22f\ud231\ud232\ud233\ud235", 6, "\ud23e\ud240\ud242", 5, "\ud249\ud24a\ud24b\ud24c" ], [ "b961", "\ud24d", 14, "\ud25d", 6, "\ud265\ud266\ud267\ud268" ], [ "b981", "\ud269", 22, "\ud282\ud283\ud285\ud286\ud287\ud289\ud28a\ud28b\ud28c\ubb00\ubb04\ubb0d\ubb0f\ubb11\ubb18\ubb1c\ubb20\ubb29\ubb2b\ubb34\ubb35\ubb36\ubb38\ubb3b\ubb3c\ubb3d\ubb3e\ubb44\ubb45\ubb47\ubb49\ubb4d\ubb4f\ubb50\ubb54\ubb58\ubb61\ubb63\ubb6c\ubb88\ubb8c\ubb90\ubba4\ubba8\ubbac\ubbb4\ubbb7\ubbc0\ubbc4\ubbc8\ubbd0\ubbd3\ubbf8\ubbf9\ubbfc\ubbff\ubc00\ubc02\ubc08\ubc09\ubc0b\ubc0c\ubc0d\ubc0f\ubc11\ubc14", 4, "\ubc1b", 4, "\ubc24\ubc25\ubc27\ubc29\ubc2d\ubc30\ubc31\ubc34\ubc38\ubc40\ubc41\ubc43\ubc44\ubc45\ubc49\ubc4c\ubc4d\ubc50\ubc5d\ubc84\ubc85\ubc88\ubc8b\ubc8c\ubc8e\ubc94\ubc95\ubc97" ], [ "ba41", "\ud28d\ud28e\ud28f\ud292\ud293\ud294\ud296", 5, "\ud29d\ud29e\ud29f\ud2a1\ud2a2\ud2a3\ud2a5", 6, "\ud2ad" ], [ "ba61", "\ud2ae\ud2af\ud2b0\ud2b2", 5, "\ud2ba\ud2bb\ud2bd\ud2be\ud2c1\ud2c3", 4, "\ud2ca\ud2cc", 5 ], [ "ba81", "\ud2d2\ud2d3\ud2d5\ud2d6\ud2d7\ud2d9\ud2da\ud2db\ud2dd", 6, "\ud2e6", 9, "\ud2f2\ud2f3\ud2f5\ud2f6\ud2f7\ud2f9\ud2fa\ubc99\ubc9a\ubca0\ubca1\ubca4\ubca7\ubca8\ubcb0\ubcb1\ubcb3\ubcb4\ubcb5\ubcbc\ubcbd\ubcc0\ubcc4\ubccd\ubccf\ubcd0\ubcd1\ubcd5\ubcd8\ubcdc\ubcf4\ubcf5\ubcf6\ubcf8\ubcfc\ubd04\ubd05\ubd07\ubd09\ubd10\ubd14\ubd24\ubd2c\ubd40\ubd48\ubd49\ubd4c\ubd50\ubd58\ubd59\ubd64\ubd68\ubd80\ubd81\ubd84\ubd87\ubd88\ubd89\ubd8a\ubd90\ubd91\ubd93\ubd95\ubd99\ubd9a\ubd9c\ubda4\ubdb0\ubdb8\ubdd4\ubdd5\ubdd8\ubddc\ubde9\ubdf0\ubdf4\ubdf8\ube00\ube03\ube05\ube0c\ube0d\ube10\ube14\ube1c\ube1d\ube1f\ube44\ube45\ube48\ube4c\ube4e\ube54\ube55\ube57\ube59\ube5a\ube5b\ube60\ube61\ube64" ], [ "bb41", "\ud2fb", 4, "\ud302\ud304\ud306", 5, "\ud30f\ud311\ud312\ud313\ud315\ud317", 4, "\ud31e\ud322\ud323" ], [ "bb61", "\ud324\ud326\ud327\ud32a\ud32b\ud32d\ud32e\ud32f\ud331", 6, "\ud33a\ud33e", 5, "\ud346\ud347\ud348\ud349" ], [ "bb81", "\ud34a", 31, "\ube68\ube6a\ube70\ube71\ube73\ube74\ube75\ube7b\ube7c\ube7d\ube80\ube84\ube8c\ube8d\ube8f\ube90\ube91\ube98\ube99\ubea8\ubed0\ubed1\ubed4\ubed7\ubed8\ubee0\ubee3\ubee4\ubee5\ubeec\ubf01\ubf08\ubf09\ubf18\ubf19\ubf1b\ubf1c\ubf1d\ubf40\ubf41\ubf44\ubf48\ubf50\ubf51\ubf55\ubf94\ubfb0\ubfc5\ubfcc\ubfcd\ubfd0\ubfd4\ubfdc\ubfdf\ubfe1\uc03c\uc051\uc058\uc05c\uc060\uc068\uc069\uc090\uc091\uc094\uc098\uc0a0\uc0a1\uc0a3\uc0a5\uc0ac\uc0ad\uc0af\uc0b0\uc0b3\uc0b4\uc0b5\uc0b6\uc0bc\uc0bd\uc0bf\uc0c0\uc0c1\uc0c5\uc0c8\uc0c9\uc0cc\uc0d0\uc0d8\uc0d9\uc0db\uc0dc\uc0dd\uc0e4" ], [ "bc41", "\ud36a", 17, "\ud37e\ud37f\ud381\ud382\ud383\ud385\ud386\ud387" ], [ "bc61", "\ud388\ud389\ud38a\ud38b\ud38e\ud392", 5, "\ud39a\ud39b\ud39d\ud39e\ud39f\ud3a1", 6, "\ud3aa\ud3ac\ud3ae" ], [ "bc81", "\ud3af", 4, "\ud3b5\ud3b6\ud3b7\ud3b9\ud3ba\ud3bb\ud3bd", 6, "\ud3c6\ud3c7\ud3ca", 5, "\ud3d1", 5, "\uc0e5\uc0e8\uc0ec\uc0f4\uc0f5\uc0f7\uc0f9\uc100\uc104\uc108\uc110\uc115\uc11c", 4, "\uc123\uc124\uc126\uc127\uc12c\uc12d\uc12f\uc130\uc131\uc136\uc138\uc139\uc13c\uc140\uc148\uc149\uc14b\uc14c\uc14d\uc154\uc155\uc158\uc15c\uc164\uc165\uc167\uc168\uc169\uc170\uc174\uc178\uc185\uc18c\uc18d\uc18e\uc190\uc194\uc196\uc19c\uc19d\uc19f\uc1a1\uc1a5\uc1a8\uc1a9\uc1ac\uc1b0\uc1bd\uc1c4\uc1c8\uc1cc\uc1d4\uc1d7\uc1d8\uc1e0\uc1e4\uc1e8\uc1f0\uc1f1\uc1f3\uc1fc\uc1fd\uc200\uc204\uc20c\uc20d\uc20f\uc211\uc218\uc219\uc21c\uc21f\uc220\uc228\uc229\uc22b\uc22d" ], [ "bd41", "\ud3d7\ud3d9", 7, "\ud3e2\ud3e4", 7, "\ud3ee\ud3ef\ud3f1\ud3f2\ud3f3\ud3f5\ud3f6\ud3f7" ], [ "bd61", "\ud3f8\ud3f9\ud3fa\ud3fb\ud3fe\ud400\ud402", 5, "\ud409", 13 ], [ "bd81", "\ud417", 5, "\ud41e", 25, "\uc22f\uc231\uc232\uc234\uc248\uc250\uc251\uc254\uc258\uc260\uc265\uc26c\uc26d\uc270\uc274\uc27c\uc27d\uc27f\uc281\uc288\uc289\uc290\uc298\uc29b\uc29d\uc2a4\uc2a5\uc2a8\uc2ac\uc2ad\uc2b4\uc2b5\uc2b7\uc2b9\uc2dc\uc2dd\uc2e0\uc2e3\uc2e4\uc2eb\uc2ec\uc2ed\uc2ef\uc2f1\uc2f6\uc2f8\uc2f9\uc2fb\uc2fc\uc300\uc308\uc309\uc30c\uc30d\uc313\uc314\uc315\uc318\uc31c\uc324\uc325\uc328\uc329\uc345\uc368\uc369\uc36c\uc370\uc372\uc378\uc379\uc37c\uc37d\uc384\uc388\uc38c\uc3c0\uc3d8\uc3d9\uc3dc\uc3df\uc3e0\uc3e2\uc3e8\uc3e9\uc3ed\uc3f4\uc3f5\uc3f8\uc408\uc410\uc424\uc42c\uc430" ], [ "be41", "\ud438", 7, "\ud441\ud442\ud443\ud445", 14 ], [ "be61", "\ud454", 7, "\ud45d\ud45e\ud45f\ud461\ud462\ud463\ud465", 7, "\ud46e\ud470\ud471\ud472" ], [ "be81", "\ud473", 4, "\ud47a\ud47b\ud47d\ud47e\ud481\ud483", 4, "\ud48a\ud48c\ud48e", 5, "\ud495", 8, "\uc434\uc43c\uc43d\uc448\uc464\uc465\uc468\uc46c\uc474\uc475\uc479\uc480\uc494\uc49c\uc4b8\uc4bc\uc4e9\uc4f0\uc4f1\uc4f4\uc4f8\uc4fa\uc4ff\uc500\uc501\uc50c\uc510\uc514\uc51c\uc528\uc529\uc52c\uc530\uc538\uc539\uc53b\uc53d\uc544\uc545\uc548\uc549\uc54a\uc54c\uc54d\uc54e\uc553\uc554\uc555\uc557\uc558\uc559\uc55d\uc55e\uc560\uc561\uc564\uc568\uc570\uc571\uc573\uc574\uc575\uc57c\uc57d\uc580\uc584\uc587\uc58c\uc58d\uc58f\uc591\uc595\uc597\uc598\uc59c\uc5a0\uc5a9\uc5b4\uc5b5\uc5b8\uc5b9\uc5bb\uc5bc\uc5bd\uc5be\uc5c4", 6, "\uc5cc\uc5ce" ], [ "bf41", "\ud49e", 10, "\ud4aa", 14 ], [ "bf61", "\ud4b9", 18, "\ud4cd\ud4ce\ud4cf\ud4d1\ud4d2\ud4d3\ud4d5" ], [ "bf81", "\ud4d6", 5, "\ud4dd\ud4de\ud4e0", 7, "\ud4e9\ud4ea\ud4eb\ud4ed\ud4ee\ud4ef\ud4f1", 6, "\ud4f9\ud4fa\ud4fc\uc5d0\uc5d1\uc5d4\uc5d8\uc5e0\uc5e1\uc5e3\uc5e5\uc5ec\uc5ed\uc5ee\uc5f0\uc5f4\uc5f6\uc5f7\uc5fc", 5, "\uc605\uc606\uc607\uc608\uc60c\uc610\uc618\uc619\uc61b\uc61c\uc624\uc625\uc628\uc62c\uc62d\uc62e\uc630\uc633\uc634\uc635\uc637\uc639\uc63b\uc640\uc641\uc644\uc648\uc650\uc651\uc653\uc654\uc655\uc65c\uc65d\uc660\uc66c\uc66f\uc671\uc678\uc679\uc67c\uc680\uc688\uc689\uc68b\uc68d\uc694\uc695\uc698\uc69c\uc6a4\uc6a5\uc6a7\uc6a9\uc6b0\uc6b1\uc6b4\uc6b8\uc6b9\uc6ba\uc6c0\uc6c1\uc6c3\uc6c5\uc6cc\uc6cd\uc6d0\uc6d4\uc6dc\uc6dd\uc6e0\uc6e1\uc6e8" ], [ "c041", "\ud4fe", 5, "\ud505\ud506\ud507\ud509\ud50a\ud50b\ud50d", 6, "\ud516\ud518", 5 ], [ "c061", "\ud51e", 25 ], [ "c081", "\ud538\ud539\ud53a\ud53b\ud53e\ud53f\ud541\ud542\ud543\ud545", 6, "\ud54e\ud550\ud552", 5, "\ud55a\ud55b\ud55d\ud55e\ud55f\ud561\ud562\ud563\uc6e9\uc6ec\uc6f0\uc6f8\uc6f9\uc6fd\uc704\uc705\uc708\uc70c\uc714\uc715\uc717\uc719\uc720\uc721\uc724\uc728\uc730\uc731\uc733\uc735\uc737\uc73c\uc73d\uc740\uc744\uc74a\uc74c\uc74d\uc74f\uc751", 7, "\uc75c\uc760\uc768\uc76b\uc774\uc775\uc778\uc77c\uc77d\uc77e\uc783\uc784\uc785\uc787\uc788\uc789\uc78a\uc78e\uc790\uc791\uc794\uc796\uc797\uc798\uc79a\uc7a0\uc7a1\uc7a3\uc7a4\uc7a5\uc7a6\uc7ac\uc7ad\uc7b0\uc7b4\uc7bc\uc7bd\uc7bf\uc7c0\uc7c1\uc7c8\uc7c9\uc7cc\uc7ce\uc7d0\uc7d8\uc7dd\uc7e4\uc7e8\uc7ec\uc800\uc801\uc804\uc808\uc80a" ], [ "c141", "\ud564\ud566\ud567\ud56a\ud56c\ud56e", 5, "\ud576\ud577\ud579\ud57a\ud57b\ud57d", 6, "\ud586\ud58a\ud58b" ], [ "c161", "\ud58c\ud58d\ud58e\ud58f\ud591", 19, "\ud5a6\ud5a7" ], [ "c181", "\ud5a8", 31, "\uc810\uc811\uc813\uc815\uc816\uc81c\uc81d\uc820\uc824\uc82c\uc82d\uc82f\uc831\uc838\uc83c\uc840\uc848\uc849\uc84c\uc84d\uc854\uc870\uc871\uc874\uc878\uc87a\uc880\uc881\uc883\uc885\uc886\uc887\uc88b\uc88c\uc88d\uc894\uc89d\uc89f\uc8a1\uc8a8\uc8bc\uc8bd\uc8c4\uc8c8\uc8cc\uc8d4\uc8d5\uc8d7\uc8d9\uc8e0\uc8e1\uc8e4\uc8f5\uc8fc\uc8fd\uc900\uc904\uc905\uc906\uc90c\uc90d\uc90f\uc911\uc918\uc92c\uc934\uc950\uc951\uc954\uc958\uc960\uc961\uc963\uc96c\uc970\uc974\uc97c\uc988\uc989\uc98c\uc990\uc998\uc999\uc99b\uc99d\uc9c0\uc9c1\uc9c4\uc9c7\uc9c8\uc9ca\uc9d0\uc9d1\uc9d3" ], [ "c241", "\ud5ca\ud5cb\ud5cd\ud5ce\ud5cf\ud5d1\ud5d3", 4, "\ud5da\ud5dc\ud5de", 5, "\ud5e6\ud5e7\ud5e9\ud5ea\ud5eb\ud5ed\ud5ee" ], [ "c261", "\ud5ef", 4, "\ud5f6\ud5f8\ud5fa", 5, "\ud602\ud603\ud605\ud606\ud607\ud609", 6, "\ud612" ], [ "c281", "\ud616", 5, "\ud61d\ud61e\ud61f\ud621\ud622\ud623\ud625", 7, "\ud62e", 9, "\ud63a\ud63b\uc9d5\uc9d6\uc9d9\uc9da\uc9dc\uc9dd\uc9e0\uc9e2\uc9e4\uc9e7\uc9ec\uc9ed\uc9ef\uc9f0\uc9f1\uc9f8\uc9f9\uc9fc\uca00\uca08\uca09\uca0b\uca0c\uca0d\uca14\uca18\uca29\uca4c\uca4d\uca50\uca54\uca5c\uca5d\uca5f\uca60\uca61\uca68\uca7d\uca84\uca98\ucabc\ucabd\ucac0\ucac4\ucacc\ucacd\ucacf\ucad1\ucad3\ucad8\ucad9\ucae0\ucaec\ucaf4\ucb08\ucb10\ucb14\ucb18\ucb20\ucb21\ucb41\ucb48\ucb49\ucb4c\ucb50\ucb58\ucb59\ucb5d\ucb64\ucb78\ucb79\ucb9c\ucbb8\ucbd4\ucbe4\ucbe7\ucbe9\ucc0c\ucc0d\ucc10\ucc14\ucc1c\ucc1d\ucc21\ucc22\ucc27\ucc28\ucc29\ucc2c\ucc2e\ucc30\ucc38\ucc39\ucc3b" ], [ "c341", "\ud63d\ud63e\ud63f\ud641\ud642\ud643\ud644\ud646\ud647\ud64a\ud64c\ud64e\ud64f\ud650\ud652\ud653\ud656\ud657\ud659\ud65a\ud65b\ud65d", 4 ], [ "c361", "\ud662", 4, "\ud668\ud66a", 5, "\ud672\ud673\ud675", 11 ], [ "c381", "\ud681\ud682\ud684\ud686", 5, "\ud68e\ud68f\ud691\ud692\ud693\ud695", 7, "\ud69e\ud6a0\ud6a2", 5, "\ud6a9\ud6aa\ucc3c\ucc3d\ucc3e\ucc44\ucc45\ucc48\ucc4c\ucc54\ucc55\ucc57\ucc58\ucc59\ucc60\ucc64\ucc66\ucc68\ucc70\ucc75\ucc98\ucc99\ucc9c\ucca0\ucca8\ucca9\uccab\uccac\uccad\uccb4\uccb5\uccb8\uccbc\uccc4\uccc5\uccc7\uccc9\uccd0\uccd4\ucce4\uccec\uccf0\ucd01\ucd08\ucd09\ucd0c\ucd10\ucd18\ucd19\ucd1b\ucd1d\ucd24\ucd28\ucd2c\ucd39\ucd5c\ucd60\ucd64\ucd6c\ucd6d\ucd6f\ucd71\ucd78\ucd88\ucd94\ucd95\ucd98\ucd9c\ucda4\ucda5\ucda7\ucda9\ucdb0\ucdc4\ucdcc\ucdd0\ucde8\ucdec\ucdf0\ucdf8\ucdf9\ucdfb\ucdfd\uce04\uce08\uce0c\uce14\uce19\uce20\uce21\uce24\uce28\uce30\uce31\uce33\uce35" ], [ "c441", "\ud6ab\ud6ad\ud6ae\ud6af\ud6b1", 7, "\ud6ba\ud6bc", 7, "\ud6c6\ud6c7\ud6c9\ud6ca\ud6cb" ], [ "c461", "\ud6cd\ud6ce\ud6cf\ud6d0\ud6d2\ud6d3\ud6d5\ud6d6\ud6d8\ud6da", 5, "\ud6e1\ud6e2\ud6e3\ud6e5\ud6e6\ud6e7\ud6e9", 4 ], [ "c481", "\ud6ee\ud6ef\ud6f1\ud6f2\ud6f3\ud6f4\ud6f6", 5, "\ud6fe\ud6ff\ud701\ud702\ud703\ud705", 11, "\ud712\ud713\ud714\uce58\uce59\uce5c\uce5f\uce60\uce61\uce68\uce69\uce6b\uce6d\uce74\uce75\uce78\uce7c\uce84\uce85\uce87\uce89\uce90\uce91\uce94\uce98\ucea0\ucea1\ucea3\ucea4\ucea5\uceac\ucead\ucec1\ucee4\ucee5\ucee8\uceeb\uceec\ucef4\ucef5\ucef7\ucef8\ucef9\ucf00\ucf01\ucf04\ucf08\ucf10\ucf11\ucf13\ucf15\ucf1c\ucf20\ucf24\ucf2c\ucf2d\ucf2f\ucf30\ucf31\ucf38\ucf54\ucf55\ucf58\ucf5c\ucf64\ucf65\ucf67\ucf69\ucf70\ucf71\ucf74\ucf78\ucf80\ucf85\ucf8c\ucfa1\ucfa8\ucfb0\ucfc4\ucfe0\ucfe1\ucfe4\ucfe8\ucff0\ucff1\ucff3\ucff5\ucffc\ud000\ud004\ud011\ud018\ud02d\ud034\ud035\ud038\ud03c" ], [ "c541", "\ud715\ud716\ud717\ud71a\ud71b\ud71d\ud71e\ud71f\ud721", 6, "\ud72a\ud72c\ud72e", 5, "\ud736\ud737\ud739" ], [ "c561", "\ud73a\ud73b\ud73d", 6, "\ud745\ud746\ud748\ud74a", 5, "\ud752\ud753\ud755\ud75a", 4 ], [ "c581", "\ud75f\ud762\ud764\ud766\ud767\ud768\ud76a\ud76b\ud76d\ud76e\ud76f\ud771\ud772\ud773\ud775", 6, "\ud77e\ud77f\ud780\ud782", 5, "\ud78a\ud78b\ud044\ud045\ud047\ud049\ud050\ud054\ud058\ud060\ud06c\ud06d\ud070\ud074\ud07c\ud07d\ud081\ud0a4\ud0a5\ud0a8\ud0ac\ud0b4\ud0b5\ud0b7\ud0b9\ud0c0\ud0c1\ud0c4\ud0c8\ud0c9\ud0d0\ud0d1\ud0d3\ud0d4\ud0d5\ud0dc\ud0dd\ud0e0\ud0e4\ud0ec\ud0ed\ud0ef\ud0f0\ud0f1\ud0f8\ud10d\ud130\ud131\ud134\ud138\ud13a\ud140\ud141\ud143\ud144\ud145\ud14c\ud14d\ud150\ud154\ud15c\ud15d\ud15f\ud161\ud168\ud16c\ud17c\ud184\ud188\ud1a0\ud1a1\ud1a4\ud1a8\ud1b0\ud1b1\ud1b3\ud1b5\ud1ba\ud1bc\ud1c0\ud1d8\ud1f4\ud1f8\ud207\ud209\ud210\ud22c\ud22d\ud230\ud234\ud23c\ud23d\ud23f\ud241\ud248\ud25c" ], [ "c641", "\ud78d\ud78e\ud78f\ud791", 6, "\ud79a\ud79c\ud79e", 5 ], [ "c6a1", "\ud264\ud280\ud281\ud284\ud288\ud290\ud291\ud295\ud29c\ud2a0\ud2a4\ud2ac\ud2b1\ud2b8\ud2b9\ud2bc\ud2bf\ud2c0\ud2c2\ud2c8\ud2c9\ud2cb\ud2d4\ud2d8\ud2dc\ud2e4\ud2e5\ud2f0\ud2f1\ud2f4\ud2f8\ud300\ud301\ud303\ud305\ud30c\ud30d\ud30e\ud310\ud314\ud316\ud31c\ud31d\ud31f\ud320\ud321\ud325\ud328\ud329\ud32c\ud330\ud338\ud339\ud33b\ud33c\ud33d\ud344\ud345\ud37c\ud37d\ud380\ud384\ud38c\ud38d\ud38f\ud390\ud391\ud398\ud399\ud39c\ud3a0\ud3a8\ud3a9\ud3ab\ud3ad\ud3b4\ud3b8\ud3bc\ud3c4\ud3c5\ud3c8\ud3c9\ud3d0\ud3d8\ud3e1\ud3e3\ud3ec\ud3ed\ud3f0\ud3f4\ud3fc\ud3fd\ud3ff\ud401" ], [ "c7a1", "\ud408\ud41d\ud440\ud444\ud45c\ud460\ud464\ud46d\ud46f\ud478\ud479\ud47c\ud47f\ud480\ud482\ud488\ud489\ud48b\ud48d\ud494\ud4a9\ud4cc\ud4d0\ud4d4\ud4dc\ud4df\ud4e8\ud4ec\ud4f0\ud4f8\ud4fb\ud4fd\ud504\ud508\ud50c\ud514\ud515\ud517\ud53c\ud53d\ud540\ud544\ud54c\ud54d\ud54f\ud551\ud558\ud559\ud55c\ud560\ud565\ud568\ud569\ud56b\ud56d\ud574\ud575\ud578\ud57c\ud584\ud585\ud587\ud588\ud589\ud590\ud5a5\ud5c8\ud5c9\ud5cc\ud5d0\ud5d2\ud5d8\ud5d9\ud5db\ud5dd\ud5e4\ud5e5\ud5e8\ud5ec\ud5f4\ud5f5\ud5f7\ud5f9\ud600\ud601\ud604\ud608\ud610\ud611\ud613\ud614\ud615\ud61c\ud620" ], [ "c8a1", "\ud624\ud62d\ud638\ud639\ud63c\ud640\ud645\ud648\ud649\ud64b\ud64d\ud651\ud654\ud655\ud658\ud65c\ud667\ud669\ud670\ud671\ud674\ud683\ud685\ud68c\ud68d\ud690\ud694\ud69d\ud69f\ud6a1\ud6a8\ud6ac\ud6b0\ud6b9\ud6bb\ud6c4\ud6c5\ud6c8\ud6cc\ud6d1\ud6d4\ud6d7\ud6d9\ud6e0\ud6e4\ud6e8\ud6f0\ud6f5\ud6fc\ud6fd\ud700\ud704\ud711\ud718\ud719\ud71c\ud720\ud728\ud729\ud72b\ud72d\ud734\ud735\ud738\ud73c\ud744\ud747\ud749\ud750\ud751\ud754\ud756\ud757\ud758\ud759\ud760\ud761\ud763\ud765\ud769\ud76c\ud770\ud774\ud77c\ud77d\ud781\ud788\ud789\ud78c\ud790\ud798\ud799\ud79b\ud79d" ], [ "caa1", "\u4f3d\u4f73\u5047\u50f9\u52a0\u53ef\u5475\u54e5\u5609\u5ac1\u5bb6\u6687\u67b6\u67b7\u67ef\u6b4c\u73c2\u75c2\u7a3c\u82db\u8304\u8857\u8888\u8a36\u8cc8\u8dcf\u8efb\u8fe6\u99d5\u523b\u5374\u5404\u606a\u6164\u6bbc\u73cf\u811a\u89ba\u89d2\u95a3\u4f83\u520a\u58be\u5978\u59e6\u5e72\u5e79\u61c7\u63c0\u6746\u67ec\u687f\u6f97\u764e\u770b\u78f5\u7a08\u7aff\u7c21\u809d\u826e\u8271\u8aeb\u9593\u4e6b\u559d\u66f7\u6e34\u78a3\u7aed\u845b\u8910\u874e\u97a8\u52d8\u574e\u582a\u5d4c\u611f\u61be\u6221\u6562\u67d1\u6a44\u6e1b\u7518\u75b3\u76e3\u77b0\u7d3a\u90af\u9451\u9452\u9f95" ], [ "cba1", "\u5323\u5cac\u7532\u80db\u9240\u9598\u525b\u5808\u59dc\u5ca1\u5d17\u5eb7\u5f3a\u5f4a\u6177\u6c5f\u757a\u7586\u7ce0\u7d73\u7db1\u7f8c\u8154\u8221\u8591\u8941\u8b1b\u92fc\u964d\u9c47\u4ecb\u4ef7\u500b\u51f1\u584f\u6137\u613e\u6168\u6539\u69ea\u6f11\u75a5\u7686\u76d6\u7b87\u82a5\u84cb\uf900\u93a7\u958b\u5580\u5ba2\u5751\uf901\u7cb3\u7fb9\u91b5\u5028\u53bb\u5c45\u5de8\u62d2\u636e\u64da\u64e7\u6e20\u70ac\u795b\u8ddd\u8e1e\uf902\u907d\u9245\u92f8\u4e7e\u4ef6\u5065\u5dfe\u5efa\u6106\u6957\u8171\u8654\u8e47\u9375\u9a2b\u4e5e\u5091\u6770\u6840\u5109\u528d\u5292\u6aa2" ], [ "cca1", "\u77bc\u9210\u9ed4\u52ab\u602f\u8ff2\u5048\u61a9\u63ed\u64ca\u683c\u6a84\u6fc0\u8188\u89a1\u9694\u5805\u727d\u72ac\u7504\u7d79\u7e6d\u80a9\u898b\u8b74\u9063\u9d51\u6289\u6c7a\u6f54\u7d50\u7f3a\u8a23\u517c\u614a\u7b9d\u8b19\u9257\u938c\u4eac\u4fd3\u501e\u50be\u5106\u52c1\u52cd\u537f\u5770\u5883\u5e9a\u5f91\u6176\u61ac\u64ce\u656c\u666f\u66bb\u66f4\u6897\u6d87\u7085\u70f1\u749f\u74a5\u74ca\u75d9\u786c\u78ec\u7adf\u7af6\u7d45\u7d93\u8015\u803f\u811b\u8396\u8b66\u8f15\u9015\u93e1\u9803\u9838\u9a5a\u9be8\u4fc2\u5553\u583a\u5951\u5b63\u5c46\u60b8\u6212\u6842\u68b0" ], [ "cda1", "\u68e8\u6eaa\u754c\u7678\u78ce\u7a3d\u7cfb\u7e6b\u7e7c\u8a08\u8aa1\u8c3f\u968e\u9dc4\u53e4\u53e9\u544a\u5471\u56fa\u59d1\u5b64\u5c3b\u5eab\u62f7\u6537\u6545\u6572\u66a0\u67af\u69c1\u6cbd\u75fc\u7690\u777e\u7a3f\u7f94\u8003\u80a1\u818f\u82e6\u82fd\u83f0\u85c1\u8831\u88b4\u8aa5\uf903\u8f9c\u932e\u96c7\u9867\u9ad8\u9f13\u54ed\u659b\u66f2\u688f\u7a40\u8c37\u9d60\u56f0\u5764\u5d11\u6606\u68b1\u68cd\u6efe\u7428\u889e\u9be4\u6c68\uf904\u9aa8\u4f9b\u516c\u5171\u529f\u5b54\u5de5\u6050\u606d\u62f1\u63a7\u653b\u73d9\u7a7a\u86a3\u8ca2\u978f\u4e32\u5be1\u6208\u679c\u74dc" ], [ "cea1", "\u79d1\u83d3\u8a87\u8ab2\u8de8\u904e\u934b\u9846\u5ed3\u69e8\u85ff\u90ed\uf905\u51a0\u5b98\u5bec\u6163\u68fa\u6b3e\u704c\u742f\u74d8\u7ba1\u7f50\u83c5\u89c0\u8cab\u95dc\u9928\u522e\u605d\u62ec\u9002\u4f8a\u5149\u5321\u58d9\u5ee3\u66e0\u6d38\u709a\u72c2\u73d6\u7b50\u80f1\u945b\u5366\u639b\u7f6b\u4e56\u5080\u584a\u58de\u602a\u6127\u62d0\u69d0\u9b41\u5b8f\u7d18\u80b1\u8f5f\u4ea4\u50d1\u54ac\u55ac\u5b0c\u5da0\u5de7\u652a\u654e\u6821\u6a4b\u72e1\u768e\u77ef\u7d5e\u7ff9\u81a0\u854e\u86df\u8f03\u8f4e\u90ca\u9903\u9a55\u9bab\u4e18\u4e45\u4e5d\u4ec7\u4ff1\u5177\u52fe" ], [ "cfa1", "\u5340\u53e3\u53e5\u548e\u5614\u5775\u57a2\u5bc7\u5d87\u5ed0\u61fc\u62d8\u6551\u67b8\u67e9\u69cb\u6b50\u6bc6\u6bec\u6c42\u6e9d\u7078\u72d7\u7396\u7403\u77bf\u77e9\u7a76\u7d7f\u8009\u81fc\u8205\u820a\u82df\u8862\u8b33\u8cfc\u8ec0\u9011\u90b1\u9264\u92b6\u99d2\u9a45\u9ce9\u9dd7\u9f9c\u570b\u5c40\u83ca\u97a0\u97ab\u9eb4\u541b\u7a98\u7fa4\u88d9\u8ecd\u90e1\u5800\u5c48\u6398\u7a9f\u5bae\u5f13\u7a79\u7aae\u828e\u8eac\u5026\u5238\u52f8\u5377\u5708\u62f3\u6372\u6b0a\u6dc3\u7737\u53a5\u7357\u8568\u8e76\u95d5\u673a\u6ac3\u6f70\u8a6d\u8ecc\u994b\uf906\u6677\u6b78\u8cb4" ], [ "d0a1", "\u9b3c\uf907\u53eb\u572d\u594e\u63c6\u69fb\u73ea\u7845\u7aba\u7ac5\u7cfe\u8475\u898f\u8d73\u9035\u95a8\u52fb\u5747\u7547\u7b60\u83cc\u921e\uf908\u6a58\u514b\u524b\u5287\u621f\u68d8\u6975\u9699\u50c5\u52a4\u52e4\u61c3\u65a4\u6839\u69ff\u747e\u7b4b\u82b9\u83eb\u89b2\u8b39\u8fd1\u9949\uf909\u4eca\u5997\u64d2\u6611\u6a8e\u7434\u7981\u79bd\u82a9\u887e\u887f\u895f\uf90a\u9326\u4f0b\u53ca\u6025\u6271\u6c72\u7d1a\u7d66\u4e98\u5162\u77dc\u80af\u4f01\u4f0e\u5176\u5180\u55dc\u5668\u573b\u57fa\u57fc\u5914\u5947\u5993\u5bc4\u5c90\u5d0e\u5df1\u5e7e\u5fcc\u6280\u65d7\u65e3" ], [ "d1a1", "\u671e\u671f\u675e\u68cb\u68c4\u6a5f\u6b3a\u6c23\u6c7d\u6c82\u6dc7\u7398\u7426\u742a\u7482\u74a3\u7578\u757f\u7881\u78ef\u7941\u7947\u7948\u797a\u7b95\u7d00\u7dba\u7f88\u8006\u802d\u808c\u8a18\u8b4f\u8c48\u8d77\u9321\u9324\u98e2\u9951\u9a0e\u9a0f\u9a65\u9e92\u7dca\u4f76\u5409\u62ee\u6854\u91d1\u55ab\u513a\uf90b\uf90c\u5a1c\u61e6\uf90d\u62cf\u62ff\uf90e", 5, "\u90a3\uf914", 4, "\u8afe\uf919\uf91a\uf91b\uf91c\u6696\uf91d\u7156\uf91e\uf91f\u96e3\uf920\u634f\u637a\u5357\uf921\u678f\u6960\u6e73\uf922\u7537\uf923\uf924\uf925" ], [ "d2a1", "\u7d0d\uf926\uf927\u8872\u56ca\u5a18\uf928", 4, "\u4e43\uf92d\u5167\u5948\u67f0\u8010\uf92e\u5973\u5e74\u649a\u79ca\u5ff5\u606c\u62c8\u637b\u5be7\u5bd7\u52aa\uf92f\u5974\u5f29\u6012\uf930\uf931\uf932\u7459\uf933", 5, "\u99d1\uf939", 10, "\u6fc3\uf944\uf945\u81bf\u8fb2\u60f1\uf946\uf947\u8166\uf948\uf949\u5c3f\uf94a", 7, "\u5ae9\u8a25\u677b\u7d10\uf952", 5, "\u80fd\uf958\uf959\u5c3c\u6ce5\u533f\u6eba\u591a\u8336" ], [ "d3a1", "\u4e39\u4eb6\u4f46\u55ae\u5718\u58c7\u5f56\u65b7\u65e6\u6a80\u6bb5\u6e4d\u77ed\u7aef\u7c1e\u7dde\u86cb\u8892\u9132\u935b\u64bb\u6fbe\u737a\u75b8\u9054\u5556\u574d\u61ba\u64d4\u66c7\u6de1\u6e5b\u6f6d\u6fb9\u75f0\u8043\u81bd\u8541\u8983\u8ac7\u8b5a\u931f\u6c93\u7553\u7b54\u8e0f\u905d\u5510\u5802\u5858\u5e62\u6207\u649e\u68e0\u7576\u7cd6\u87b3\u9ee8\u4ee3\u5788\u576e\u5927\u5c0d\u5cb1\u5e36\u5f85\u6234\u64e1\u73b3\u81fa\u888b\u8cb8\u968a\u9edb\u5b85\u5fb7\u60b3\u5012\u5200\u5230\u5716\u5835\u5857\u5c0e\u5c60\u5cf6\u5d8b\u5ea6\u5f92\u60bc\u6311\u6389\u6417\u6843" ], [ "d4a1", "\u68f9\u6ac2\u6dd8\u6e21\u6ed4\u6fe4\u71fe\u76dc\u7779\u79b1\u7a3b\u8404\u89a9\u8ced\u8df3\u8e48\u9003\u9014\u9053\u90fd\u934d\u9676\u97dc\u6bd2\u7006\u7258\u72a2\u7368\u7763\u79bf\u7be4\u7e9b\u8b80\u58a9\u60c7\u6566\u65fd\u66be\u6c8c\u711e\u71c9\u8c5a\u9813\u4e6d\u7a81\u4edd\u51ac\u51cd\u52d5\u540c\u61a7\u6771\u6850\u68df\u6d1e\u6f7c\u75bc\u77b3\u7ae5\u80f4\u8463\u9285\u515c\u6597\u675c\u6793\u75d8\u7ac7\u8373\uf95a\u8c46\u9017\u982d\u5c6f\u81c0\u829a\u9041\u906f\u920d\u5f97\u5d9d\u6a59\u71c8\u767b\u7b49\u85e4\u8b04\u9127\u9a30\u5587\u61f6\uf95b\u7669\u7f85" ], [ "d5a1", "\u863f\u87ba\u88f8\u908f\uf95c\u6d1b\u70d9\u73de\u7d61\u843d\uf95d\u916a\u99f1\uf95e\u4e82\u5375\u6b04\u6b12\u703e\u721b\u862d\u9e1e\u524c\u8fa3\u5d50\u64e5\u652c\u6b16\u6feb\u7c43\u7e9c\u85cd\u8964\u89bd\u62c9\u81d8\u881f\u5eca\u6717\u6d6a\u72fc\u7405\u746f\u8782\u90de\u4f86\u5d0d\u5fa0\u840a\u51b7\u63a0\u7565\u4eae\u5006\u5169\u51c9\u6881\u6a11\u7cae\u7cb1\u7ce7\u826f\u8ad2\u8f1b\u91cf\u4fb6\u5137\u52f5\u5442\u5eec\u616e\u623e\u65c5\u6ada\u6ffe\u792a\u85dc\u8823\u95ad\u9a62\u9a6a\u9e97\u9ece\u529b\u66c6\u6b77\u701d\u792b\u8f62\u9742\u6190\u6200\u6523\u6f23" ], [ "d6a1", "\u7149\u7489\u7df4\u806f\u84ee\u8f26\u9023\u934a\u51bd\u5217\u52a3\u6d0c\u70c8\u88c2\u5ec9\u6582\u6bae\u6fc2\u7c3e\u7375\u4ee4\u4f36\u56f9\uf95f\u5cba\u5dba\u601c\u73b2\u7b2d\u7f9a\u7fce\u8046\u901e\u9234\u96f6\u9748\u9818\u9f61\u4f8b\u6fa7\u79ae\u91b4\u96b7\u52de\uf960\u6488\u64c4\u6ad3\u6f5e\u7018\u7210\u76e7\u8001\u8606\u865c\u8def\u8f05\u9732\u9b6f\u9dfa\u9e75\u788c\u797f\u7da0\u83c9\u9304\u9e7f\u9e93\u8ad6\u58df\u5f04\u6727\u7027\u74cf\u7c60\u807e\u5121\u7028\u7262\u78ca\u8cc2\u8cda\u8cf4\u96f7\u4e86\u50da\u5bee\u5ed6\u6599\u71ce\u7642\u77ad\u804a\u84fc" ], [ "d7a1", "\u907c\u9b27\u9f8d\u58d8\u5a41\u5c62\u6a13\u6dda\u6f0f\u763b\u7d2f\u7e37\u851e\u8938\u93e4\u964b\u5289\u65d2\u67f3\u69b4\u6d41\u6e9c\u700f\u7409\u7460\u7559\u7624\u786b\u8b2c\u985e\u516d\u622e\u9678\u4f96\u502b\u5d19\u6dea\u7db8\u8f2a\u5f8b\u6144\u6817\uf961\u9686\u52d2\u808b\u51dc\u51cc\u695e\u7a1c\u7dbe\u83f1\u9675\u4fda\u5229\u5398\u540f\u550e\u5c65\u60a7\u674e\u68a8\u6d6c\u7281\u72f8\u7406\u7483\uf962\u75e2\u7c6c\u7f79\u7fb8\u8389\u88cf\u88e1\u91cc\u91d0\u96e2\u9bc9\u541d\u6f7e\u71d0\u7498\u85fa\u8eaa\u96a3\u9c57\u9e9f\u6797\u6dcb\u7433\u81e8\u9716\u782c" ], [ "d8a1", "\u7acb\u7b20\u7c92\u6469\u746a\u75f2\u78bc\u78e8\u99ac\u9b54\u9ebb\u5bde\u5e55\u6f20\u819c\u83ab\u9088\u4e07\u534d\u5a29\u5dd2\u5f4e\u6162\u633d\u6669\u66fc\u6eff\u6f2b\u7063\u779e\u842c\u8513\u883b\u8f13\u9945\u9c3b\u551c\u62b9\u672b\u6cab\u8309\u896a\u977a\u4ea1\u5984\u5fd8\u5fd9\u671b\u7db2\u7f54\u8292\u832b\u83bd\u8f1e\u9099\u57cb\u59b9\u5a92\u5bd0\u6627\u679a\u6885\u6bcf\u7164\u7f75\u8cb7\u8ce3\u9081\u9b45\u8108\u8c8a\u964c\u9a40\u9ea5\u5b5f\u6c13\u731b\u76f2\u76df\u840c\u51aa\u8993\u514d\u5195\u52c9\u68c9\u6c94\u7704\u7720\u7dbf\u7dec\u9762\u9eb5\u6ec5" ], [ "d9a1", "\u8511\u51a5\u540d\u547d\u660e\u669d\u6927\u6e9f\u76bf\u7791\u8317\u84c2\u879f\u9169\u9298\u9cf4\u8882\u4fae\u5192\u52df\u59c6\u5e3d\u6155\u6478\u6479\u66ae\u67d0\u6a21\u6bcd\u6bdb\u725f\u7261\u7441\u7738\u77db\u8017\u82bc\u8305\u8b00\u8b28\u8c8c\u6728\u6c90\u7267\u76ee\u7766\u7a46\u9da9\u6b7f\u6c92\u5922\u6726\u8499\u536f\u5893\u5999\u5edf\u63cf\u6634\u6773\u6e3a\u732b\u7ad7\u82d7\u9328\u52d9\u5deb\u61ae\u61cb\u620a\u62c7\u64ab\u65e0\u6959\u6b66\u6bcb\u7121\u73f7\u755d\u7e46\u821e\u8302\u856a\u8aa3\u8cbf\u9727\u9d61\u58a8\u9ed8\u5011\u520e\u543b\u554f\u6587" ], [ "daa1", "\u6c76\u7d0a\u7d0b\u805e\u868a\u9580\u96ef\u52ff\u6c95\u7269\u5473\u5a9a\u5c3e\u5d4b\u5f4c\u5fae\u672a\u68b6\u6963\u6e3c\u6e44\u7709\u7c73\u7f8e\u8587\u8b0e\u8ff7\u9761\u9ef4\u5cb7\u60b6\u610d\u61ab\u654f\u65fb\u65fc\u6c11\u6cef\u739f\u73c9\u7de1\u9594\u5bc6\u871c\u8b10\u525d\u535a\u62cd\u640f\u64b2\u6734\u6a38\u6cca\u73c0\u749e\u7b94\u7c95\u7e1b\u818a\u8236\u8584\u8feb\u96f9\u99c1\u4f34\u534a\u53cd\u53db\u62cc\u642c\u6500\u6591\u69c3\u6cee\u6f58\u73ed\u7554\u7622\u76e4\u76fc\u78d0\u78fb\u792c\u7d46\u822c\u87e0\u8fd4\u9812\u98ef\u52c3\u62d4\u64a5\u6e24\u6f51" ], [ "dba1", "\u767c\u8dcb\u91b1\u9262\u9aee\u9b43\u5023\u508d\u574a\u59a8\u5c28\u5e47\u5f77\u623f\u653e\u65b9\u65c1\u6609\u678b\u699c\u6ec2\u78c5\u7d21\u80aa\u8180\u822b\u82b3\u84a1\u868c\u8a2a\u8b17\u90a6\u9632\u9f90\u500d\u4ff3\uf963\u57f9\u5f98\u62dc\u6392\u676f\u6e43\u7119\u76c3\u80cc\u80da\u88f4\u88f5\u8919\u8ce0\u8f29\u914d\u966a\u4f2f\u4f70\u5e1b\u67cf\u6822\u767d\u767e\u9b44\u5e61\u6a0a\u7169\u71d4\u756a\uf964\u7e41\u8543\u85e9\u98dc\u4f10\u7b4f\u7f70\u95a5\u51e1\u5e06\u68b5\u6c3e\u6c4e\u6cdb\u72af\u7bc4\u8303\u6cd5\u743a\u50fb\u5288\u58c1\u64d8\u6a97\u74a7\u7656" ], [ "dca1", "\u78a7\u8617\u95e2\u9739\uf965\u535e\u5f01\u8b8a\u8fa8\u8faf\u908a\u5225\u77a5\u9c49\u9f08\u4e19\u5002\u5175\u5c5b\u5e77\u661e\u663a\u67c4\u68c5\u70b3\u7501\u75c5\u79c9\u7add\u8f27\u9920\u9a08\u4fdd\u5821\u5831\u5bf6\u666e\u6b65\u6d11\u6e7a\u6f7d\u73e4\u752b\u83e9\u88dc\u8913\u8b5c\u8f14\u4f0f\u50d5\u5310\u535c\u5b93\u5fa9\u670d\u798f\u8179\u832f\u8514\u8907\u8986\u8f39\u8f3b\u99a5\u9c12\u672c\u4e76\u4ff8\u5949\u5c01\u5cef\u5cf0\u6367\u68d2\u70fd\u71a2\u742b\u7e2b\u84ec\u8702\u9022\u92d2\u9cf3\u4e0d\u4ed8\u4fef\u5085\u5256\u526f\u5426\u5490\u57e0\u592b\u5a66" ], [ "dda1", "\u5b5a\u5b75\u5bcc\u5e9c\uf966\u6276\u6577\u65a7\u6d6e\u6ea5\u7236\u7b26\u7c3f\u7f36\u8150\u8151\u819a\u8240\u8299\u83a9\u8a03\u8ca0\u8ce6\u8cfb\u8d74\u8dba\u90e8\u91dc\u961c\u9644\u99d9\u9ce7\u5317\u5206\u5429\u5674\u58b3\u5954\u596e\u5fff\u61a4\u626e\u6610\u6c7e\u711a\u76c6\u7c89\u7cde\u7d1b\u82ac\u8cc1\u96f0\uf967\u4f5b\u5f17\u5f7f\u62c2\u5d29\u670b\u68da\u787c\u7e43\u9d6c\u4e15\u5099\u5315\u532a\u5351\u5983\u5a62\u5e87\u60b2\u618a\u6249\u6279\u6590\u6787\u69a7\u6bd4\u6bd6\u6bd7\u6bd8\u6cb8\uf968\u7435\u75fa\u7812\u7891\u79d5\u79d8\u7c83\u7dcb\u7fe1\u80a5" ], [ "dea1", "\u813e\u81c2\u83f2\u871a\u88e8\u8ab9\u8b6c\u8cbb\u9119\u975e\u98db\u9f3b\u56ac\u5b2a\u5f6c\u658c\u6ab3\u6baf\u6d5c\u6ff1\u7015\u725d\u73ad\u8ca7\u8cd3\u983b\u6191\u6c37\u8058\u9a01\u4e4d\u4e8b\u4e9b\u4ed5\u4f3a\u4f3c\u4f7f\u4fdf\u50ff\u53f2\u53f8\u5506\u55e3\u56db\u58eb\u5962\u5a11\u5beb\u5bfa\u5c04\u5df3\u5e2b\u5f99\u601d\u6368\u659c\u65af\u67f6\u67fb\u68ad\u6b7b\u6c99\u6cd7\u6e23\u7009\u7345\u7802\u793e\u7940\u7960\u79c1\u7be9\u7d17\u7d72\u8086\u820d\u838e\u84d1\u86c7\u88df\u8a50\u8a5e\u8b1d\u8cdc\u8d66\u8fad\u90aa\u98fc\u99df\u9e9d\u524a\uf969\u6714\uf96a" ], [ "dfa1", "\u5098\u522a\u5c71\u6563\u6c55\u73ca\u7523\u759d\u7b97\u849c\u9178\u9730\u4e77\u6492\u6bba\u715e\u85a9\u4e09\uf96b\u6749\u68ee\u6e17\u829f\u8518\u886b\u63f7\u6f81\u9212\u98af\u4e0a\u50b7\u50cf\u511f\u5546\u55aa\u5617\u5b40\u5c19\u5ce0\u5e38\u5e8a\u5ea0\u5ec2\u60f3\u6851\u6a61\u6e58\u723d\u7240\u72c0\u76f8\u7965\u7bb1\u7fd4\u88f3\u89f4\u8a73\u8c61\u8cde\u971c\u585e\u74bd\u8cfd\u55c7\uf96c\u7a61\u7d22\u8272\u7272\u751f\u7525\uf96d\u7b19\u5885\u58fb\u5dbc\u5e8f\u5eb6\u5f90\u6055\u6292\u637f\u654d\u6691\u66d9\u66f8\u6816\u68f2\u7280\u745e\u7b6e\u7d6e\u7dd6\u7f72" ], [ "e0a1", "\u80e5\u8212\u85af\u897f\u8a93\u901d\u92e4\u9ecd\u9f20\u5915\u596d\u5e2d\u60dc\u6614\u6673\u6790\u6c50\u6dc5\u6f5f\u77f3\u78a9\u84c6\u91cb\u932b\u4ed9\u50ca\u5148\u5584\u5b0b\u5ba3\u6247\u657e\u65cb\u6e32\u717d\u7401\u7444\u7487\u74bf\u766c\u79aa\u7dda\u7e55\u7fa8\u817a\u81b3\u8239\u861a\u87ec\u8a75\u8de3\u9078\u9291\u9425\u994d\u9bae\u5368\u5c51\u6954\u6cc4\u6d29\u6e2b\u820c\u859b\u893b\u8a2d\u8aaa\u96ea\u9f67\u5261\u66b9\u6bb2\u7e96\u87fe\u8d0d\u9583\u965d\u651d\u6d89\u71ee\uf96e\u57ce\u59d3\u5bac\u6027\u60fa\u6210\u661f\u665f\u7329\u73f9\u76db\u7701\u7b6c" ], [ "e1a1", "\u8056\u8072\u8165\u8aa0\u9192\u4e16\u52e2\u6b72\u6d17\u7a05\u7b39\u7d30\uf96f\u8cb0\u53ec\u562f\u5851\u5bb5\u5c0f\u5c11\u5de2\u6240\u6383\u6414\u662d\u68b3\u6cbc\u6d88\u6eaf\u701f\u70a4\u71d2\u7526\u758f\u758e\u7619\u7b11\u7be0\u7c2b\u7d20\u7d39\u852c\u856d\u8607\u8a34\u900d\u9061\u90b5\u92b7\u97f6\u9a37\u4fd7\u5c6c\u675f\u6d91\u7c9f\u7e8c\u8b16\u8d16\u901f\u5b6b\u5dfd\u640d\u84c0\u905c\u98e1\u7387\u5b8b\u609a\u677e\u6dde\u8a1f\u8aa6\u9001\u980c\u5237\uf970\u7051\u788e\u9396\u8870\u91d7\u4fee\u53d7\u55fd\u56da\u5782\u58fd\u5ac2\u5b88\u5cab\u5cc0\u5e25\u6101" ], [ "e2a1", "\u620d\u624b\u6388\u641c\u6536\u6578\u6a39\u6b8a\u6c34\u6d19\u6f31\u71e7\u72e9\u7378\u7407\u74b2\u7626\u7761\u79c0\u7a57\u7aea\u7cb9\u7d8f\u7dac\u7e61\u7f9e\u8129\u8331\u8490\u84da\u85ea\u8896\u8ab0\u8b90\u8f38\u9042\u9083\u916c\u9296\u92b9\u968b\u96a7\u96a8\u96d6\u9700\u9808\u9996\u9ad3\u9b1a\u53d4\u587e\u5919\u5b70\u5bbf\u6dd1\u6f5a\u719f\u7421\u74b9\u8085\u83fd\u5de1\u5f87\u5faa\u6042\u65ec\u6812\u696f\u6a53\u6b89\u6d35\u6df3\u73e3\u76fe\u77ac\u7b4d\u7d14\u8123\u821c\u8340\u84f4\u8563\u8a62\u8ac4\u9187\u931e\u9806\u99b4\u620c\u8853\u8ff0\u9265\u5d07\u5d27" ], [ "e3a1", "\u5d69\u745f\u819d\u8768\u6fd5\u62fe\u7fd2\u8936\u8972\u4e1e\u4e58\u50e7\u52dd\u5347\u627f\u6607\u7e69\u8805\u965e\u4f8d\u5319\u5636\u59cb\u5aa4\u5c38\u5c4e\u5c4d\u5e02\u5f11\u6043\u65bd\u662f\u6642\u67be\u67f4\u731c\u77e2\u793a\u7fc5\u8494\u84cd\u8996\u8a66\u8a69\u8ae1\u8c55\u8c7a\u57f4\u5bd4\u5f0f\u606f\u62ed\u690d\u6b96\u6e5c\u7184\u7bd2\u8755\u8b58\u8efe\u98df\u98fe\u4f38\u4f81\u4fe1\u547b\u5a20\u5bb8\u613c\u65b0\u6668\u71fc\u7533\u795e\u7d33\u814e\u81e3\u8398\u85aa\u85ce\u8703\u8a0a\u8eab\u8f9b\uf971\u8fc5\u5931\u5ba4\u5be6\u6089\u5be9\u5c0b\u5fc3\u6c81" ], [ "e4a1", "\uf972\u6df1\u700b\u751a\u82af\u8af6\u4ec0\u5341\uf973\u96d9\u6c0f\u4e9e\u4fc4\u5152\u555e\u5a25\u5ce8\u6211\u7259\u82bd\u83aa\u86fe\u8859\u8a1d\u963f\u96c5\u9913\u9d09\u9d5d\u580a\u5cb3\u5dbd\u5e44\u60e1\u6115\u63e1\u6a02\u6e25\u9102\u9354\u984e\u9c10\u9f77\u5b89\u5cb8\u6309\u664f\u6848\u773c\u96c1\u978d\u9854\u9b9f\u65a1\u8b01\u8ecb\u95bc\u5535\u5ca9\u5dd6\u5eb5\u6697\u764c\u83f4\u95c7\u58d3\u62bc\u72ce\u9d28\u4ef0\u592e\u600f\u663b\u6b83\u79e7\u9d26\u5393\u54c0\u57c3\u5d16\u611b\u66d6\u6daf\u788d\u827e\u9698\u9744\u5384\u627c\u6396\u6db2\u7e0a\u814b\u984d" ], [ "e5a1", "\u6afb\u7f4c\u9daf\u9e1a\u4e5f\u503b\u51b6\u591c\u60f9\u63f6\u6930\u723a\u8036\uf974\u91ce\u5f31\uf975\uf976\u7d04\u82e5\u846f\u84bb\u85e5\u8e8d\uf977\u4f6f\uf978\uf979\u58e4\u5b43\u6059\u63da\u6518\u656d\u6698\uf97a\u694a\u6a23\u6d0b\u7001\u716c\u75d2\u760d\u79b3\u7a70\uf97b\u7f8a\uf97c\u8944\uf97d\u8b93\u91c0\u967d\uf97e\u990a\u5704\u5fa1\u65bc\u6f01\u7600\u79a6\u8a9e\u99ad\u9b5a\u9f6c\u5104\u61b6\u6291\u6a8d\u81c6\u5043\u5830\u5f66\u7109\u8a00\u8afa\u5b7c\u8616\u4ffa\u513c\u56b4\u5944\u63a9\u6df9\u5daa\u696d\u5186\u4e88\u4f59\uf97f\uf980\uf981\u5982\uf982" ], [ "e6a1", "\uf983\u6b5f\u6c5d\uf984\u74b5\u7916\uf985\u8207\u8245\u8339\u8f3f\u8f5d\uf986\u9918\uf987\uf988\uf989\u4ea6\uf98a\u57df\u5f79\u6613\uf98b\uf98c\u75ab\u7e79\u8b6f\uf98d\u9006\u9a5b\u56a5\u5827\u59f8\u5a1f\u5bb4\uf98e\u5ef6\uf98f\uf990\u6350\u633b\uf991\u693d\u6c87\u6cbf\u6d8e\u6d93\u6df5\u6f14\uf992\u70df\u7136\u7159\uf993\u71c3\u71d5\uf994\u784f\u786f\uf995\u7b75\u7de3\uf996\u7e2f\uf997\u884d\u8edf\uf998\uf999\uf99a\u925b\uf99b\u9cf6\uf99c\uf99d\uf99e\u6085\u6d85\uf99f\u71b1\uf9a0\uf9a1\u95b1\u53ad\uf9a2\uf9a3\uf9a4\u67d3\uf9a5\u708e\u7130\u7430\u8276\u82d2" ], [ "e7a1", "\uf9a6\u95bb\u9ae5\u9e7d\u66c4\uf9a7\u71c1\u8449\uf9a8\uf9a9\u584b\uf9aa\uf9ab\u5db8\u5f71\uf9ac\u6620\u668e\u6979\u69ae\u6c38\u6cf3\u6e36\u6f41\u6fda\u701b\u702f\u7150\u71df\u7370\uf9ad\u745b\uf9ae\u74d4\u76c8\u7a4e\u7e93\uf9af\uf9b0\u82f1\u8a60\u8fce\uf9b1\u9348\uf9b2\u9719\uf9b3\uf9b4\u4e42\u502a\uf9b5\u5208\u53e1\u66f3\u6c6d\u6fca\u730a\u777f\u7a62\u82ae\u85dd\u8602\uf9b6\u88d4\u8a63\u8b7d\u8c6b\uf9b7\u92b3\uf9b8\u9713\u9810\u4e94\u4f0d\u4fc9\u50b2\u5348\u543e\u5433\u55da\u5862\u58ba\u5967\u5a1b\u5be4\u609f\uf9b9\u61ca\u6556\u65ff\u6664\u68a7\u6c5a\u6fb3" ], [ "e8a1", "\u70cf\u71ac\u7352\u7b7d\u8708\u8aa4\u9c32\u9f07\u5c4b\u6c83\u7344\u7389\u923a\u6eab\u7465\u761f\u7a69\u7e15\u860a\u5140\u58c5\u64c1\u74ee\u7515\u7670\u7fc1\u9095\u96cd\u9954\u6e26\u74e6\u7aa9\u7aaa\u81e5\u86d9\u8778\u8a1b\u5a49\u5b8c\u5b9b\u68a1\u6900\u6d63\u73a9\u7413\u742c\u7897\u7de9\u7feb\u8118\u8155\u839e\u8c4c\u962e\u9811\u66f0\u5f80\u65fa\u6789\u6c6a\u738b\u502d\u5a03\u6b6a\u77ee\u5916\u5d6c\u5dcd\u7325\u754f\uf9ba\uf9bb\u50e5\u51f9\u582f\u592d\u5996\u59da\u5be5\uf9bc\uf9bd\u5da2\u62d7\u6416\u6493\u64fe\uf9be\u66dc\uf9bf\u6a48\uf9c0\u71ff\u7464\uf9c1" ], [ "e9a1", "\u7a88\u7aaf\u7e47\u7e5e\u8000\u8170\uf9c2\u87ef\u8981\u8b20\u9059\uf9c3\u9080\u9952\u617e\u6b32\u6d74\u7e1f\u8925\u8fb1\u4fd1\u50ad\u5197\u52c7\u57c7\u5889\u5bb9\u5eb8\u6142\u6995\u6d8c\u6e67\u6eb6\u7194\u7462\u7528\u752c\u8073\u8338\u84c9\u8e0a\u9394\u93de\uf9c4\u4e8e\u4f51\u5076\u512a\u53c8\u53cb\u53f3\u5b87\u5bd3\u5c24\u611a\u6182\u65f4\u725b\u7397\u7440\u76c2\u7950\u7991\u79b9\u7d06\u7fbd\u828b\u85d5\u865e\u8fc2\u9047\u90f5\u91ea\u9685\u96e8\u96e9\u52d6\u5f67\u65ed\u6631\u682f\u715c\u7a36\u90c1\u980a\u4e91\uf9c5\u6a52\u6b9e\u6f90\u7189\u8018\u82b8\u8553" ], [ "eaa1", "\u904b\u9695\u96f2\u97fb\u851a\u9b31\u4e90\u718a\u96c4\u5143\u539f\u54e1\u5713\u5712\u57a3\u5a9b\u5ac4\u5bc3\u6028\u613f\u63f4\u6c85\u6d39\u6e72\u6e90\u7230\u733f\u7457\u82d1\u8881\u8f45\u9060\uf9c6\u9662\u9858\u9d1b\u6708\u8d8a\u925e\u4f4d\u5049\u50de\u5371\u570d\u59d4\u5a01\u5c09\u6170\u6690\u6e2d\u7232\u744b\u7def\u80c3\u840e\u8466\u853f\u875f\u885b\u8918\u8b02\u9055\u97cb\u9b4f\u4e73\u4f91\u5112\u516a\uf9c7\u552f\u55a9\u5b7a\u5ba5\u5e7c\u5e7d\u5ebe\u60a0\u60df\u6108\u6109\u63c4\u6538\u6709\uf9c8\u67d4\u67da\uf9c9\u6961\u6962\u6cb9\u6d27\uf9ca\u6e38\uf9cb" ], [ "eba1", "\u6fe1\u7336\u7337\uf9cc\u745c\u7531\uf9cd\u7652\uf9ce\uf9cf\u7dad\u81fe\u8438\u88d5\u8a98\u8adb\u8aed\u8e30\u8e42\u904a\u903e\u907a\u9149\u91c9\u936e\uf9d0\uf9d1\u5809\uf9d2\u6bd3\u8089\u80b2\uf9d3\uf9d4\u5141\u596b\u5c39\uf9d5\uf9d6\u6f64\u73a7\u80e4\u8d07\uf9d7\u9217\u958f\uf9d8\uf9d9\uf9da\uf9db\u807f\u620e\u701c\u7d68\u878d\uf9dc\u57a0\u6069\u6147\u6bb7\u8abe\u9280\u96b1\u4e59\u541f\u6deb\u852d\u9670\u97f3\u98ee\u63d6\u6ce3\u9091\u51dd\u61c9\u81ba\u9df9\u4f9d\u501a\u5100\u5b9c\u610f\u61ff\u64ec\u6905\u6bc5\u7591\u77e3\u7fa9\u8264\u858f\u87fb\u8863\u8abc" ], [ "eca1", "\u8b70\u91ab\u4e8c\u4ee5\u4f0a\uf9dd\uf9de\u5937\u59e8\uf9df\u5df2\u5f1b\u5f5b\u6021\uf9e0\uf9e1\uf9e2\uf9e3\u723e\u73e5\uf9e4\u7570\u75cd\uf9e5\u79fb\uf9e6\u800c\u8033\u8084\u82e1\u8351\uf9e7\uf9e8\u8cbd\u8cb3\u9087\uf9e9\uf9ea\u98f4\u990c\uf9eb\uf9ec\u7037\u76ca\u7fca\u7fcc\u7ffc\u8b1a\u4eba\u4ec1\u5203\u5370\uf9ed\u54bd\u56e0\u59fb\u5bc5\u5f15\u5fcd\u6e6e\uf9ee\uf9ef\u7d6a\u8335\uf9f0\u8693\u8a8d\uf9f1\u976d\u9777\uf9f2\uf9f3\u4e00\u4f5a\u4f7e\u58f9\u65e5\u6ea2\u9038\u93b0\u99b9\u4efb\u58ec\u598a\u59d9\u6041\uf9f4\uf9f5\u7a14\uf9f6\u834f\u8cc3\u5165\u5344" ], [ "eda1", "\uf9f7\uf9f8\uf9f9\u4ecd\u5269\u5b55\u82bf\u4ed4\u523a\u54a8\u59c9\u59ff\u5b50\u5b57\u5b5c\u6063\u6148\u6ecb\u7099\u716e\u7386\u74f7\u75b5\u78c1\u7d2b\u8005\u81ea\u8328\u8517\u85c9\u8aee\u8cc7\u96cc\u4f5c\u52fa\u56bc\u65ab\u6628\u707c\u70b8\u7235\u7dbd\u828d\u914c\u96c0\u9d72\u5b71\u68e7\u6b98\u6f7a\u76de\u5c91\u66ab\u6f5b\u7bb4\u7c2a\u8836\u96dc\u4e08\u4ed7\u5320\u5834\u58bb\u58ef\u596c\u5c07\u5e33\u5e84\u5f35\u638c\u66b2\u6756\u6a1f\u6aa3\u6b0c\u6f3f\u7246\uf9fa\u7350\u748b\u7ae0\u7ca7\u8178\u81df\u81e7\u838a\u846c\u8523\u8594\u85cf\u88dd\u8d13\u91ac\u9577" ], [ "eea1", "\u969c\u518d\u54c9\u5728\u5bb0\u624d\u6750\u683d\u6893\u6e3d\u6ed3\u707d\u7e21\u88c1\u8ca1\u8f09\u9f4b\u9f4e\u722d\u7b8f\u8acd\u931a\u4f47\u4f4e\u5132\u5480\u59d0\u5e95\u62b5\u6775\u696e\u6a17\u6cae\u6e1a\u72d9\u732a\u75bd\u7bb8\u7d35\u82e7\u83f9\u8457\u85f7\u8a5b\u8caf\u8e87\u9019\u90b8\u96ce\u9f5f\u52e3\u540a\u5ae1\u5bc2\u6458\u6575\u6ef4\u72c4\uf9fb\u7684\u7a4d\u7b1b\u7c4d\u7e3e\u7fdf\u837b\u8b2b\u8cca\u8d64\u8de1\u8e5f\u8fea\u8ff9\u9069\u93d1\u4f43\u4f7a\u50b3\u5168\u5178\u524d\u526a\u5861\u587c\u5960\u5c08\u5c55\u5edb\u609b\u6230\u6813\u6bbf\u6c08\u6fb1" ], [ "efa1", "\u714e\u7420\u7530\u7538\u7551\u7672\u7b4c\u7b8b\u7bad\u7bc6\u7e8f\u8a6e\u8f3e\u8f49\u923f\u9293\u9322\u942b\u96fb\u985a\u986b\u991e\u5207\u622a\u6298\u6d59\u7664\u7aca\u7bc0\u7d76\u5360\u5cbe\u5e97\u6f38\u70b9\u7c98\u9711\u9b8e\u9ede\u63a5\u647a\u8776\u4e01\u4e95\u4ead\u505c\u5075\u5448\u59c3\u5b9a\u5e40\u5ead\u5ef7\u5f81\u60c5\u633a\u653f\u6574\u65cc\u6676\u6678\u67fe\u6968\u6a89\u6b63\u6c40\u6dc0\u6de8\u6e1f\u6e5e\u701e\u70a1\u738e\u73fd\u753a\u775b\u7887\u798e\u7a0b\u7a7d\u7cbe\u7d8e\u8247\u8a02\u8aea\u8c9e\u912d\u914a\u91d8\u9266\u92cc\u9320\u9706\u9756" ], [ "f0a1", "\u975c\u9802\u9f0e\u5236\u5291\u557c\u5824\u5e1d\u5f1f\u608c\u63d0\u68af\u6fdf\u796d\u7b2c\u81cd\u85ba\u88fd\u8af8\u8e44\u918d\u9664\u969b\u973d\u984c\u9f4a\u4fce\u5146\u51cb\u52a9\u5632\u5f14\u5f6b\u63aa\u64cd\u65e9\u6641\u66fa\u66f9\u671d\u689d\u68d7\u69fd\u6f15\u6f6e\u7167\u71e5\u722a\u74aa\u773a\u7956\u795a\u79df\u7a20\u7a95\u7c97\u7cdf\u7d44\u7e70\u8087\u85fb\u86a4\u8a54\u8abf\u8d99\u8e81\u9020\u906d\u91e3\u963b\u96d5\u9ce5\u65cf\u7c07\u8db3\u93c3\u5b58\u5c0a\u5352\u62d9\u731d\u5027\u5b97\u5f9e\u60b0\u616b\u68d5\u6dd9\u742e\u7a2e\u7d42\u7d9c\u7e31\u816b" ], [ "f1a1", "\u8e2a\u8e35\u937e\u9418\u4f50\u5750\u5de6\u5ea7\u632b\u7f6a\u4e3b\u4f4f\u4f8f\u505a\u59dd\u80c4\u546a\u5468\u55fe\u594f\u5b99\u5dde\u5eda\u665d\u6731\u67f1\u682a\u6ce8\u6d32\u6e4a\u6f8d\u70b7\u73e0\u7587\u7c4c\u7d02\u7d2c\u7da2\u821f\u86db\u8a3b\u8a85\u8d70\u8e8a\u8f33\u9031\u914e\u9152\u9444\u99d0\u7af9\u7ca5\u4fca\u5101\u51c6\u57c8\u5bef\u5cfb\u6659\u6a3d\u6d5a\u6e96\u6fec\u710c\u756f\u7ae3\u8822\u9021\u9075\u96cb\u99ff\u8301\u4e2d\u4ef2\u8846\u91cd\u537d\u6adb\u696b\u6c41\u847a\u589e\u618e\u66fe\u62ef\u70dd\u7511\u75c7\u7e52\u84b8\u8b49\u8d08\u4e4b\u53ea" ], [ "f2a1", "\u54ab\u5730\u5740\u5fd7\u6301\u6307\u646f\u652f\u65e8\u667a\u679d\u67b3\u6b62\u6c60\u6c9a\u6f2c\u77e5\u7825\u7949\u7957\u7d19\u80a2\u8102\u81f3\u829d\u82b7\u8718\u8a8c\uf9fc\u8d04\u8dbe\u9072\u76f4\u7a19\u7a37\u7e54\u8077\u5507\u55d4\u5875\u632f\u6422\u6649\u664b\u686d\u699b\u6b84\u6d25\u6eb1\u73cd\u7468\u74a1\u755b\u75b9\u76e1\u771e\u778b\u79e6\u7e09\u7e1d\u81fb\u852f\u8897\u8a3a\u8cd1\u8eeb\u8fb0\u9032\u93ad\u9663\u9673\u9707\u4f84\u53f1\u59ea\u5ac9\u5e19\u684e\u74c6\u75be\u79e9\u7a92\u81a3\u86ed\u8cea\u8dcc\u8fed\u659f\u6715\uf9fd\u57f7\u6f57\u7ddd\u8f2f" ], [ "f3a1", "\u93f6\u96c6\u5fb5\u61f2\u6f84\u4e14\u4f98\u501f\u53c9\u55df\u5d6f\u5dee\u6b21\u6b64\u78cb\u7b9a\uf9fe\u8e49\u8eca\u906e\u6349\u643e\u7740\u7a84\u932f\u947f\u9f6a\u64b0\u6faf\u71e6\u74a8\u74da\u7ac4\u7c12\u7e82\u7cb2\u7e98\u8b9a\u8d0a\u947d\u9910\u994c\u5239\u5bdf\u64e6\u672d\u7d2e\u50ed\u53c3\u5879\u6158\u6159\u61fa\u65ac\u7ad9\u8b92\u8b96\u5009\u5021\u5275\u5531\u5a3c\u5ee0\u5f70\u6134\u655e\u660c\u6636\u66a2\u69cd\u6ec4\u6f32\u7316\u7621\u7a93\u8139\u8259\u83d6\u84bc\u50b5\u57f0\u5bc0\u5be8\u5f69\u63a1\u7826\u7db5\u83dc\u8521\u91c7\u91f5\u518a\u67f5\u7b56" ], [ "f4a1", "\u8cac\u51c4\u59bb\u60bd\u8655\u501c\uf9ff\u5254\u5c3a\u617d\u621a\u62d3\u64f2\u65a5\u6ecc\u7620\u810a\u8e60\u965f\u96bb\u4edf\u5343\u5598\u5929\u5ddd\u64c5\u6cc9\u6dfa\u7394\u7a7f\u821b\u85a6\u8ce4\u8e10\u9077\u91e7\u95e1\u9621\u97c6\u51f8\u54f2\u5586\u5fb9\u64a4\u6f88\u7db4\u8f1f\u8f4d\u9435\u50c9\u5c16\u6cbe\u6dfb\u751b\u77bb\u7c3d\u7c64\u8a79\u8ac2\u581e\u59be\u5e16\u6377\u7252\u758a\u776b\u8adc\u8cbc\u8f12\u5ef3\u6674\u6df8\u807d\u83c1\u8acb\u9751\u9bd6\ufa00\u5243\u66ff\u6d95\u6eef\u7de0\u8ae6\u902e\u905e\u9ad4\u521d\u527f\u54e8\u6194\u6284\u62db\u68a2" ], [ "f5a1", "\u6912\u695a\u6a35\u7092\u7126\u785d\u7901\u790e\u79d2\u7a0d\u8096\u8278\u82d5\u8349\u8549\u8c82\u8d85\u9162\u918b\u91ae\u4fc3\u56d1\u71ed\u77d7\u8700\u89f8\u5bf8\u5fd6\u6751\u90a8\u53e2\u585a\u5bf5\u60a4\u6181\u6460\u7e3d\u8070\u8525\u9283\u64ae\u50ac\u5d14\u6700\u589c\u62bd\u63a8\u690e\u6978\u6a1e\u6e6b\u76ba\u79cb\u82bb\u8429\u8acf\u8da8\u8ffd\u9112\u914b\u919c\u9310\u9318\u939a\u96db\u9a36\u9c0d\u4e11\u755c\u795d\u7afa\u7b51\u7bc9\u7e2e\u84c4\u8e59\u8e74\u8ef8\u9010\u6625\u693f\u7443\u51fa\u672e\u9edc\u5145\u5fe0\u6c96\u87f2\u885d\u8877\u60b4\u81b5\u8403" ], [ "f6a1", "\u8d05\u53d6\u5439\u5634\u5a36\u5c31\u708a\u7fe0\u805a\u8106\u81ed\u8da3\u9189\u9a5f\u9df2\u5074\u4ec4\u53a0\u60fb\u6e2c\u5c64\u4f88\u5024\u55e4\u5cd9\u5e5f\u6065\u6894\u6cbb\u6dc4\u71be\u75d4\u75f4\u7661\u7a1a\u7a49\u7dc7\u7dfb\u7f6e\u81f4\u86a9\u8f1c\u96c9\u99b3\u9f52\u5247\u52c5\u98ed\u89aa\u4e03\u67d2\u6f06\u4fb5\u5be2\u6795\u6c88\u6d78\u741b\u7827\u91dd\u937c\u87c4\u79e4\u7a31\u5feb\u4ed6\u54a4\u553e\u58ae\u59a5\u60f0\u6253\u62d6\u6736\u6955\u8235\u9640\u99b1\u99dd\u502c\u5353\u5544\u577c\ufa01\u6258\ufa02\u64e2\u666b\u67dd\u6fc1\u6fef\u7422\u7438\u8a17" ], [ "f7a1", "\u9438\u5451\u5606\u5766\u5f48\u619a\u6b4e\u7058\u70ad\u7dbb\u8a95\u596a\u812b\u63a2\u7708\u803d\u8caa\u5854\u642d\u69bb\u5b95\u5e11\u6e6f\ufa03\u8569\u514c\u53f0\u592a\u6020\u614b\u6b86\u6c70\u6cf0\u7b1e\u80ce\u82d4\u8dc6\u90b0\u98b1\ufa04\u64c7\u6fa4\u6491\u6504\u514e\u5410\u571f\u8a0e\u615f\u6876\ufa05\u75db\u7b52\u7d71\u901a\u5806\u69cc\u817f\u892a\u9000\u9839\u5078\u5957\u59ac\u6295\u900f\u9b2a\u615d\u7279\u95d6\u5761\u5a46\u5df4\u628a\u64ad\u64fa\u6777\u6ce2\u6d3e\u722c\u7436\u7834\u7f77\u82ad\u8ddb\u9817\u5224\u5742\u677f\u7248\u74e3\u8ca9\u8fa6\u9211" ], [ "f8a1", "\u962a\u516b\u53ed\u634c\u4f69\u5504\u6096\u6557\u6c9b\u6d7f\u724c\u72fd\u7a17\u8987\u8c9d\u5f6d\u6f8e\u70f9\u81a8\u610e\u4fbf\u504f\u6241\u7247\u7bc7\u7de8\u7fe9\u904d\u97ad\u9a19\u8cb6\u576a\u5e73\u67b0\u840d\u8a55\u5420\u5b16\u5e63\u5ee2\u5f0a\u6583\u80ba\u853d\u9589\u965b\u4f48\u5305\u530d\u530f\u5486\u54fa\u5703\u5e03\u6016\u629b\u62b1\u6355\ufa06\u6ce1\u6d66\u75b1\u7832\u80de\u812f\u82de\u8461\u84b2\u888d\u8912\u900b\u92ea\u98fd\u9b91\u5e45\u66b4\u66dd\u7011\u7206\ufa07\u4ff5\u527d\u5f6a\u6153\u6753\u6a19\u6f02\u74e2\u7968\u8868\u8c79\u98c7\u98c4\u9a43" ], [ "f9a1", "\u54c1\u7a1f\u6953\u8af7\u8c4a\u98a8\u99ae\u5f7c\u62ab\u75b2\u76ae\u88ab\u907f\u9642\u5339\u5f3c\u5fc5\u6ccc\u73cc\u7562\u758b\u7b46\u82fe\u999d\u4e4f\u903c\u4e0b\u4f55\u53a6\u590f\u5ec8\u6630\u6cb3\u7455\u8377\u8766\u8cc0\u9050\u971e\u9c15\u58d1\u5b78\u8650\u8b14\u9db4\u5bd2\u6068\u608d\u65f1\u6c57\u6f22\u6fa3\u701a\u7f55\u7ff0\u9591\u9592\u9650\u97d3\u5272\u8f44\u51fd\u542b\u54b8\u5563\u558a\u6abb\u6db5\u7dd8\u8266\u929c\u9677\u9e79\u5408\u54c8\u76d2\u86e4\u95a4\u95d4\u965c\u4ea2\u4f09\u59ee\u5ae6\u5df7\u6052\u6297\u676d\u6841\u6c86\u6e2f\u7f38\u809b\u822a" ], [ "faa1", "\ufa08\ufa09\u9805\u4ea5\u5055\u54b3\u5793\u595a\u5b69\u5bb3\u61c8\u6977\u6d77\u7023\u87f9\u89e3\u8a72\u8ae7\u9082\u99ed\u9ab8\u52be\u6838\u5016\u5e78\u674f\u8347\u884c\u4eab\u5411\u56ae\u73e6\u9115\u97ff\u9909\u9957\u9999\u5653\u589f\u865b\u8a31\u61b2\u6af6\u737b\u8ed2\u6b47\u96aa\u9a57\u5955\u7200\u8d6b\u9769\u4fd4\u5cf4\u5f26\u61f8\u665b\u6ceb\u70ab\u7384\u73b9\u73fe\u7729\u774d\u7d43\u7d62\u7e23\u8237\u8852\ufa0a\u8ce2\u9249\u986f\u5b51\u7a74\u8840\u9801\u5acc\u4fe0\u5354\u593e\u5cfd\u633e\u6d79\u72f9\u8105\u8107\u83a2\u92cf\u9830\u4ea8\u5144\u5211\u578b" ], [ "fba1", "\u5f62\u6cc2\u6ece\u7005\u7050\u70af\u7192\u73e9\u7469\u834a\u87a2\u8861\u9008\u90a2\u93a3\u99a8\u516e\u5f57\u60e0\u6167\u66b3\u8559\u8e4a\u91af\u978b\u4e4e\u4e92\u547c\u58d5\u58fa\u597d\u5cb5\u5f27\u6236\u6248\u660a\u6667\u6beb\u6d69\u6dcf\u6e56\u6ef8\u6f94\u6fe0\u6fe9\u705d\u72d0\u7425\u745a\u74e0\u7693\u795c\u7cca\u7e1e\u80e1\u82a6\u846b\u84bf\u864e\u865f\u8774\u8b77\u8c6a\u93ac\u9800\u9865\u60d1\u6216\u9177\u5a5a\u660f\u6df7\u6e3e\u743f\u9b42\u5ffd\u60da\u7b0f\u54c4\u5f18\u6c5e\u6cd3\u6d2a\u70d8\u7d05\u8679\u8a0c\u9d3b\u5316\u548c\u5b05\u6a3a\u706b\u7575" ], [ "fca1", "\u798d\u79be\u82b1\u83ef\u8a71\u8b41\u8ca8\u9774\ufa0b\u64f4\u652b\u78ba\u78bb\u7a6b\u4e38\u559a\u5950\u5ba6\u5e7b\u60a3\u63db\u6b61\u6665\u6853\u6e19\u7165\u74b0\u7d08\u9084\u9a69\u9c25\u6d3b\u6ed1\u733e\u8c41\u95ca\u51f0\u5e4c\u5fa8\u604d\u60f6\u6130\u614c\u6643\u6644\u69a5\u6cc1\u6e5f\u6ec9\u6f62\u714c\u749c\u7687\u7bc1\u7c27\u8352\u8757\u9051\u968d\u9ec3\u532f\u56de\u5efb\u5f8a\u6062\u6094\u61f7\u6666\u6703\u6a9c\u6dee\u6fae\u7070\u736a\u7e6a\u81be\u8334\u86d4\u8aa8\u8cc4\u5283\u7372\u5b96\u6a6b\u9404\u54ee\u5686\u5b5d\u6548\u6585\u66c9\u689f\u6d8d\u6dc6" ], [ "fda1", "\u723b\u80b4\u9175\u9a4d\u4faf\u5019\u539a\u540e\u543c\u5589\u55c5\u5e3f\u5f8c\u673d\u7166\u73dd\u9005\u52db\u52f3\u5864\u58ce\u7104\u718f\u71fb\u85b0\u8a13\u6688\u85a8\u55a7\u6684\u714a\u8431\u5349\u5599\u6bc1\u5f59\u5fbd\u63ee\u6689\u7147\u8af1\u8f1d\u9ebe\u4f11\u643a\u70cb\u7566\u8667\u6064\u8b4e\u9df8\u5147\u51f6\u5308\u6d36\u80f8\u9ed1\u6615\u6b23\u7098\u75d5\u5403\u5c79\u7d07\u8a16\u6b20\u6b3d\u6b46\u5438\u6070\u6d3d\u7fd5\u8208\u50d6\u51de\u559c\u566b\u56cd\u59ec\u5b09\u5e0c\u6199\u6198\u6231\u665e\u66e6\u7199\u71b9\u71ba\u72a7\u79a7\u7a00\u7fb2\u8a70" ] ];
    cc._RF.pop();
  }, {} ],
  cp950: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "32905XR8PRENbTLvBsXY0CW", "cp950");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.cp950 = void 0;
    exports.cp950 = [ [ "0", "\0", 127 ], [ "a140", "\u3000\uff0c\u3001\u3002\uff0e\u2027\uff1b\uff1a\uff1f\uff01\ufe30\u2026\u2025\ufe50\ufe51\ufe52\xb7\ufe54\ufe55\ufe56\ufe57\uff5c\u2013\ufe31\u2014\ufe33\u2574\ufe34\ufe4f\uff08\uff09\ufe35\ufe36\uff5b\uff5d\ufe37\ufe38\u3014\u3015\ufe39\ufe3a\u3010\u3011\ufe3b\ufe3c\u300a\u300b\ufe3d\ufe3e\u3008\u3009\ufe3f\ufe40\u300c\u300d\ufe41\ufe42\u300e\u300f\ufe43\ufe44\ufe59\ufe5a" ], [ "a1a1", "\ufe5b\ufe5c\ufe5d\ufe5e\u2018\u2019\u201c\u201d\u301d\u301e\u2035\u2032\uff03\uff06\uff0a\u203b\xa7\u3003\u25cb\u25cf\u25b3\u25b2\u25ce\u2606\u2605\u25c7\u25c6\u25a1\u25a0\u25bd\u25bc\u32a3\u2105\xaf\uffe3\uff3f\u02cd\ufe49\ufe4a\ufe4d\ufe4e\ufe4b\ufe4c\ufe5f\ufe60\ufe61\uff0b\uff0d\xd7\xf7\xb1\u221a\uff1c\uff1e\uff1d\u2266\u2267\u2260\u221e\u2252\u2261\ufe62", 4, "\uff5e\u2229\u222a\u22a5\u2220\u221f\u22bf\u33d2\u33d1\u222b\u222e\u2235\u2234\u2640\u2642\u2295\u2299\u2191\u2193\u2190\u2192\u2196\u2197\u2199\u2198\u2225\u2223\uff0f" ], [ "a240", "\uff3c\u2215\ufe68\uff04\uffe5\u3012\uffe0\uffe1\uff05\uff20\u2103\u2109\ufe69\ufe6a\ufe6b\u33d5\u339c\u339d\u339e\u33ce\u33a1\u338e\u338f\u33c4\xb0\u5159\u515b\u515e\u515d\u5161\u5163\u55e7\u74e9\u7cce\u2581", 7, "\u258f\u258e\u258d\u258c\u258b\u258a\u2589\u253c\u2534\u252c\u2524\u251c\u2594\u2500\u2502\u2595\u250c\u2510\u2514\u2518\u256d" ], [ "a2a1", "\u256e\u2570\u256f\u2550\u255e\u256a\u2561\u25e2\u25e3\u25e5\u25e4\u2571\u2572\u2573\uff10", 9, "\u2160", 9, "\u3021", 8, "\u5341\u5344\u5345\uff21", 25, "\uff41", 21 ], [ "a340", "\uff57\uff58\uff59\uff5a\u0391", 16, "\u03a3", 6, "\u03b1", 16, "\u03c3", 6, "\u3105", 10 ], [ "a3a1", "\u3110", 25, "\u02d9\u02c9\u02ca\u02c7\u02cb" ], [ "a3e1", "\u20ac" ], [ "a440", "\u4e00\u4e59\u4e01\u4e03\u4e43\u4e5d\u4e86\u4e8c\u4eba\u513f\u5165\u516b\u51e0\u5200\u5201\u529b\u5315\u5341\u535c\u53c8\u4e09\u4e0b\u4e08\u4e0a\u4e2b\u4e38\u51e1\u4e45\u4e48\u4e5f\u4e5e\u4e8e\u4ea1\u5140\u5203\u52fa\u5343\u53c9\u53e3\u571f\u58eb\u5915\u5927\u5973\u5b50\u5b51\u5b53\u5bf8\u5c0f\u5c22\u5c38\u5c71\u5ddd\u5de5\u5df1\u5df2\u5df3\u5dfe\u5e72\u5efe\u5f0b\u5f13\u624d" ], [ "a4a1", "\u4e11\u4e10\u4e0d\u4e2d\u4e30\u4e39\u4e4b\u5c39\u4e88\u4e91\u4e95\u4e92\u4e94\u4ea2\u4ec1\u4ec0\u4ec3\u4ec6\u4ec7\u4ecd\u4eca\u4ecb\u4ec4\u5143\u5141\u5167\u516d\u516e\u516c\u5197\u51f6\u5206\u5207\u5208\u52fb\u52fe\u52ff\u5316\u5339\u5348\u5347\u5345\u535e\u5384\u53cb\u53ca\u53cd\u58ec\u5929\u592b\u592a\u592d\u5b54\u5c11\u5c24\u5c3a\u5c6f\u5df4\u5e7b\u5eff\u5f14\u5f15\u5fc3\u6208\u6236\u624b\u624e\u652f\u6587\u6597\u65a4\u65b9\u65e5\u66f0\u6708\u6728\u6b20\u6b62\u6b79\u6bcb\u6bd4\u6bdb\u6c0f\u6c34\u706b\u722a\u7236\u723b\u7247\u7259\u725b\u72ac\u738b\u4e19" ], [ "a540", "\u4e16\u4e15\u4e14\u4e18\u4e3b\u4e4d\u4e4f\u4e4e\u4ee5\u4ed8\u4ed4\u4ed5\u4ed6\u4ed7\u4ee3\u4ee4\u4ed9\u4ede\u5145\u5144\u5189\u518a\u51ac\u51f9\u51fa\u51f8\u520a\u52a0\u529f\u5305\u5306\u5317\u531d\u4edf\u534a\u5349\u5361\u5360\u536f\u536e\u53bb\u53ef\u53e4\u53f3\u53ec\u53ee\u53e9\u53e8\u53fc\u53f8\u53f5\u53eb\u53e6\u53ea\u53f2\u53f1\u53f0\u53e5\u53ed\u53fb\u56db\u56da\u5916" ], [ "a5a1", "\u592e\u5931\u5974\u5976\u5b55\u5b83\u5c3c\u5de8\u5de7\u5de6\u5e02\u5e03\u5e73\u5e7c\u5f01\u5f18\u5f17\u5fc5\u620a\u6253\u6254\u6252\u6251\u65a5\u65e6\u672e\u672c\u672a\u672b\u672d\u6b63\u6bcd\u6c11\u6c10\u6c38\u6c41\u6c40\u6c3e\u72af\u7384\u7389\u74dc\u74e6\u7518\u751f\u7528\u7529\u7530\u7531\u7532\u7533\u758b\u767d\u76ae\u76bf\u76ee\u77db\u77e2\u77f3\u793a\u79be\u7a74\u7acb\u4e1e\u4e1f\u4e52\u4e53\u4e69\u4e99\u4ea4\u4ea6\u4ea5\u4eff\u4f09\u4f19\u4f0a\u4f15\u4f0d\u4f10\u4f11\u4f0f\u4ef2\u4ef6\u4efb\u4ef0\u4ef3\u4efd\u4f01\u4f0b\u5149\u5147\u5146\u5148\u5168" ], [ "a640", "\u5171\u518d\u51b0\u5217\u5211\u5212\u520e\u5216\u52a3\u5308\u5321\u5320\u5370\u5371\u5409\u540f\u540c\u540a\u5410\u5401\u540b\u5404\u5411\u540d\u5408\u5403\u540e\u5406\u5412\u56e0\u56de\u56dd\u5733\u5730\u5728\u572d\u572c\u572f\u5729\u5919\u591a\u5937\u5938\u5984\u5978\u5983\u597d\u5979\u5982\u5981\u5b57\u5b58\u5b87\u5b88\u5b85\u5b89\u5bfa\u5c16\u5c79\u5dde\u5e06\u5e76\u5e74" ], [ "a6a1", "\u5f0f\u5f1b\u5fd9\u5fd6\u620e\u620c\u620d\u6210\u6263\u625b\u6258\u6536\u65e9\u65e8\u65ec\u65ed\u66f2\u66f3\u6709\u673d\u6734\u6731\u6735\u6b21\u6b64\u6b7b\u6c16\u6c5d\u6c57\u6c59\u6c5f\u6c60\u6c50\u6c55\u6c61\u6c5b\u6c4d\u6c4e\u7070\u725f\u725d\u767e\u7af9\u7c73\u7cf8\u7f36\u7f8a\u7fbd\u8001\u8003\u800c\u8012\u8033\u807f\u8089\u808b\u808c\u81e3\u81ea\u81f3\u81fc\u820c\u821b\u821f\u826e\u8272\u827e\u866b\u8840\u884c\u8863\u897f\u9621\u4e32\u4ea8\u4f4d\u4f4f\u4f47\u4f57\u4f5e\u4f34\u4f5b\u4f55\u4f30\u4f50\u4f51\u4f3d\u4f3a\u4f38\u4f43\u4f54\u4f3c\u4f46\u4f63" ], [ "a740", "\u4f5c\u4f60\u4f2f\u4f4e\u4f36\u4f59\u4f5d\u4f48\u4f5a\u514c\u514b\u514d\u5175\u51b6\u51b7\u5225\u5224\u5229\u522a\u5228\u52ab\u52a9\u52aa\u52ac\u5323\u5373\u5375\u541d\u542d\u541e\u543e\u5426\u544e\u5427\u5446\u5443\u5433\u5448\u5442\u541b\u5429\u544a\u5439\u543b\u5438\u542e\u5435\u5436\u5420\u543c\u5440\u5431\u542b\u541f\u542c\u56ea\u56f0\u56e4\u56eb\u574a\u5751\u5740\u574d" ], [ "a7a1", "\u5747\u574e\u573e\u5750\u574f\u573b\u58ef\u593e\u599d\u5992\u59a8\u599e\u59a3\u5999\u5996\u598d\u59a4\u5993\u598a\u59a5\u5b5d\u5b5c\u5b5a\u5b5b\u5b8c\u5b8b\u5b8f\u5c2c\u5c40\u5c41\u5c3f\u5c3e\u5c90\u5c91\u5c94\u5c8c\u5deb\u5e0c\u5e8f\u5e87\u5e8a\u5ef7\u5f04\u5f1f\u5f64\u5f62\u5f77\u5f79\u5fd8\u5fcc\u5fd7\u5fcd\u5ff1\u5feb\u5ff8\u5fea\u6212\u6211\u6284\u6297\u6296\u6280\u6276\u6289\u626d\u628a\u627c\u627e\u6279\u6273\u6292\u626f\u6298\u626e\u6295\u6293\u6291\u6286\u6539\u653b\u6538\u65f1\u66f4\u675f\u674e\u674f\u6750\u6751\u675c\u6756\u675e\u6749\u6746\u6760" ], [ "a840", "\u6753\u6757\u6b65\u6bcf\u6c42\u6c5e\u6c99\u6c81\u6c88\u6c89\u6c85\u6c9b\u6c6a\u6c7a\u6c90\u6c70\u6c8c\u6c68\u6c96\u6c92\u6c7d\u6c83\u6c72\u6c7e\u6c74\u6c86\u6c76\u6c8d\u6c94\u6c98\u6c82\u7076\u707c\u707d\u7078\u7262\u7261\u7260\u72c4\u72c2\u7396\u752c\u752b\u7537\u7538\u7682\u76ef\u77e3\u79c1\u79c0\u79bf\u7a76\u7cfb\u7f55\u8096\u8093\u809d\u8098\u809b\u809a\u80b2\u826f\u8292" ], [ "a8a1", "\u828b\u828d\u898b\u89d2\u8a00\u8c37\u8c46\u8c55\u8c9d\u8d64\u8d70\u8db3\u8eab\u8eca\u8f9b\u8fb0\u8fc2\u8fc6\u8fc5\u8fc4\u5de1\u9091\u90a2\u90aa\u90a6\u90a3\u9149\u91c6\u91cc\u9632\u962e\u9631\u962a\u962c\u4e26\u4e56\u4e73\u4e8b\u4e9b\u4e9e\u4eab\u4eac\u4f6f\u4f9d\u4f8d\u4f73\u4f7f\u4f6c\u4f9b\u4f8b\u4f86\u4f83\u4f70\u4f75\u4f88\u4f69\u4f7b\u4f96\u4f7e\u4f8f\u4f91\u4f7a\u5154\u5152\u5155\u5169\u5177\u5176\u5178\u51bd\u51fd\u523b\u5238\u5237\u523a\u5230\u522e\u5236\u5241\u52be\u52bb\u5352\u5354\u5353\u5351\u5366\u5377\u5378\u5379\u53d6\u53d4\u53d7\u5473\u5475" ], [ "a940", "\u5496\u5478\u5495\u5480\u547b\u5477\u5484\u5492\u5486\u547c\u5490\u5471\u5476\u548c\u549a\u5462\u5468\u548b\u547d\u548e\u56fa\u5783\u5777\u576a\u5769\u5761\u5766\u5764\u577c\u591c\u5949\u5947\u5948\u5944\u5954\u59be\u59bb\u59d4\u59b9\u59ae\u59d1\u59c6\u59d0\u59cd\u59cb\u59d3\u59ca\u59af\u59b3\u59d2\u59c5\u5b5f\u5b64\u5b63\u5b97\u5b9a\u5b98\u5b9c\u5b99\u5b9b\u5c1a\u5c48\u5c45" ], [ "a9a1", "\u5c46\u5cb7\u5ca1\u5cb8\u5ca9\u5cab\u5cb1\u5cb3\u5e18\u5e1a\u5e16\u5e15\u5e1b\u5e11\u5e78\u5e9a\u5e97\u5e9c\u5e95\u5e96\u5ef6\u5f26\u5f27\u5f29\u5f80\u5f81\u5f7f\u5f7c\u5fdd\u5fe0\u5ffd\u5ff5\u5fff\u600f\u6014\u602f\u6035\u6016\u602a\u6015\u6021\u6027\u6029\u602b\u601b\u6216\u6215\u623f\u623e\u6240\u627f\u62c9\u62cc\u62c4\u62bf\u62c2\u62b9\u62d2\u62db\u62ab\u62d3\u62d4\u62cb\u62c8\u62a8\u62bd\u62bc\u62d0\u62d9\u62c7\u62cd\u62b5\u62da\u62b1\u62d8\u62d6\u62d7\u62c6\u62ac\u62ce\u653e\u65a7\u65bc\u65fa\u6614\u6613\u660c\u6606\u6602\u660e\u6600\u660f\u6615\u660a" ], [ "aa40", "\u6607\u670d\u670b\u676d\u678b\u6795\u6771\u679c\u6773\u6777\u6787\u679d\u6797\u676f\u6770\u677f\u6789\u677e\u6790\u6775\u679a\u6793\u677c\u676a\u6772\u6b23\u6b66\u6b67\u6b7f\u6c13\u6c1b\u6ce3\u6ce8\u6cf3\u6cb1\u6ccc\u6ce5\u6cb3\u6cbd\u6cbe\u6cbc\u6ce2\u6cab\u6cd5\u6cd3\u6cb8\u6cc4\u6cb9\u6cc1\u6cae\u6cd7\u6cc5\u6cf1\u6cbf\u6cbb\u6ce1\u6cdb\u6cca\u6cac\u6cef\u6cdc\u6cd6\u6ce0" ], [ "aaa1", "\u7095\u708e\u7092\u708a\u7099\u722c\u722d\u7238\u7248\u7267\u7269\u72c0\u72ce\u72d9\u72d7\u72d0\u73a9\u73a8\u739f\u73ab\u73a5\u753d\u759d\u7599\u759a\u7684\u76c2\u76f2\u76f4\u77e5\u77fd\u793e\u7940\u7941\u79c9\u79c8\u7a7a\u7a79\u7afa\u7cfe\u7f54\u7f8c\u7f8b\u8005\u80ba\u80a5\u80a2\u80b1\u80a1\u80ab\u80a9\u80b4\u80aa\u80af\u81e5\u81fe\u820d\u82b3\u829d\u8299\u82ad\u82bd\u829f\u82b9\u82b1\u82ac\u82a5\u82af\u82b8\u82a3\u82b0\u82be\u82b7\u864e\u8671\u521d\u8868\u8ecb\u8fce\u8fd4\u8fd1\u90b5\u90b8\u90b1\u90b6\u91c7\u91d1\u9577\u9580\u961c\u9640\u963f\u963b\u9644" ], [ "ab40", "\u9642\u96b9\u96e8\u9752\u975e\u4e9f\u4ead\u4eae\u4fe1\u4fb5\u4faf\u4fbf\u4fe0\u4fd1\u4fcf\u4fdd\u4fc3\u4fb6\u4fd8\u4fdf\u4fca\u4fd7\u4fae\u4fd0\u4fc4\u4fc2\u4fda\u4fce\u4fde\u4fb7\u5157\u5192\u5191\u51a0\u524e\u5243\u524a\u524d\u524c\u524b\u5247\u52c7\u52c9\u52c3\u52c1\u530d\u5357\u537b\u539a\u53db\u54ac\u54c0\u54a8\u54ce\u54c9\u54b8\u54a6\u54b3\u54c7\u54c2\u54bd\u54aa\u54c1" ], [ "aba1", "\u54c4\u54c8\u54af\u54ab\u54b1\u54bb\u54a9\u54a7\u54bf\u56ff\u5782\u578b\u57a0\u57a3\u57a2\u57ce\u57ae\u5793\u5955\u5951\u594f\u594e\u5950\u59dc\u59d8\u59ff\u59e3\u59e8\u5a03\u59e5\u59ea\u59da\u59e6\u5a01\u59fb\u5b69\u5ba3\u5ba6\u5ba4\u5ba2\u5ba5\u5c01\u5c4e\u5c4f\u5c4d\u5c4b\u5cd9\u5cd2\u5df7\u5e1d\u5e25\u5e1f\u5e7d\u5ea0\u5ea6\u5efa\u5f08\u5f2d\u5f65\u5f88\u5f85\u5f8a\u5f8b\u5f87\u5f8c\u5f89\u6012\u601d\u6020\u6025\u600e\u6028\u604d\u6070\u6068\u6062\u6046\u6043\u606c\u606b\u606a\u6064\u6241\u62dc\u6316\u6309\u62fc\u62ed\u6301\u62ee\u62fd\u6307\u62f1\u62f7" ], [ "ac40", "\u62ef\u62ec\u62fe\u62f4\u6311\u6302\u653f\u6545\u65ab\u65bd\u65e2\u6625\u662d\u6620\u6627\u662f\u661f\u6628\u6631\u6624\u66f7\u67ff\u67d3\u67f1\u67d4\u67d0\u67ec\u67b6\u67af\u67f5\u67e9\u67ef\u67c4\u67d1\u67b4\u67da\u67e5\u67b8\u67cf\u67de\u67f3\u67b0\u67d9\u67e2\u67dd\u67d2\u6b6a\u6b83\u6b86\u6bb5\u6bd2\u6bd7\u6c1f\u6cc9\u6d0b\u6d32\u6d2a\u6d41\u6d25\u6d0c\u6d31\u6d1e\u6d17" ], [ "aca1", "\u6d3b\u6d3d\u6d3e\u6d36\u6d1b\u6cf5\u6d39\u6d27\u6d38\u6d29\u6d2e\u6d35\u6d0e\u6d2b\u70ab\u70ba\u70b3\u70ac\u70af\u70ad\u70b8\u70ae\u70a4\u7230\u7272\u726f\u7274\u72e9\u72e0\u72e1\u73b7\u73ca\u73bb\u73b2\u73cd\u73c0\u73b3\u751a\u752d\u754f\u754c\u754e\u754b\u75ab\u75a4\u75a5\u75a2\u75a3\u7678\u7686\u7687\u7688\u76c8\u76c6\u76c3\u76c5\u7701\u76f9\u76f8\u7709\u770b\u76fe\u76fc\u7707\u77dc\u7802\u7814\u780c\u780d\u7946\u7949\u7948\u7947\u79b9\u79ba\u79d1\u79d2\u79cb\u7a7f\u7a81\u7aff\u7afd\u7c7d\u7d02\u7d05\u7d00\u7d09\u7d07\u7d04\u7d06\u7f38\u7f8e\u7fbf\u8004" ], [ "ad40", "\u8010\u800d\u8011\u8036\u80d6\u80e5\u80da\u80c3\u80c4\u80cc\u80e1\u80db\u80ce\u80de\u80e4\u80dd\u81f4\u8222\u82e7\u8303\u8305\u82e3\u82db\u82e6\u8304\u82e5\u8302\u8309\u82d2\u82d7\u82f1\u8301\u82dc\u82d4\u82d1\u82de\u82d3\u82df\u82ef\u8306\u8650\u8679\u867b\u867a\u884d\u886b\u8981\u89d4\u8a08\u8a02\u8a03\u8c9e\u8ca0\u8d74\u8d73\u8db4\u8ecd\u8ecc\u8ff0\u8fe6\u8fe2\u8fea\u8fe5" ], [ "ada1", "\u8fed\u8feb\u8fe4\u8fe8\u90ca\u90ce\u90c1\u90c3\u914b\u914a\u91cd\u9582\u9650\u964b\u964c\u964d\u9762\u9769\u97cb\u97ed\u97f3\u9801\u98a8\u98db\u98df\u9996\u9999\u4e58\u4eb3\u500c\u500d\u5023\u4fef\u5026\u5025\u4ff8\u5029\u5016\u5006\u503c\u501f\u501a\u5012\u5011\u4ffa\u5000\u5014\u5028\u4ff1\u5021\u500b\u5019\u5018\u4ff3\u4fee\u502d\u502a\u4ffe\u502b\u5009\u517c\u51a4\u51a5\u51a2\u51cd\u51cc\u51c6\u51cb\u5256\u525c\u5254\u525b\u525d\u532a\u537f\u539f\u539d\u53df\u54e8\u5510\u5501\u5537\u54fc\u54e5\u54f2\u5506\u54fa\u5514\u54e9\u54ed\u54e1\u5509\u54ee\u54ea" ], [ "ae40", "\u54e6\u5527\u5507\u54fd\u550f\u5703\u5704\u57c2\u57d4\u57cb\u57c3\u5809\u590f\u5957\u5958\u595a\u5a11\u5a18\u5a1c\u5a1f\u5a1b\u5a13\u59ec\u5a20\u5a23\u5a29\u5a25\u5a0c\u5a09\u5b6b\u5c58\u5bb0\u5bb3\u5bb6\u5bb4\u5bae\u5bb5\u5bb9\u5bb8\u5c04\u5c51\u5c55\u5c50\u5ced\u5cfd\u5cfb\u5cea\u5ce8\u5cf0\u5cf6\u5d01\u5cf4\u5dee\u5e2d\u5e2b\u5eab\u5ead\u5ea7\u5f31\u5f92\u5f91\u5f90\u6059" ], [ "aea1", "\u6063\u6065\u6050\u6055\u606d\u6069\u606f\u6084\u609f\u609a\u608d\u6094\u608c\u6085\u6096\u6247\u62f3\u6308\u62ff\u634e\u633e\u632f\u6355\u6342\u6346\u634f\u6349\u633a\u6350\u633d\u632a\u632b\u6328\u634d\u634c\u6548\u6549\u6599\u65c1\u65c5\u6642\u6649\u664f\u6643\u6652\u664c\u6645\u6641\u66f8\u6714\u6715\u6717\u6821\u6838\u6848\u6846\u6853\u6839\u6842\u6854\u6829\u68b3\u6817\u684c\u6851\u683d\u67f4\u6850\u6840\u683c\u6843\u682a\u6845\u6813\u6818\u6841\u6b8a\u6b89\u6bb7\u6c23\u6c27\u6c28\u6c26\u6c24\u6cf0\u6d6a\u6d95\u6d88\u6d87\u6d66\u6d78\u6d77\u6d59\u6d93" ], [ "af40", "\u6d6c\u6d89\u6d6e\u6d5a\u6d74\u6d69\u6d8c\u6d8a\u6d79\u6d85\u6d65\u6d94\u70ca\u70d8\u70e4\u70d9\u70c8\u70cf\u7239\u7279\u72fc\u72f9\u72fd\u72f8\u72f7\u7386\u73ed\u7409\u73ee\u73e0\u73ea\u73de\u7554\u755d\u755c\u755a\u7559\u75be\u75c5\u75c7\u75b2\u75b3\u75bd\u75bc\u75b9\u75c2\u75b8\u768b\u76b0\u76ca\u76cd\u76ce\u7729\u771f\u7720\u7728\u77e9\u7830\u7827\u7838\u781d\u7834\u7837" ], [ "afa1", "\u7825\u782d\u7820\u781f\u7832\u7955\u7950\u7960\u795f\u7956\u795e\u795d\u7957\u795a\u79e4\u79e3\u79e7\u79df\u79e6\u79e9\u79d8\u7a84\u7a88\u7ad9\u7b06\u7b11\u7c89\u7d21\u7d17\u7d0b\u7d0a\u7d20\u7d22\u7d14\u7d10\u7d15\u7d1a\u7d1c\u7d0d\u7d19\u7d1b\u7f3a\u7f5f\u7f94\u7fc5\u7fc1\u8006\u8018\u8015\u8019\u8017\u803d\u803f\u80f1\u8102\u80f0\u8105\u80ed\u80f4\u8106\u80f8\u80f3\u8108\u80fd\u810a\u80fc\u80ef\u81ed\u81ec\u8200\u8210\u822a\u822b\u8228\u822c\u82bb\u832b\u8352\u8354\u834a\u8338\u8350\u8349\u8335\u8334\u834f\u8332\u8339\u8336\u8317\u8340\u8331\u8328\u8343" ], [ "b040", "\u8654\u868a\u86aa\u8693\u86a4\u86a9\u868c\u86a3\u869c\u8870\u8877\u8881\u8882\u887d\u8879\u8a18\u8a10\u8a0e\u8a0c\u8a15\u8a0a\u8a17\u8a13\u8a16\u8a0f\u8a11\u8c48\u8c7a\u8c79\u8ca1\u8ca2\u8d77\u8eac\u8ed2\u8ed4\u8ecf\u8fb1\u9001\u9006\u8ff7\u9000\u8ffa\u8ff4\u9003\u8ffd\u9005\u8ff8\u9095\u90e1\u90dd\u90e2\u9152\u914d\u914c\u91d8\u91dd\u91d7\u91dc\u91d9\u9583\u9662\u9663\u9661" ], [ "b0a1", "\u965b\u965d\u9664\u9658\u965e\u96bb\u98e2\u99ac\u9aa8\u9ad8\u9b25\u9b32\u9b3c\u4e7e\u507a\u507d\u505c\u5047\u5043\u504c\u505a\u5049\u5065\u5076\u504e\u5055\u5075\u5074\u5077\u504f\u500f\u506f\u506d\u515c\u5195\u51f0\u526a\u526f\u52d2\u52d9\u52d8\u52d5\u5310\u530f\u5319\u533f\u5340\u533e\u53c3\u66fc\u5546\u556a\u5566\u5544\u555e\u5561\u5543\u554a\u5531\u5556\u554f\u5555\u552f\u5564\u5538\u552e\u555c\u552c\u5563\u5533\u5541\u5557\u5708\u570b\u5709\u57df\u5805\u580a\u5806\u57e0\u57e4\u57fa\u5802\u5835\u57f7\u57f9\u5920\u5962\u5a36\u5a41\u5a49\u5a66\u5a6a\u5a40" ], [ "b140", "\u5a3c\u5a62\u5a5a\u5a46\u5a4a\u5b70\u5bc7\u5bc5\u5bc4\u5bc2\u5bbf\u5bc6\u5c09\u5c08\u5c07\u5c60\u5c5c\u5c5d\u5d07\u5d06\u5d0e\u5d1b\u5d16\u5d22\u5d11\u5d29\u5d14\u5d19\u5d24\u5d27\u5d17\u5de2\u5e38\u5e36\u5e33\u5e37\u5eb7\u5eb8\u5eb6\u5eb5\u5ebe\u5f35\u5f37\u5f57\u5f6c\u5f69\u5f6b\u5f97\u5f99\u5f9e\u5f98\u5fa1\u5fa0\u5f9c\u607f\u60a3\u6089\u60a0\u60a8\u60cb\u60b4\u60e6\u60bd" ], [ "b1a1", "\u60c5\u60bb\u60b5\u60dc\u60bc\u60d8\u60d5\u60c6\u60df\u60b8\u60da\u60c7\u621a\u621b\u6248\u63a0\u63a7\u6372\u6396\u63a2\u63a5\u6377\u6367\u6398\u63aa\u6371\u63a9\u6389\u6383\u639b\u636b\u63a8\u6384\u6388\u6399\u63a1\u63ac\u6392\u638f\u6380\u637b\u6369\u6368\u637a\u655d\u6556\u6551\u6559\u6557\u555f\u654f\u6558\u6555\u6554\u659c\u659b\u65ac\u65cf\u65cb\u65cc\u65ce\u665d\u665a\u6664\u6668\u6666\u665e\u66f9\u52d7\u671b\u6881\u68af\u68a2\u6893\u68b5\u687f\u6876\u68b1\u68a7\u6897\u68b0\u6883\u68c4\u68ad\u6886\u6885\u6894\u689d\u68a8\u689f\u68a1\u6882\u6b32\u6bba" ], [ "b240", "\u6beb\u6bec\u6c2b\u6d8e\u6dbc\u6df3\u6dd9\u6db2\u6de1\u6dcc\u6de4\u6dfb\u6dfa\u6e05\u6dc7\u6dcb\u6daf\u6dd1\u6dae\u6dde\u6df9\u6db8\u6df7\u6df5\u6dc5\u6dd2\u6e1a\u6db5\u6dda\u6deb\u6dd8\u6dea\u6df1\u6dee\u6de8\u6dc6\u6dc4\u6daa\u6dec\u6dbf\u6de6\u70f9\u7109\u710a\u70fd\u70ef\u723d\u727d\u7281\u731c\u731b\u7316\u7313\u7319\u7387\u7405\u740a\u7403\u7406\u73fe\u740d\u74e0\u74f6" ], [ "b2a1", "\u74f7\u751c\u7522\u7565\u7566\u7562\u7570\u758f\u75d4\u75d5\u75b5\u75ca\u75cd\u768e\u76d4\u76d2\u76db\u7737\u773e\u773c\u7736\u7738\u773a\u786b\u7843\u784e\u7965\u7968\u796d\u79fb\u7a92\u7a95\u7b20\u7b28\u7b1b\u7b2c\u7b26\u7b19\u7b1e\u7b2e\u7c92\u7c97\u7c95\u7d46\u7d43\u7d71\u7d2e\u7d39\u7d3c\u7d40\u7d30\u7d33\u7d44\u7d2f\u7d42\u7d32\u7d31\u7f3d\u7f9e\u7f9a\u7fcc\u7fce\u7fd2\u801c\u804a\u8046\u812f\u8116\u8123\u812b\u8129\u8130\u8124\u8202\u8235\u8237\u8236\u8239\u838e\u839e\u8398\u8378\u83a2\u8396\u83bd\u83ab\u8392\u838a\u8393\u8389\u83a0\u8377\u837b\u837c" ], [ "b340", "\u8386\u83a7\u8655\u5f6a\u86c7\u86c0\u86b6\u86c4\u86b5\u86c6\u86cb\u86b1\u86af\u86c9\u8853\u889e\u8888\u88ab\u8892\u8896\u888d\u888b\u8993\u898f\u8a2a\u8a1d\u8a23\u8a25\u8a31\u8a2d\u8a1f\u8a1b\u8a22\u8c49\u8c5a\u8ca9\u8cac\u8cab\u8ca8\u8caa\u8ca7\u8d67\u8d66\u8dbe\u8dba\u8edb\u8edf\u9019\u900d\u901a\u9017\u9023\u901f\u901d\u9010\u9015\u901e\u9020\u900f\u9022\u9016\u901b\u9014" ], [ "b3a1", "\u90e8\u90ed\u90fd\u9157\u91ce\u91f5\u91e6\u91e3\u91e7\u91ed\u91e9\u9589\u966a\u9675\u9673\u9678\u9670\u9674\u9676\u9677\u966c\u96c0\u96ea\u96e9\u7ae0\u7adf\u9802\u9803\u9b5a\u9ce5\u9e75\u9e7f\u9ea5\u9ebb\u50a2\u508d\u5085\u5099\u5091\u5080\u5096\u5098\u509a\u6700\u51f1\u5272\u5274\u5275\u5269\u52de\u52dd\u52db\u535a\u53a5\u557b\u5580\u55a7\u557c\u558a\u559d\u5598\u5582\u559c\u55aa\u5594\u5587\u558b\u5583\u55b3\u55ae\u559f\u553e\u55b2\u559a\u55bb\u55ac\u55b1\u557e\u5589\u55ab\u5599\u570d\u582f\u582a\u5834\u5824\u5830\u5831\u5821\u581d\u5820\u58f9\u58fa\u5960" ], [ "b440", "\u5a77\u5a9a\u5a7f\u5a92\u5a9b\u5aa7\u5b73\u5b71\u5bd2\u5bcc\u5bd3\u5bd0\u5c0a\u5c0b\u5c31\u5d4c\u5d50\u5d34\u5d47\u5dfd\u5e45\u5e3d\u5e40\u5e43\u5e7e\u5eca\u5ec1\u5ec2\u5ec4\u5f3c\u5f6d\u5fa9\u5faa\u5fa8\u60d1\u60e1\u60b2\u60b6\u60e0\u611c\u6123\u60fa\u6115\u60f0\u60fb\u60f4\u6168\u60f1\u610e\u60f6\u6109\u6100\u6112\u621f\u6249\u63a3\u638c\u63cf\u63c0\u63e9\u63c9\u63c6\u63cd" ], [ "b4a1", "\u63d2\u63e3\u63d0\u63e1\u63d6\u63ed\u63ee\u6376\u63f4\u63ea\u63db\u6452\u63da\u63f9\u655e\u6566\u6562\u6563\u6591\u6590\u65af\u666e\u6670\u6674\u6676\u666f\u6691\u667a\u667e\u6677\u66fe\u66ff\u671f\u671d\u68fa\u68d5\u68e0\u68d8\u68d7\u6905\u68df\u68f5\u68ee\u68e7\u68f9\u68d2\u68f2\u68e3\u68cb\u68cd\u690d\u6912\u690e\u68c9\u68da\u696e\u68fb\u6b3e\u6b3a\u6b3d\u6b98\u6b96\u6bbc\u6bef\u6c2e\u6c2f\u6c2c\u6e2f\u6e38\u6e54\u6e21\u6e32\u6e67\u6e4a\u6e20\u6e25\u6e23\u6e1b\u6e5b\u6e58\u6e24\u6e56\u6e6e\u6e2d\u6e26\u6e6f\u6e34\u6e4d\u6e3a\u6e2c\u6e43\u6e1d\u6e3e\u6ecb" ], [ "b540", "\u6e89\u6e19\u6e4e\u6e63\u6e44\u6e72\u6e69\u6e5f\u7119\u711a\u7126\u7130\u7121\u7136\u716e\u711c\u724c\u7284\u7280\u7336\u7325\u7334\u7329\u743a\u742a\u7433\u7422\u7425\u7435\u7436\u7434\u742f\u741b\u7426\u7428\u7525\u7526\u756b\u756a\u75e2\u75db\u75e3\u75d9\u75d8\u75de\u75e0\u767b\u767c\u7696\u7693\u76b4\u76dc\u774f\u77ed\u785d\u786c\u786f\u7a0d\u7a08\u7a0b\u7a05\u7a00\u7a98" ], [ "b5a1", "\u7a97\u7a96\u7ae5\u7ae3\u7b49\u7b56\u7b46\u7b50\u7b52\u7b54\u7b4d\u7b4b\u7b4f\u7b51\u7c9f\u7ca5\u7d5e\u7d50\u7d68\u7d55\u7d2b\u7d6e\u7d72\u7d61\u7d66\u7d62\u7d70\u7d73\u5584\u7fd4\u7fd5\u800b\u8052\u8085\u8155\u8154\u814b\u8151\u814e\u8139\u8146\u813e\u814c\u8153\u8174\u8212\u821c\u83e9\u8403\u83f8\u840d\u83e0\u83c5\u840b\u83c1\u83ef\u83f1\u83f4\u8457\u840a\u83f0\u840c\u83cc\u83fd\u83f2\u83ca\u8438\u840e\u8404\u83dc\u8407\u83d4\u83df\u865b\u86df\u86d9\u86ed\u86d4\u86db\u86e4\u86d0\u86de\u8857\u88c1\u88c2\u88b1\u8983\u8996\u8a3b\u8a60\u8a55\u8a5e\u8a3c\u8a41" ], [ "b640", "\u8a54\u8a5b\u8a50\u8a46\u8a34\u8a3a\u8a36\u8a56\u8c61\u8c82\u8caf\u8cbc\u8cb3\u8cbd\u8cc1\u8cbb\u8cc0\u8cb4\u8cb7\u8cb6\u8cbf\u8cb8\u8d8a\u8d85\u8d81\u8dce\u8ddd\u8dcb\u8dda\u8dd1\u8dcc\u8ddb\u8dc6\u8efb\u8ef8\u8efc\u8f9c\u902e\u9035\u9031\u9038\u9032\u9036\u9102\u90f5\u9109\u90fe\u9163\u9165\u91cf\u9214\u9215\u9223\u9209\u921e\u920d\u9210\u9207\u9211\u9594\u958f\u958b\u9591" ], [ "b6a1", "\u9593\u9592\u958e\u968a\u968e\u968b\u967d\u9685\u9686\u968d\u9672\u9684\u96c1\u96c5\u96c4\u96c6\u96c7\u96ef\u96f2\u97cc\u9805\u9806\u9808\u98e7\u98ea\u98ef\u98e9\u98f2\u98ed\u99ae\u99ad\u9ec3\u9ecd\u9ed1\u4e82\u50ad\u50b5\u50b2\u50b3\u50c5\u50be\u50ac\u50b7\u50bb\u50af\u50c7\u527f\u5277\u527d\u52df\u52e6\u52e4\u52e2\u52e3\u532f\u55df\u55e8\u55d3\u55e6\u55ce\u55dc\u55c7\u55d1\u55e3\u55e4\u55ef\u55da\u55e1\u55c5\u55c6\u55e5\u55c9\u5712\u5713\u585e\u5851\u5858\u5857\u585a\u5854\u586b\u584c\u586d\u584a\u5862\u5852\u584b\u5967\u5ac1\u5ac9\u5acc\u5abe\u5abd\u5abc" ], [ "b740", "\u5ab3\u5ac2\u5ab2\u5d69\u5d6f\u5e4c\u5e79\u5ec9\u5ec8\u5f12\u5f59\u5fac\u5fae\u611a\u610f\u6148\u611f\u60f3\u611b\u60f9\u6101\u6108\u614e\u614c\u6144\u614d\u613e\u6134\u6127\u610d\u6106\u6137\u6221\u6222\u6413\u643e\u641e\u642a\u642d\u643d\u642c\u640f\u641c\u6414\u640d\u6436\u6416\u6417\u6406\u656c\u659f\u65b0\u6697\u6689\u6687\u6688\u6696\u6684\u6698\u668d\u6703\u6994\u696d" ], [ "b7a1", "\u695a\u6977\u6960\u6954\u6975\u6930\u6982\u694a\u6968\u696b\u695e\u6953\u6979\u6986\u695d\u6963\u695b\u6b47\u6b72\u6bc0\u6bbf\u6bd3\u6bfd\u6ea2\u6eaf\u6ed3\u6eb6\u6ec2\u6e90\u6e9d\u6ec7\u6ec5\u6ea5\u6e98\u6ebc\u6eba\u6eab\u6ed1\u6e96\u6e9c\u6ec4\u6ed4\u6eaa\u6ea7\u6eb4\u714e\u7159\u7169\u7164\u7149\u7167\u715c\u716c\u7166\u714c\u7165\u715e\u7146\u7168\u7156\u723a\u7252\u7337\u7345\u733f\u733e\u746f\u745a\u7455\u745f\u745e\u7441\u743f\u7459\u745b\u745c\u7576\u7578\u7600\u75f0\u7601\u75f2\u75f1\u75fa\u75ff\u75f4\u75f3\u76de\u76df\u775b\u776b\u7766\u775e\u7763" ], [ "b840", "\u7779\u776a\u776c\u775c\u7765\u7768\u7762\u77ee\u788e\u78b0\u7897\u7898\u788c\u7889\u787c\u7891\u7893\u787f\u797a\u797f\u7981\u842c\u79bd\u7a1c\u7a1a\u7a20\u7a14\u7a1f\u7a1e\u7a9f\u7aa0\u7b77\u7bc0\u7b60\u7b6e\u7b67\u7cb1\u7cb3\u7cb5\u7d93\u7d79\u7d91\u7d81\u7d8f\u7d5b\u7f6e\u7f69\u7f6a\u7f72\u7fa9\u7fa8\u7fa4\u8056\u8058\u8086\u8084\u8171\u8170\u8178\u8165\u816e\u8173\u816b" ], [ "b8a1", "\u8179\u817a\u8166\u8205\u8247\u8482\u8477\u843d\u8431\u8475\u8466\u846b\u8449\u846c\u845b\u843c\u8435\u8461\u8463\u8469\u846d\u8446\u865e\u865c\u865f\u86f9\u8713\u8708\u8707\u8700\u86fe\u86fb\u8702\u8703\u8706\u870a\u8859\u88df\u88d4\u88d9\u88dc\u88d8\u88dd\u88e1\u88ca\u88d5\u88d2\u899c\u89e3\u8a6b\u8a72\u8a73\u8a66\u8a69\u8a70\u8a87\u8a7c\u8a63\u8aa0\u8a71\u8a85\u8a6d\u8a62\u8a6e\u8a6c\u8a79\u8a7b\u8a3e\u8a68\u8c62\u8c8a\u8c89\u8cca\u8cc7\u8cc8\u8cc4\u8cb2\u8cc3\u8cc2\u8cc5\u8de1\u8ddf\u8de8\u8def\u8df3\u8dfa\u8dea\u8de4\u8de6\u8eb2\u8f03\u8f09\u8efe\u8f0a" ], [ "b940", "\u8f9f\u8fb2\u904b\u904a\u9053\u9042\u9054\u903c\u9055\u9050\u9047\u904f\u904e\u904d\u9051\u903e\u9041\u9112\u9117\u916c\u916a\u9169\u91c9\u9237\u9257\u9238\u923d\u9240\u923e\u925b\u924b\u9264\u9251\u9234\u9249\u924d\u9245\u9239\u923f\u925a\u9598\u9698\u9694\u9695\u96cd\u96cb\u96c9\u96ca\u96f7\u96fb\u96f9\u96f6\u9756\u9774\u9776\u9810\u9811\u9813\u980a\u9812\u980c\u98fc\u98f4" ], [ "b9a1", "\u98fd\u98fe\u99b3\u99b1\u99b4\u9ae1\u9ce9\u9e82\u9f0e\u9f13\u9f20\u50e7\u50ee\u50e5\u50d6\u50ed\u50da\u50d5\u50cf\u50d1\u50f1\u50ce\u50e9\u5162\u51f3\u5283\u5282\u5331\u53ad\u55fe\u5600\u561b\u5617\u55fd\u5614\u5606\u5609\u560d\u560e\u55f7\u5616\u561f\u5608\u5610\u55f6\u5718\u5716\u5875\u587e\u5883\u5893\u588a\u5879\u5885\u587d\u58fd\u5925\u5922\u5924\u596a\u5969\u5ae1\u5ae6\u5ae9\u5ad7\u5ad6\u5ad8\u5ae3\u5b75\u5bde\u5be7\u5be1\u5be5\u5be6\u5be8\u5be2\u5be4\u5bdf\u5c0d\u5c62\u5d84\u5d87\u5e5b\u5e63\u5e55\u5e57\u5e54\u5ed3\u5ed6\u5f0a\u5f46\u5f70\u5fb9\u6147" ], [ "ba40", "\u613f\u614b\u6177\u6162\u6163\u615f\u615a\u6158\u6175\u622a\u6487\u6458\u6454\u64a4\u6478\u645f\u647a\u6451\u6467\u6434\u646d\u647b\u6572\u65a1\u65d7\u65d6\u66a2\u66a8\u669d\u699c\u69a8\u6995\u69c1\u69ae\u69d3\u69cb\u699b\u69b7\u69bb\u69ab\u69b4\u69d0\u69cd\u69ad\u69cc\u69a6\u69c3\u69a3\u6b49\u6b4c\u6c33\u6f33\u6f14\u6efe\u6f13\u6ef4\u6f29\u6f3e\u6f20\u6f2c\u6f0f\u6f02\u6f22" ], [ "baa1", "\u6eff\u6eef\u6f06\u6f31\u6f38\u6f32\u6f23\u6f15\u6f2b\u6f2f\u6f88\u6f2a\u6eec\u6f01\u6ef2\u6ecc\u6ef7\u7194\u7199\u717d\u718a\u7184\u7192\u723e\u7292\u7296\u7344\u7350\u7464\u7463\u746a\u7470\u746d\u7504\u7591\u7627\u760d\u760b\u7609\u7613\u76e1\u76e3\u7784\u777d\u777f\u7761\u78c1\u789f\u78a7\u78b3\u78a9\u78a3\u798e\u798f\u798d\u7a2e\u7a31\u7aaa\u7aa9\u7aed\u7aef\u7ba1\u7b95\u7b8b\u7b75\u7b97\u7b9d\u7b94\u7b8f\u7bb8\u7b87\u7b84\u7cb9\u7cbd\u7cbe\u7dbb\u7db0\u7d9c\u7dbd\u7dbe\u7da0\u7dca\u7db4\u7db2\u7db1\u7dba\u7da2\u7dbf\u7db5\u7db8\u7dad\u7dd2\u7dc7\u7dac" ], [ "bb40", "\u7f70\u7fe0\u7fe1\u7fdf\u805e\u805a\u8087\u8150\u8180\u818f\u8188\u818a\u817f\u8182\u81e7\u81fa\u8207\u8214\u821e\u824b\u84c9\u84bf\u84c6\u84c4\u8499\u849e\u84b2\u849c\u84cb\u84b8\u84c0\u84d3\u8490\u84bc\u84d1\u84ca\u873f\u871c\u873b\u8722\u8725\u8734\u8718\u8755\u8737\u8729\u88f3\u8902\u88f4\u88f9\u88f8\u88fd\u88e8\u891a\u88ef\u8aa6\u8a8c\u8a9e\u8aa3\u8a8d\u8aa1\u8a93\u8aa4" ], [ "bba1", "\u8aaa\u8aa5\u8aa8\u8a98\u8a91\u8a9a\u8aa7\u8c6a\u8c8d\u8c8c\u8cd3\u8cd1\u8cd2\u8d6b\u8d99\u8d95\u8dfc\u8f14\u8f12\u8f15\u8f13\u8fa3\u9060\u9058\u905c\u9063\u9059\u905e\u9062\u905d\u905b\u9119\u9118\u911e\u9175\u9178\u9177\u9174\u9278\u9280\u9285\u9298\u9296\u927b\u9293\u929c\u92a8\u927c\u9291\u95a1\u95a8\u95a9\u95a3\u95a5\u95a4\u9699\u969c\u969b\u96cc\u96d2\u9700\u977c\u9785\u97f6\u9817\u9818\u98af\u98b1\u9903\u9905\u990c\u9909\u99c1\u9aaf\u9ab0\u9ae6\u9b41\u9b42\u9cf4\u9cf6\u9cf3\u9ebc\u9f3b\u9f4a\u5104\u5100\u50fb\u50f5\u50f9\u5102\u5108\u5109\u5105\u51dc" ], [ "bc40", "\u5287\u5288\u5289\u528d\u528a\u52f0\u53b2\u562e\u563b\u5639\u5632\u563f\u5634\u5629\u5653\u564e\u5657\u5674\u5636\u562f\u5630\u5880\u589f\u589e\u58b3\u589c\u58ae\u58a9\u58a6\u596d\u5b09\u5afb\u5b0b\u5af5\u5b0c\u5b08\u5bee\u5bec\u5be9\u5beb\u5c64\u5c65\u5d9d\u5d94\u5e62\u5e5f\u5e61\u5ee2\u5eda\u5edf\u5edd\u5ee3\u5ee0\u5f48\u5f71\u5fb7\u5fb5\u6176\u6167\u616e\u615d\u6155\u6182" ], [ "bca1", "\u617c\u6170\u616b\u617e\u61a7\u6190\u61ab\u618e\u61ac\u619a\u61a4\u6194\u61ae\u622e\u6469\u646f\u6479\u649e\u64b2\u6488\u6490\u64b0\u64a5\u6493\u6495\u64a9\u6492\u64ae\u64ad\u64ab\u649a\u64ac\u6499\u64a2\u64b3\u6575\u6577\u6578\u66ae\u66ab\u66b4\u66b1\u6a23\u6a1f\u69e8\u6a01\u6a1e\u6a19\u69fd\u6a21\u6a13\u6a0a\u69f3\u6a02\u6a05\u69ed\u6a11\u6b50\u6b4e\u6ba4\u6bc5\u6bc6\u6f3f\u6f7c\u6f84\u6f51\u6f66\u6f54\u6f86\u6f6d\u6f5b\u6f78\u6f6e\u6f8e\u6f7a\u6f70\u6f64\u6f97\u6f58\u6ed5\u6f6f\u6f60\u6f5f\u719f\u71ac\u71b1\u71a8\u7256\u729b\u734e\u7357\u7469\u748b\u7483" ], [ "bd40", "\u747e\u7480\u757f\u7620\u7629\u761f\u7624\u7626\u7621\u7622\u769a\u76ba\u76e4\u778e\u7787\u778c\u7791\u778b\u78cb\u78c5\u78ba\u78ca\u78be\u78d5\u78bc\u78d0\u7a3f\u7a3c\u7a40\u7a3d\u7a37\u7a3b\u7aaf\u7aae\u7bad\u7bb1\u7bc4\u7bb4\u7bc6\u7bc7\u7bc1\u7ba0\u7bcc\u7cca\u7de0\u7df4\u7def\u7dfb\u7dd8\u7dec\u7ddd\u7de8\u7de3\u7dda\u7dde\u7de9\u7d9e\u7dd9\u7df2\u7df9\u7f75\u7f77\u7faf" ], [ "bda1", "\u7fe9\u8026\u819b\u819c\u819d\u81a0\u819a\u8198\u8517\u853d\u851a\u84ee\u852c\u852d\u8513\u8511\u8523\u8521\u8514\u84ec\u8525\u84ff\u8506\u8782\u8774\u8776\u8760\u8766\u8778\u8768\u8759\u8757\u874c\u8753\u885b\u885d\u8910\u8907\u8912\u8913\u8915\u890a\u8abc\u8ad2\u8ac7\u8ac4\u8a95\u8acb\u8af8\u8ab2\u8ac9\u8ac2\u8abf\u8ab0\u8ad6\u8acd\u8ab6\u8ab9\u8adb\u8c4c\u8c4e\u8c6c\u8ce0\u8cde\u8ce6\u8ce4\u8cec\u8ced\u8ce2\u8ce3\u8cdc\u8cea\u8ce1\u8d6d\u8d9f\u8da3\u8e2b\u8e10\u8e1d\u8e22\u8e0f\u8e29\u8e1f\u8e21\u8e1e\u8eba\u8f1d\u8f1b\u8f1f\u8f29\u8f26\u8f2a\u8f1c\u8f1e" ], [ "be40", "\u8f25\u9069\u906e\u9068\u906d\u9077\u9130\u912d\u9127\u9131\u9187\u9189\u918b\u9183\u92c5\u92bb\u92b7\u92ea\u92ac\u92e4\u92c1\u92b3\u92bc\u92d2\u92c7\u92f0\u92b2\u95ad\u95b1\u9704\u9706\u9707\u9709\u9760\u978d\u978b\u978f\u9821\u982b\u981c\u98b3\u990a\u9913\u9912\u9918\u99dd\u99d0\u99df\u99db\u99d1\u99d5\u99d2\u99d9\u9ab7\u9aee\u9aef\u9b27\u9b45\u9b44\u9b77\u9b6f\u9d06\u9d09" ], [ "bea1", "\u9d03\u9ea9\u9ebe\u9ece\u58a8\u9f52\u5112\u5118\u5114\u5110\u5115\u5180\u51aa\u51dd\u5291\u5293\u52f3\u5659\u566b\u5679\u5669\u5664\u5678\u566a\u5668\u5665\u5671\u566f\u566c\u5662\u5676\u58c1\u58be\u58c7\u58c5\u596e\u5b1d\u5b34\u5b78\u5bf0\u5c0e\u5f4a\u61b2\u6191\u61a9\u618a\u61cd\u61b6\u61be\u61ca\u61c8\u6230\u64c5\u64c1\u64cb\u64bb\u64bc\u64da\u64c4\u64c7\u64c2\u64cd\u64bf\u64d2\u64d4\u64be\u6574\u66c6\u66c9\u66b9\u66c4\u66c7\u66b8\u6a3d\u6a38\u6a3a\u6a59\u6a6b\u6a58\u6a39\u6a44\u6a62\u6a61\u6a4b\u6a47\u6a35\u6a5f\u6a48\u6b59\u6b77\u6c05\u6fc2\u6fb1\u6fa1" ], [ "bf40", "\u6fc3\u6fa4\u6fc1\u6fa7\u6fb3\u6fc0\u6fb9\u6fb6\u6fa6\u6fa0\u6fb4\u71be\u71c9\u71d0\u71d2\u71c8\u71d5\u71b9\u71ce\u71d9\u71dc\u71c3\u71c4\u7368\u749c\u74a3\u7498\u749f\u749e\u74e2\u750c\u750d\u7634\u7638\u763a\u76e7\u76e5\u77a0\u779e\u779f\u77a5\u78e8\u78da\u78ec\u78e7\u79a6\u7a4d\u7a4e\u7a46\u7a4c\u7a4b\u7aba\u7bd9\u7c11\u7bc9\u7be4\u7bdb\u7be1\u7be9\u7be6\u7cd5\u7cd6\u7e0a" ], [ "bfa1", "\u7e11\u7e08\u7e1b\u7e23\u7e1e\u7e1d\u7e09\u7e10\u7f79\u7fb2\u7ff0\u7ff1\u7fee\u8028\u81b3\u81a9\u81a8\u81fb\u8208\u8258\u8259\u854a\u8559\u8548\u8568\u8569\u8543\u8549\u856d\u856a\u855e\u8783\u879f\u879e\u87a2\u878d\u8861\u892a\u8932\u8925\u892b\u8921\u89aa\u89a6\u8ae6\u8afa\u8aeb\u8af1\u8b00\u8adc\u8ae7\u8aee\u8afe\u8b01\u8b02\u8af7\u8aed\u8af3\u8af6\u8afc\u8c6b\u8c6d\u8c93\u8cf4\u8e44\u8e31\u8e34\u8e42\u8e39\u8e35\u8f3b\u8f2f\u8f38\u8f33\u8fa8\u8fa6\u9075\u9074\u9078\u9072\u907c\u907a\u9134\u9192\u9320\u9336\u92f8\u9333\u932f\u9322\u92fc\u932b\u9304\u931a" ], [ "c040", "\u9310\u9326\u9321\u9315\u932e\u9319\u95bb\u96a7\u96a8\u96aa\u96d5\u970e\u9711\u9716\u970d\u9713\u970f\u975b\u975c\u9766\u9798\u9830\u9838\u983b\u9837\u982d\u9839\u9824\u9910\u9928\u991e\u991b\u9921\u991a\u99ed\u99e2\u99f1\u9ab8\u9abc\u9afb\u9aed\u9b28\u9b91\u9d15\u9d23\u9d26\u9d28\u9d12\u9d1b\u9ed8\u9ed4\u9f8d\u9f9c\u512a\u511f\u5121\u5132\u52f5\u568e\u5680\u5690\u5685\u5687" ], [ "c0a1", "\u568f\u58d5\u58d3\u58d1\u58ce\u5b30\u5b2a\u5b24\u5b7a\u5c37\u5c68\u5dbc\u5dba\u5dbd\u5db8\u5e6b\u5f4c\u5fbd\u61c9\u61c2\u61c7\u61e6\u61cb\u6232\u6234\u64ce\u64ca\u64d8\u64e0\u64f0\u64e6\u64ec\u64f1\u64e2\u64ed\u6582\u6583\u66d9\u66d6\u6a80\u6a94\u6a84\u6aa2\u6a9c\u6adb\u6aa3\u6a7e\u6a97\u6a90\u6aa0\u6b5c\u6bae\u6bda\u6c08\u6fd8\u6ff1\u6fdf\u6fe0\u6fdb\u6fe4\u6feb\u6fef\u6f80\u6fec\u6fe1\u6fe9\u6fd5\u6fee\u6ff0\u71e7\u71df\u71ee\u71e6\u71e5\u71ed\u71ec\u71f4\u71e0\u7235\u7246\u7370\u7372\u74a9\u74b0\u74a6\u74a8\u7646\u7642\u764c\u76ea\u77b3\u77aa\u77b0\u77ac" ], [ "c140", "\u77a7\u77ad\u77ef\u78f7\u78fa\u78f4\u78ef\u7901\u79a7\u79aa\u7a57\u7abf\u7c07\u7c0d\u7bfe\u7bf7\u7c0c\u7be0\u7ce0\u7cdc\u7cde\u7ce2\u7cdf\u7cd9\u7cdd\u7e2e\u7e3e\u7e46\u7e37\u7e32\u7e43\u7e2b\u7e3d\u7e31\u7e45\u7e41\u7e34\u7e39\u7e48\u7e35\u7e3f\u7e2f\u7f44\u7ff3\u7ffc\u8071\u8072\u8070\u806f\u8073\u81c6\u81c3\u81ba\u81c2\u81c0\u81bf\u81bd\u81c9\u81be\u81e8\u8209\u8271\u85aa" ], [ "c1a1", "\u8584\u857e\u859c\u8591\u8594\u85af\u859b\u8587\u85a8\u858a\u8667\u87c0\u87d1\u87b3\u87d2\u87c6\u87ab\u87bb\u87ba\u87c8\u87cb\u893b\u8936\u8944\u8938\u893d\u89ac\u8b0e\u8b17\u8b19\u8b1b\u8b0a\u8b20\u8b1d\u8b04\u8b10\u8c41\u8c3f\u8c73\u8cfa\u8cfd\u8cfc\u8cf8\u8cfb\u8da8\u8e49\u8e4b\u8e48\u8e4a\u8f44\u8f3e\u8f42\u8f45\u8f3f\u907f\u907d\u9084\u9081\u9082\u9080\u9139\u91a3\u919e\u919c\u934d\u9382\u9328\u9375\u934a\u9365\u934b\u9318\u937e\u936c\u935b\u9370\u935a\u9354\u95ca\u95cb\u95cc\u95c8\u95c6\u96b1\u96b8\u96d6\u971c\u971e\u97a0\u97d3\u9846\u98b6\u9935\u9a01" ], [ "c240", "\u99ff\u9bae\u9bab\u9baa\u9bad\u9d3b\u9d3f\u9e8b\u9ecf\u9ede\u9edc\u9edd\u9edb\u9f3e\u9f4b\u53e2\u5695\u56ae\u58d9\u58d8\u5b38\u5f5d\u61e3\u6233\u64f4\u64f2\u64fe\u6506\u64fa\u64fb\u64f7\u65b7\u66dc\u6726\u6ab3\u6aac\u6ac3\u6abb\u6ab8\u6ac2\u6aae\u6aaf\u6b5f\u6b78\u6baf\u7009\u700b\u6ffe\u7006\u6ffa\u7011\u700f\u71fb\u71fc\u71fe\u71f8\u7377\u7375\u74a7\u74bf\u7515\u7656\u7658" ], [ "c2a1", "\u7652\u77bd\u77bf\u77bb\u77bc\u790e\u79ae\u7a61\u7a62\u7a60\u7ac4\u7ac5\u7c2b\u7c27\u7c2a\u7c1e\u7c23\u7c21\u7ce7\u7e54\u7e55\u7e5e\u7e5a\u7e61\u7e52\u7e59\u7f48\u7ff9\u7ffb\u8077\u8076\u81cd\u81cf\u820a\u85cf\u85a9\u85cd\u85d0\u85c9\u85b0\u85ba\u85b9\u85a6\u87ef\u87ec\u87f2\u87e0\u8986\u89b2\u89f4\u8b28\u8b39\u8b2c\u8b2b\u8c50\u8d05\u8e59\u8e63\u8e66\u8e64\u8e5f\u8e55\u8ec0\u8f49\u8f4d\u9087\u9083\u9088\u91ab\u91ac\u91d0\u9394\u938a\u9396\u93a2\u93b3\u93ae\u93ac\u93b0\u9398\u939a\u9397\u95d4\u95d6\u95d0\u95d5\u96e2\u96dc\u96d9\u96db\u96de\u9724\u97a3\u97a6" ], [ "c340", "\u97ad\u97f9\u984d\u984f\u984c\u984e\u9853\u98ba\u993e\u993f\u993d\u992e\u99a5\u9a0e\u9ac1\u9b03\u9b06\u9b4f\u9b4e\u9b4d\u9bca\u9bc9\u9bfd\u9bc8\u9bc0\u9d51\u9d5d\u9d60\u9ee0\u9f15\u9f2c\u5133\u56a5\u58de\u58df\u58e2\u5bf5\u9f90\u5eec\u61f2\u61f7\u61f6\u61f5\u6500\u650f\u66e0\u66dd\u6ae5\u6add\u6ada\u6ad3\u701b\u701f\u7028\u701a\u701d\u7015\u7018\u7206\u720d\u7258\u72a2\u7378" ], [ "c3a1", "\u737a\u74bd\u74ca\u74e3\u7587\u7586\u765f\u7661\u77c7\u7919\u79b1\u7a6b\u7a69\u7c3e\u7c3f\u7c38\u7c3d\u7c37\u7c40\u7e6b\u7e6d\u7e79\u7e69\u7e6a\u7f85\u7e73\u7fb6\u7fb9\u7fb8\u81d8\u85e9\u85dd\u85ea\u85d5\u85e4\u85e5\u85f7\u87fb\u8805\u880d\u87f9\u87fe\u8960\u895f\u8956\u895e\u8b41\u8b5c\u8b58\u8b49\u8b5a\u8b4e\u8b4f\u8b46\u8b59\u8d08\u8d0a\u8e7c\u8e72\u8e87\u8e76\u8e6c\u8e7a\u8e74\u8f54\u8f4e\u8fad\u908a\u908b\u91b1\u91ae\u93e1\u93d1\u93df\u93c3\u93c8\u93dc\u93dd\u93d6\u93e2\u93cd\u93d8\u93e4\u93d7\u93e8\u95dc\u96b4\u96e3\u972a\u9727\u9761\u97dc\u97fb\u985e" ], [ "c440", "\u9858\u985b\u98bc\u9945\u9949\u9a16\u9a19\u9b0d\u9be8\u9be7\u9bd6\u9bdb\u9d89\u9d61\u9d72\u9d6a\u9d6c\u9e92\u9e97\u9e93\u9eb4\u52f8\u56a8\u56b7\u56b6\u56b4\u56bc\u58e4\u5b40\u5b43\u5b7d\u5bf6\u5dc9\u61f8\u61fa\u6518\u6514\u6519\u66e6\u6727\u6aec\u703e\u7030\u7032\u7210\u737b\u74cf\u7662\u7665\u7926\u792a\u792c\u792b\u7ac7\u7af6\u7c4c\u7c43\u7c4d\u7cef\u7cf0\u8fae\u7e7d\u7e7c" ], [ "c4a1", "\u7e82\u7f4c\u8000\u81da\u8266\u85fb\u85f9\u8611\u85fa\u8606\u860b\u8607\u860a\u8814\u8815\u8964\u89ba\u89f8\u8b70\u8b6c\u8b66\u8b6f\u8b5f\u8b6b\u8d0f\u8d0d\u8e89\u8e81\u8e85\u8e82\u91b4\u91cb\u9418\u9403\u93fd\u95e1\u9730\u98c4\u9952\u9951\u99a8\u9a2b\u9a30\u9a37\u9a35\u9c13\u9c0d\u9e79\u9eb5\u9ee8\u9f2f\u9f5f\u9f63\u9f61\u5137\u5138\u56c1\u56c0\u56c2\u5914\u5c6c\u5dcd\u61fc\u61fe\u651d\u651c\u6595\u66e9\u6afb\u6b04\u6afa\u6bb2\u704c\u721b\u72a7\u74d6\u74d4\u7669\u77d3\u7c50\u7e8f\u7e8c\u7fbc\u8617\u862d\u861a\u8823\u8822\u8821\u881f\u896a\u896c\u89bd\u8b74" ], [ "c540", "\u8b77\u8b7d\u8d13\u8e8a\u8e8d\u8e8b\u8f5f\u8faf\u91ba\u942e\u9433\u9435\u943a\u9438\u9432\u942b\u95e2\u9738\u9739\u9732\u97ff\u9867\u9865\u9957\u9a45\u9a43\u9a40\u9a3e\u9acf\u9b54\u9b51\u9c2d\u9c25\u9daf\u9db4\u9dc2\u9db8\u9e9d\u9eef\u9f19\u9f5c\u9f66\u9f67\u513c\u513b\u56c8\u56ca\u56c9\u5b7f\u5dd4\u5dd2\u5f4e\u61ff\u6524\u6b0a\u6b61\u7051\u7058\u7380\u74e4\u758a\u766e\u766c" ], [ "c5a1", "\u79b3\u7c60\u7c5f\u807e\u807d\u81df\u8972\u896f\u89fc\u8b80\u8d16\u8d17\u8e91\u8e93\u8f61\u9148\u9444\u9451\u9452\u973d\u973e\u97c3\u97c1\u986b\u9955\u9a55\u9a4d\u9ad2\u9b1a\u9c49\u9c31\u9c3e\u9c3b\u9dd3\u9dd7\u9f34\u9f6c\u9f6a\u9f94\u56cc\u5dd6\u6200\u6523\u652b\u652a\u66ec\u6b10\u74da\u7aca\u7c64\u7c63\u7c65\u7e93\u7e96\u7e94\u81e2\u8638\u863f\u8831\u8b8a\u9090\u908f\u9463\u9460\u9464\u9768\u986f\u995c\u9a5a\u9a5b\u9a57\u9ad3\u9ad4\u9ad1\u9c54\u9c57\u9c56\u9de5\u9e9f\u9ef4\u56d1\u58e9\u652c\u705e\u7671\u7672\u77d7\u7f50\u7f88\u8836\u8839\u8862\u8b93\u8b92" ], [ "c640", "\u8b96\u8277\u8d1b\u91c0\u946a\u9742\u9748\u9744\u97c6\u9870\u9a5f\u9b22\u9b58\u9c5f\u9df9\u9dfa\u9e7c\u9e7d\u9f07\u9f77\u9f72\u5ef3\u6b16\u7063\u7c6c\u7c6e\u883b\u89c0\u8ea1\u91c1\u9472\u9470\u9871\u995e\u9ad6\u9b23\u9ecc\u7064\u77da\u8b9a\u9477\u97c9\u9a62\u9a65\u7e9c\u8b9c\u8eaa\u91c5\u947d\u947e\u947c\u9c77\u9c78\u9ef7\u8c54\u947f\u9e1a\u7228\u9a6a\u9b31\u9e1b\u9e1e\u7c72" ], [ "c940", "\u4e42\u4e5c\u51f5\u531a\u5382\u4e07\u4e0c\u4e47\u4e8d\u56d7\ufa0c\u5c6e\u5f73\u4e0f\u5187\u4e0e\u4e2e\u4e93\u4ec2\u4ec9\u4ec8\u5198\u52fc\u536c\u53b9\u5720\u5903\u592c\u5c10\u5dff\u65e1\u6bb3\u6bcc\u6c14\u723f\u4e31\u4e3c\u4ee8\u4edc\u4ee9\u4ee1\u4edd\u4eda\u520c\u531c\u534c\u5722\u5723\u5917\u592f\u5b81\u5b84\u5c12\u5c3b\u5c74\u5c73\u5e04\u5e80\u5e82\u5fc9\u6209\u6250\u6c15" ], [ "c9a1", "\u6c36\u6c43\u6c3f\u6c3b\u72ae\u72b0\u738a\u79b8\u808a\u961e\u4f0e\u4f18\u4f2c\u4ef5\u4f14\u4ef1\u4f00\u4ef7\u4f08\u4f1d\u4f02\u4f05\u4f22\u4f13\u4f04\u4ef4\u4f12\u51b1\u5213\u5209\u5210\u52a6\u5322\u531f\u534d\u538a\u5407\u56e1\u56df\u572e\u572a\u5734\u593c\u5980\u597c\u5985\u597b\u597e\u5977\u597f\u5b56\u5c15\u5c25\u5c7c\u5c7a\u5c7b\u5c7e\u5ddf\u5e75\u5e84\u5f02\u5f1a\u5f74\u5fd5\u5fd4\u5fcf\u625c\u625e\u6264\u6261\u6266\u6262\u6259\u6260\u625a\u6265\u65ef\u65ee\u673e\u6739\u6738\u673b\u673a\u673f\u673c\u6733\u6c18\u6c46\u6c52\u6c5c\u6c4f\u6c4a\u6c54\u6c4b" ], [ "ca40", "\u6c4c\u7071\u725e\u72b4\u72b5\u738e\u752a\u767f\u7a75\u7f51\u8278\u827c\u8280\u827d\u827f\u864d\u897e\u9099\u9097\u9098\u909b\u9094\u9622\u9624\u9620\u9623\u4f56\u4f3b\u4f62\u4f49\u4f53\u4f64\u4f3e\u4f67\u4f52\u4f5f\u4f41\u4f58\u4f2d\u4f33\u4f3f\u4f61\u518f\u51b9\u521c\u521e\u5221\u52ad\u52ae\u5309\u5363\u5372\u538e\u538f\u5430\u5437\u542a\u5454\u5445\u5419\u541c\u5425\u5418" ], [ "caa1", "\u543d\u544f\u5441\u5428\u5424\u5447\u56ee\u56e7\u56e5\u5741\u5745\u574c\u5749\u574b\u5752\u5906\u5940\u59a6\u5998\u59a0\u5997\u598e\u59a2\u5990\u598f\u59a7\u59a1\u5b8e\u5b92\u5c28\u5c2a\u5c8d\u5c8f\u5c88\u5c8b\u5c89\u5c92\u5c8a\u5c86\u5c93\u5c95\u5de0\u5e0a\u5e0e\u5e8b\u5e89\u5e8c\u5e88\u5e8d\u5f05\u5f1d\u5f78\u5f76\u5fd2\u5fd1\u5fd0\u5fed\u5fe8\u5fee\u5ff3\u5fe1\u5fe4\u5fe3\u5ffa\u5fef\u5ff7\u5ffb\u6000\u5ff4\u623a\u6283\u628c\u628e\u628f\u6294\u6287\u6271\u627b\u627a\u6270\u6281\u6288\u6277\u627d\u6272\u6274\u6537\u65f0\u65f4\u65f3\u65f2\u65f5\u6745\u6747" ], [ "cb40", "\u6759\u6755\u674c\u6748\u675d\u674d\u675a\u674b\u6bd0\u6c19\u6c1a\u6c78\u6c67\u6c6b\u6c84\u6c8b\u6c8f\u6c71\u6c6f\u6c69\u6c9a\u6c6d\u6c87\u6c95\u6c9c\u6c66\u6c73\u6c65\u6c7b\u6c8e\u7074\u707a\u7263\u72bf\u72bd\u72c3\u72c6\u72c1\u72ba\u72c5\u7395\u7397\u7393\u7394\u7392\u753a\u7539\u7594\u7595\u7681\u793d\u8034\u8095\u8099\u8090\u8092\u809c\u8290\u828f\u8285\u828e\u8291\u8293" ], [ "cba1", "\u828a\u8283\u8284\u8c78\u8fc9\u8fbf\u909f\u90a1\u90a5\u909e\u90a7\u90a0\u9630\u9628\u962f\u962d\u4e33\u4f98\u4f7c\u4f85\u4f7d\u4f80\u4f87\u4f76\u4f74\u4f89\u4f84\u4f77\u4f4c\u4f97\u4f6a\u4f9a\u4f79\u4f81\u4f78\u4f90\u4f9c\u4f94\u4f9e\u4f92\u4f82\u4f95\u4f6b\u4f6e\u519e\u51bc\u51be\u5235\u5232\u5233\u5246\u5231\u52bc\u530a\u530b\u533c\u5392\u5394\u5487\u547f\u5481\u5491\u5482\u5488\u546b\u547a\u547e\u5465\u546c\u5474\u5466\u548d\u546f\u5461\u5460\u5498\u5463\u5467\u5464\u56f7\u56f9\u576f\u5772\u576d\u576b\u5771\u5770\u5776\u5780\u5775\u577b\u5773\u5774\u5762" ], [ "cc40", "\u5768\u577d\u590c\u5945\u59b5\u59ba\u59cf\u59ce\u59b2\u59cc\u59c1\u59b6\u59bc\u59c3\u59d6\u59b1\u59bd\u59c0\u59c8\u59b4\u59c7\u5b62\u5b65\u5b93\u5b95\u5c44\u5c47\u5cae\u5ca4\u5ca0\u5cb5\u5caf\u5ca8\u5cac\u5c9f\u5ca3\u5cad\u5ca2\u5caa\u5ca7\u5c9d\u5ca5\u5cb6\u5cb0\u5ca6\u5e17\u5e14\u5e19\u5f28\u5f22\u5f23\u5f24\u5f54\u5f82\u5f7e\u5f7d\u5fde\u5fe5\u602d\u6026\u6019\u6032\u600b" ], [ "cca1", "\u6034\u600a\u6017\u6033\u601a\u601e\u602c\u6022\u600d\u6010\u602e\u6013\u6011\u600c\u6009\u601c\u6214\u623d\u62ad\u62b4\u62d1\u62be\u62aa\u62b6\u62ca\u62ae\u62b3\u62af\u62bb\u62a9\u62b0\u62b8\u653d\u65a8\u65bb\u6609\u65fc\u6604\u6612\u6608\u65fb\u6603\u660b\u660d\u6605\u65fd\u6611\u6610\u66f6\u670a\u6785\u676c\u678e\u6792\u6776\u677b\u6798\u6786\u6784\u6774\u678d\u678c\u677a\u679f\u6791\u6799\u6783\u677d\u6781\u6778\u6779\u6794\u6b25\u6b80\u6b7e\u6bde\u6c1d\u6c93\u6cec\u6ceb\u6cee\u6cd9\u6cb6\u6cd4\u6cad\u6ce7\u6cb7\u6cd0\u6cc2\u6cba\u6cc3\u6cc6\u6ced\u6cf2" ], [ "cd40", "\u6cd2\u6cdd\u6cb4\u6c8a\u6c9d\u6c80\u6cde\u6cc0\u6d30\u6ccd\u6cc7\u6cb0\u6cf9\u6ccf\u6ce9\u6cd1\u7094\u7098\u7085\u7093\u7086\u7084\u7091\u7096\u7082\u709a\u7083\u726a\u72d6\u72cb\u72d8\u72c9\u72dc\u72d2\u72d4\u72da\u72cc\u72d1\u73a4\u73a1\u73ad\u73a6\u73a2\u73a0\u73ac\u739d\u74dd\u74e8\u753f\u7540\u753e\u758c\u7598\u76af\u76f3\u76f1\u76f0\u76f5\u77f8\u77fc\u77f9\u77fb\u77fa" ], [ "cda1", "\u77f7\u7942\u793f\u79c5\u7a78\u7a7b\u7afb\u7c75\u7cfd\u8035\u808f\u80ae\u80a3\u80b8\u80b5\u80ad\u8220\u82a0\u82c0\u82ab\u829a\u8298\u829b\u82b5\u82a7\u82ae\u82bc\u829e\u82ba\u82b4\u82a8\u82a1\u82a9\u82c2\u82a4\u82c3\u82b6\u82a2\u8670\u866f\u866d\u866e\u8c56\u8fd2\u8fcb\u8fd3\u8fcd\u8fd6\u8fd5\u8fd7\u90b2\u90b4\u90af\u90b3\u90b0\u9639\u963d\u963c\u963a\u9643\u4fcd\u4fc5\u4fd3\u4fb2\u4fc9\u4fcb\u4fc1\u4fd4\u4fdc\u4fd9\u4fbb\u4fb3\u4fdb\u4fc7\u4fd6\u4fba\u4fc0\u4fb9\u4fec\u5244\u5249\u52c0\u52c2\u533d\u537c\u5397\u5396\u5399\u5398\u54ba\u54a1\u54ad\u54a5\u54cf" ], [ "ce40", "\u54c3\u830d\u54b7\u54ae\u54d6\u54b6\u54c5\u54c6\u54a0\u5470\u54bc\u54a2\u54be\u5472\u54de\u54b0\u57b5\u579e\u579f\u57a4\u578c\u5797\u579d\u579b\u5794\u5798\u578f\u5799\u57a5\u579a\u5795\u58f4\u590d\u5953\u59e1\u59de\u59ee\u5a00\u59f1\u59dd\u59fa\u59fd\u59fc\u59f6\u59e4\u59f2\u59f7\u59db\u59e9\u59f3\u59f5\u59e0\u59fe\u59f4\u59ed\u5ba8\u5c4c\u5cd0\u5cd8\u5ccc\u5cd7\u5ccb\u5cdb" ], [ "cea1", "\u5cde\u5cda\u5cc9\u5cc7\u5cca\u5cd6\u5cd3\u5cd4\u5ccf\u5cc8\u5cc6\u5cce\u5cdf\u5cf8\u5df9\u5e21\u5e22\u5e23\u5e20\u5e24\u5eb0\u5ea4\u5ea2\u5e9b\u5ea3\u5ea5\u5f07\u5f2e\u5f56\u5f86\u6037\u6039\u6054\u6072\u605e\u6045\u6053\u6047\u6049\u605b\u604c\u6040\u6042\u605f\u6024\u6044\u6058\u6066\u606e\u6242\u6243\u62cf\u630d\u630b\u62f5\u630e\u6303\u62eb\u62f9\u630f\u630c\u62f8\u62f6\u6300\u6313\u6314\u62fa\u6315\u62fb\u62f0\u6541\u6543\u65aa\u65bf\u6636\u6621\u6632\u6635\u661c\u6626\u6622\u6633\u662b\u663a\u661d\u6634\u6639\u662e\u670f\u6710\u67c1\u67f2\u67c8\u67ba" ], [ "cf40", "\u67dc\u67bb\u67f8\u67d8\u67c0\u67b7\u67c5\u67eb\u67e4\u67df\u67b5\u67cd\u67b3\u67f7\u67f6\u67ee\u67e3\u67c2\u67b9\u67ce\u67e7\u67f0\u67b2\u67fc\u67c6\u67ed\u67cc\u67ae\u67e6\u67db\u67fa\u67c9\u67ca\u67c3\u67ea\u67cb\u6b28\u6b82\u6b84\u6bb6\u6bd6\u6bd8\u6be0\u6c20\u6c21\u6d28\u6d34\u6d2d\u6d1f\u6d3c\u6d3f\u6d12\u6d0a\u6cda\u6d33\u6d04\u6d19\u6d3a\u6d1a\u6d11\u6d00\u6d1d\u6d42" ], [ "cfa1", "\u6d01\u6d18\u6d37\u6d03\u6d0f\u6d40\u6d07\u6d20\u6d2c\u6d08\u6d22\u6d09\u6d10\u70b7\u709f\u70be\u70b1\u70b0\u70a1\u70b4\u70b5\u70a9\u7241\u7249\u724a\u726c\u7270\u7273\u726e\u72ca\u72e4\u72e8\u72eb\u72df\u72ea\u72e6\u72e3\u7385\u73cc\u73c2\u73c8\u73c5\u73b9\u73b6\u73b5\u73b4\u73eb\u73bf\u73c7\u73be\u73c3\u73c6\u73b8\u73cb\u74ec\u74ee\u752e\u7547\u7548\u75a7\u75aa\u7679\u76c4\u7708\u7703\u7704\u7705\u770a\u76f7\u76fb\u76fa\u77e7\u77e8\u7806\u7811\u7812\u7805\u7810\u780f\u780e\u7809\u7803\u7813\u794a\u794c\u794b\u7945\u7944\u79d5\u79cd\u79cf\u79d6\u79ce\u7a80" ], [ "d040", "\u7a7e\u7ad1\u7b00\u7b01\u7c7a\u7c78\u7c79\u7c7f\u7c80\u7c81\u7d03\u7d08\u7d01\u7f58\u7f91\u7f8d\u7fbe\u8007\u800e\u800f\u8014\u8037\u80d8\u80c7\u80e0\u80d1\u80c8\u80c2\u80d0\u80c5\u80e3\u80d9\u80dc\u80ca\u80d5\u80c9\u80cf\u80d7\u80e6\u80cd\u81ff\u8221\u8294\u82d9\u82fe\u82f9\u8307\u82e8\u8300\u82d5\u833a\u82eb\u82d6\u82f4\u82ec\u82e1\u82f2\u82f5\u830c\u82fb\u82f6\u82f0\u82ea" ], [ "d0a1", "\u82e4\u82e0\u82fa\u82f3\u82ed\u8677\u8674\u867c\u8673\u8841\u884e\u8867\u886a\u8869\u89d3\u8a04\u8a07\u8d72\u8fe3\u8fe1\u8fee\u8fe0\u90f1\u90bd\u90bf\u90d5\u90c5\u90be\u90c7\u90cb\u90c8\u91d4\u91d3\u9654\u964f\u9651\u9653\u964a\u964e\u501e\u5005\u5007\u5013\u5022\u5030\u501b\u4ff5\u4ff4\u5033\u5037\u502c\u4ff6\u4ff7\u5017\u501c\u5020\u5027\u5035\u502f\u5031\u500e\u515a\u5194\u5193\u51ca\u51c4\u51c5\u51c8\u51ce\u5261\u525a\u5252\u525e\u525f\u5255\u5262\u52cd\u530e\u539e\u5526\u54e2\u5517\u5512\u54e7\u54f3\u54e4\u551a\u54ff\u5504\u5508\u54eb\u5511\u5505\u54f1" ], [ "d140", "\u550a\u54fb\u54f7\u54f8\u54e0\u550e\u5503\u550b\u5701\u5702\u57cc\u5832\u57d5\u57d2\u57ba\u57c6\u57bd\u57bc\u57b8\u57b6\u57bf\u57c7\u57d0\u57b9\u57c1\u590e\u594a\u5a19\u5a16\u5a2d\u5a2e\u5a15\u5a0f\u5a17\u5a0a\u5a1e\u5a33\u5b6c\u5ba7\u5bad\u5bac\u5c03\u5c56\u5c54\u5cec\u5cff\u5cee\u5cf1\u5cf7\u5d00\u5cf9\u5e29\u5e28\u5ea8\u5eae\u5eaa\u5eac\u5f33\u5f30\u5f67\u605d\u605a\u6067" ], [ "d1a1", "\u6041\u60a2\u6088\u6080\u6092\u6081\u609d\u6083\u6095\u609b\u6097\u6087\u609c\u608e\u6219\u6246\u62f2\u6310\u6356\u632c\u6344\u6345\u6336\u6343\u63e4\u6339\u634b\u634a\u633c\u6329\u6341\u6334\u6358\u6354\u6359\u632d\u6347\u6333\u635a\u6351\u6338\u6357\u6340\u6348\u654a\u6546\u65c6\u65c3\u65c4\u65c2\u664a\u665f\u6647\u6651\u6712\u6713\u681f\u681a\u6849\u6832\u6833\u683b\u684b\u684f\u6816\u6831\u681c\u6835\u682b\u682d\u682f\u684e\u6844\u6834\u681d\u6812\u6814\u6826\u6828\u682e\u684d\u683a\u6825\u6820\u6b2c\u6b2f\u6b2d\u6b31\u6b34\u6b6d\u8082\u6b88\u6be6\u6be4" ], [ "d240", "\u6be8\u6be3\u6be2\u6be7\u6c25\u6d7a\u6d63\u6d64\u6d76\u6d0d\u6d61\u6d92\u6d58\u6d62\u6d6d\u6d6f\u6d91\u6d8d\u6def\u6d7f\u6d86\u6d5e\u6d67\u6d60\u6d97\u6d70\u6d7c\u6d5f\u6d82\u6d98\u6d2f\u6d68\u6d8b\u6d7e\u6d80\u6d84\u6d16\u6d83\u6d7b\u6d7d\u6d75\u6d90\u70dc\u70d3\u70d1\u70dd\u70cb\u7f39\u70e2\u70d7\u70d2\u70de\u70e0\u70d4\u70cd\u70c5\u70c6\u70c7\u70da\u70ce\u70e1\u7242\u7278" ], [ "d2a1", "\u7277\u7276\u7300\u72fa\u72f4\u72fe\u72f6\u72f3\u72fb\u7301\u73d3\u73d9\u73e5\u73d6\u73bc\u73e7\u73e3\u73e9\u73dc\u73d2\u73db\u73d4\u73dd\u73da\u73d7\u73d8\u73e8\u74de\u74df\u74f4\u74f5\u7521\u755b\u755f\u75b0\u75c1\u75bb\u75c4\u75c0\u75bf\u75b6\u75ba\u768a\u76c9\u771d\u771b\u7710\u7713\u7712\u7723\u7711\u7715\u7719\u771a\u7722\u7727\u7823\u782c\u7822\u7835\u782f\u7828\u782e\u782b\u7821\u7829\u7833\u782a\u7831\u7954\u795b\u794f\u795c\u7953\u7952\u7951\u79eb\u79ec\u79e0\u79ee\u79ed\u79ea\u79dc\u79de\u79dd\u7a86\u7a89\u7a85\u7a8b\u7a8c\u7a8a\u7a87\u7ad8\u7b10" ], [ "d340", "\u7b04\u7b13\u7b05\u7b0f\u7b08\u7b0a\u7b0e\u7b09\u7b12\u7c84\u7c91\u7c8a\u7c8c\u7c88\u7c8d\u7c85\u7d1e\u7d1d\u7d11\u7d0e\u7d18\u7d16\u7d13\u7d1f\u7d12\u7d0f\u7d0c\u7f5c\u7f61\u7f5e\u7f60\u7f5d\u7f5b\u7f96\u7f92\u7fc3\u7fc2\u7fc0\u8016\u803e\u8039\u80fa\u80f2\u80f9\u80f5\u8101\u80fb\u8100\u8201\u822f\u8225\u8333\u832d\u8344\u8319\u8351\u8325\u8356\u833f\u8341\u8326\u831c\u8322" ], [ "d3a1", "\u8342\u834e\u831b\u832a\u8308\u833c\u834d\u8316\u8324\u8320\u8337\u832f\u8329\u8347\u8345\u834c\u8353\u831e\u832c\u834b\u8327\u8348\u8653\u8652\u86a2\u86a8\u8696\u868d\u8691\u869e\u8687\u8697\u8686\u868b\u869a\u8685\u86a5\u8699\u86a1\u86a7\u8695\u8698\u868e\u869d\u8690\u8694\u8843\u8844\u886d\u8875\u8876\u8872\u8880\u8871\u887f\u886f\u8883\u887e\u8874\u887c\u8a12\u8c47\u8c57\u8c7b\u8ca4\u8ca3\u8d76\u8d78\u8db5\u8db7\u8db6\u8ed1\u8ed3\u8ffe\u8ff5\u9002\u8fff\u8ffb\u9004\u8ffc\u8ff6\u90d6\u90e0\u90d9\u90da\u90e3\u90df\u90e5\u90d8\u90db\u90d7\u90dc\u90e4\u9150" ], [ "d440", "\u914e\u914f\u91d5\u91e2\u91da\u965c\u965f\u96bc\u98e3\u9adf\u9b2f\u4e7f\u5070\u506a\u5061\u505e\u5060\u5053\u504b\u505d\u5072\u5048\u504d\u5041\u505b\u504a\u5062\u5015\u5045\u505f\u5069\u506b\u5063\u5064\u5046\u5040\u506e\u5073\u5057\u5051\u51d0\u526b\u526d\u526c\u526e\u52d6\u52d3\u532d\u539c\u5575\u5576\u553c\u554d\u5550\u5534\u552a\u5551\u5562\u5536\u5535\u5530\u5552\u5545" ], [ "d4a1", "\u550c\u5532\u5565\u554e\u5539\u5548\u552d\u553b\u5540\u554b\u570a\u5707\u57fb\u5814\u57e2\u57f6\u57dc\u57f4\u5800\u57ed\u57fd\u5808\u57f8\u580b\u57f3\u57cf\u5807\u57ee\u57e3\u57f2\u57e5\u57ec\u57e1\u580e\u57fc\u5810\u57e7\u5801\u580c\u57f1\u57e9\u57f0\u580d\u5804\u595c\u5a60\u5a58\u5a55\u5a67\u5a5e\u5a38\u5a35\u5a6d\u5a50\u5a5f\u5a65\u5a6c\u5a53\u5a64\u5a57\u5a43\u5a5d\u5a52\u5a44\u5a5b\u5a48\u5a8e\u5a3e\u5a4d\u5a39\u5a4c\u5a70\u5a69\u5a47\u5a51\u5a56\u5a42\u5a5c\u5b72\u5b6e\u5bc1\u5bc0\u5c59\u5d1e\u5d0b\u5d1d\u5d1a\u5d20\u5d0c\u5d28\u5d0d\u5d26\u5d25\u5d0f" ], [ "d540", "\u5d30\u5d12\u5d23\u5d1f\u5d2e\u5e3e\u5e34\u5eb1\u5eb4\u5eb9\u5eb2\u5eb3\u5f36\u5f38\u5f9b\u5f96\u5f9f\u608a\u6090\u6086\u60be\u60b0\u60ba\u60d3\u60d4\u60cf\u60e4\u60d9\u60dd\u60c8\u60b1\u60db\u60b7\u60ca\u60bf\u60c3\u60cd\u60c0\u6332\u6365\u638a\u6382\u637d\u63bd\u639e\u63ad\u639d\u6397\u63ab\u638e\u636f\u6387\u6390\u636e\u63af\u6375\u639c\u636d\u63ae\u637c\u63a4\u633b\u639f" ], [ "d5a1", "\u6378\u6385\u6381\u6391\u638d\u6370\u6553\u65cd\u6665\u6661\u665b\u6659\u665c\u6662\u6718\u6879\u6887\u6890\u689c\u686d\u686e\u68ae\u68ab\u6956\u686f\u68a3\u68ac\u68a9\u6875\u6874\u68b2\u688f\u6877\u6892\u687c\u686b\u6872\u68aa\u6880\u6871\u687e\u689b\u6896\u688b\u68a0\u6889\u68a4\u6878\u687b\u6891\u688c\u688a\u687d\u6b36\u6b33\u6b37\u6b38\u6b91\u6b8f\u6b8d\u6b8e\u6b8c\u6c2a\u6dc0\u6dab\u6db4\u6db3\u6e74\u6dac\u6de9\u6de2\u6db7\u6df6\u6dd4\u6e00\u6dc8\u6de0\u6ddf\u6dd6\u6dbe\u6de5\u6ddc\u6ddd\u6ddb\u6df4\u6dca\u6dbd\u6ded\u6df0\u6dba\u6dd5\u6dc2\u6dcf\u6dc9" ], [ "d640", "\u6dd0\u6df2\u6dd3\u6dfd\u6dd7\u6dcd\u6de3\u6dbb\u70fa\u710d\u70f7\u7117\u70f4\u710c\u70f0\u7104\u70f3\u7110\u70fc\u70ff\u7106\u7113\u7100\u70f8\u70f6\u710b\u7102\u710e\u727e\u727b\u727c\u727f\u731d\u7317\u7307\u7311\u7318\u730a\u7308\u72ff\u730f\u731e\u7388\u73f6\u73f8\u73f5\u7404\u7401\u73fd\u7407\u7400\u73fa\u73fc\u73ff\u740c\u740b\u73f4\u7408\u7564\u7563\u75ce\u75d2\u75cf" ], [ "d6a1", "\u75cb\u75cc\u75d1\u75d0\u768f\u7689\u76d3\u7739\u772f\u772d\u7731\u7732\u7734\u7733\u773d\u7725\u773b\u7735\u7848\u7852\u7849\u784d\u784a\u784c\u7826\u7845\u7850\u7964\u7967\u7969\u796a\u7963\u796b\u7961\u79bb\u79fa\u79f8\u79f6\u79f7\u7a8f\u7a94\u7a90\u7b35\u7b47\u7b34\u7b25\u7b30\u7b22\u7b24\u7b33\u7b18\u7b2a\u7b1d\u7b31\u7b2b\u7b2d\u7b2f\u7b32\u7b38\u7b1a\u7b23\u7c94\u7c98\u7c96\u7ca3\u7d35\u7d3d\u7d38\u7d36\u7d3a\u7d45\u7d2c\u7d29\u7d41\u7d47\u7d3e\u7d3f\u7d4a\u7d3b\u7d28\u7f63\u7f95\u7f9c\u7f9d\u7f9b\u7fca\u7fcb\u7fcd\u7fd0\u7fd1\u7fc7\u7fcf\u7fc9\u801f" ], [ "d740", "\u801e\u801b\u8047\u8043\u8048\u8118\u8125\u8119\u811b\u812d\u811f\u812c\u811e\u8121\u8115\u8127\u811d\u8122\u8211\u8238\u8233\u823a\u8234\u8232\u8274\u8390\u83a3\u83a8\u838d\u837a\u8373\u83a4\u8374\u838f\u8381\u8395\u8399\u8375\u8394\u83a9\u837d\u8383\u838c\u839d\u839b\u83aa\u838b\u837e\u83a5\u83af\u8388\u8397\u83b0\u837f\u83a6\u8387\u83ae\u8376\u839a\u8659\u8656\u86bf\u86b7" ], [ "d7a1", "\u86c2\u86c1\u86c5\u86ba\u86b0\u86c8\u86b9\u86b3\u86b8\u86cc\u86b4\u86bb\u86bc\u86c3\u86bd\u86be\u8852\u8889\u8895\u88a8\u88a2\u88aa\u889a\u8891\u88a1\u889f\u8898\u88a7\u8899\u889b\u8897\u88a4\u88ac\u888c\u8893\u888e\u8982\u89d6\u89d9\u89d5\u8a30\u8a27\u8a2c\u8a1e\u8c39\u8c3b\u8c5c\u8c5d\u8c7d\u8ca5\u8d7d\u8d7b\u8d79\u8dbc\u8dc2\u8db9\u8dbf\u8dc1\u8ed8\u8ede\u8edd\u8edc\u8ed7\u8ee0\u8ee1\u9024\u900b\u9011\u901c\u900c\u9021\u90ef\u90ea\u90f0\u90f4\u90f2\u90f3\u90d4\u90eb\u90ec\u90e9\u9156\u9158\u915a\u9153\u9155\u91ec\u91f4\u91f1\u91f3\u91f8\u91e4\u91f9\u91ea" ], [ "d840", "\u91eb\u91f7\u91e8\u91ee\u957a\u9586\u9588\u967c\u966d\u966b\u9671\u966f\u96bf\u976a\u9804\u98e5\u9997\u509b\u5095\u5094\u509e\u508b\u50a3\u5083\u508c\u508e\u509d\u5068\u509c\u5092\u5082\u5087\u515f\u51d4\u5312\u5311\u53a4\u53a7\u5591\u55a8\u55a5\u55ad\u5577\u5645\u55a2\u5593\u5588\u558f\u55b5\u5581\u55a3\u5592\u55a4\u557d\u558c\u55a6\u557f\u5595\u55a1\u558e\u570c\u5829\u5837" ], [ "d8a1", "\u5819\u581e\u5827\u5823\u5828\u57f5\u5848\u5825\u581c\u581b\u5833\u583f\u5836\u582e\u5839\u5838\u582d\u582c\u583b\u5961\u5aaf\u5a94\u5a9f\u5a7a\u5aa2\u5a9e\u5a78\u5aa6\u5a7c\u5aa5\u5aac\u5a95\u5aae\u5a37\u5a84\u5a8a\u5a97\u5a83\u5a8b\u5aa9\u5a7b\u5a7d\u5a8c\u5a9c\u5a8f\u5a93\u5a9d\u5bea\u5bcd\u5bcb\u5bd4\u5bd1\u5bca\u5bce\u5c0c\u5c30\u5d37\u5d43\u5d6b\u5d41\u5d4b\u5d3f\u5d35\u5d51\u5d4e\u5d55\u5d33\u5d3a\u5d52\u5d3d\u5d31\u5d59\u5d42\u5d39\u5d49\u5d38\u5d3c\u5d32\u5d36\u5d40\u5d45\u5e44\u5e41\u5f58\u5fa6\u5fa5\u5fab\u60c9\u60b9\u60cc\u60e2\u60ce\u60c4\u6114" ], [ "d940", "\u60f2\u610a\u6116\u6105\u60f5\u6113\u60f8\u60fc\u60fe\u60c1\u6103\u6118\u611d\u6110\u60ff\u6104\u610b\u624a\u6394\u63b1\u63b0\u63ce\u63e5\u63e8\u63ef\u63c3\u649d\u63f3\u63ca\u63e0\u63f6\u63d5\u63f2\u63f5\u6461\u63df\u63be\u63dd\u63dc\u63c4\u63d8\u63d3\u63c2\u63c7\u63cc\u63cb\u63c8\u63f0\u63d7\u63d9\u6532\u6567\u656a\u6564\u655c\u6568\u6565\u658c\u659d\u659e\u65ae\u65d0\u65d2" ], [ "d9a1", "\u667c\u666c\u667b\u6680\u6671\u6679\u666a\u6672\u6701\u690c\u68d3\u6904\u68dc\u692a\u68ec\u68ea\u68f1\u690f\u68d6\u68f7\u68eb\u68e4\u68f6\u6913\u6910\u68f3\u68e1\u6907\u68cc\u6908\u6970\u68b4\u6911\u68ef\u68c6\u6914\u68f8\u68d0\u68fd\u68fc\u68e8\u690b\u690a\u6917\u68ce\u68c8\u68dd\u68de\u68e6\u68f4\u68d1\u6906\u68d4\u68e9\u6915\u6925\u68c7\u6b39\u6b3b\u6b3f\u6b3c\u6b94\u6b97\u6b99\u6b95\u6bbd\u6bf0\u6bf2\u6bf3\u6c30\u6dfc\u6e46\u6e47\u6e1f\u6e49\u6e88\u6e3c\u6e3d\u6e45\u6e62\u6e2b\u6e3f\u6e41\u6e5d\u6e73\u6e1c\u6e33\u6e4b\u6e40\u6e51\u6e3b\u6e03\u6e2e\u6e5e" ], [ "da40", "\u6e68\u6e5c\u6e61\u6e31\u6e28\u6e60\u6e71\u6e6b\u6e39\u6e22\u6e30\u6e53\u6e65\u6e27\u6e78\u6e64\u6e77\u6e55\u6e79\u6e52\u6e66\u6e35\u6e36\u6e5a\u7120\u711e\u712f\u70fb\u712e\u7131\u7123\u7125\u7122\u7132\u711f\u7128\u713a\u711b\u724b\u725a\u7288\u7289\u7286\u7285\u728b\u7312\u730b\u7330\u7322\u7331\u7333\u7327\u7332\u732d\u7326\u7323\u7335\u730c\u742e\u742c\u7430\u742b\u7416" ], [ "daa1", "\u741a\u7421\u742d\u7431\u7424\u7423\u741d\u7429\u7420\u7432\u74fb\u752f\u756f\u756c\u75e7\u75da\u75e1\u75e6\u75dd\u75df\u75e4\u75d7\u7695\u7692\u76da\u7746\u7747\u7744\u774d\u7745\u774a\u774e\u774b\u774c\u77de\u77ec\u7860\u7864\u7865\u785c\u786d\u7871\u786a\u786e\u7870\u7869\u7868\u785e\u7862\u7974\u7973\u7972\u7970\u7a02\u7a0a\u7a03\u7a0c\u7a04\u7a99\u7ae6\u7ae4\u7b4a\u7b3b\u7b44\u7b48\u7b4c\u7b4e\u7b40\u7b58\u7b45\u7ca2\u7c9e\u7ca8\u7ca1\u7d58\u7d6f\u7d63\u7d53\u7d56\u7d67\u7d6a\u7d4f\u7d6d\u7d5c\u7d6b\u7d52\u7d54\u7d69\u7d51\u7d5f\u7d4e\u7f3e\u7f3f\u7f65" ], [ "db40", "\u7f66\u7fa2\u7fa0\u7fa1\u7fd7\u8051\u804f\u8050\u80fe\u80d4\u8143\u814a\u8152\u814f\u8147\u813d\u814d\u813a\u81e6\u81ee\u81f7\u81f8\u81f9\u8204\u823c\u823d\u823f\u8275\u833b\u83cf\u83f9\u8423\u83c0\u83e8\u8412\u83e7\u83e4\u83fc\u83f6\u8410\u83c6\u83c8\u83eb\u83e3\u83bf\u8401\u83dd\u83e5\u83d8\u83ff\u83e1\u83cb\u83ce\u83d6\u83f5\u83c9\u8409\u840f\u83de\u8411\u8406\u83c2\u83f3" ], [ "dba1", "\u83d5\u83fa\u83c7\u83d1\u83ea\u8413\u83c3\u83ec\u83ee\u83c4\u83fb\u83d7\u83e2\u841b\u83db\u83fe\u86d8\u86e2\u86e6\u86d3\u86e3\u86da\u86ea\u86dd\u86eb\u86dc\u86ec\u86e9\u86d7\u86e8\u86d1\u8848\u8856\u8855\u88ba\u88d7\u88b9\u88b8\u88c0\u88be\u88b6\u88bc\u88b7\u88bd\u88b2\u8901\u88c9\u8995\u8998\u8997\u89dd\u89da\u89db\u8a4e\u8a4d\u8a39\u8a59\u8a40\u8a57\u8a58\u8a44\u8a45\u8a52\u8a48\u8a51\u8a4a\u8a4c\u8a4f\u8c5f\u8c81\u8c80\u8cba\u8cbe\u8cb0\u8cb9\u8cb5\u8d84\u8d80\u8d89\u8dd8\u8dd3\u8dcd\u8dc7\u8dd6\u8ddc\u8dcf\u8dd5\u8dd9\u8dc8\u8dd7\u8dc5\u8eef\u8ef7\u8efa" ], [ "dc40", "\u8ef9\u8ee6\u8eee\u8ee5\u8ef5\u8ee7\u8ee8\u8ef6\u8eeb\u8ef1\u8eec\u8ef4\u8ee9\u902d\u9034\u902f\u9106\u912c\u9104\u90ff\u90fc\u9108\u90f9\u90fb\u9101\u9100\u9107\u9105\u9103\u9161\u9164\u915f\u9162\u9160\u9201\u920a\u9225\u9203\u921a\u9226\u920f\u920c\u9200\u9212\u91ff\u91fd\u9206\u9204\u9227\u9202\u921c\u9224\u9219\u9217\u9205\u9216\u957b\u958d\u958c\u9590\u9687\u967e\u9688" ], [ "dca1", "\u9689\u9683\u9680\u96c2\u96c8\u96c3\u96f1\u96f0\u976c\u9770\u976e\u9807\u98a9\u98eb\u9ce6\u9ef9\u4e83\u4e84\u4eb6\u50bd\u50bf\u50c6\u50ae\u50c4\u50ca\u50b4\u50c8\u50c2\u50b0\u50c1\u50ba\u50b1\u50cb\u50c9\u50b6\u50b8\u51d7\u527a\u5278\u527b\u527c\u55c3\u55db\u55cc\u55d0\u55cb\u55ca\u55dd\u55c0\u55d4\u55c4\u55e9\u55bf\u55d2\u558d\u55cf\u55d5\u55e2\u55d6\u55c8\u55f2\u55cd\u55d9\u55c2\u5714\u5853\u5868\u5864\u584f\u584d\u5849\u586f\u5855\u584e\u585d\u5859\u5865\u585b\u583d\u5863\u5871\u58fc\u5ac7\u5ac4\u5acb\u5aba\u5ab8\u5ab1\u5ab5\u5ab0\u5abf\u5ac8\u5abb\u5ac6" ], [ "dd40", "\u5ab7\u5ac0\u5aca\u5ab4\u5ab6\u5acd\u5ab9\u5a90\u5bd6\u5bd8\u5bd9\u5c1f\u5c33\u5d71\u5d63\u5d4a\u5d65\u5d72\u5d6c\u5d5e\u5d68\u5d67\u5d62\u5df0\u5e4f\u5e4e\u5e4a\u5e4d\u5e4b\u5ec5\u5ecc\u5ec6\u5ecb\u5ec7\u5f40\u5faf\u5fad\u60f7\u6149\u614a\u612b\u6145\u6136\u6132\u612e\u6146\u612f\u614f\u6129\u6140\u6220\u9168\u6223\u6225\u6224\u63c5\u63f1\u63eb\u6410\u6412\u6409\u6420\u6424" ], [ "dda1", "\u6433\u6443\u641f\u6415\u6418\u6439\u6437\u6422\u6423\u640c\u6426\u6430\u6428\u6441\u6435\u642f\u640a\u641a\u6440\u6425\u6427\u640b\u63e7\u641b\u642e\u6421\u640e\u656f\u6592\u65d3\u6686\u668c\u6695\u6690\u668b\u668a\u6699\u6694\u6678\u6720\u6966\u695f\u6938\u694e\u6962\u6971\u693f\u6945\u696a\u6939\u6942\u6957\u6959\u697a\u6948\u6949\u6935\u696c\u6933\u693d\u6965\u68f0\u6978\u6934\u6969\u6940\u696f\u6944\u6976\u6958\u6941\u6974\u694c\u693b\u694b\u6937\u695c\u694f\u6951\u6932\u6952\u692f\u697b\u693c\u6b46\u6b45\u6b43\u6b42\u6b48\u6b41\u6b9b\ufa0d\u6bfb\u6bfc" ], [ "de40", "\u6bf9\u6bf7\u6bf8\u6e9b\u6ed6\u6ec8\u6e8f\u6ec0\u6e9f\u6e93\u6e94\u6ea0\u6eb1\u6eb9\u6ec6\u6ed2\u6ebd\u6ec1\u6e9e\u6ec9\u6eb7\u6eb0\u6ecd\u6ea6\u6ecf\u6eb2\u6ebe\u6ec3\u6edc\u6ed8\u6e99\u6e92\u6e8e\u6e8d\u6ea4\u6ea1\u6ebf\u6eb3\u6ed0\u6eca\u6e97\u6eae\u6ea3\u7147\u7154\u7152\u7163\u7160\u7141\u715d\u7162\u7172\u7178\u716a\u7161\u7142\u7158\u7143\u714b\u7170\u715f\u7150\u7153" ], [ "dea1", "\u7144\u714d\u715a\u724f\u728d\u728c\u7291\u7290\u728e\u733c\u7342\u733b\u733a\u7340\u734a\u7349\u7444\u744a\u744b\u7452\u7451\u7457\u7440\u744f\u7450\u744e\u7442\u7446\u744d\u7454\u74e1\u74ff\u74fe\u74fd\u751d\u7579\u7577\u6983\u75ef\u760f\u7603\u75f7\u75fe\u75fc\u75f9\u75f8\u7610\u75fb\u75f6\u75ed\u75f5\u75fd\u7699\u76b5\u76dd\u7755\u775f\u7760\u7752\u7756\u775a\u7769\u7767\u7754\u7759\u776d\u77e0\u7887\u789a\u7894\u788f\u7884\u7895\u7885\u7886\u78a1\u7883\u7879\u7899\u7880\u7896\u787b\u797c\u7982\u797d\u7979\u7a11\u7a18\u7a19\u7a12\u7a17\u7a15\u7a22\u7a13" ], [ "df40", "\u7a1b\u7a10\u7aa3\u7aa2\u7a9e\u7aeb\u7b66\u7b64\u7b6d\u7b74\u7b69\u7b72\u7b65\u7b73\u7b71\u7b70\u7b61\u7b78\u7b76\u7b63\u7cb2\u7cb4\u7caf\u7d88\u7d86\u7d80\u7d8d\u7d7f\u7d85\u7d7a\u7d8e\u7d7b\u7d83\u7d7c\u7d8c\u7d94\u7d84\u7d7d\u7d92\u7f6d\u7f6b\u7f67\u7f68\u7f6c\u7fa6\u7fa5\u7fa7\u7fdb\u7fdc\u8021\u8164\u8160\u8177\u815c\u8169\u815b\u8162\u8172\u6721\u815e\u8176\u8167\u816f" ], [ "dfa1", "\u8144\u8161\u821d\u8249\u8244\u8240\u8242\u8245\u84f1\u843f\u8456\u8476\u8479\u848f\u848d\u8465\u8451\u8440\u8486\u8467\u8430\u844d\u847d\u845a\u8459\u8474\u8473\u845d\u8507\u845e\u8437\u843a\u8434\u847a\u8443\u8478\u8432\u8445\u8429\u83d9\u844b\u842f\u8442\u842d\u845f\u8470\u8439\u844e\u844c\u8452\u846f\u84c5\u848e\u843b\u8447\u8436\u8433\u8468\u847e\u8444\u842b\u8460\u8454\u846e\u8450\u870b\u8704\u86f7\u870c\u86fa\u86d6\u86f5\u874d\u86f8\u870e\u8709\u8701\u86f6\u870d\u8705\u88d6\u88cb\u88cd\u88ce\u88de\u88db\u88da\u88cc\u88d0\u8985\u899b\u89df\u89e5\u89e4" ], [ "e040", "\u89e1\u89e0\u89e2\u89dc\u89e6\u8a76\u8a86\u8a7f\u8a61\u8a3f\u8a77\u8a82\u8a84\u8a75\u8a83\u8a81\u8a74\u8a7a\u8c3c\u8c4b\u8c4a\u8c65\u8c64\u8c66\u8c86\u8c84\u8c85\u8ccc\u8d68\u8d69\u8d91\u8d8c\u8d8e\u8d8f\u8d8d\u8d93\u8d94\u8d90\u8d92\u8df0\u8de0\u8dec\u8df1\u8dee\u8dd0\u8de9\u8de3\u8de2\u8de7\u8df2\u8deb\u8df4\u8f06\u8eff\u8f01\u8f00\u8f05\u8f07\u8f08\u8f02\u8f0b\u9052\u903f" ], [ "e0a1", "\u9044\u9049\u903d\u9110\u910d\u910f\u9111\u9116\u9114\u910b\u910e\u916e\u916f\u9248\u9252\u9230\u923a\u9266\u9233\u9265\u925e\u9283\u922e\u924a\u9246\u926d\u926c\u924f\u9260\u9267\u926f\u9236\u9261\u9270\u9231\u9254\u9263\u9250\u9272\u924e\u9253\u924c\u9256\u9232\u959f\u959c\u959e\u959b\u9692\u9693\u9691\u9697\u96ce\u96fa\u96fd\u96f8\u96f5\u9773\u9777\u9778\u9772\u980f\u980d\u980e\u98ac\u98f6\u98f9\u99af\u99b2\u99b0\u99b5\u9aad\u9aab\u9b5b\u9cea\u9ced\u9ce7\u9e80\u9efd\u50e6\u50d4\u50d7\u50e8\u50f3\u50db\u50ea\u50dd\u50e4\u50d3\u50ec\u50f0\u50ef\u50e3\u50e0" ], [ "e140", "\u51d8\u5280\u5281\u52e9\u52eb\u5330\u53ac\u5627\u5615\u560c\u5612\u55fc\u560f\u561c\u5601\u5613\u5602\u55fa\u561d\u5604\u55ff\u55f9\u5889\u587c\u5890\u5898\u5886\u5881\u587f\u5874\u588b\u587a\u5887\u5891\u588e\u5876\u5882\u5888\u587b\u5894\u588f\u58fe\u596b\u5adc\u5aee\u5ae5\u5ad5\u5aea\u5ada\u5aed\u5aeb\u5af3\u5ae2\u5ae0\u5adb\u5aec\u5ade\u5add\u5ad9\u5ae8\u5adf\u5b77\u5be0" ], [ "e1a1", "\u5be3\u5c63\u5d82\u5d80\u5d7d\u5d86\u5d7a\u5d81\u5d77\u5d8a\u5d89\u5d88\u5d7e\u5d7c\u5d8d\u5d79\u5d7f\u5e58\u5e59\u5e53\u5ed8\u5ed1\u5ed7\u5ece\u5edc\u5ed5\u5ed9\u5ed2\u5ed4\u5f44\u5f43\u5f6f\u5fb6\u612c\u6128\u6141\u615e\u6171\u6173\u6152\u6153\u6172\u616c\u6180\u6174\u6154\u617a\u615b\u6165\u613b\u616a\u6161\u6156\u6229\u6227\u622b\u642b\u644d\u645b\u645d\u6474\u6476\u6472\u6473\u647d\u6475\u6466\u64a6\u644e\u6482\u645e\u645c\u644b\u6453\u6460\u6450\u647f\u643f\u646c\u646b\u6459\u6465\u6477\u6573\u65a0\u66a1\u66a0\u669f\u6705\u6704\u6722\u69b1\u69b6\u69c9" ], [ "e240", "\u69a0\u69ce\u6996\u69b0\u69ac\u69bc\u6991\u6999\u698e\u69a7\u698d\u69a9\u69be\u69af\u69bf\u69c4\u69bd\u69a4\u69d4\u69b9\u69ca\u699a\u69cf\u69b3\u6993\u69aa\u69a1\u699e\u69d9\u6997\u6990\u69c2\u69b5\u69a5\u69c6\u6b4a\u6b4d\u6b4b\u6b9e\u6b9f\u6ba0\u6bc3\u6bc4\u6bfe\u6ece\u6ef5\u6ef1\u6f03\u6f25\u6ef8\u6f37\u6efb\u6f2e\u6f09\u6f4e\u6f19\u6f1a\u6f27\u6f18\u6f3b\u6f12\u6eed\u6f0a" ], [ "e2a1", "\u6f36\u6f73\u6ef9\u6eee\u6f2d\u6f40\u6f30\u6f3c\u6f35\u6eeb\u6f07\u6f0e\u6f43\u6f05\u6efd\u6ef6\u6f39\u6f1c\u6efc\u6f3a\u6f1f\u6f0d\u6f1e\u6f08\u6f21\u7187\u7190\u7189\u7180\u7185\u7182\u718f\u717b\u7186\u7181\u7197\u7244\u7253\u7297\u7295\u7293\u7343\u734d\u7351\u734c\u7462\u7473\u7471\u7475\u7472\u7467\u746e\u7500\u7502\u7503\u757d\u7590\u7616\u7608\u760c\u7615\u7611\u760a\u7614\u76b8\u7781\u777c\u7785\u7782\u776e\u7780\u776f\u777e\u7783\u78b2\u78aa\u78b4\u78ad\u78a8\u787e\u78ab\u789e\u78a5\u78a0\u78ac\u78a2\u78a4\u7998\u798a\u798b\u7996\u7995\u7994\u7993" ], [ "e340", "\u7997\u7988\u7992\u7990\u7a2b\u7a4a\u7a30\u7a2f\u7a28\u7a26\u7aa8\u7aab\u7aac\u7aee\u7b88\u7b9c\u7b8a\u7b91\u7b90\u7b96\u7b8d\u7b8c\u7b9b\u7b8e\u7b85\u7b98\u5284\u7b99\u7ba4\u7b82\u7cbb\u7cbf\u7cbc\u7cba\u7da7\u7db7\u7dc2\u7da3\u7daa\u7dc1\u7dc0\u7dc5\u7d9d\u7dce\u7dc4\u7dc6\u7dcb\u7dcc\u7daf\u7db9\u7d96\u7dbc\u7d9f\u7da6\u7dae\u7da9\u7da1\u7dc9\u7f73\u7fe2\u7fe3\u7fe5\u7fde" ], [ "e3a1", "\u8024\u805d\u805c\u8189\u8186\u8183\u8187\u818d\u818c\u818b\u8215\u8497\u84a4\u84a1\u849f\u84ba\u84ce\u84c2\u84ac\u84ae\u84ab\u84b9\u84b4\u84c1\u84cd\u84aa\u849a\u84b1\u84d0\u849d\u84a7\u84bb\u84a2\u8494\u84c7\u84cc\u849b\u84a9\u84af\u84a8\u84d6\u8498\u84b6\u84cf\u84a0\u84d7\u84d4\u84d2\u84db\u84b0\u8491\u8661\u8733\u8723\u8728\u876b\u8740\u872e\u871e\u8721\u8719\u871b\u8743\u872c\u8741\u873e\u8746\u8720\u8732\u872a\u872d\u873c\u8712\u873a\u8731\u8735\u8742\u8726\u8727\u8738\u8724\u871a\u8730\u8711\u88f7\u88e7\u88f1\u88f2\u88fa\u88fe\u88ee\u88fc\u88f6\u88fb" ], [ "e440", "\u88f0\u88ec\u88eb\u899d\u89a1\u899f\u899e\u89e9\u89eb\u89e8\u8aab\u8a99\u8a8b\u8a92\u8a8f\u8a96\u8c3d\u8c68\u8c69\u8cd5\u8ccf\u8cd7\u8d96\u8e09\u8e02\u8dff\u8e0d\u8dfd\u8e0a\u8e03\u8e07\u8e06\u8e05\u8dfe\u8e00\u8e04\u8f10\u8f11\u8f0e\u8f0d\u9123\u911c\u9120\u9122\u911f\u911d\u911a\u9124\u9121\u911b\u917a\u9172\u9179\u9173\u92a5\u92a4\u9276\u929b\u927a\u92a0\u9294\u92aa\u928d" ], [ "e4a1", "\u92a6\u929a\u92ab\u9279\u9297\u927f\u92a3\u92ee\u928e\u9282\u9295\u92a2\u927d\u9288\u92a1\u928a\u9286\u928c\u9299\u92a7\u927e\u9287\u92a9\u929d\u928b\u922d\u969e\u96a1\u96ff\u9758\u977d\u977a\u977e\u9783\u9780\u9782\u977b\u9784\u9781\u977f\u97ce\u97cd\u9816\u98ad\u98ae\u9902\u9900\u9907\u999d\u999c\u99c3\u99b9\u99bb\u99ba\u99c2\u99bd\u99c7\u9ab1\u9ae3\u9ae7\u9b3e\u9b3f\u9b60\u9b61\u9b5f\u9cf1\u9cf2\u9cf5\u9ea7\u50ff\u5103\u5130\u50f8\u5106\u5107\u50f6\u50fe\u510b\u510c\u50fd\u510a\u528b\u528c\u52f1\u52ef\u5648\u5642\u564c\u5635\u5641\u564a\u5649\u5646\u5658" ], [ "e540", "\u565a\u5640\u5633\u563d\u562c\u563e\u5638\u562a\u563a\u571a\u58ab\u589d\u58b1\u58a0\u58a3\u58af\u58ac\u58a5\u58a1\u58ff\u5aff\u5af4\u5afd\u5af7\u5af6\u5b03\u5af8\u5b02\u5af9\u5b01\u5b07\u5b05\u5b0f\u5c67\u5d99\u5d97\u5d9f\u5d92\u5da2\u5d93\u5d95\u5da0\u5d9c\u5da1\u5d9a\u5d9e\u5e69\u5e5d\u5e60\u5e5c\u7df3\u5edb\u5ede\u5ee1\u5f49\u5fb2\u618b\u6183\u6179\u61b1\u61b0\u61a2\u6189" ], [ "e5a1", "\u619b\u6193\u61af\u61ad\u619f\u6192\u61aa\u61a1\u618d\u6166\u61b3\u622d\u646e\u6470\u6496\u64a0\u6485\u6497\u649c\u648f\u648b\u648a\u648c\u64a3\u649f\u6468\u64b1\u6498\u6576\u657a\u6579\u657b\u65b2\u65b3\u66b5\u66b0\u66a9\u66b2\u66b7\u66aa\u66af\u6a00\u6a06\u6a17\u69e5\u69f8\u6a15\u69f1\u69e4\u6a20\u69ff\u69ec\u69e2\u6a1b\u6a1d\u69fe\u6a27\u69f2\u69ee\u6a14\u69f7\u69e7\u6a40\u6a08\u69e6\u69fb\u6a0d\u69fc\u69eb\u6a09\u6a04\u6a18\u6a25\u6a0f\u69f6\u6a26\u6a07\u69f4\u6a16\u6b51\u6ba5\u6ba3\u6ba2\u6ba6\u6c01\u6c00\u6bff\u6c02\u6f41\u6f26\u6f7e\u6f87\u6fc6\u6f92" ], [ "e640", "\u6f8d\u6f89\u6f8c\u6f62\u6f4f\u6f85\u6f5a\u6f96\u6f76\u6f6c\u6f82\u6f55\u6f72\u6f52\u6f50\u6f57\u6f94\u6f93\u6f5d\u6f00\u6f61\u6f6b\u6f7d\u6f67\u6f90\u6f53\u6f8b\u6f69\u6f7f\u6f95\u6f63\u6f77\u6f6a\u6f7b\u71b2\u71af\u719b\u71b0\u71a0\u719a\u71a9\u71b5\u719d\u71a5\u719e\u71a4\u71a1\u71aa\u719c\u71a7\u71b3\u7298\u729a\u7358\u7352\u735e\u735f\u7360\u735d\u735b\u7361\u735a\u7359" ], [ "e6a1", "\u7362\u7487\u7489\u748a\u7486\u7481\u747d\u7485\u7488\u747c\u7479\u7508\u7507\u757e\u7625\u761e\u7619\u761d\u761c\u7623\u761a\u7628\u761b\u769c\u769d\u769e\u769b\u778d\u778f\u7789\u7788\u78cd\u78bb\u78cf\u78cc\u78d1\u78ce\u78d4\u78c8\u78c3\u78c4\u78c9\u799a\u79a1\u79a0\u799c\u79a2\u799b\u6b76\u7a39\u7ab2\u7ab4\u7ab3\u7bb7\u7bcb\u7bbe\u7bac\u7bce\u7baf\u7bb9\u7bca\u7bb5\u7cc5\u7cc8\u7ccc\u7ccb\u7df7\u7ddb\u7dea\u7de7\u7dd7\u7de1\u7e03\u7dfa\u7de6\u7df6\u7df1\u7df0\u7dee\u7ddf\u7f76\u7fac\u7fb0\u7fad\u7fed\u7feb\u7fea\u7fec\u7fe6\u7fe8\u8064\u8067\u81a3\u819f" ], [ "e740", "\u819e\u8195\u81a2\u8199\u8197\u8216\u824f\u8253\u8252\u8250\u824e\u8251\u8524\u853b\u850f\u8500\u8529\u850e\u8509\u850d\u851f\u850a\u8527\u851c\u84fb\u852b\u84fa\u8508\u850c\u84f4\u852a\u84f2\u8515\u84f7\u84eb\u84f3\u84fc\u8512\u84ea\u84e9\u8516\u84fe\u8528\u851d\u852e\u8502\u84fd\u851e\u84f6\u8531\u8526\u84e7\u84e8\u84f0\u84ef\u84f9\u8518\u8520\u8530\u850b\u8519\u852f\u8662" ], [ "e7a1", "\u8756\u8763\u8764\u8777\u87e1\u8773\u8758\u8754\u875b\u8752\u8761\u875a\u8751\u875e\u876d\u876a\u8750\u874e\u875f\u875d\u876f\u876c\u877a\u876e\u875c\u8765\u874f\u877b\u8775\u8762\u8767\u8769\u885a\u8905\u890c\u8914\u890b\u8917\u8918\u8919\u8906\u8916\u8911\u890e\u8909\u89a2\u89a4\u89a3\u89ed\u89f0\u89ec\u8acf\u8ac6\u8ab8\u8ad3\u8ad1\u8ad4\u8ad5\u8abb\u8ad7\u8abe\u8ac0\u8ac5\u8ad8\u8ac3\u8aba\u8abd\u8ad9\u8c3e\u8c4d\u8c8f\u8ce5\u8cdf\u8cd9\u8ce8\u8cda\u8cdd\u8ce7\u8da0\u8d9c\u8da1\u8d9b\u8e20\u8e23\u8e25\u8e24\u8e2e\u8e15\u8e1b\u8e16\u8e11\u8e19\u8e26\u8e27" ], [ "e840", "\u8e14\u8e12\u8e18\u8e13\u8e1c\u8e17\u8e1a\u8f2c\u8f24\u8f18\u8f1a\u8f20\u8f23\u8f16\u8f17\u9073\u9070\u906f\u9067\u906b\u912f\u912b\u9129\u912a\u9132\u9126\u912e\u9185\u9186\u918a\u9181\u9182\u9184\u9180\u92d0\u92c3\u92c4\u92c0\u92d9\u92b6\u92cf\u92f1\u92df\u92d8\u92e9\u92d7\u92dd\u92cc\u92ef\u92c2\u92e8\u92ca\u92c8\u92ce\u92e6\u92cd\u92d5\u92c9\u92e0\u92de\u92e7\u92d1\u92d3" ], [ "e8a1", "\u92b5\u92e1\u92c6\u92b4\u957c\u95ac\u95ab\u95ae\u95b0\u96a4\u96a2\u96d3\u9705\u9708\u9702\u975a\u978a\u978e\u9788\u97d0\u97cf\u981e\u981d\u9826\u9829\u9828\u9820\u981b\u9827\u98b2\u9908\u98fa\u9911\u9914\u9916\u9917\u9915\u99dc\u99cd\u99cf\u99d3\u99d4\u99ce\u99c9\u99d6\u99d8\u99cb\u99d7\u99cc\u9ab3\u9aec\u9aeb\u9af3\u9af2\u9af1\u9b46\u9b43\u9b67\u9b74\u9b71\u9b66\u9b76\u9b75\u9b70\u9b68\u9b64\u9b6c\u9cfc\u9cfa\u9cfd\u9cff\u9cf7\u9d07\u9d00\u9cf9\u9cfb\u9d08\u9d05\u9d04\u9e83\u9ed3\u9f0f\u9f10\u511c\u5113\u5117\u511a\u5111\u51de\u5334\u53e1\u5670\u5660\u566e" ], [ "e940", "\u5673\u5666\u5663\u566d\u5672\u565e\u5677\u571c\u571b\u58c8\u58bd\u58c9\u58bf\u58ba\u58c2\u58bc\u58c6\u5b17\u5b19\u5b1b\u5b21\u5b14\u5b13\u5b10\u5b16\u5b28\u5b1a\u5b20\u5b1e\u5bef\u5dac\u5db1\u5da9\u5da7\u5db5\u5db0\u5dae\u5daa\u5da8\u5db2\u5dad\u5daf\u5db4\u5e67\u5e68\u5e66\u5e6f\u5ee9\u5ee7\u5ee6\u5ee8\u5ee5\u5f4b\u5fbc\u619d\u61a8\u6196\u61c5\u61b4\u61c6\u61c1\u61cc\u61ba" ], [ "e9a1", "\u61bf\u61b8\u618c\u64d7\u64d6\u64d0\u64cf\u64c9\u64bd\u6489\u64c3\u64db\u64f3\u64d9\u6533\u657f\u657c\u65a2\u66c8\u66be\u66c0\u66ca\u66cb\u66cf\u66bd\u66bb\u66ba\u66cc\u6723\u6a34\u6a66\u6a49\u6a67\u6a32\u6a68\u6a3e\u6a5d\u6a6d\u6a76\u6a5b\u6a51\u6a28\u6a5a\u6a3b\u6a3f\u6a41\u6a6a\u6a64\u6a50\u6a4f\u6a54\u6a6f\u6a69\u6a60\u6a3c\u6a5e\u6a56\u6a55\u6a4d\u6a4e\u6a46\u6b55\u6b54\u6b56\u6ba7\u6baa\u6bab\u6bc8\u6bc7\u6c04\u6c03\u6c06\u6fad\u6fcb\u6fa3\u6fc7\u6fbc\u6fce\u6fc8\u6f5e\u6fc4\u6fbd\u6f9e\u6fca\u6fa8\u7004\u6fa5\u6fae\u6fba\u6fac\u6faa\u6fcf\u6fbf\u6fb8" ], [ "ea40", "\u6fa2\u6fc9\u6fab\u6fcd\u6faf\u6fb2\u6fb0\u71c5\u71c2\u71bf\u71b8\u71d6\u71c0\u71c1\u71cb\u71d4\u71ca\u71c7\u71cf\u71bd\u71d8\u71bc\u71c6\u71da\u71db\u729d\u729e\u7369\u7366\u7367\u736c\u7365\u736b\u736a\u747f\u749a\u74a0\u7494\u7492\u7495\u74a1\u750b\u7580\u762f\u762d\u7631\u763d\u7633\u763c\u7635\u7632\u7630\u76bb\u76e6\u779a\u779d\u77a1\u779c\u779b\u77a2\u77a3\u7795\u7799" ], [ "eaa1", "\u7797\u78dd\u78e9\u78e5\u78ea\u78de\u78e3\u78db\u78e1\u78e2\u78ed\u78df\u78e0\u79a4\u7a44\u7a48\u7a47\u7ab6\u7ab8\u7ab5\u7ab1\u7ab7\u7bde\u7be3\u7be7\u7bdd\u7bd5\u7be5\u7bda\u7be8\u7bf9\u7bd4\u7bea\u7be2\u7bdc\u7beb\u7bd8\u7bdf\u7cd2\u7cd4\u7cd7\u7cd0\u7cd1\u7e12\u7e21\u7e17\u7e0c\u7e1f\u7e20\u7e13\u7e0e\u7e1c\u7e15\u7e1a\u7e22\u7e0b\u7e0f\u7e16\u7e0d\u7e14\u7e25\u7e24\u7f43\u7f7b\u7f7c\u7f7a\u7fb1\u7fef\u802a\u8029\u806c\u81b1\u81a6\u81ae\u81b9\u81b5\u81ab\u81b0\u81ac\u81b4\u81b2\u81b7\u81a7\u81f2\u8255\u8256\u8257\u8556\u8545\u856b\u854d\u8553\u8561\u8558" ], [ "eb40", "\u8540\u8546\u8564\u8541\u8562\u8544\u8551\u8547\u8563\u853e\u855b\u8571\u854e\u856e\u8575\u8555\u8567\u8560\u858c\u8566\u855d\u8554\u8565\u856c\u8663\u8665\u8664\u879b\u878f\u8797\u8793\u8792\u8788\u8781\u8796\u8798\u8779\u8787\u87a3\u8785\u8790\u8791\u879d\u8784\u8794\u879c\u879a\u8789\u891e\u8926\u8930\u892d\u892e\u8927\u8931\u8922\u8929\u8923\u892f\u892c\u891f\u89f1\u8ae0" ], [ "eba1", "\u8ae2\u8af2\u8af4\u8af5\u8add\u8b14\u8ae4\u8adf\u8af0\u8ac8\u8ade\u8ae1\u8ae8\u8aff\u8aef\u8afb\u8c91\u8c92\u8c90\u8cf5\u8cee\u8cf1\u8cf0\u8cf3\u8d6c\u8d6e\u8da5\u8da7\u8e33\u8e3e\u8e38\u8e40\u8e45\u8e36\u8e3c\u8e3d\u8e41\u8e30\u8e3f\u8ebd\u8f36\u8f2e\u8f35\u8f32\u8f39\u8f37\u8f34\u9076\u9079\u907b\u9086\u90fa\u9133\u9135\u9136\u9193\u9190\u9191\u918d\u918f\u9327\u931e\u9308\u931f\u9306\u930f\u937a\u9338\u933c\u931b\u9323\u9312\u9301\u9346\u932d\u930e\u930d\u92cb\u931d\u92fa\u9325\u9313\u92f9\u92f7\u9334\u9302\u9324\u92ff\u9329\u9339\u9335\u932a\u9314\u930c" ], [ "ec40", "\u930b\u92fe\u9309\u9300\u92fb\u9316\u95bc\u95cd\u95be\u95b9\u95ba\u95b6\u95bf\u95b5\u95bd\u96a9\u96d4\u970b\u9712\u9710\u9799\u9797\u9794\u97f0\u97f8\u9835\u982f\u9832\u9924\u991f\u9927\u9929\u999e\u99ee\u99ec\u99e5\u99e4\u99f0\u99e3\u99ea\u99e9\u99e7\u9ab9\u9abf\u9ab4\u9abb\u9af6\u9afa\u9af9\u9af7\u9b33\u9b80\u9b85\u9b87\u9b7c\u9b7e\u9b7b\u9b82\u9b93\u9b92\u9b90\u9b7a\u9b95" ], [ "eca1", "\u9b7d\u9b88\u9d25\u9d17\u9d20\u9d1e\u9d14\u9d29\u9d1d\u9d18\u9d22\u9d10\u9d19\u9d1f\u9e88\u9e86\u9e87\u9eae\u9ead\u9ed5\u9ed6\u9efa\u9f12\u9f3d\u5126\u5125\u5122\u5124\u5120\u5129\u52f4\u5693\u568c\u568d\u5686\u5684\u5683\u567e\u5682\u567f\u5681\u58d6\u58d4\u58cf\u58d2\u5b2d\u5b25\u5b32\u5b23\u5b2c\u5b27\u5b26\u5b2f\u5b2e\u5b7b\u5bf1\u5bf2\u5db7\u5e6c\u5e6a\u5fbe\u5fbb\u61c3\u61b5\u61bc\u61e7\u61e0\u61e5\u61e4\u61e8\u61de\u64ef\u64e9\u64e3\u64eb\u64e4\u64e8\u6581\u6580\u65b6\u65da\u66d2\u6a8d\u6a96\u6a81\u6aa5\u6a89\u6a9f\u6a9b\u6aa1\u6a9e\u6a87\u6a93\u6a8e" ], [ "ed40", "\u6a95\u6a83\u6aa8\u6aa4\u6a91\u6a7f\u6aa6\u6a9a\u6a85\u6a8c\u6a92\u6b5b\u6bad\u6c09\u6fcc\u6fa9\u6ff4\u6fd4\u6fe3\u6fdc\u6fed\u6fe7\u6fe6\u6fde\u6ff2\u6fdd\u6fe2\u6fe8\u71e1\u71f1\u71e8\u71f2\u71e4\u71f0\u71e2\u7373\u736e\u736f\u7497\u74b2\u74ab\u7490\u74aa\u74ad\u74b1\u74a5\u74af\u7510\u7511\u7512\u750f\u7584\u7643\u7648\u7649\u7647\u76a4\u76e9\u77b5\u77ab\u77b2\u77b7\u77b6" ], [ "eda1", "\u77b4\u77b1\u77a8\u77f0\u78f3\u78fd\u7902\u78fb\u78fc\u78f2\u7905\u78f9\u78fe\u7904\u79ab\u79a8\u7a5c\u7a5b\u7a56\u7a58\u7a54\u7a5a\u7abe\u7ac0\u7ac1\u7c05\u7c0f\u7bf2\u7c00\u7bff\u7bfb\u7c0e\u7bf4\u7c0b\u7bf3\u7c02\u7c09\u7c03\u7c01\u7bf8\u7bfd\u7c06\u7bf0\u7bf1\u7c10\u7c0a\u7ce8\u7e2d\u7e3c\u7e42\u7e33\u9848\u7e38\u7e2a\u7e49\u7e40\u7e47\u7e29\u7e4c\u7e30\u7e3b\u7e36\u7e44\u7e3a\u7f45\u7f7f\u7f7e\u7f7d\u7ff4\u7ff2\u802c\u81bb\u81c4\u81cc\u81ca\u81c5\u81c7\u81bc\u81e9\u825b\u825a\u825c\u8583\u8580\u858f\u85a7\u8595\u85a0\u858b\u85a3\u857b\u85a4\u859a\u859e" ], [ "ee40", "\u8577\u857c\u8589\u85a1\u857a\u8578\u8557\u858e\u8596\u8586\u858d\u8599\u859d\u8581\u85a2\u8582\u8588\u8585\u8579\u8576\u8598\u8590\u859f\u8668\u87be\u87aa\u87ad\u87c5\u87b0\u87ac\u87b9\u87b5\u87bc\u87ae\u87c9\u87c3\u87c2\u87cc\u87b7\u87af\u87c4\u87ca\u87b4\u87b6\u87bf\u87b8\u87bd\u87de\u87b2\u8935\u8933\u893c\u893e\u8941\u8952\u8937\u8942\u89ad\u89af\u89ae\u89f2\u89f3\u8b1e" ], [ "eea1", "\u8b18\u8b16\u8b11\u8b05\u8b0b\u8b22\u8b0f\u8b12\u8b15\u8b07\u8b0d\u8b08\u8b06\u8b1c\u8b13\u8b1a\u8c4f\u8c70\u8c72\u8c71\u8c6f\u8c95\u8c94\u8cf9\u8d6f\u8e4e\u8e4d\u8e53\u8e50\u8e4c\u8e47\u8f43\u8f40\u9085\u907e\u9138\u919a\u91a2\u919b\u9199\u919f\u91a1\u919d\u91a0\u93a1\u9383\u93af\u9364\u9356\u9347\u937c\u9358\u935c\u9376\u9349\u9350\u9351\u9360\u936d\u938f\u934c\u936a\u9379\u9357\u9355\u9352\u934f\u9371\u9377\u937b\u9361\u935e\u9363\u9367\u9380\u934e\u9359\u95c7\u95c0\u95c9\u95c3\u95c5\u95b7\u96ae\u96b0\u96ac\u9720\u971f\u9718\u971d\u9719\u979a\u97a1\u979c" ], [ "ef40", "\u979e\u979d\u97d5\u97d4\u97f1\u9841\u9844\u984a\u9849\u9845\u9843\u9925\u992b\u992c\u992a\u9933\u9932\u992f\u992d\u9931\u9930\u9998\u99a3\u99a1\u9a02\u99fa\u99f4\u99f7\u99f9\u99f8\u99f6\u99fb\u99fd\u99fe\u99fc\u9a03\u9abe\u9afe\u9afd\u9b01\u9afc\u9b48\u9b9a\u9ba8\u9b9e\u9b9b\u9ba6\u9ba1\u9ba5\u9ba4\u9b86\u9ba2\u9ba0\u9baf\u9d33\u9d41\u9d67\u9d36\u9d2e\u9d2f\u9d31\u9d38\u9d30" ], [ "efa1", "\u9d45\u9d42\u9d43\u9d3e\u9d37\u9d40\u9d3d\u7ff5\u9d2d\u9e8a\u9e89\u9e8d\u9eb0\u9ec8\u9eda\u9efb\u9eff\u9f24\u9f23\u9f22\u9f54\u9fa0\u5131\u512d\u512e\u5698\u569c\u5697\u569a\u569d\u5699\u5970\u5b3c\u5c69\u5c6a\u5dc0\u5e6d\u5e6e\u61d8\u61df\u61ed\u61ee\u61f1\u61ea\u61f0\u61eb\u61d6\u61e9\u64ff\u6504\u64fd\u64f8\u6501\u6503\u64fc\u6594\u65db\u66da\u66db\u66d8\u6ac5\u6ab9\u6abd\u6ae1\u6ac6\u6aba\u6ab6\u6ab7\u6ac7\u6ab4\u6aad\u6b5e\u6bc9\u6c0b\u7007\u700c\u700d\u7001\u7005\u7014\u700e\u6fff\u7000\u6ffb\u7026\u6ffc\u6ff7\u700a\u7201\u71ff\u71f9\u7203\u71fd\u7376" ], [ "f040", "\u74b8\u74c0\u74b5\u74c1\u74be\u74b6\u74bb\u74c2\u7514\u7513\u765c\u7664\u7659\u7650\u7653\u7657\u765a\u76a6\u76bd\u76ec\u77c2\u77ba\u78ff\u790c\u7913\u7914\u7909\u7910\u7912\u7911\u79ad\u79ac\u7a5f\u7c1c\u7c29\u7c19\u7c20\u7c1f\u7c2d\u7c1d\u7c26\u7c28\u7c22\u7c25\u7c30\u7e5c\u7e50\u7e56\u7e63\u7e58\u7e62\u7e5f\u7e51\u7e60\u7e57\u7e53\u7fb5\u7fb3\u7ff7\u7ff8\u8075\u81d1\u81d2" ], [ "f0a1", "\u81d0\u825f\u825e\u85b4\u85c6\u85c0\u85c3\u85c2\u85b3\u85b5\u85bd\u85c7\u85c4\u85bf\u85cb\u85ce\u85c8\u85c5\u85b1\u85b6\u85d2\u8624\u85b8\u85b7\u85be\u8669\u87e7\u87e6\u87e2\u87db\u87eb\u87ea\u87e5\u87df\u87f3\u87e4\u87d4\u87dc\u87d3\u87ed\u87d8\u87e3\u87a4\u87d7\u87d9\u8801\u87f4\u87e8\u87dd\u8953\u894b\u894f\u894c\u8946\u8950\u8951\u8949\u8b2a\u8b27\u8b23\u8b33\u8b30\u8b35\u8b47\u8b2f\u8b3c\u8b3e\u8b31\u8b25\u8b37\u8b26\u8b36\u8b2e\u8b24\u8b3b\u8b3d\u8b3a\u8c42\u8c75\u8c99\u8c98\u8c97\u8cfe\u8d04\u8d02\u8d00\u8e5c\u8e62\u8e60\u8e57\u8e56\u8e5e\u8e65\u8e67" ], [ "f140", "\u8e5b\u8e5a\u8e61\u8e5d\u8e69\u8e54\u8f46\u8f47\u8f48\u8f4b\u9128\u913a\u913b\u913e\u91a8\u91a5\u91a7\u91af\u91aa\u93b5\u938c\u9392\u93b7\u939b\u939d\u9389\u93a7\u938e\u93aa\u939e\u93a6\u9395\u9388\u9399\u939f\u938d\u93b1\u9391\u93b2\u93a4\u93a8\u93b4\u93a3\u93a5\u95d2\u95d3\u95d1\u96b3\u96d7\u96da\u5dc2\u96df\u96d8\u96dd\u9723\u9722\u9725\u97ac\u97ae\u97a8\u97ab\u97a4\u97aa" ], [ "f1a1", "\u97a2\u97a5\u97d7\u97d9\u97d6\u97d8\u97fa\u9850\u9851\u9852\u98b8\u9941\u993c\u993a\u9a0f\u9a0b\u9a09\u9a0d\u9a04\u9a11\u9a0a\u9a05\u9a07\u9a06\u9ac0\u9adc\u9b08\u9b04\u9b05\u9b29\u9b35\u9b4a\u9b4c\u9b4b\u9bc7\u9bc6\u9bc3\u9bbf\u9bc1\u9bb5\u9bb8\u9bd3\u9bb6\u9bc4\u9bb9\u9bbd\u9d5c\u9d53\u9d4f\u9d4a\u9d5b\u9d4b\u9d59\u9d56\u9d4c\u9d57\u9d52\u9d54\u9d5f\u9d58\u9d5a\u9e8e\u9e8c\u9edf\u9f01\u9f00\u9f16\u9f25\u9f2b\u9f2a\u9f29\u9f28\u9f4c\u9f55\u5134\u5135\u5296\u52f7\u53b4\u56ab\u56ad\u56a6\u56a7\u56aa\u56ac\u58da\u58dd\u58db\u5912\u5b3d\u5b3e\u5b3f\u5dc3\u5e70" ], [ "f240", "\u5fbf\u61fb\u6507\u6510\u650d\u6509\u650c\u650e\u6584\u65de\u65dd\u66de\u6ae7\u6ae0\u6acc\u6ad1\u6ad9\u6acb\u6adf\u6adc\u6ad0\u6aeb\u6acf\u6acd\u6ade\u6b60\u6bb0\u6c0c\u7019\u7027\u7020\u7016\u702b\u7021\u7022\u7023\u7029\u7017\u7024\u701c\u702a\u720c\u720a\u7207\u7202\u7205\u72a5\u72a6\u72a4\u72a3\u72a1\u74cb\u74c5\u74b7\u74c3\u7516\u7660\u77c9\u77ca\u77c4\u77f1\u791d\u791b" ], [ "f2a1", "\u7921\u791c\u7917\u791e\u79b0\u7a67\u7a68\u7c33\u7c3c\u7c39\u7c2c\u7c3b\u7cec\u7cea\u7e76\u7e75\u7e78\u7e70\u7e77\u7e6f\u7e7a\u7e72\u7e74\u7e68\u7f4b\u7f4a\u7f83\u7f86\u7fb7\u7ffd\u7ffe\u8078\u81d7\u81d5\u8264\u8261\u8263\u85eb\u85f1\u85ed\u85d9\u85e1\u85e8\u85da\u85d7\u85ec\u85f2\u85f8\u85d8\u85df\u85e3\u85dc\u85d1\u85f0\u85e6\u85ef\u85de\u85e2\u8800\u87fa\u8803\u87f6\u87f7\u8809\u880c\u880b\u8806\u87fc\u8808\u87ff\u880a\u8802\u8962\u895a\u895b\u8957\u8961\u895c\u8958\u895d\u8959\u8988\u89b7\u89b6\u89f6\u8b50\u8b48\u8b4a\u8b40\u8b53\u8b56\u8b54\u8b4b\u8b55" ], [ "f340", "\u8b51\u8b42\u8b52\u8b57\u8c43\u8c77\u8c76\u8c9a\u8d06\u8d07\u8d09\u8dac\u8daa\u8dad\u8dab\u8e6d\u8e78\u8e73\u8e6a\u8e6f\u8e7b\u8ec2\u8f52\u8f51\u8f4f\u8f50\u8f53\u8fb4\u9140\u913f\u91b0\u91ad\u93de\u93c7\u93cf\u93c2\u93da\u93d0\u93f9\u93ec\u93cc\u93d9\u93a9\u93e6\u93ca\u93d4\u93ee\u93e3\u93d5\u93c4\u93ce\u93c0\u93d2\u93e7\u957d\u95da\u95db\u96e1\u9729\u972b\u972c\u9728\u9726" ], [ "f3a1", "\u97b3\u97b7\u97b6\u97dd\u97de\u97df\u985c\u9859\u985d\u9857\u98bf\u98bd\u98bb\u98be\u9948\u9947\u9943\u99a6\u99a7\u9a1a\u9a15\u9a25\u9a1d\u9a24\u9a1b\u9a22\u9a20\u9a27\u9a23\u9a1e\u9a1c\u9a14\u9ac2\u9b0b\u9b0a\u9b0e\u9b0c\u9b37\u9bea\u9beb\u9be0\u9bde\u9be4\u9be6\u9be2\u9bf0\u9bd4\u9bd7\u9bec\u9bdc\u9bd9\u9be5\u9bd5\u9be1\u9bda\u9d77\u9d81\u9d8a\u9d84\u9d88\u9d71\u9d80\u9d78\u9d86\u9d8b\u9d8c\u9d7d\u9d6b\u9d74\u9d75\u9d70\u9d69\u9d85\u9d73\u9d7b\u9d82\u9d6f\u9d79\u9d7f\u9d87\u9d68\u9e94\u9e91\u9ec0\u9efc\u9f2d\u9f40\u9f41\u9f4d\u9f56\u9f57\u9f58\u5337\u56b2" ], [ "f440", "\u56b5\u56b3\u58e3\u5b45\u5dc6\u5dc7\u5eee\u5eef\u5fc0\u5fc1\u61f9\u6517\u6516\u6515\u6513\u65df\u66e8\u66e3\u66e4\u6af3\u6af0\u6aea\u6ae8\u6af9\u6af1\u6aee\u6aef\u703c\u7035\u702f\u7037\u7034\u7031\u7042\u7038\u703f\u703a\u7039\u7040\u703b\u7033\u7041\u7213\u7214\u72a8\u737d\u737c\u74ba\u76ab\u76aa\u76be\u76ed\u77cc\u77ce\u77cf\u77cd\u77f2\u7925\u7923\u7927\u7928\u7924\u7929" ], [ "f4a1", "\u79b2\u7a6e\u7a6c\u7a6d\u7af7\u7c49\u7c48\u7c4a\u7c47\u7c45\u7cee\u7e7b\u7e7e\u7e81\u7e80\u7fba\u7fff\u8079\u81db\u81d9\u820b\u8268\u8269\u8622\u85ff\u8601\u85fe\u861b\u8600\u85f6\u8604\u8609\u8605\u860c\u85fd\u8819\u8810\u8811\u8817\u8813\u8816\u8963\u8966\u89b9\u89f7\u8b60\u8b6a\u8b5d\u8b68\u8b63\u8b65\u8b67\u8b6d\u8dae\u8e86\u8e88\u8e84\u8f59\u8f56\u8f57\u8f55\u8f58\u8f5a\u908d\u9143\u9141\u91b7\u91b5\u91b2\u91b3\u940b\u9413\u93fb\u9420\u940f\u9414\u93fe\u9415\u9410\u9428\u9419\u940d\u93f5\u9400\u93f7\u9407\u940e\u9416\u9412\u93fa\u9409\u93f8\u940a\u93ff" ], [ "f540", "\u93fc\u940c\u93f6\u9411\u9406\u95de\u95e0\u95df\u972e\u972f\u97b9\u97bb\u97fd\u97fe\u9860\u9862\u9863\u985f\u98c1\u98c2\u9950\u994e\u9959\u994c\u994b\u9953\u9a32\u9a34\u9a31\u9a2c\u9a2a\u9a36\u9a29\u9a2e\u9a38\u9a2d\u9ac7\u9aca\u9ac6\u9b10\u9b12\u9b11\u9c0b\u9c08\u9bf7\u9c05\u9c12\u9bf8\u9c40\u9c07\u9c0e\u9c06\u9c17\u9c14\u9c09\u9d9f\u9d99\u9da4\u9d9d\u9d92\u9d98\u9d90\u9d9b" ], [ "f5a1", "\u9da0\u9d94\u9d9c\u9daa\u9d97\u9da1\u9d9a\u9da2\u9da8\u9d9e\u9da3\u9dbf\u9da9\u9d96\u9da6\u9da7\u9e99\u9e9b\u9e9a\u9ee5\u9ee4\u9ee7\u9ee6\u9f30\u9f2e\u9f5b\u9f60\u9f5e\u9f5d\u9f59\u9f91\u513a\u5139\u5298\u5297\u56c3\u56bd\u56be\u5b48\u5b47\u5dcb\u5dcf\u5ef1\u61fd\u651b\u6b02\u6afc\u6b03\u6af8\u6b00\u7043\u7044\u704a\u7048\u7049\u7045\u7046\u721d\u721a\u7219\u737e\u7517\u766a\u77d0\u792d\u7931\u792f\u7c54\u7c53\u7cf2\u7e8a\u7e87\u7e88\u7e8b\u7e86\u7e8d\u7f4d\u7fbb\u8030\u81dd\u8618\u862a\u8626\u861f\u8623\u861c\u8619\u8627\u862e\u8621\u8620\u8629\u861e\u8625" ], [ "f640", "\u8829\u881d\u881b\u8820\u8824\u881c\u882b\u884a\u896d\u8969\u896e\u896b\u89fa\u8b79\u8b78\u8b45\u8b7a\u8b7b\u8d10\u8d14\u8daf\u8e8e\u8e8c\u8f5e\u8f5b\u8f5d\u9146\u9144\u9145\u91b9\u943f\u943b\u9436\u9429\u943d\u943c\u9430\u9439\u942a\u9437\u942c\u9440\u9431\u95e5\u95e4\u95e3\u9735\u973a\u97bf\u97e1\u9864\u98c9\u98c6\u98c0\u9958\u9956\u9a39\u9a3d\u9a46\u9a44\u9a42\u9a41\u9a3a" ], [ "f6a1", "\u9a3f\u9acd\u9b15\u9b17\u9b18\u9b16\u9b3a\u9b52\u9c2b\u9c1d\u9c1c\u9c2c\u9c23\u9c28\u9c29\u9c24\u9c21\u9db7\u9db6\u9dbc\u9dc1\u9dc7\u9dca\u9dcf\u9dbe\u9dc5\u9dc3\u9dbb\u9db5\u9dce\u9db9\u9dba\u9dac\u9dc8\u9db1\u9dad\u9dcc\u9db3\u9dcd\u9db2\u9e7a\u9e9c\u9eeb\u9eee\u9eed\u9f1b\u9f18\u9f1a\u9f31\u9f4e\u9f65\u9f64\u9f92\u4eb9\u56c6\u56c5\u56cb\u5971\u5b4b\u5b4c\u5dd5\u5dd1\u5ef2\u6521\u6520\u6526\u6522\u6b0b\u6b08\u6b09\u6c0d\u7055\u7056\u7057\u7052\u721e\u721f\u72a9\u737f\u74d8\u74d5\u74d9\u74d7\u766d\u76ad\u7935\u79b4\u7a70\u7a71\u7c57\u7c5c\u7c59\u7c5b\u7c5a" ], [ "f740", "\u7cf4\u7cf1\u7e91\u7f4f\u7f87\u81de\u826b\u8634\u8635\u8633\u862c\u8632\u8636\u882c\u8828\u8826\u882a\u8825\u8971\u89bf\u89be\u89fb\u8b7e\u8b84\u8b82\u8b86\u8b85\u8b7f\u8d15\u8e95\u8e94\u8e9a\u8e92\u8e90\u8e96\u8e97\u8f60\u8f62\u9147\u944c\u9450\u944a\u944b\u944f\u9447\u9445\u9448\u9449\u9446\u973f\u97e3\u986a\u9869\u98cb\u9954\u995b\u9a4e\u9a53\u9a54\u9a4c\u9a4f\u9a48\u9a4a" ], [ "f7a1", "\u9a49\u9a52\u9a50\u9ad0\u9b19\u9b2b\u9b3b\u9b56\u9b55\u9c46\u9c48\u9c3f\u9c44\u9c39\u9c33\u9c41\u9c3c\u9c37\u9c34\u9c32\u9c3d\u9c36\u9ddb\u9dd2\u9dde\u9dda\u9dcb\u9dd0\u9ddc\u9dd1\u9ddf\u9de9\u9dd9\u9dd8\u9dd6\u9df5\u9dd5\u9ddd\u9eb6\u9ef0\u9f35\u9f33\u9f32\u9f42\u9f6b\u9f95\u9fa2\u513d\u5299\u58e8\u58e7\u5972\u5b4d\u5dd8\u882f\u5f4f\u6201\u6203\u6204\u6529\u6525\u6596\u66eb\u6b11\u6b12\u6b0f\u6bca\u705b\u705a\u7222\u7382\u7381\u7383\u7670\u77d4\u7c67\u7c66\u7e95\u826c\u863a\u8640\u8639\u863c\u8631\u863b\u863e\u8830\u8832\u882e\u8833\u8976\u8974\u8973\u89fe" ], [ "f840", "\u8b8c\u8b8e\u8b8b\u8b88\u8c45\u8d19\u8e98\u8f64\u8f63\u91bc\u9462\u9455\u945d\u9457\u945e\u97c4\u97c5\u9800\u9a56\u9a59\u9b1e\u9b1f\u9b20\u9c52\u9c58\u9c50\u9c4a\u9c4d\u9c4b\u9c55\u9c59\u9c4c\u9c4e\u9dfb\u9df7\u9def\u9de3\u9deb\u9df8\u9de4\u9df6\u9de1\u9dee\u9de6\u9df2\u9df0\u9de2\u9dec\u9df4\u9df3\u9de8\u9ded\u9ec2\u9ed0\u9ef2\u9ef3\u9f06\u9f1c\u9f38\u9f37\u9f36\u9f43\u9f4f" ], [ "f8a1", "\u9f71\u9f70\u9f6e\u9f6f\u56d3\u56cd\u5b4e\u5c6d\u652d\u66ed\u66ee\u6b13\u705f\u7061\u705d\u7060\u7223\u74db\u74e5\u77d5\u7938\u79b7\u79b6\u7c6a\u7e97\u7f89\u826d\u8643\u8838\u8837\u8835\u884b\u8b94\u8b95\u8e9e\u8e9f\u8ea0\u8e9d\u91be\u91bd\u91c2\u946b\u9468\u9469\u96e5\u9746\u9743\u9747\u97c7\u97e5\u9a5e\u9ad5\u9b59\u9c63\u9c67\u9c66\u9c62\u9c5e\u9c60\u9e02\u9dfe\u9e07\u9e03\u9e06\u9e05\u9e00\u9e01\u9e09\u9dff\u9dfd\u9e04\u9ea0\u9f1e\u9f46\u9f74\u9f75\u9f76\u56d4\u652e\u65b8\u6b18\u6b19\u6b17\u6b1a\u7062\u7226\u72aa\u77d8\u77d9\u7939\u7c69\u7c6b\u7cf6\u7e9a" ], [ "f940", "\u7e98\u7e9b\u7e99\u81e0\u81e1\u8646\u8647\u8648\u8979\u897a\u897c\u897b\u89ff\u8b98\u8b99\u8ea5\u8ea4\u8ea3\u946e\u946d\u946f\u9471\u9473\u9749\u9872\u995f\u9c68\u9c6e\u9c6d\u9e0b\u9e0d\u9e10\u9e0f\u9e12\u9e11\u9ea1\u9ef5\u9f09\u9f47\u9f78\u9f7b\u9f7a\u9f79\u571e\u7066\u7c6f\u883c\u8db2\u8ea6\u91c3\u9474\u9478\u9476\u9475\u9a60\u9c74\u9c73\u9c71\u9c75\u9e14\u9e13\u9ef6\u9f0a" ], [ "f9a1", "\u9fa4\u7068\u7065\u7cf7\u866a\u883e\u883d\u883f\u8b9e\u8c9c\u8ea9\u8ec9\u974b\u9873\u9874\u98cc\u9961\u99ab\u9a64\u9a66\u9a67\u9b24\u9e15\u9e17\u9f48\u6207\u6b1e\u7227\u864c\u8ea8\u9482\u9480\u9481\u9a69\u9a68\u9b2e\u9e19\u7229\u864b\u8b9f\u9483\u9c79\u9eb7\u7675\u9a6b\u9c7a\u9e1d\u7069\u706a\u9ea4\u9f7e\u9f49\u9f98\u7881\u92b9\u88cf\u58bb\u6052\u7ca7\u5afa\u2554\u2566\u2557\u2560\u256c\u2563\u255a\u2569\u255d\u2552\u2564\u2555\u255e\u256a\u2561\u2558\u2567\u255b\u2553\u2565\u2556\u255f\u256b\u2562\u2559\u2568\u255c\u2551\u2550\u256d\u256e\u2570\u256f\u2593" ] ];
    cc._RF.pop();
  }, {} ],
  custom_lobby: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bf088OKnodEmZpwCDObgvMZ", "custom_lobby");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.config_rule_new = exports.config_line_new = exports.config_option_new = exports.config_location_option = exports.config_location_line = exports.config_location = exports.config_rule = exports.config_line = exports.ConfigLineType = exports.config_option = exports.rule_player = exports.custom_lobby = void 0;
    const task_1 = require("../common/task");
    const utils_1 = require("../common/utils");
    const game_auxi_1 = require("./game/game_auxi");
    const global_data_1 = require("./global_data");
    const platform_1 = require("./platform/platform");
    const lobby_framework_1 = require("./lobby_framework");
    const tutorial_1 = require("./tutorial");
    const LobbyRuleLayout_1 = require("../../Component/LobbyYiFu/LobbyRuleLayout");
    const global_define_1 = require("./global_define");
    var custom_lobby;
    (function(custom_lobby) {
      custom_lobby.current_player_rule = null;
      custom_lobby.player_rules = [];
      custom_lobby.config_rule = null;
      custom_lobby.default_game_config = null;
      custom_lobby.game_rule_id = null;
      var check_ingame_done = null;
      custom_lobby.default_location_config = null;
      custom_lobby.location_province_id = null;
      custom_lobby.location_city_id = null;
      custom_lobby.editor_type = LobbyRuleLayout_1.EditorType.NO;
      custom_lobby.game_cards_rule = "";
      custom_lobby.game_hua_rule = "";
      custom_lobby.game_player_count = "";
      custom_lobby.game_hand_count = "";
      custom_lobby.game_chi_type = "";
      custom_lobby.game_caishen = "";
      custom_lobby.game_caishen_type = "";
      custom_lobby.game_baiban = "";
      custom_lobby.game_zhuama = "";
      custom_lobby.fake_match_data = null;
      custom_lobby.booting_task_interrupt = false;
      function setGameDetail(_game_cards_rule, _game_hua_rule, _game_player_count, _game_hand_count, _game_chi_type, _game_caishen, _game_caishen_type, _game_baiban, _zhuama) {
        custom_lobby.game_cards_rule = _game_cards_rule;
        custom_lobby.game_hua_rule = _game_hua_rule;
        custom_lobby.game_player_count = _game_player_count;
        custom_lobby.game_hand_count = _game_hand_count;
        custom_lobby.game_chi_type = _game_chi_type;
        custom_lobby.game_caishen = _game_caishen;
        custom_lobby.game_caishen_type = _game_caishen_type;
        custom_lobby.game_baiban = _game_baiban;
        custom_lobby.game_zhuama = _zhuama;
      }
      custom_lobby.setGameDetail = setGameDetail;
      function set_lobby_task(enter_lobby_task, fromLogon, event) {
        custom_lobby.booting_task_interrupt = false;
        enter_lobby_task.add_sub_task(new task_1.task("init_tutorial").do((done, fail) => {
          console.log("init_tutorial");
          tutorial_1.tutorial.setTutorialFinished();
          cc.resources.load("Prefab/CustomLobby/TutorialMask", cc.Prefab, (err, prefab) => {
            tutorial_1.tutorial.init(prefab);
            done();
          });
        }));
        enter_lobby_task.add_sub_task(new task_1.task("check_ingame").do((done, fail) => {
          console.log("check_ingame");
          utils_1.utils.hide_loading();
          fromLogon ? check_ingame(done) : done();
        }));
        enter_lobby_task.add_sub_task(new task_1.task("check_other_ingame").do((done, fail) => {
          console.log("check_other_ingame");
          custom_lobby.booting_task_interrupt ? done() : fromLogon ? check_other_ingame(done) : done();
        }));
        enter_lobby_task.add_sub_task(new task_1.task("launch_options").do((done, fail) => {
          console.log("launch_options");
          if (!custom_lobby.booting_task_interrupt && fromLogon) {
            console.log("checking launch options");
            let res = platform_1.platform.inst.getLaunchOptionsSync();
            if (global_data_1.global_data.force_launch_options) {
              res = global_data_1.global_data.force_launch_options;
              global_data_1.global_data.force_launch_options = null;
            }
            lobby_framework_1.lobby_framework.check_launch_options(res);
            lobby_framework_1.lobby_framework.do_launch_options(true);
          }
          done();
        }));
        enter_lobby_task.add_sub_task(new task_1.task("fetch_fake_match").do((done, fail) => {
          console.log("fetch_fake_match");
          let that = this;
          done();
        }));
        enter_lobby_task.add_sub_task(new task_1.task("fetch_rule_config").do((done, fail) => {
          console.log("fetch_rule_config");
          if (!custom_lobby.booting_task_interrupt) {
            fetch_rule_config_new();
            fetch_location_config();
          }
          done();
        }));
        enter_lobby_task.add_sub_task(new task_1.task("show_config_ui").do((done, fail) => {
          console.log("show_config_ui");
          console.log("booting_task_interrupt 11 : ", custom_lobby.booting_task_interrupt);
          if (!custom_lobby.booting_task_interrupt) {
            console.log("booting_task_interrupt 22 : ");
            show_config_ui();
          }
          done();
        }));
      }
      custom_lobby.set_lobby_task = set_lobby_task;
      function show_config_ui() {
        utils_1.utils.send("ShowLobbyRulePanel");
      }
      custom_lobby.show_config_ui = show_config_ui;
      function insert_current_player_rule(name) {
        if (custom_lobby.current_player_rule.id > 0) {
          custom_lobby.player_rules = custom_lobby.player_rules.filter(x => x.id != custom_lobby.current_player_rule.id);
          custom_lobby.current_player_rule.version = custom_lobby.config_rule.version;
          custom_lobby.current_player_rule.name = name;
          custom_lobby.current_player_rule.time = new Date().getTime();
          custom_lobby.player_rules.push(custom_lobby.current_player_rule);
          custom_lobby.player_rules = custom_lobby.player_rules.sort((a, b) => a.time - b.time);
        } else {
          custom_lobby.player_rules = custom_lobby.player_rules.sort((a, b) => a.time - b.time);
          let last_id = custom_lobby.player_rules.map(r => r.id).sort((a, b) => b - a)[0];
          last_id || (last_id = 0);
          custom_lobby.current_player_rule.id = last_id + 1;
          custom_lobby.current_player_rule.version = custom_lobby.config_rule.version;
          custom_lobby.current_player_rule.name = name;
          custom_lobby.current_player_rule.time = new Date().getTime();
          custom_lobby.player_rules.add(custom_lobby.current_player_rule);
        }
      }
      custom_lobby.insert_current_player_rule = insert_current_player_rule;
      function insert_current_player_rule_location() {
        custom_lobby.current_player_rule.province_id = custom_lobby.location_province_id;
        custom_lobby.current_player_rule.city_id = custom_lobby.location_city_id;
      }
      custom_lobby.insert_current_player_rule_location = insert_current_player_rule_location;
      function launch_game(game_id) {
        console.log("launch game requested", custom_lobby.current_player_rule);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
        game_auxi_1.game_auxi.create_private_room(game_id, 2, 0, utils_1.utils.to_json(custom_lobby.current_player_rule));
      }
      custom_lobby.launch_game = launch_game;
      function tt() {}
      custom_lobby.tt = tt;
      function create_default_player_rule_new() {
        custom_lobby.current_player_rule = new rule_player();
        custom_lobby.current_player_rule.id = -1;
        custom_lobby.current_player_rule.rule_id = 101;
        custom_lobby.current_player_rule.hua_id = 201;
        custom_lobby.current_player_rule.province_id = null;
        custom_lobby.current_player_rule.city_id = null;
        custom_lobby.current_player_rule.remove = {
          hua: 0,
          zi: 0,
          wan: 0,
          tong: 0,
          tiao: 0,
          remove: [ 51, 52, 53, 54, 55, 56, 57, 58 ]
        };
        custom_lobby.current_player_rule.buhua = [];
        custom_lobby.current_player_rule.config = [];
        custom_lobby.config_rule.config.forEach(l => {
          custom_lobby.current_player_rule.config.push({
            id: l.id,
            op: [ l.list[0].id ]
          });
        });
        custom_lobby.current_player_rule.config.find(x => 3 == x.id).op = [ 1 ];
        custom_lobby.current_player_rule.version = custom_lobby.config_rule.version;
        custom_lobby.current_player_rule.name = "";
      }
      custom_lobby.create_default_player_rule_new = create_default_player_rule_new;
      function delete_player_rule(id) {
        custom_lobby.player_rules = custom_lobby.player_rules.filter(rule => rule.id != id);
      }
      custom_lobby.delete_player_rule = delete_player_rule;
      function save_player_rules(obj) {
        try {
          let rules_str = utils_1.utils.to_json(custom_lobby.player_rules);
          console.log(`save_rules ${rules_str.length} bytes`);
          utils_1.utils.setLocalStorage("local_player_rules", rules_str);
        } catch (e) {}
      }
      custom_lobby.save_player_rules = save_player_rules;
      function save_player_rules_local(obj) {
        try {
          let rules_str = utils_1.utils.to_json(custom_lobby.player_rules);
          console.log(`save_rules ${rules_str.length} bytes`);
          utils_1.utils.setLocalStorage("local_player_rules", rules_str);
        } catch (e) {}
        obj.success && obj.success();
      }
      custom_lobby.save_player_rules_local = save_player_rules_local;
      function fetch_player_rules(obj) {
        let url = global_data_1.global_data.fill_url("http://webtest.73sy.com/mobile/game_friend_option_query.php?userid={USERID}&session={SESSION}&gameid=150");
        utils_1.utils.show_loading("\u6b63\u5728\u83b7\u53d6\u89c4\u5219...");
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          success: data => {
            console.log("data", data);
            try {
              custom_lobby.player_rules = data ? utils_1.utils.from_json(data) : [];
            } catch (e) {
              custom_lobby.player_rules = [];
            }
          },
          fail: () => {
            custom_lobby.player_rules = [];
          },
          complete: () => {
            obj.success && obj.success();
          }
        });
      }
      custom_lobby.fetch_player_rules = fetch_player_rules;
      function fetch_player_rules_local(obj) {
        try {
          let rules_str = utils_1.utils.getLocalStorage("local_player_rules");
          console.log(`load_rules ${rules_str.length} bytes`);
          custom_lobby.player_rules = rules_str ? utils_1.utils.from_json(rules_str) : [];
        } catch (e) {
          custom_lobby.player_rules = [];
        }
        obj.success && obj.success();
      }
      custom_lobby.fetch_player_rules_local = fetch_player_rules_local;
      function check_ingame(done) {
        console.log("checking ingame");
        utils_1.utils.show_loading("\u6b63\u5728\u6e05\u7406...");
        check_ingame_done = done;
        utils_1.utils.on("EnterAuxiResult", null, onEventEnterAuxiResult);
        utils_1.utils.on("EnterAuxiResultError", null, onEventEnterAuxiResultError);
        game_auxi_1.game_auxi.select_private_room();
      }
      custom_lobby.check_ingame = check_ingame;
      function onEventEnterAuxiResult(param) {
        if (param.int_code == game_auxi_1.game_auxi.SUB_AUXI_QUERY_TABLE_SUCCESS_V20) {
          let list = game_auxi_1.game_auxi._vector_my_private_room.filter(x => 150 == x.gameid);
          if (list.length > 0) {
            console.log("try enter_private_room", list[0]);
            game_auxi_1.game_auxi.enter_private_room(list[0].code);
            send_check_ingame_done(true);
          } else send_check_ingame_done(false);
        } else if (param.int_code == game_auxi_1.game_auxi.SUB_AUXI_QUERY_TABLE_FAIL_V20) send_check_ingame_done(false); else if (param.int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20) send_check_ingame_done(true); else if (param.int_code == game_auxi_1.game_auxi.SUB_AUXI_JOIN_TABLE_FAIL_V20) {
          send_check_ingame_done(false);
          param.str_result && utils_1.utils.show_hint(param.str_result);
        } else param.int_code == game_auxi_1.game_auxi.SUB_AUXI_CREATE_TABLE_FAIL_V20 && param.str_result && utils_1.utils.show_hint(param.str_result);
      }
      function onEventEnterAuxiResultError() {
        send_check_ingame_done(false);
      }
      function send_check_ingame_done(interrupt) {
        utils_1.utils.off("EnterAuxiResult", null, onEventEnterAuxiResult);
        utils_1.utils.off("EnterAuxiResultError", null, onEventEnterAuxiResultError);
        utils_1.utils.hide_loading();
        check_ingame_done && check_ingame_done();
        check_ingame_done = null;
        custom_lobby.booting_task_interrupt = interrupt;
        console.log("send_check_ingame_done booting_task_interrupt  : ", custom_lobby.booting_task_interrupt);
      }
      function check_other_ingame(done) {
        if (0 != global_data_1.global_data.get_the_user_data()._int_ingame) {
          lobby_framework_1.lobby_framework.do_command(`enter_private_room:${global_data_1.global_data.get_the_user_data()._int_ingame}`, "");
          custom_lobby.booting_task_interrupt = true;
          console.log("check_other_ingame booting_task_interrupt : ", custom_lobby.booting_task_interrupt);
        }
        done();
      }
      custom_lobby.check_other_ingame = check_other_ingame;
      function fetch_rule_config() {
        let rule = null;
        try {
          rule = global_data_1.global_data.gamelist_json_data.friend_option.find(x => 150 == x.id).option;
        } catch (e) {
          rule = {
            config: [ {
              id: 1,
              desc: "\u4eba\u6570",
              type: 1,
              list: [ {
                id: 1,
                desc: "4\u4eba"
              }, {
                id: 2,
                desc: "3\u4eba"
              }, {
                id: 3,
                desc: "2\u4eba"
              } ]
            }, {
              id: 2,
              desc: "\u624b\u724c",
              type: 1,
              list: [ {
                id: 1,
                desc: "14\u5f20/\u4eba"
              }, {
                id: 2,
                desc: "17\u5f20/\u4eba"
              } ]
            }, {
              id: 3,
              type: 1,
              desc: "\u8d22\u795e",
              hint: "",
              new: 1,
              list: [ {
                id: 1,
                desc: "\u65e0\u624d\u795e"
              }, {
                id: 2,
                desc: "\u6709\u8d22\u795e",
                enable: 101
              } ]
            }, {
              id: 101,
              type: 1,
              desc: "",
              hint: "",
              new: 1,
              list: [ {
                id: 1,
                desc: "3\u5f20\u8d22\u795e",
                hint: ""
              }, {
                id: 2,
                desc: "4\u5f20\u8d22\u795e"
              }, {
                id: 3,
                desc: "\u767d\u677f\u8d22\u795e"
              }, {
                id: 4,
                desc: "\u7ea2\u4e2d\u8d22\u795e"
              } ]
            }, {
              id: 4,
              desc: "\u5403\u78b0",
              type: 1,
              list: [ {
                id: 1,
                desc: "\u6709\u5403"
              }, {
                id: 2,
                desc: "\u6ca1\u6709\u5403"
              } ]
            }, {
              id: 5,
              desc: "\u767d\u677f",
              type: 1,
              list: [ {
                id: 1,
                desc: "\u66ff\u8d22\u795e"
              }, {
                id: 2,
                desc: "\u4e0d\u66ff\u8d22\u795e"
              } ]
            } ],
            version: 1
          };
        }
        return rule;
      }
      custom_lobby.fetch_rule_config = fetch_rule_config;
      function get_remove_card_rule_config(id) {
        let card_rule_config = {
          config: [ {
            id: 101,
            list: [ 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 102,
            list: []
          }, {
            id: 103,
            list: [ 41, 42, 43, 44, 45, 46, 47, 41, 42, 43, 44, 45, 46, 47, 41, 42, 43, 44, 45, 46, 47, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 104,
            list: [ 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19, 11, 12, 13, 14, 15, 16, 17, 18, 19, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 105,
            list: [ 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 106,
            list: [ 41, 42, 43, 44, 46, 47, 41, 42, 43, 44, 46, 47, 41, 42, 43, 44, 46, 47, 41, 42, 43, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          } ]
        };
        return card_rule_config.config.find((value, index) => value.id == id).list;
      }
      custom_lobby.get_remove_card_rule_config = get_remove_card_rule_config;
      function get_hua_rule_single_config(id) {
        let hua_rule_single_config = {
          config: [ {
            id: 201,
            list: []
          }, {
            id: 202,
            list: [ 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 203,
            list: [ 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 204,
            list: [ 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          } ]
        };
        return hua_rule_single_config.config.find((value, index) => value.id == id).list;
      }
      custom_lobby.get_hua_rule_single_config = get_hua_rule_single_config;
      function get_hua_rule_config() {
        let hua_rule_config = {
          config: [ {
            id: 201,
            list: []
          }, {
            id: 202,
            list: [ 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 203,
            list: [ 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          }, {
            id: 204,
            list: [ 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 ]
          } ]
        };
        return hua_rule_config.config;
      }
      custom_lobby.get_hua_rule_config = get_hua_rule_config;
      function get_player_count_by_id(id) {
        if (id > 3) return 4;
        let user_count = [ 4, 3, 2 ];
        return user_count[id - 1];
      }
      custom_lobby.get_player_count_by_id = get_player_count_by_id;
      function get_card_count_by_id(id) {
        if (id > 2) return 4;
        let card_count = [ 13, 16 ];
        return card_count[id - 1];
      }
      custom_lobby.get_card_count_by_id = get_card_count_by_id;
      function get_chi_type_by_id(id) {
        if (id > 2) return "\u80fd\u5403 (\u53ef\u4ee5\u5403\u3001\u78b0\u3001\u6760)";
        let card_count = [ "\u80fd\u5403 (\u53ef\u4ee5\u5403\u3001\u78b0\u3001\u6760)", "\u4e0d\u80fd\u5403 (\u53ef\u4ee5\u78b0\u3001\u6760)" ];
        return card_count[id - 1];
      }
      custom_lobby.get_chi_type_by_id = get_chi_type_by_id;
      function get_caishen_by_id(id) {
        if (id > 2) return "\u6709\u8d22\u795e";
        let card_count = [ "\u65e0\u8d22\u795e", "\u6709\u8d22\u795e" ];
        return card_count[id - 1];
      }
      custom_lobby.get_caishen_by_id = get_caishen_by_id;
      function get_caishen_type_by_id(id) {
        if (id > 4) return "3\u5f20\u8d22\u795e (\u6bcf\u5c40\u6e38\u620f\u6700\u591a\u6478\u52303\u5f20\u8d22\u795e)";
        let card_count = [ "3\u5f20\u8d22\u795e (\u6bcf\u5c40\u6e38\u620f\u6700\u591a\u6478\u52303\u5f20\u8d22\u795e)", "4\u5f20\u8d22\u795e (\u6bcf\u5c40\u6e38\u620f\u6700\u591a\u6478\u52304\u5f20\u8d22\u795e)", "\u767d\u677f\u8d22\u795e (\u767d\u677f\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e)", "\u7ea2\u4e2d\u8d22\u795e (\u7ea2\u4e2d\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e)" ];
        return card_count[id - 1];
      }
      custom_lobby.get_caishen_type_by_id = get_caishen_type_by_id;
      function get_baiban_type_by_id(id) {
        if (id > 2) return "\u4e0d\u66ff\u8d22\u795e";
        let card_count = [ "\u4e0d\u66ff\u8d22\u795e", "\u66ff\u8d22\u795e (\u767d\u677f\u80fd\u4ee3\u66ff\u8d22\u795e\u724c\uff0c\u4e0e\u8d22\u795e\u539f\u6765\u76f8\u90bb\u724c\u7ec4\u6210\u987a\u5b50)" ];
        return card_count[id - 1];
      }
      custom_lobby.get_baiban_type_by_id = get_baiban_type_by_id;
      function get_zhuama_by_id(id) {
        if (id > 2) return "\u65e0";
        let card_count = [ "\u65e0", "\u6bcf\u8f6e\u80e1\u724c\u540e\u7ffb\u5f00\u6307\u5b9a\u6570\u91cf\u7684\u9a6c\u724c" ];
        return card_count[id - 1];
      }
      custom_lobby.get_zhuama_by_id = get_zhuama_by_id;
      function have_caishen() {
        let id = custom_lobby.current_player_rule.config.find((v, i) => 3 == v.id).op[0];
        return id == LobbyRuleLayout_1.CaiShen.HAVE;
      }
      custom_lobby.have_caishen = have_caishen;
      function have_baiban() {
        if (custom_lobby.have_caishen()) {
          let op = custom_lobby.current_player_rule.config.find(x => 101 == x.id).op[0];
          let is_baibancaishen = false;
          op == LobbyRuleLayout_1.CaiShenType.BAIBAN ? is_baibancaishen = true : op == LobbyRuleLayout_1.CaiShenType.CUSTOM && custom_lobby.current_player_rule.custom_caishen.length > 0 && 47 == custom_lobby.current_player_rule.custom_caishen[0] && (is_baibancaishen = true);
          if (!is_baibancaishen) {
            let data = custom_lobby.current_player_rule.remove.remove;
            return !data.contains(47);
          }
        }
        return false;
      }
      custom_lobby.have_baiban = have_baiban;
      function fetch_rule_config_new() {
        custom_lobby.config_rule = {
          config: [ {
            id: 1,
            desc: "\u4eba\u6570",
            type: 1,
            list: [ {
              id: 1,
              desc: "4\u4eba"
            }, {
              id: 2,
              desc: "3\u4eba"
            }, {
              id: 3,
              desc: "2\u4eba"
            } ]
          }, {
            id: 2,
            desc: "\u624b\u724c",
            type: 1,
            list: [ {
              id: 1,
              desc: "13\u5f20/\u4eba"
            }, {
              id: 2,
              desc: "16\u5f20/\u4eba"
            } ]
          }, {
            id: 3,
            type: 1,
            desc: "\u8d22\u795e",
            hint: "",
            new: 1,
            list: [ {
              id: 1,
              desc: "\u65e0\u624d\u795e"
            }, {
              id: 2,
              desc: "\u6709\u8d22\u795e",
              enable: 101
            } ]
          }, {
            id: 101,
            type: 1,
            desc: "",
            hint: "",
            new: 1,
            list: [ {
              id: 1,
              desc: "3\u5f20\u8d22\u795e",
              hint: ""
            }, {
              id: 2,
              desc: "4\u5f20\u8d22\u795e"
            }, {
              id: 3,
              desc: "\u767d\u677f\u8d22\u795e"
            }, {
              id: 4,
              desc: "\u7ea2\u4e2d\u8d22\u795e"
            } ]
          }, {
            id: 4,
            desc: "\u5403\u78b0",
            type: 1,
            list: [ {
              id: 1,
              desc: "\u6709\u5403"
            }, {
              id: 2,
              desc: "\u6ca1\u6709\u5403"
            } ]
          }, {
            id: 102,
            desc: "\u767d\u677f",
            type: 1,
            list: [ {
              id: 1,
              desc: "\u66ff\u8d22\u795e"
            }, {
              id: 2,
              desc: "\u4e0d\u66ff\u8d22\u795e"
            } ]
          }, {
            id: 5,
            desc: "\u6293\u9a6c",
            type: 1,
            list: [ {
              id: 1,
              desc: "\u65e0"
            }, {
              id: 2,
              desc: "\u6bcf\u8f6e\u6293\u9a6c"
            } ]
          } ],
          version: 1
        };
      }
      custom_lobby.fetch_rule_config_new = fetch_rule_config_new;
      custom_lobby.default_config = {
        config: [ {
          id: 100,
          name: "\u724c\u5e93\u89c4\u5219",
          list: [ {
            id: 101,
            name: "\u5927\u4f17\u4e00",
            desc: "\u6253\u724c\u4e07\u6761\u7b52\u3001\u4e1c\u5357\u897f\u5317\u3001\u4e2d\u53d1\u767d"
          }, {
            id: 102,
            name: "\u5927\u4f17\u4e8c",
            desc: "\u6253\u724c\u4e07\u6761\u7b52\u3001\u4e1c\u5357\u897f\u5317\u3001\u4e2d\u53d1\u767d\u3001\u516b\u5f20\u82b1\u724c"
          }, {
            id: 103,
            name: "\u4e07\u6761\u7b52",
            desc: "\u6253\u724c\u4e07\u6761\u7b52"
          }, {
            id: 104,
            name: "\u6761\u7b52\u5b57",
            desc: "\u6253\u724c\u6761\u7b52\u3001\u4e2d\u53d1\u767d"
          }, {
            id: 105,
            name: "\u4e07\u7b52\u98ce\u5b57",
            desc: "\u6253\u724c\u4e07\u7b52\u3001\u4e1c\u5357\u897f\u5317\u3001\u4e2d\u53d1\u767d"
          }, {
            id: 106,
            name: "\u4e07\u7b52\u6761\u3001\u7ea2\u4e2d",
            desc: "\u6253\u724c\u4e07\u7b52\u6761\u3001\u7ea2\u4e2d"
          } ]
        }, {
          id: 200,
          name: "\u8865\u82b1\u89c4\u5219",
          list: [ {
            id: 201,
            name: "\u65e0",
            desc: ""
          }, {
            id: 202,
            name: "\u516b\u5f20\u82b1",
            desc: "\u6625\u590f\u79cb\u51ac\u3001\u6885\u5170\u7af9\u83ca"
          }, {
            id: 203,
            name: "\u5b57\u5f53\u82b1",
            desc: "\u516b\u5f20\u82b1\u3001\u4e2d\u53d1\u767d\u4e5f\u5f53\u82b1\u724c\u7528"
          }, {
            id: 204,
            name: "\u98ce\u5b57\u5f53\u82b1",
            desc: "\u516b\u5f20\u82b1\u3001\u4e1c\u5357\u897f\u5317\u548c\u4e2d\u53d1\u767d\u4e5f\u5f53\u82b1\u724c\u7528"
          } ]
        }, {
          id: 300,
          name: "\u6e38\u620f\u4eba\u6570",
          list: [ {
            id: 301,
            name: "4\u4eba",
            desc: ""
          }, {
            id: 302,
            name: "3\u4eba",
            desc: ""
          }, {
            id: 303,
            name: "2\u4eba",
            desc: ""
          } ]
        }, {
          id: 400,
          name: "\u624b\u724c\u6570\u76ee",
          list: [ {
            id: 401,
            name: "\u6bcf\u4eba13\u5f20",
            desc: ""
          }, {
            id: 402,
            name: "\u6bcf\u4eba16\u5f20",
            desc: ""
          } ]
        }, {
          id: 500,
          name: "\u5403\u78b0\u6760",
          list: [ {
            id: 501,
            name: "\u80fd\u5403",
            desc: "\u53ef\u4ee5\u5403\u3001\u78b0\u3001\u6760"
          }, {
            id: 502,
            name: "\u4e0d\u80fd\u5403",
            desc: "\u53ef\u4ee5\u78b0\u3001\u6760"
          } ]
        }, {
          id: 600,
          name: "\u8d22\u795e",
          list: [ {
            id: 601,
            name: "\u6709\u8d22\u795e",
            desc: ""
          }, {
            id: 602,
            name: "\u65e0\u8d22\u795e",
            desc: ""
          } ]
        }, {
          id: 700,
          name: "",
          list: [ {
            id: 701,
            name: "3\u5f20\u8d22\u795e",
            desc: "\u968f\u673a\u8d22\u795e\uff0c\u6bcf\u5c403\u5f20"
          }, {
            id: 702,
            name: "4\u5f20\u8d22\u795e",
            desc: "\u968f\u673a\u8d22\u795e\uff0c\u6bcf\u5c404\u5f20"
          }, {
            id: 703,
            name: "\u767d\u677f\u8d22\u795e",
            desc: "\u767d\u677f\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e"
          }, {
            id: 704,
            name: "\u7ea2\u4e2d\u8d22\u795e",
            desc: "\u7ea2\u4e2d\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e"
          } ]
        }, {
          id: 800,
          name: "\u767d\u677f",
          list: [ {
            id: 801,
            name: "\u4e0d\u66ff\u8d22\u795e",
            desc: ""
          }, {
            id: 802,
            name: "\u66ff\u8d22\u795e",
            desc: "\u767d\u677f\u80fd\u4ee3\u66ff\u8d22\u795e\u724c\uff0c\u4e0e\u8d22\u795e\u539f\u6765\u76f8\u90bb\u724c\u7ec4\u6210\u987a\u5b50"
          } ]
        }, {
          id: 900,
          name: "\u6293\u9a6c",
          list: [ {
            id: 901,
            name: "\u65e0",
            desc: ""
          }, {
            id: 902,
            name: "\u6bcf\u8f6e\u6293\u9a6c",
            desc: "\u6bcf\u8f6e\u80e1\u724c\u540e\u7ffb\u5f00\u6307\u5b9a\u6570\u91cf\u7684\u9a6c\u724c"
          } ]
        } ],
        version: 1
      };
      function fetch_game_config_new() {
        custom_lobby.default_game_config = null;
        custom_lobby.default_game_config = custom_lobby.default_config;
      }
      custom_lobby.fetch_game_config_new = fetch_game_config_new;
      function fetch_location_config() {
        let LOCAL_CONFIG_PATH = "locationConfig";
        utils_1.utils.load_json_res({
          path: LOCAL_CONFIG_PATH,
          success: json => {
            custom_lobby.default_location_config = null;
            custom_lobby.default_location_config = json.json;
          }
        });
      }
      custom_lobby.fetch_location_config = fetch_location_config;
      function fetch_fake_match_config() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MATCH_LISTS);
        url = utils_1.utils.string_replace_any(url, "{KINDID}", 152);
        url = utils_1.utils.string_replace_any(url, "{AREAID}", global_data_1.global_data.area_id);
        url = utils_1.utils.string_replace_any(url, "{CHANNELID}", global_data_1.global_data.channel_id);
        url = utils_1.utils.string_replace_any(url, "{VERSION}", global_data_1.global_data.version);
        url = utils_1.utils.string_replace_any(url, "{USERID}", global_data_1.global_data.get_the_user_data()._int_user_id);
        url = utils_1.utils.string_replace_any(url, "{SESSION}", global_data_1.global_data.get_the_user_data()._str_session);
        url = utils_1.utils.string_replace_any(url, "{GAMEID}", 152);
        let that = this;
        utils_1.utils.send_http_request({
          url: url,
          success: (data, msg) => {
            if (data && data.lists.length > 0) {
              that.fake_match_data = data.lists[data.lists.length - 1];
              data.lists.length > 1 && data.lists.forEach(element => {
                2 != element.status && (that.fake_match_data = element);
              });
            } else {
              let expect_date = new Date(2022, 0, 28, 20).getTime();
              let cur_date = new Date().getTime();
              that.fake_match_data = {};
              if (cur_date < expect_date) {
                that.fake_match_data["start_time"] = Math.floor(expect_date / 1e3);
                that.fake_match_data["end_time"] = Math.floor(expect_date / 1e3) + 3600;
                that.fake_match_data["status"] = 0;
              }
            }
            utils_1.utils.send("show_fake_match", that.fake_match_data);
          },
          fail: errMsg => {
            utils_1.utils.show_hint(errMsg);
          }
        });
      }
      custom_lobby.fetch_fake_match_config = fetch_fake_match_config;
      function get_config_province_name_by_id(id) {
        custom_lobby.location_province_id = id;
        let line_config = custom_lobby.default_location_config.list.find((v, i) => v.id == id);
        if (!line_config) return "";
        return line_config.name;
      }
      custom_lobby.get_config_province_name_by_id = get_config_province_name_by_id;
      function get_config_city_name_by_id(id) {
        let line_config = custom_lobby.default_location_config.list.find((v, i) => v.id == custom_lobby.location_province_id);
        if (line_config) {
          let line_op = line_config.list.find((v, i) => v.id == id);
          if (line_op) return line_op.name;
          return "";
        }
        return "";
      }
      custom_lobby.get_config_city_name_by_id = get_config_city_name_by_id;
      function get_config_city_last_index_by_id(id) {
        let line_config = custom_lobby.default_location_config.list.find((v, i) => v.id == id);
        if (line_config) return line_config.list.length - 1;
        return 0;
      }
      custom_lobby.get_config_city_last_index_by_id = get_config_city_last_index_by_id;
      function get_config_province_index_by_name(name) {
        for (let i = 0; i < custom_lobby.default_location_config.list.length; i++) {
          let element = custom_lobby.default_location_config.list[i];
          if (element.name == name) {
            custom_lobby.location_province_id = element.id;
            return element.id - 2001;
          }
        }
        return -1;
      }
      custom_lobby.get_config_province_index_by_name = get_config_province_index_by_name;
      function get_config_city_index_by_name(name) {
        if (custom_lobby.location_province_id) {
          let line_config = custom_lobby.default_location_config.list.find((v, i) => v.id == custom_lobby.location_province_id);
          if (line_config) {
            let option = line_config.list.find((v, i) => v.name == name);
            if (option) {
              custom_lobby.location_city_id = option.id;
              return option.id - 1001;
            }
          }
        }
        return -1;
      }
      custom_lobby.get_config_city_index_by_name = get_config_city_index_by_name;
      function get_config_citys_by_id(id) {
        let line_config = custom_lobby.default_location_config.list.find((v, i) => v.id == id);
        if (line_config) return line_config;
        return null;
      }
      custom_lobby.get_config_citys_by_id = get_config_citys_by_id;
      function get_config_index_by_id(id) {
        let _id = 100 * Math.floor(id / 100);
        let index = custom_lobby.default_game_config.config.find((v, i) => v.id == _id).list.findIndex((v, i) => v.id == id);
        return index;
      }
      custom_lobby.get_config_index_by_id = get_config_index_by_id;
      function reset_hua_config() {
        custom_lobby.default_game_config.config.find((value, index) => 200 == value.id).list = [ {
          id: 201,
          name: "\u65e0",
          desc: ""
        }, {
          id: 202,
          name: "\u516b\u5f20\u82b1",
          desc: "\u6625\u590f\u79cb\u51ac\u3001\u6885\u5170\u7af9\u83ca"
        }, {
          id: 203,
          name: "\u5b57\u5f53\u82b1",
          desc: "\u516b\u5f20\u82b1\u3001\u4e2d\u53d1\u767d\u4e5f\u5f53\u82b1\u724c\u7528"
        }, {
          id: 204,
          name: "\u98ce\u5b57\u5f53\u82b1",
          desc: "\u516b\u5f20\u82b1\u3001\u4e1c\u5357\u897f\u5317\u548c\u4e2d\u53d1\u767d\u4e5f\u5f53\u82b1\u724c\u7528"
        } ];
      }
      custom_lobby.reset_hua_config = reset_hua_config;
      function reset_player_count_config() {
        custom_lobby.default_game_config.config.find((value, index) => 300 == value.id).list = [ {
          id: 301,
          name: "4\u4eba",
          desc: ""
        }, {
          id: 302,
          name: "3\u4eba",
          desc: ""
        }, {
          id: 303,
          name: "2\u4eba",
          desc: ""
        } ];
      }
      custom_lobby.reset_player_count_config = reset_player_count_config;
      function reset_hanc_card_count_config() {
        custom_lobby.default_game_config.config.find((value, index) => 400 == value.id).list = [ {
          id: 401,
          name: "\u6bcf\u4eba13\u5f20",
          desc: ""
        }, {
          id: 402,
          name: "\u6bcf\u4eba16\u5f20",
          desc: ""
        } ];
      }
      custom_lobby.reset_hanc_card_count_config = reset_hanc_card_count_config;
      function reset_handle_config() {
        custom_lobby.default_game_config.config.find((value, index) => 500 == value.id).list = [ {
          id: 501,
          name: "\u80fd\u5403",
          desc: "\u53ef\u4ee5\u5403\u3001\u78b0\u3001\u6760"
        }, {
          id: 502,
          name: "\u4e0d\u80fd\u5403",
          desc: "\u53ef\u4ee5\u78b0\u3001\u6760"
        } ];
      }
      custom_lobby.reset_handle_config = reset_handle_config;
      function reset_caishen_config() {
        custom_lobby.default_game_config.config.find((value, index) => 600 == value.id).list = [ {
          id: 601,
          name: "\u6709\u8d22\u795e",
          desc: ""
        }, {
          id: 602,
          name: "\u65e0\u8d22\u795e",
          desc: ""
        } ];
      }
      custom_lobby.reset_caishen_config = reset_caishen_config;
      function reset_caishen_type_config() {
        custom_lobby.default_game_config.config.find((value, index) => 700 == value.id).list = [ {
          id: 701,
          name: "3\u5f20\u8d22\u795e",
          desc: "\u968f\u673a\u8d22\u795e\uff0c\u6bcf\u5c403\u5f20"
        }, {
          id: 702,
          name: "4\u5f20\u8d22\u795e",
          desc: "\u968f\u673a\u8d22\u795e\uff0c\u6bcf\u5c404\u5f20"
        }, {
          id: 703,
          name: "\u767d\u677f\u8d22\u795e",
          desc: "\u767d\u677f\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e"
        }, {
          id: 704,
          name: "\u7ea2\u4e2d\u8d22\u795e",
          desc: "\u7ea2\u4e2d\u4f5c\u4e3a\u6bcf\u5c40\u6e38\u620f\u7684\u56fa\u5b9a\u8d22\u795e"
        } ];
      }
      custom_lobby.reset_caishen_type_config = reset_caishen_type_config;
      function reset_baiban_config() {
        custom_lobby.default_game_config.config.find((value, index) => 800 == value.id).list = [ {
          id: 801,
          name: "\u4e0d\u66ff\u8d22\u795e",
          desc: ""
        }, {
          id: 802,
          name: "\u66ff\u8d22\u795e",
          desc: "\u767d\u677f\u80fd\u4ee3\u66ff\u8d22\u795e\u724c\uff0c\u4e0e\u8d22\u795e\u539f\u6765\u76f8\u90bb\u724c\u7ec4\u6210\u987a\u5b50"
        } ];
      }
      custom_lobby.reset_baiban_config = reset_baiban_config;
      function reset_mapai_config() {
        custom_lobby.default_game_config.config.find((value, index) => 900 == value.id).list = [ {
          id: 901,
          name: "\u65e0",
          desc: ""
        }, {
          id: 902,
          name: "\u6bcf\u8f6e\u6293\u9a6c",
          desc: "\u6bcf\u8f6e\u80e1\u724c\u540e\u7ffb\u5f00\u6307\u5b9a\u6570\u91cf\u7684\u9a6c\u724c"
        } ];
      }
      custom_lobby.reset_mapai_config = reset_mapai_config;
      function check_in_china() {
        let location = global_data_1.global_data.user_location.split(",");
        return !(!location || "\u4e2d\u56fd" != location[0]);
      }
      custom_lobby.check_in_china = check_in_china;
      function get_card_pool_desc(arr) {
        let have_wan = false;
        let have_tiao = false;
        let have_tong = false;
        let dnxb = [];
        let zfb = [];
        let hua = [];
        arr.forEach(v => {
          v >= 11 && v <= 19 ? have_wan = true : v >= 21 && v <= 29 ? have_tong = true : v >= 31 && v <= 39 ? have_tiao = true : v >= 41 && v <= 44 ? dnxb.push(v) : v >= 45 && v <= 47 ? zfb.push(v) : v >= 51 && v <= 58 && hua.push(v);
        });
        let str = "\u6253\u724c";
        have_wan || (str += "\u4e07");
        have_tiao || (str += "\u6761");
        have_tong || (str += "\u7b52");
        true;
        {
          let temp = "";
          [ "\u4e1c", "\u5357", "\u897f", "\u5317" ].forEach((v, index) => {
            dnxb.some(ele => ele == 41 + index) || (temp += v);
          });
          "" != temp && (str += "\u3001" + temp);
        }
        true;
        {
          let temp = "";
          [ "\u4e2d", "\u53d1", "\u767d" ].forEach((v, index) => {
            zfb.some(ele => ele == 45 + index) || (temp += v);
          });
          "" != temp && (str += "\u3001" + temp);
        }
        true;
        {
          let temp = "";
          [ "\u6625", "\u590f", "\u79cb", "\u51ac", "\u6885", "\u5170", "\u7af9", "\u83ca" ].forEach((v, index) => {
            hua.some(ele => ele == 51 + index) || (temp += v);
          });
          "" != temp && (str += "\u3001" + temp);
        }
        return str;
      }
      custom_lobby.get_card_pool_desc = get_card_pool_desc;
      function get_hua_card_desc(arr) {
        if (arr.length <= 0) return "\u65e0";
        let wan = [];
        let tiao = [];
        let tong = [];
        let dnxb = [];
        let zfb = [];
        let hua = [];
        arr.forEach(v => {
          v >= 11 && v <= 19 ? wan.push(v) : v >= 21 && v <= 29 ? tong.push(v) : v >= 31 && v <= 39 ? tiao.push(v) : v >= 41 && v <= 44 ? dnxb.push(v) : v >= 45 && v <= 47 ? zfb.push(v) : v >= 51 && v <= 58 && hua.push(v);
        });
        let str = "";
        true;
        {
          let temp = "";
          [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ].forEach((v, index) => {
            wan.some(ele => ele == 11 + index) && (temp += v);
          });
          "" != temp && (str += "(" + temp + ")\u4e07");
        }
        true;
        {
          let temp = "";
          [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ].forEach((v, index) => {
            tiao.some(ele => ele == 31 + index) && (temp += v);
          });
          "" != temp && (str += ("" == str ? "" : "\u3001") + "(" + temp + ")\u6761");
        }
        true;
        {
          let temp = "";
          [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ].forEach((v, index) => {
            tong.some(ele => ele == 21 + index) && (temp += v);
          });
          "" != temp && (str += ("" == str ? "" : "\u3001") + "(" + temp + ")\u7b52");
        }
        true;
        {
          let temp = "";
          [ "\u4e1c", "\u5357", "\u897f", "\u5317" ].forEach((v, index) => {
            dnxb.some(ele => ele == 41 + index) && (temp += v);
          });
          "" != temp && (str += ("" == str ? "" : "\u3001") + temp);
        }
        true;
        {
          let temp = "";
          [ "\u4e2d", "\u53d1", "\u767d" ].forEach((v, index) => {
            zfb.some(ele => ele == 45 + index) && (temp += v);
          });
          "" != temp && (str += ("" == str ? "" : "\u3001") + temp);
        }
        true;
        {
          let temp = "";
          [ "\u6625", "\u590f", "\u79cb", "\u51ac", "\u6885", "\u5170", "\u7af9", "\u83ca" ].forEach((v, index) => {
            hua.some(ele => ele == 51 + index) && (temp += v);
          });
          "" != temp && (str += ("" == str ? "" : "\u3001") + temp);
        }
        return str;
      }
      custom_lobby.get_hua_card_desc = get_hua_card_desc;
      function get_caishen_card_desc(arr) {
        if (arr.length <= 0) return "\u65e0";
        let v = arr[0];
        let temp = [];
        let expand = "";
        let th = 0;
        if (v >= 11 && v <= 19) {
          temp = [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ];
          expand = "\u4e07";
          th = 11;
        } else if (v >= 21 && v <= 29) {
          temp = [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ];
          expand = "\u7b52";
          th = 21;
        } else if (v >= 31 && v <= 39) {
          temp = [ "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d" ];
          expand = "\u6761";
          th = 31;
        } else if (v >= 41 && v <= 44) {
          temp = [ "\u4e1c\u98ce", "\u5357\u98ce", "\u897f\u98ce", "\u5317\u98ce" ];
          expand = "";
          th = 41;
        } else if (v >= 45 && v <= 47) {
          temp = [ "\u7ea2\u4e2d", "\u53d1\u8d22", "\u767d\u677f" ];
          expand = "";
          th = 45;
        } else if (v >= 51 && v <= 58) {
          temp = [ "\u6625", "\u590f", "\u79cb", "\u51ac", "\u6885", "\u5170", "\u7af9", "\u83ca" ];
          expand = "";
          th = 51;
        }
        let str = "";
        for (let i = 0; i < temp.length; ++i) if (v == th + i) {
          str = temp[i];
          str += expand;
          str += `(${arr[1]}\u5f20)`;
          break;
        }
        return str;
      }
      custom_lobby.get_caishen_card_desc = get_caishen_card_desc;
    })(custom_lobby = exports.custom_lobby || (exports.custom_lobby = {}));
    window && (window.custom_lobby = custom_lobby);
    class rule_player {
      constructor() {
        this.buhua = [];
        this.config = [];
        this.custom_caishen = [];
      }
    }
    exports.rule_player = rule_player;
    class config_option {
      constructor() {
        this.id = 0;
        this.desc = "";
        this.hint = "";
        this.new = 0;
        this.enable = 0;
        this.hide = false;
      }
    }
    exports.config_option = config_option;
    var ConfigLineType;
    (function(ConfigLineType) {
      ConfigLineType[ConfigLineType["Ratio"] = 1] = "Ratio";
      ConfigLineType[ConfigLineType["CheckBox"] = 2] = "CheckBox";
    })(ConfigLineType = exports.ConfigLineType || (exports.ConfigLineType = {}));
    class config_line {
      constructor() {
        this.id = 0;
        this.desc = "";
        this.type = ConfigLineType.Ratio;
        this.hint = "";
        this.new = 0;
        this.list = [];
      }
    }
    exports.config_line = config_line;
    class config_rule {
      constructor() {
        this.config = [];
        this.version = 0;
      }
    }
    exports.config_rule = config_rule;
    class config_location {
      constructor() {
        this.list = [];
      }
    }
    exports.config_location = config_location;
    class config_location_line {
      constructor() {
        this.id = 0;
        this.name = "";
        this.list = [];
      }
    }
    exports.config_location_line = config_location_line;
    class config_location_option {
      constructor() {
        this.id = 0;
        this.name = "";
      }
    }
    exports.config_location_option = config_location_option;
    class config_option_new {
      constructor() {
        this.id = 0;
        this.name = "";
        this.desc = "";
      }
    }
    exports.config_option_new = config_option_new;
    class config_line_new {
      constructor() {
        this.id = 0;
        this.name = "";
        this.list = [];
      }
    }
    exports.config_line_new = config_line_new;
    class config_rule_new {
      constructor() {
        this.config = [];
        this.version = 0;
      }
    }
    exports.config_rule_new = config_rule_new;
    cc._RF.pop();
  }, {
    "../../Component/LobbyYiFu/LobbyRuleLayout": "LobbyRuleLayout",
    "../common/task": "task",
    "../common/utils": "utils",
    "./game/game_auxi": "game_auxi",
    "./global_data": "global_data",
    "./global_define": "global_define",
    "./lobby_framework": "lobby_framework",
    "./platform/platform": "platform",
    "./tutorial": "tutorial"
  } ],
  "dbcs-codec": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "80c76Zo16JMrbLr6L7jk5a/", "dbcs-codec");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DBCSCodec = void 0;
    const util_1 = require("../util/util");
    let UNASSIGNED = -1, GB18030_CODE = -2, SEQ_START = -10, NODE_START = -1e3, UNASSIGNED_NODE = new Array(256), DEF_CHAR = -1;
    for (let i = 0; i < 256; i++) UNASSIGNED_NODE[i] = UNASSIGNED;
    class DBCSCodec {
      constructor(codecOptions, iconv) {
        this.decodeTables = [];
        this.decodeTableSeq = [];
        this.encodeTable = [];
        this.encodeTableSeq = [];
        this.encoder = DBCSEncoder;
        this.decoder = DBCSDecoder;
        this.encodingName = codecOptions.encodingName;
        if (!codecOptions) throw new Error("DBCS codec is called without the data.");
        if (!codecOptions.table) throw new Error("Encoding '" + this.encodingName + "' has no data.");
        let mappingTable = codecOptions.table();
        this.decodeTables[0] = UNASSIGNED_NODE.slice(0);
        for (let i = 0; i < mappingTable.length; i++) this._addDecodeChunk(mappingTable[i]);
        this.defaultCharUnicode = iconv.defaultCharUnicode;
        let skipEncodeChars = {};
        if (codecOptions.encodeSkipVals) for (let i = 0; i < codecOptions.encodeSkipVals.length; i++) {
          let val = codecOptions.encodeSkipVals[i];
          if ("number" === typeof val) skipEncodeChars[val] = true; else for (let j = val.from; j <= val.to; j++) skipEncodeChars[j] = true;
        }
        this._fillEncodeTable(0, 0, skipEncodeChars);
        if (codecOptions.encodeAdd) for (let uChar in codecOptions.encodeAdd) Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar) && this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
        this.defCharSB = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
        this.defCharSB === UNASSIGNED && (this.defCharSB = this.encodeTable[0]["?"]);
        this.defCharSB === UNASSIGNED && (this.defCharSB = "?".charCodeAt(0));
        if ("function" === typeof codecOptions.gb18030) {
          this.gb18030 = codecOptions.gb18030();
          let thirdByteNodeIdx = this.decodeTables.length;
          let thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);
          let fourthByteNodeIdx = this.decodeTables.length;
          let fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);
          for (let i = 129; i <= 254; i++) {
            let secondByteNodeIdx = NODE_START - this.decodeTables[0][i];
            let secondByteNode = this.decodeTables[secondByteNodeIdx];
            for (let j = 48; j <= 57; j++) secondByteNode[j] = NODE_START - thirdByteNodeIdx;
          }
          for (let i = 129; i <= 254; i++) thirdByteNode[i] = NODE_START - fourthByteNodeIdx;
          for (let i = 48; i <= 57; i++) fourthByteNode[i] = GB18030_CODE;
        }
      }
      _getDecodeTrieNode(addr) {
        let bytes = [];
        for (;addr > 0; addr >>= 8) bytes.push(255 & addr);
        0 == bytes.length && bytes.push(0);
        let node = this.decodeTables[0];
        for (let i = bytes.length - 1; i > 0; i--) {
          let val = node[bytes[i]];
          if (val == UNASSIGNED) {
            node[bytes[i]] = NODE_START - this.decodeTables.length;
            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
          } else {
            if (!(val <= NODE_START)) throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
            node = this.decodeTables[NODE_START - val];
          }
        }
        return node;
      }
      _addDecodeChunk(chunk) {
        let curAddr = parseInt(chunk[0], 16);
        let writeTable = this._getDecodeTrieNode(curAddr);
        curAddr &= 255;
        for (let k = 1; k < chunk.length; k++) {
          let part = chunk[k];
          if ("string" === typeof part) for (let l = 0; l < part.length; ) {
            let code = part.charCodeAt(l++);
            if (55296 <= code && code < 56320) {
              let codeTrail = part.charCodeAt(l++);
              if (!(56320 <= codeTrail && codeTrail < 57344)) throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + chunk[0]);
              writeTable[curAddr++] = 65536 + 1024 * (code - 55296) + (codeTrail - 56320);
            } else if (4080 < code && code <= 4095) {
              let len = 4095 - code + 2;
              let seq = [];
              for (let m = 0; m < len; m++) seq.push(part.charCodeAt(l++));
              writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
              this.decodeTableSeq.push(seq);
            } else writeTable[curAddr++] = code;
          } else {
            if ("number" !== typeof part) throw new Error("Incorrect type '" + typeof part + "' given in " + this.encodingName + " at chunk " + chunk[0]);
            {
              let charCode = writeTable[curAddr - 1] + 1;
              for (let l = 0; l < part; l++) writeTable[curAddr++] = charCode++;
            }
          }
        }
        if (curAddr > 255) throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
      }
      _getEncodeBucket(uCode) {
        let high = uCode >> 8;
        void 0 === this.encodeTable[high] && (this.encodeTable[high] = UNASSIGNED_NODE.slice(0));
        return this.encodeTable[high];
      }
      _setEncodeChar(uCode, dbcsCode) {
        let bucket = this._getEncodeBucket(uCode);
        let low = 255 & uCode;
        bucket[low] <= SEQ_START ? this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode : bucket[low] == UNASSIGNED && (bucket[low] = dbcsCode);
      }
      _setEncodeSequence(seq, dbcsCode) {
        let uCode = seq[0];
        let bucket = this._getEncodeBucket(uCode);
        let low = 255 & uCode;
        let node;
        if (bucket[low] <= SEQ_START) node = this.encodeTableSeq[SEQ_START - bucket[low]]; else {
          node = {};
          bucket[low] !== UNASSIGNED && (node[DEF_CHAR] = bucket[low]);
          bucket[low] = SEQ_START - this.encodeTableSeq.length;
          this.encodeTableSeq.push(node);
        }
        for (let j = 1; j < seq.length - 1; j++) {
          let oldVal = node[uCode];
          if ("object" === typeof oldVal) node = oldVal; else {
            node = node[uCode] = {};
            void 0 !== oldVal && (node[DEF_CHAR] = oldVal);
          }
        }
        uCode = seq[seq.length - 1];
        node[uCode] = dbcsCode;
      }
      _fillEncodeTable(nodeIdx, prefix, skipEncodeChars) {
        let node = this.decodeTables[nodeIdx];
        for (let i = 0; i < 256; i++) {
          let uCode = node[i];
          let mbCode = prefix + i;
          if (skipEncodeChars[mbCode]) continue;
          uCode >= 0 ? this._setEncodeChar(uCode, mbCode) : uCode <= NODE_START ? this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars) : uCode <= SEQ_START && this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
        }
      }
    }
    exports.DBCSCodec = DBCSCodec;
    class DBCSEncoder {
      constructor(options, codec) {
        this.leadSurrogate = -1;
        this.seqObj = void 0;
        this.encodeTable = codec.encodeTable;
        this.encodeTableSeq = codec.encodeTableSeq;
        this.defaultCharSingleByte = codec.defCharSB;
        this.gb18030 = codec.gb18030;
      }
      write(str) {
        let newBuf = new ArrayBuffer(str.length * (this.gb18030 ? 4 : 3)), newBufView = new Uint8Array(newBuf), leadSurrogate = this.leadSurrogate, seqObj = this.seqObj, nextChar = -1, i = 0, j = 0;
        while (true) {
          let uCode;
          if (-1 === nextChar) {
            if (i == str.length) break;
            uCode = str.charCodeAt(i++);
          } else {
            uCode = nextChar;
            nextChar = -1;
          }
          if (55296 <= uCode && uCode < 57344) if (uCode < 56320) {
            if (-1 === leadSurrogate) {
              leadSurrogate = uCode;
              continue;
            }
            leadSurrogate = uCode;
            uCode = UNASSIGNED;
          } else if (-1 !== leadSurrogate) {
            uCode = 65536 + 1024 * (leadSurrogate - 55296) + (uCode - 56320);
            leadSurrogate = -1;
          } else uCode = UNASSIGNED; else if (-1 !== leadSurrogate) {
            nextChar = uCode;
            uCode = UNASSIGNED;
            leadSurrogate = -1;
          }
          let dbcsCode = UNASSIGNED;
          if (void 0 !== seqObj && uCode != UNASSIGNED) {
            let resCode = seqObj[uCode];
            if ("object" === typeof resCode) {
              seqObj = resCode;
              continue;
            }
            if ("number" == typeof resCode) dbcsCode = resCode; else if (void 0 == resCode) {
              resCode = seqObj[DEF_CHAR];
              if (void 0 !== resCode) {
                dbcsCode = resCode;
                nextChar = uCode;
              }
            }
            seqObj = void 0;
          } else if (uCode >= 0) {
            let subtable = this.encodeTable[uCode >> 8];
            void 0 !== subtable && (dbcsCode = subtable[255 & uCode]);
            if (dbcsCode <= SEQ_START) {
              seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];
              continue;
            }
            if (dbcsCode == UNASSIGNED && this.gb18030) {
              let idx = util_1.findIdx(this.gb18030.uChars, uCode);
              if (-1 != idx) {
                let dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
                newBufView[j++] = 129 + Math.floor(dbcsCode / 12600);
                dbcsCode %= 12600;
                newBufView[j++] = 48 + Math.floor(dbcsCode / 1260);
                dbcsCode %= 1260;
                newBufView[j++] = 129 + Math.floor(dbcsCode / 10);
                dbcsCode %= 10;
                newBufView[j++] = 48 + dbcsCode;
                continue;
              }
            }
          }
          dbcsCode === UNASSIGNED && (dbcsCode = this.defaultCharSingleByte);
          if (dbcsCode < 256) newBufView[j++] = dbcsCode; else if (dbcsCode < 65536) {
            newBufView[j++] = dbcsCode >> 8;
            newBufView[j++] = 255 & dbcsCode;
          } else {
            newBufView[j++] = dbcsCode >> 16;
            newBufView[j++] = dbcsCode >> 8 & 255;
            newBufView[j++] = 255 & dbcsCode;
          }
        }
        this.seqObj = seqObj;
        this.leadSurrogate = leadSurrogate;
        return newBuf.slice(0, j);
      }
      end() {
        if (-1 === this.leadSurrogate && void 0 === this.seqObj) return;
        let newBuf = new ArrayBuffer(10), j = 0;
        let newBufV = new Uint8Array(newBuf);
        if (this.seqObj) {
          let dbcsCode = this.seqObj[DEF_CHAR];
          if (void 0 !== dbcsCode) if (dbcsCode < 256) newBufV[j++] = dbcsCode; else {
            newBufV[j++] = dbcsCode >> 8;
            newBufV[j++] = 255 & dbcsCode;
          }
          this.seqObj = void 0;
        }
        if (-1 !== this.leadSurrogate) {
          newBufV[j++] = this.defaultCharSingleByte;
          this.leadSurrogate = -1;
        }
        return newBuf.slice(0, j);
      }
      findIdx(table, val) {
        if (table[0] > val) return -1;
        let l = 0, r = table.length;
        while (l < r - 1) {
          let mid = l + Math.floor((r - l + 1) / 2);
          table[mid] <= val ? l = mid : r = mid;
        }
        return l;
      }
    }
    class DBCSDecoder {
      constructor(options, codec) {
        this.nodeIdx = 0;
        this.prevBuf = new ArrayBuffer(0);
        this.decodeTables = codec.decodeTables;
        this.decodeTableSeq = codec.decodeTableSeq;
        this.defaultCharUnicode = codec.defaultCharUnicode;
        this.gb18030 = codec.gb18030;
      }
      write(buf) {
        let newBuf = new ArrayBuffer(2 * buf.byteLength), newBufView = new Uint8Array(newBuf), bufView = new Uint8Array(buf), prevBufView, nodeIdx = this.nodeIdx, prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.byteLength, seqStart = -this.prevBuf.byteLength, uCode, j = 0;
        prevBufOffset > 0 && (prevBuf = util_1.concatBuf([ prevBuf, buf.slice(0, 10) ]));
        prevBufView = new Uint8Array(prevBuf);
        for (let i = 0; i < bufView.length; i++) {
          let curByte = i >= 0 ? bufView[i] : prevBufView[i + prevBufOffset];
          uCode = this.decodeTables[nodeIdx][curByte];
          if (uCode >= 0) ; else if (uCode === UNASSIGNED) {
            i = seqStart;
            uCode = this.defaultCharUnicode.charCodeAt(0);
          } else if (uCode === GB18030_CODE) {
            let curSeq = seqStart >= 0 ? buf.slice(seqStart, i + 1) : prevBuf.slice(seqStart + prevBufOffset, i + 1 + prevBufOffset);
            let curSeqView = new Uint8Array(curSeq);
            let ptr = 12600 * (curSeqView[0] - 129) + 1260 * (curSeqView[1] - 48) + 10 * (curSeqView[2] - 129) + (curSeqView[3] - 48);
            let idx = util_1.findIdx(this.gb18030.gbChars, ptr);
            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
          } else {
            if (uCode <= NODE_START) {
              nodeIdx = NODE_START - uCode;
              continue;
            }
            if (!(uCode <= SEQ_START)) throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);
            {
              let seq = this.decodeTableSeq[SEQ_START - uCode];
              for (let k = 0; k < seq.length - 1; k++) {
                uCode = seq[k];
                newBufView[j++] = 255 & uCode;
                newBufView[j++] = uCode >> 8;
              }
              uCode = seq[seq.length - 1];
            }
          }
          if (uCode > 65535) {
            uCode -= 65536;
            let uCodeLead = 55296 + Math.floor(uCode / 1024);
            newBufView[j++] = 255 & uCodeLead;
            newBufView[j++] = uCodeLead >> 8;
            uCode = 56320 + uCode % 1024;
          }
          newBufView[j++] = 255 & uCode;
          newBufView[j++] = uCode >> 8;
          nodeIdx = 0;
          seqStart = i + 1;
        }
        this.nodeIdx = nodeIdx;
        this.prevBuf = seqStart >= 0 ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);
        return util_1.bufToStr(newBuf.slice(0, j));
      }
      end() {
        let ret = "";
        while (this.prevBuf.byteLength > 0) {
          ret += this.defaultCharUnicode;
          let buf = this.prevBuf.slice(1);
          this.prevBuf = new ArrayBuffer(0);
          this.nodeIdx = 0;
          buf.byteLength > 0 && (ret += this.write(buf));
        }
        this.nodeIdx = 0;
        return ret;
      }
    }
    cc._RF.pop();
  }, {
    "../util/util": "util"
  } ],
  "dbcs-data": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6b797xZG1ZIxKB/hsfaNFdI", "dbcs-data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.dbcsData = void 0;
    const cp936_1 = require("./tables/cp936");
    const eucjp_1 = require("./tables/eucjp");
    const gbk_added_1 = require("./tables/gbk-added");
    const gb18030_ranges_1 = require("./tables/gb18030-ranges");
    const cp949_1 = require("./tables/cp949");
    const cp950_1 = require("./tables/cp950");
    const big5_added_1 = require("./tables/big5-added");
    exports.dbcsData = {
      shiftjis: {
        type: "DBCSCodec",
        table: function() {
          return cp936_1.cp936;
        },
        encodeAdd: {
          "\xa5": 92,
          "\u203e": 126
        },
        encodeSkipVals: [ {
          from: 60736,
          to: 63808
        } ]
      },
      csshiftjis: "shiftjis",
      mskanji: "shiftjis",
      sjis: "shiftjis",
      windows31j: "shiftjis",
      ms31j: "shiftjis",
      xsjis: "shiftjis",
      windows932: "shiftjis",
      ms932: "shiftjis",
      932: "shiftjis",
      cp932: "shiftjis",
      eucjp: {
        type: "DBCSCodec",
        table: function() {
          return eucjp_1.eucjp;
        },
        encodeAdd: {
          "\xa5": 92,
          "\u203e": 126
        }
      },
      gb2312: "cp936",
      gb231280: "cp936",
      gb23121980: "cp936",
      csgb2312: "cp936",
      csiso58gb231280: "cp936",
      euccn: "cp936",
      windows936: "cp936",
      ms936: "cp936",
      936: "cp936",
      cp936: {
        type: "DBCSCodec",
        table: function() {
          return cp936_1.cp936;
        }
      },
      gbk: {
        type: "DBCSCodec",
        table: function() {
          return cp936_1.cp936.concat(gbk_added_1.gbk_added);
        }
      },
      xgbk: "gbk",
      isoir58: "gbk",
      gb18030: {
        type: "DBCSCodec",
        table: function() {
          return cp936_1.cp936.concat(gbk_added_1.gbk_added);
        },
        gb18030: function() {
          return gb18030_ranges_1.gb18030_ranges;
        },
        encodeSkipVals: [ 128 ],
        encodeAdd: {
          "\u20ac": 41699
        }
      },
      chinese: "gb18030",
      windows949: "cp949",
      ms949: "cp949",
      949: "cp949",
      cp949: {
        type: "DBCSCodec",
        table: function() {
          return cp949_1.cp949;
        }
      },
      cseuckr: "cp949",
      csksc56011987: "cp949",
      euckr: "cp949",
      isoir149: "cp949",
      korean: "cp949",
      ksc56011987: "cp949",
      ksc56011989: "cp949",
      ksc5601: "cp949",
      windows950: "cp950",
      ms950: "cp950",
      950: "cp950",
      cp950: {
        type: "DBCSCodec",
        table: function() {
          return cp950_1.cp950;
        }
      },
      big5: "big5hkscs",
      big5hkscs: {
        type: "DBCSCodec",
        table: function() {
          return cp950_1.cp950.concat(big5_added_1.big5_added);
        },
        encodeSkipVals: [ 41676 ]
      },
      cnbig5: "big5hkscs",
      csbig5: "big5hkscs",
      xxbig5: "big5hkscs"
    };
    cc._RF.pop();
  }, {
    "./tables/big5-added": "big5-added",
    "./tables/cp936": "cp936",
    "./tables/cp949": "cp949",
    "./tables/cp950": "cp950",
    "./tables/eucjp": "eucjp",
    "./tables/gb18030-ranges": "gb18030-ranges",
    "./tables/gbk-added": "gbk-added"
  } ],
  eucjp: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "67f65hFqwVNo6tH0n9d+qaV", "eucjp");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.eucjp = void 0;
    exports.eucjp = [ [ "0", "\0", 127 ], [ "8ea1", "\uff61", 62 ], [ "a1a1", "\u3000\u3001\u3002\uff0c\uff0e\u30fb\uff1a\uff1b\uff1f\uff01\u309b\u309c\xb4\uff40\xa8\uff3e\uffe3\uff3f\u30fd\u30fe\u309d\u309e\u3003\u4edd\u3005\u3006\u3007\u30fc\u2015\u2010\uff0f\uff3c\uff5e\u2225\uff5c\u2026\u2025\u2018\u2019\u201c\u201d\uff08\uff09\u3014\u3015\uff3b\uff3d\uff5b\uff5d\u3008", 9, "\uff0b\uff0d\xb1\xd7\xf7\uff1d\u2260\uff1c\uff1e\u2266\u2267\u221e\u2234\u2642\u2640\xb0\u2032\u2033\u2103\uffe5\uff04\uffe0\uffe1\uff05\uff03\uff06\uff0a\uff20\xa7\u2606\u2605\u25cb\u25cf\u25ce\u25c7" ], [ "a2a1", "\u25c6\u25a1\u25a0\u25b3\u25b2\u25bd\u25bc\u203b\u3012\u2192\u2190\u2191\u2193\u3013" ], [ "a2ba", "\u2208\u220b\u2286\u2287\u2282\u2283\u222a\u2229" ], [ "a2ca", "\u2227\u2228\uffe2\u21d2\u21d4\u2200\u2203" ], [ "a2dc", "\u2220\u22a5\u2312\u2202\u2207\u2261\u2252\u226a\u226b\u221a\u223d\u221d\u2235\u222b\u222c" ], [ "a2f2", "\u212b\u2030\u266f\u266d\u266a\u2020\u2021\xb6" ], [ "a2fe", "\u25ef" ], [ "a3b0", "\uff10", 9 ], [ "a3c1", "\uff21", 25 ], [ "a3e1", "\uff41", 25 ], [ "a4a1", "\u3041", 82 ], [ "a5a1", "\u30a1", 85 ], [ "a6a1", "\u0391", 16, "\u03a3", 6 ], [ "a6c1", "\u03b1", 16, "\u03c3", 6 ], [ "a7a1", "\u0410", 5, "\u0401\u0416", 25 ], [ "a7d1", "\u0430", 5, "\u0451\u0436", 25 ], [ "a8a1", "\u2500\u2502\u250c\u2510\u2518\u2514\u251c\u252c\u2524\u2534\u253c\u2501\u2503\u250f\u2513\u251b\u2517\u2523\u2533\u252b\u253b\u254b\u2520\u252f\u2528\u2537\u253f\u251d\u2530\u2525\u2538\u2542" ], [ "ada1", "\u2460", 19, "\u2160", 9 ], [ "adc0", "\u3349\u3314\u3322\u334d\u3318\u3327\u3303\u3336\u3351\u3357\u330d\u3326\u3323\u332b\u334a\u333b\u339c\u339d\u339e\u338e\u338f\u33c4\u33a1" ], [ "addf", "\u337b\u301d\u301f\u2116\u33cd\u2121\u32a4", 4, "\u3231\u3232\u3239\u337e\u337d\u337c\u2252\u2261\u222b\u222e\u2211\u221a\u22a5\u2220\u221f\u22bf\u2235\u2229\u222a" ], [ "b0a1", "\u4e9c\u5516\u5a03\u963f\u54c0\u611b\u6328\u59f6\u9022\u8475\u831c\u7a50\u60aa\u63e1\u6e25\u65ed\u8466\u82a6\u9bf5\u6893\u5727\u65a1\u6271\u5b9b\u59d0\u867b\u98f4\u7d62\u7dbe\u9b8e\u6216\u7c9f\u88b7\u5b89\u5eb5\u6309\u6697\u6848\u95c7\u978d\u674f\u4ee5\u4f0a\u4f4d\u4f9d\u5049\u56f2\u5937\u59d4\u5a01\u5c09\u60df\u610f\u6170\u6613\u6905\u70ba\u754f\u7570\u79fb\u7dad\u7def\u80c3\u840e\u8863\u8b02\u9055\u907a\u533b\u4e95\u4ea5\u57df\u80b2\u90c1\u78ef\u4e00\u58f1\u6ea2\u9038\u7a32\u8328\u828b\u9c2f\u5141\u5370\u54bd\u54e1\u56e0\u59fb\u5f15\u98f2\u6deb\u80e4\u852d" ], [ "b1a1", "\u9662\u9670\u96a0\u97fb\u540b\u53f3\u5b87\u70cf\u7fbd\u8fc2\u96e8\u536f\u9d5c\u7aba\u4e11\u7893\u81fc\u6e26\u5618\u5504\u6b1d\u851a\u9c3b\u59e5\u53a9\u6d66\u74dc\u958f\u5642\u4e91\u904b\u96f2\u834f\u990c\u53e1\u55b6\u5b30\u5f71\u6620\u66f3\u6804\u6c38\u6cf3\u6d29\u745b\u76c8\u7a4e\u9834\u82f1\u885b\u8a60\u92ed\u6db2\u75ab\u76ca\u99c5\u60a6\u8b01\u8d8a\u95b2\u698e\u53ad\u5186\u5712\u5830\u5944\u5bb4\u5ef6\u6028\u63a9\u63f4\u6cbf\u6f14\u708e\u7114\u7159\u71d5\u733f\u7e01\u8276\u82d1\u8597\u9060\u925b\u9d1b\u5869\u65bc\u6c5a\u7525\u51f9\u592e\u5965\u5f80\u5fdc" ], [ "b2a1", "\u62bc\u65fa\u6a2a\u6b27\u6bb4\u738b\u7fc1\u8956\u9d2c\u9d0e\u9ec4\u5ca1\u6c96\u837b\u5104\u5c4b\u61b6\u81c6\u6876\u7261\u4e59\u4ffa\u5378\u6069\u6e29\u7a4f\u97f3\u4e0b\u5316\u4eee\u4f55\u4f3d\u4fa1\u4f73\u52a0\u53ef\u5609\u590f\u5ac1\u5bb6\u5be1\u79d1\u6687\u679c\u67b6\u6b4c\u6cb3\u706b\u73c2\u798d\u79be\u7a3c\u7b87\u82b1\u82db\u8304\u8377\u83ef\u83d3\u8766\u8ab2\u5629\u8ca8\u8fe6\u904e\u971e\u868a\u4fc4\u5ce8\u6211\u7259\u753b\u81e5\u82bd\u86fe\u8cc0\u96c5\u9913\u99d5\u4ecb\u4f1a\u89e3\u56de\u584a\u58ca\u5efb\u5feb\u602a\u6094\u6062\u61d0\u6212\u62d0\u6539" ], [ "b3a1", "\u9b41\u6666\u68b0\u6d77\u7070\u754c\u7686\u7d75\u82a5\u87f9\u958b\u968e\u8c9d\u51f1\u52be\u5916\u54b3\u5bb3\u5d16\u6168\u6982\u6daf\u788d\u84cb\u8857\u8a72\u93a7\u9ab8\u6d6c\u99a8\u86d9\u57a3\u67ff\u86ce\u920e\u5283\u5687\u5404\u5ed3\u62e1\u64b9\u683c\u6838\u6bbb\u7372\u78ba\u7a6b\u899a\u89d2\u8d6b\u8f03\u90ed\u95a3\u9694\u9769\u5b66\u5cb3\u697d\u984d\u984e\u639b\u7b20\u6a2b\u6a7f\u68b6\u9c0d\u6f5f\u5272\u559d\u6070\u62ec\u6d3b\u6e07\u6ed1\u845b\u8910\u8f44\u4e14\u9c39\u53f6\u691b\u6a3a\u9784\u682a\u515c\u7ac3\u84b2\u91dc\u938c\u565b\u9d28\u6822\u8305\u8431" ], [ "b4a1", "\u7ca5\u5208\u82c5\u74e6\u4e7e\u4f83\u51a0\u5bd2\u520a\u52d8\u52e7\u5dfb\u559a\u582a\u59e6\u5b8c\u5b98\u5bdb\u5e72\u5e79\u60a3\u611f\u6163\u61be\u63db\u6562\u67d1\u6853\u68fa\u6b3e\u6b53\u6c57\u6f22\u6f97\u6f45\u74b0\u7518\u76e3\u770b\u7aff\u7ba1\u7c21\u7de9\u7f36\u7ff0\u809d\u8266\u839e\u89b3\u8acc\u8cab\u9084\u9451\u9593\u9591\u95a2\u9665\u97d3\u9928\u8218\u4e38\u542b\u5cb8\u5dcc\u73a9\u764c\u773c\u5ca9\u7feb\u8d0b\u96c1\u9811\u9854\u9858\u4f01\u4f0e\u5371\u559c\u5668\u57fa\u5947\u5b09\u5bc4\u5c90\u5e0c\u5e7e\u5fcc\u63ee\u673a\u65d7\u65e2\u671f\u68cb\u68c4" ], [ "b5a1", "\u6a5f\u5e30\u6bc5\u6c17\u6c7d\u757f\u7948\u5b63\u7a00\u7d00\u5fbd\u898f\u8a18\u8cb4\u8d77\u8ecc\u8f1d\u98e2\u9a0e\u9b3c\u4e80\u507d\u5100\u5993\u5b9c\u622f\u6280\u64ec\u6b3a\u72a0\u7591\u7947\u7fa9\u87fb\u8abc\u8b70\u63ac\u83ca\u97a0\u5409\u5403\u55ab\u6854\u6a58\u8a70\u7827\u6775\u9ecd\u5374\u5ba2\u811a\u8650\u9006\u4e18\u4e45\u4ec7\u4f11\u53ca\u5438\u5bae\u5f13\u6025\u6551\u673d\u6c42\u6c72\u6ce3\u7078\u7403\u7a76\u7aae\u7b08\u7d1a\u7cfe\u7d66\u65e7\u725b\u53bb\u5c45\u5de8\u62d2\u62e0\u6319\u6e20\u865a\u8a31\u8ddd\u92f8\u6f01\u79a6\u9b5a\u4ea8\u4eab\u4eac" ], [ "b6a1", "\u4f9b\u4fa0\u50d1\u5147\u7af6\u5171\u51f6\u5354\u5321\u537f\u53eb\u55ac\u5883\u5ce1\u5f37\u5f4a\u602f\u6050\u606d\u631f\u6559\u6a4b\u6cc1\u72c2\u72ed\u77ef\u80f8\u8105\u8208\u854e\u90f7\u93e1\u97ff\u9957\u9a5a\u4ef0\u51dd\u5c2d\u6681\u696d\u5c40\u66f2\u6975\u7389\u6850\u7c81\u50c5\u52e4\u5747\u5dfe\u9326\u65a4\u6b23\u6b3d\u7434\u7981\u79bd\u7b4b\u7dca\u82b9\u83cc\u887f\u895f\u8b39\u8fd1\u91d1\u541f\u9280\u4e5d\u5036\u53e5\u533a\u72d7\u7396\u77e9\u82e6\u8eaf\u99c6\u99c8\u99d2\u5177\u611a\u865e\u55b0\u7a7a\u5076\u5bd3\u9047\u9685\u4e32\u6adb\u91e7\u5c51\u5c48" ], [ "b7a1", "\u6398\u7a9f\u6c93\u9774\u8f61\u7aaa\u718a\u9688\u7c82\u6817\u7e70\u6851\u936c\u52f2\u541b\u85ab\u8a13\u7fa4\u8ecd\u90e1\u5366\u8888\u7941\u4fc2\u50be\u5211\u5144\u5553\u572d\u73ea\u578b\u5951\u5f62\u5f84\u6075\u6176\u6167\u61a9\u63b2\u643a\u656c\u666f\u6842\u6e13\u7566\u7a3d\u7cfb\u7d4c\u7d99\u7e4b\u7f6b\u830e\u834a\u86cd\u8a08\u8a63\u8b66\u8efd\u981a\u9d8f\u82b8\u8fce\u9be8\u5287\u621f\u6483\u6fc0\u9699\u6841\u5091\u6b20\u6c7a\u6f54\u7a74\u7d50\u8840\u8a23\u6708\u4ef6\u5039\u5026\u5065\u517c\u5238\u5263\u55a7\u570f\u5805\u5acc\u5efa\u61b2\u61f8\u62f3\u6372" ], [ "b8a1", "\u691c\u6a29\u727d\u72ac\u732e\u7814\u786f\u7d79\u770c\u80a9\u898b\u8b19\u8ce2\u8ed2\u9063\u9375\u967a\u9855\u9a13\u9e78\u5143\u539f\u53b3\u5e7b\u5f26\u6e1b\u6e90\u7384\u73fe\u7d43\u8237\u8a00\u8afa\u9650\u4e4e\u500b\u53e4\u547c\u56fa\u59d1\u5b64\u5df1\u5eab\u5f27\u6238\u6545\u67af\u6e56\u72d0\u7cca\u88b4\u80a1\u80e1\u83f0\u864e\u8a87\u8de8\u9237\u96c7\u9867\u9f13\u4e94\u4e92\u4f0d\u5348\u5449\u543e\u5a2f\u5f8c\u5fa1\u609f\u68a7\u6a8e\u745a\u7881\u8a9e\u8aa4\u8b77\u9190\u4e5e\u9bc9\u4ea4\u4f7c\u4faf\u5019\u5016\u5149\u516c\u529f\u52b9\u52fe\u539a\u53e3\u5411" ], [ "b9a1", "\u540e\u5589\u5751\u57a2\u597d\u5b54\u5b5d\u5b8f\u5de5\u5de7\u5df7\u5e78\u5e83\u5e9a\u5eb7\u5f18\u6052\u614c\u6297\u62d8\u63a7\u653b\u6602\u6643\u66f4\u676d\u6821\u6897\u69cb\u6c5f\u6d2a\u6d69\u6e2f\u6e9d\u7532\u7687\u786c\u7a3f\u7ce0\u7d05\u7d18\u7d5e\u7db1\u8015\u8003\u80af\u80b1\u8154\u818f\u822a\u8352\u884c\u8861\u8b1b\u8ca2\u8cfc\u90ca\u9175\u9271\u783f\u92fc\u95a4\u964d\u9805\u9999\u9ad8\u9d3b\u525b\u52ab\u53f7\u5408\u58d5\u62f7\u6fe0\u8c6a\u8f5f\u9eb9\u514b\u523b\u544a\u56fd\u7a40\u9177\u9d60\u9ed2\u7344\u6f09\u8170\u7511\u5ffd\u60da\u9aa8\u72db\u8fbc" ], [ "baa1", "\u6b64\u9803\u4eca\u56f0\u5764\u58be\u5a5a\u6068\u61c7\u660f\u6606\u6839\u68b1\u6df7\u75d5\u7d3a\u826e\u9b42\u4e9b\u4f50\u53c9\u5506\u5d6f\u5de6\u5dee\u67fb\u6c99\u7473\u7802\u8a50\u9396\u88df\u5750\u5ea7\u632b\u50b5\u50ac\u518d\u6700\u54c9\u585e\u59bb\u5bb0\u5f69\u624d\u63a1\u683d\u6b73\u6e08\u707d\u91c7\u7280\u7815\u7826\u796d\u658e\u7d30\u83dc\u88c1\u8f09\u969b\u5264\u5728\u6750\u7f6a\u8ca1\u51b4\u5742\u962a\u583a\u698a\u80b4\u54b2\u5d0e\u57fc\u7895\u9dfa\u4f5c\u524a\u548b\u643e\u6628\u6714\u67f5\u7a84\u7b56\u7d22\u932f\u685c\u9bad\u7b39\u5319\u518a\u5237" ], [ "bba1", "\u5bdf\u62f6\u64ae\u64e6\u672d\u6bba\u85a9\u96d1\u7690\u9bd6\u634c\u9306\u9bab\u76bf\u6652\u4e09\u5098\u53c2\u5c71\u60e8\u6492\u6563\u685f\u71e6\u73ca\u7523\u7b97\u7e82\u8695\u8b83\u8cdb\u9178\u9910\u65ac\u66ab\u6b8b\u4ed5\u4ed4\u4f3a\u4f7f\u523a\u53f8\u53f2\u55e3\u56db\u58eb\u59cb\u59c9\u59ff\u5b50\u5c4d\u5e02\u5e2b\u5fd7\u601d\u6307\u652f\u5b5c\u65af\u65bd\u65e8\u679d\u6b62\u6b7b\u6c0f\u7345\u7949\u79c1\u7cf8\u7d19\u7d2b\u80a2\u8102\u81f3\u8996\u8a5e\u8a69\u8a66\u8a8c\u8aee\u8cc7\u8cdc\u96cc\u98fc\u6b6f\u4e8b\u4f3c\u4f8d\u5150\u5b57\u5bfa\u6148\u6301\u6642" ], [ "bca1", "\u6b21\u6ecb\u6cbb\u723e\u74bd\u75d4\u78c1\u793a\u800c\u8033\u81ea\u8494\u8f9e\u6c50\u9e7f\u5f0f\u8b58\u9d2b\u7afa\u8ef8\u5b8d\u96eb\u4e03\u53f1\u57f7\u5931\u5ac9\u5ba4\u6089\u6e7f\u6f06\u75be\u8cea\u5b9f\u8500\u7be0\u5072\u67f4\u829d\u5c61\u854a\u7e1e\u820e\u5199\u5c04\u6368\u8d66\u659c\u716e\u793e\u7d17\u8005\u8b1d\u8eca\u906e\u86c7\u90aa\u501f\u52fa\u5c3a\u6753\u707c\u7235\u914c\u91c8\u932b\u82e5\u5bc2\u5f31\u60f9\u4e3b\u53d6\u5b88\u624b\u6731\u6b8a\u72e9\u73e0\u7a2e\u816b\u8da3\u9152\u9996\u5112\u53d7\u546a\u5bff\u6388\u6a39\u7dac\u9700\u56da\u53ce\u5468" ], [ "bda1", "\u5b97\u5c31\u5dde\u4fee\u6101\u62fe\u6d32\u79c0\u79cb\u7d42\u7e4d\u7fd2\u81ed\u821f\u8490\u8846\u8972\u8b90\u8e74\u8f2f\u9031\u914b\u916c\u96c6\u919c\u4ec0\u4f4f\u5145\u5341\u5f93\u620e\u67d4\u6c41\u6e0b\u7363\u7e26\u91cd\u9283\u53d4\u5919\u5bbf\u6dd1\u795d\u7e2e\u7c9b\u587e\u719f\u51fa\u8853\u8ff0\u4fca\u5cfb\u6625\u77ac\u7ae3\u821c\u99ff\u51c6\u5faa\u65ec\u696f\u6b89\u6df3\u6e96\u6f64\u76fe\u7d14\u5de1\u9075\u9187\u9806\u51e6\u521d\u6240\u6691\u66d9\u6e1a\u5eb6\u7dd2\u7f72\u66f8\u85af\u85f7\u8af8\u52a9\u53d9\u5973\u5e8f\u5f90\u6055\u92e4\u9664\u50b7\u511f" ], [ "bea1", "\u52dd\u5320\u5347\u53ec\u54e8\u5546\u5531\u5617\u5968\u59be\u5a3c\u5bb5\u5c06\u5c0f\u5c11\u5c1a\u5e84\u5e8a\u5ee0\u5f70\u627f\u6284\u62db\u638c\u6377\u6607\u660c\u662d\u6676\u677e\u68a2\u6a1f\u6a35\u6cbc\u6d88\u6e09\u6e58\u713c\u7126\u7167\u75c7\u7701\u785d\u7901\u7965\u79f0\u7ae0\u7b11\u7ca7\u7d39\u8096\u83d6\u848b\u8549\u885d\u88f3\u8a1f\u8a3c\u8a54\u8a73\u8c61\u8cde\u91a4\u9266\u937e\u9418\u969c\u9798\u4e0a\u4e08\u4e1e\u4e57\u5197\u5270\u57ce\u5834\u58cc\u5b22\u5e38\u60c5\u64fe\u6761\u6756\u6d44\u72b6\u7573\u7a63\u84b8\u8b72\u91b8\u9320\u5631\u57f4\u98fe" ], [ "bfa1", "\u62ed\u690d\u6b96\u71ed\u7e54\u8077\u8272\u89e6\u98df\u8755\u8fb1\u5c3b\u4f38\u4fe1\u4fb5\u5507\u5a20\u5bdd\u5be9\u5fc3\u614e\u632f\u65b0\u664b\u68ee\u699b\u6d78\u6df1\u7533\u75b9\u771f\u795e\u79e6\u7d33\u81e3\u82af\u85aa\u89aa\u8a3a\u8eab\u8f9b\u9032\u91dd\u9707\u4eba\u4ec1\u5203\u5875\u58ec\u5c0b\u751a\u5c3d\u814e\u8a0a\u8fc5\u9663\u976d\u7b25\u8acf\u9808\u9162\u56f3\u53a8\u9017\u5439\u5782\u5e25\u63a8\u6c34\u708a\u7761\u7c8b\u7fe0\u8870\u9042\u9154\u9310\u9318\u968f\u745e\u9ac4\u5d07\u5d69\u6570\u67a2\u8da8\u96db\u636e\u6749\u6919\u83c5\u9817\u96c0\u88fe" ], [ "c0a1", "\u6f84\u647a\u5bf8\u4e16\u702c\u755d\u662f\u51c4\u5236\u52e2\u59d3\u5f81\u6027\u6210\u653f\u6574\u661f\u6674\u68f2\u6816\u6b63\u6e05\u7272\u751f\u76db\u7cbe\u8056\u58f0\u88fd\u897f\u8aa0\u8a93\u8acb\u901d\u9192\u9752\u9759\u6589\u7a0e\u8106\u96bb\u5e2d\u60dc\u621a\u65a5\u6614\u6790\u77f3\u7a4d\u7c4d\u7e3e\u810a\u8cac\u8d64\u8de1\u8e5f\u78a9\u5207\u62d9\u63a5\u6442\u6298\u8a2d\u7a83\u7bc0\u8aac\u96ea\u7d76\u820c\u8749\u4ed9\u5148\u5343\u5360\u5ba3\u5c02\u5c16\u5ddd\u6226\u6247\u64b0\u6813\u6834\u6cc9\u6d45\u6d17\u67d3\u6f5c\u714e\u717d\u65cb\u7a7f\u7bad\u7dda" ], [ "c1a1", "\u7e4a\u7fa8\u817a\u821b\u8239\u85a6\u8a6e\u8cce\u8df5\u9078\u9077\u92ad\u9291\u9583\u9bae\u524d\u5584\u6f38\u7136\u5168\u7985\u7e55\u81b3\u7cce\u564c\u5851\u5ca8\u63aa\u66fe\u66fd\u695a\u72d9\u758f\u758e\u790e\u7956\u79df\u7c97\u7d20\u7d44\u8607\u8a34\u963b\u9061\u9f20\u50e7\u5275\u53cc\u53e2\u5009\u55aa\u58ee\u594f\u723d\u5b8b\u5c64\u531d\u60e3\u60f3\u635c\u6383\u633f\u63bb\u64cd\u65e9\u66f9\u5de3\u69cd\u69fd\u6f15\u71e5\u4e89\u75e9\u76f8\u7a93\u7cdf\u7dcf\u7d9c\u8061\u8349\u8358\u846c\u84bc\u85fb\u88c5\u8d70\u9001\u906d\u9397\u971c\u9a12\u50cf\u5897\u618e" ], [ "c2a1", "\u81d3\u8535\u8d08\u9020\u4fc3\u5074\u5247\u5373\u606f\u6349\u675f\u6e2c\u8db3\u901f\u4fd7\u5c5e\u8cca\u65cf\u7d9a\u5352\u8896\u5176\u63c3\u5b58\u5b6b\u5c0a\u640d\u6751\u905c\u4ed6\u591a\u592a\u6c70\u8a51\u553e\u5815\u59a5\u60f0\u6253\u67c1\u8235\u6955\u9640\u99c4\u9a28\u4f53\u5806\u5bfe\u8010\u5cb1\u5e2f\u5f85\u6020\u614b\u6234\u66ff\u6cf0\u6ede\u80ce\u817f\u82d4\u888b\u8cb8\u9000\u902e\u968a\u9edb\u9bdb\u4ee3\u53f0\u5927\u7b2c\u918d\u984c\u9df9\u6edd\u7027\u5353\u5544\u5b85\u6258\u629e\u62d3\u6ca2\u6fef\u7422\u8a17\u9438\u6fc1\u8afe\u8338\u51e7\u86f8\u53ea" ], [ "c3a1", "\u53e9\u4f46\u9054\u8fb0\u596a\u8131\u5dfd\u7aea\u8fbf\u68da\u8c37\u72f8\u9c48\u6a3d\u8ab0\u4e39\u5358\u5606\u5766\u62c5\u63a2\u65e6\u6b4e\u6de1\u6e5b\u70ad\u77ed\u7aef\u7baa\u7dbb\u803d\u80c6\u86cb\u8a95\u935b\u56e3\u58c7\u5f3e\u65ad\u6696\u6a80\u6bb5\u7537\u8ac7\u5024\u77e5\u5730\u5f1b\u6065\u667a\u6c60\u75f4\u7a1a\u7f6e\u81f4\u8718\u9045\u99b3\u7bc9\u755c\u7af9\u7b51\u84c4\u9010\u79e9\u7a92\u8336\u5ae1\u7740\u4e2d\u4ef2\u5b99\u5fe0\u62bd\u663c\u67f1\u6ce8\u866b\u8877\u8a3b\u914e\u92f3\u99d0\u6a17\u7026\u732a\u82e7\u8457\u8caf\u4e01\u5146\u51cb\u558b\u5bf5" ], [ "c4a1", "\u5e16\u5e33\u5e81\u5f14\u5f35\u5f6b\u5fb4\u61f2\u6311\u66a2\u671d\u6f6e\u7252\u753a\u773a\u8074\u8139\u8178\u8776\u8abf\u8adc\u8d85\u8df3\u929a\u9577\u9802\u9ce5\u52c5\u6357\u76f4\u6715\u6c88\u73cd\u8cc3\u93ae\u9673\u6d25\u589c\u690e\u69cc\u8ffd\u939a\u75db\u901a\u585a\u6802\u63b4\u69fb\u4f43\u6f2c\u67d8\u8fbb\u8526\u7db4\u9354\u693f\u6f70\u576a\u58f7\u5b2c\u7d2c\u722a\u540a\u91e3\u9db4\u4ead\u4f4e\u505c\u5075\u5243\u8c9e\u5448\u5824\u5b9a\u5e1d\u5e95\u5ead\u5ef7\u5f1f\u608c\u62b5\u633a\u63d0\u68af\u6c40\u7887\u798e\u7a0b\u7de0\u8247\u8a02\u8ae6\u8e44\u9013" ], [ "c5a1", "\u90b8\u912d\u91d8\u9f0e\u6ce5\u6458\u64e2\u6575\u6ef4\u7684\u7b1b\u9069\u93d1\u6eba\u54f2\u5fb9\u64a4\u8f4d\u8fed\u9244\u5178\u586b\u5929\u5c55\u5e97\u6dfb\u7e8f\u751c\u8cbc\u8ee2\u985b\u70b9\u4f1d\u6bbf\u6fb1\u7530\u96fb\u514e\u5410\u5835\u5857\u59ac\u5c60\u5f92\u6597\u675c\u6e21\u767b\u83df\u8ced\u9014\u90fd\u934d\u7825\u783a\u52aa\u5ea6\u571f\u5974\u6012\u5012\u515a\u51ac\u51cd\u5200\u5510\u5854\u5858\u5957\u5b95\u5cf6\u5d8b\u60bc\u6295\u642d\u6771\u6843\u68bc\u68df\u76d7\u6dd8\u6e6f\u6d9b\u706f\u71c8\u5f53\u75d8\u7977\u7b49\u7b54\u7b52\u7cd6\u7d71\u5230" ], [ "c6a1", "\u8463\u8569\u85e4\u8a0e\u8b04\u8c46\u8e0f\u9003\u900f\u9419\u9676\u982d\u9a30\u95d8\u50cd\u52d5\u540c\u5802\u5c0e\u61a7\u649e\u6d1e\u77b3\u7ae5\u80f4\u8404\u9053\u9285\u5ce0\u9d07\u533f\u5f97\u5fb3\u6d9c\u7279\u7763\u79bf\u7be4\u6bd2\u72ec\u8aad\u6803\u6a61\u51f8\u7a81\u6934\u5c4a\u9cf6\u82eb\u5bc5\u9149\u701e\u5678\u5c6f\u60c7\u6566\u6c8c\u8c5a\u9041\u9813\u5451\u66c7\u920d\u5948\u90a3\u5185\u4e4d\u51ea\u8599\u8b0e\u7058\u637a\u934b\u6962\u99b4\u7e04\u7577\u5357\u6960\u8edf\u96e3\u6c5d\u4e8c\u5c3c\u5f10\u8fe9\u5302\u8cd1\u8089\u8679\u5eff\u65e5\u4e73\u5165" ], [ "c7a1", "\u5982\u5c3f\u97ee\u4efb\u598a\u5fcd\u8a8d\u6fe1\u79b0\u7962\u5be7\u8471\u732b\u71b1\u5e74\u5ff5\u637b\u649a\u71c3\u7c98\u4e43\u5efc\u4e4b\u57dc\u56a2\u60a9\u6fc3\u7d0d\u80fd\u8133\u81bf\u8fb2\u8997\u86a4\u5df4\u628a\u64ad\u8987\u6777\u6ce2\u6d3e\u7436\u7834\u5a46\u7f75\u82ad\u99ac\u4ff3\u5ec3\u62dd\u6392\u6557\u676f\u76c3\u724c\u80cc\u80ba\u8f29\u914d\u500d\u57f9\u5a92\u6885\u6973\u7164\u72fd\u8cb7\u58f2\u8ce0\u966a\u9019\u877f\u79e4\u77e7\u8429\u4f2f\u5265\u535a\u62cd\u67cf\u6cca\u767d\u7b94\u7c95\u8236\u8584\u8feb\u66dd\u6f20\u7206\u7e1b\u83ab\u99c1\u9ea6" ], [ "c8a1", "\u51fd\u7bb1\u7872\u7bb8\u8087\u7b48\u6ae8\u5e61\u808c\u7551\u7560\u516b\u9262\u6e8c\u767a\u9197\u9aea\u4f10\u7f70\u629c\u7b4f\u95a5\u9ce9\u567a\u5859\u86e4\u96bc\u4f34\u5224\u534a\u53cd\u53db\u5e06\u642c\u6591\u677f\u6c3e\u6c4e\u7248\u72af\u73ed\u7554\u7e41\u822c\u85e9\u8ca9\u7bc4\u91c6\u7169\u9812\u98ef\u633d\u6669\u756a\u76e4\u78d0\u8543\u86ee\u532a\u5351\u5426\u5983\u5e87\u5f7c\u60b2\u6249\u6279\u62ab\u6590\u6bd4\u6ccc\u75b2\u76ae\u7891\u79d8\u7dcb\u7f77\u80a5\u88ab\u8ab9\u8cbb\u907f\u975e\u98db\u6a0b\u7c38\u5099\u5c3e\u5fae\u6787\u6bd8\u7435\u7709\u7f8e" ], [ "c9a1", "\u9f3b\u67ca\u7a17\u5339\u758b\u9aed\u5f66\u819d\u83f1\u8098\u5f3c\u5fc5\u7562\u7b46\u903c\u6867\u59eb\u5a9b\u7d10\u767e\u8b2c\u4ff5\u5f6a\u6a19\u6c37\u6f02\u74e2\u7968\u8868\u8a55\u8c79\u5edf\u63cf\u75c5\u79d2\u82d7\u9328\u92f2\u849c\u86ed\u9c2d\u54c1\u5f6c\u658c\u6d5c\u7015\u8ca7\u8cd3\u983b\u654f\u74f6\u4e0d\u4ed8\u57e0\u592b\u5a66\u5bcc\u51a8\u5e03\u5e9c\u6016\u6276\u6577\u65a7\u666e\u6d6e\u7236\u7b26\u8150\u819a\u8299\u8b5c\u8ca0\u8ce6\u8d74\u961c\u9644\u4fae\u64ab\u6b66\u821e\u8461\u856a\u90e8\u5c01\u6953\u98a8\u847a\u8557\u4f0f\u526f\u5fa9\u5e45\u670d" ], [ "caa1", "\u798f\u8179\u8907\u8986\u6df5\u5f17\u6255\u6cb8\u4ecf\u7269\u9b92\u5206\u543b\u5674\u58b3\u61a4\u626e\u711a\u596e\u7c89\u7cde\u7d1b\u96f0\u6587\u805e\u4e19\u4f75\u5175\u5840\u5e63\u5e73\u5f0a\u67c4\u4e26\u853d\u9589\u965b\u7c73\u9801\u50fb\u58c1\u7656\u78a7\u5225\u77a5\u8511\u7b86\u504f\u5909\u7247\u7bc7\u7de8\u8fba\u8fd4\u904d\u4fbf\u52c9\u5a29\u5f01\u97ad\u4fdd\u8217\u92ea\u5703\u6355\u6b69\u752b\u88dc\u8f14\u7a42\u52df\u5893\u6155\u620a\u66ae\u6bcd\u7c3f\u83e9\u5023\u4ff8\u5305\u5446\u5831\u5949\u5b9d\u5cf0\u5cef\u5d29\u5e96\u62b1\u6367\u653e\u65b9\u670b" ], [ "cba1", "\u6cd5\u6ce1\u70f9\u7832\u7e2b\u80de\u82b3\u840c\u84ec\u8702\u8912\u8a2a\u8c4a\u90a6\u92d2\u98fd\u9cf3\u9d6c\u4e4f\u4ea1\u508d\u5256\u574a\u59a8\u5e3d\u5fd8\u5fd9\u623f\u66b4\u671b\u67d0\u68d2\u5192\u7d21\u80aa\u81a8\u8b00\u8c8c\u8cbf\u927e\u9632\u5420\u982c\u5317\u50d5\u535c\u58a8\u64b2\u6734\u7267\u7766\u7a46\u91e6\u52c3\u6ca1\u6b86\u5800\u5e4c\u5954\u672c\u7ffb\u51e1\u76c6\u6469\u78e8\u9b54\u9ebb\u57cb\u59b9\u6627\u679a\u6bce\u54e9\u69d9\u5e55\u819c\u6795\u9baa\u67fe\u9c52\u685d\u4ea6\u4fe3\u53c8\u62b9\u672b\u6cab\u8fc4\u4fad\u7e6d\u9ebf\u4e07\u6162\u6e80" ], [ "cca1", "\u6f2b\u8513\u5473\u672a\u9b45\u5df3\u7b95\u5cac\u5bc6\u871c\u6e4a\u84d1\u7a14\u8108\u5999\u7c8d\u6c11\u7720\u52d9\u5922\u7121\u725f\u77db\u9727\u9d61\u690b\u5a7f\u5a18\u51a5\u540d\u547d\u660e\u76df\u8ff7\u9298\u9cf4\u59ea\u725d\u6ec5\u514d\u68c9\u7dbf\u7dec\u9762\u9eba\u6478\u6a21\u8302\u5984\u5b5f\u6bdb\u731b\u76f2\u7db2\u8017\u8499\u5132\u6728\u9ed9\u76ee\u6762\u52ff\u9905\u5c24\u623b\u7c7e\u8cb0\u554f\u60b6\u7d0b\u9580\u5301\u4e5f\u51b6\u591c\u723a\u8036\u91ce\u5f25\u77e2\u5384\u5f79\u7d04\u85ac\u8a33\u8e8d\u9756\u67f3\u85ae\u9453\u6109\u6108\u6cb9\u7652" ], [ "cda1", "\u8aed\u8f38\u552f\u4f51\u512a\u52c7\u53cb\u5ba5\u5e7d\u60a0\u6182\u63d6\u6709\u67da\u6e67\u6d8c\u7336\u7337\u7531\u7950\u88d5\u8a98\u904a\u9091\u90f5\u96c4\u878d\u5915\u4e88\u4f59\u4e0e\u8a89\u8f3f\u9810\u50ad\u5e7c\u5996\u5bb9\u5eb8\u63da\u63fa\u64c1\u66dc\u694a\u69d8\u6d0b\u6eb6\u7194\u7528\u7aaf\u7f8a\u8000\u8449\u84c9\u8981\u8b21\u8e0a\u9065\u967d\u990a\u617e\u6291\u6b32\u6c83\u6d74\u7fcc\u7ffc\u6dc0\u7f85\u87ba\u88f8\u6765\u83b1\u983c\u96f7\u6d1b\u7d61\u843d\u916a\u4e71\u5375\u5d50\u6b04\u6feb\u85cd\u862d\u89a7\u5229\u540f\u5c65\u674e\u68a8\u7406\u7483" ], [ "cea1", "\u75e2\u88cf\u88e1\u91cc\u96e2\u9678\u5f8b\u7387\u7acb\u844e\u63a0\u7565\u5289\u6d41\u6e9c\u7409\u7559\u786b\u7c92\u9686\u7adc\u9f8d\u4fb6\u616e\u65c5\u865c\u4e86\u4eae\u50da\u4e21\u51cc\u5bee\u6599\u6881\u6dbc\u731f\u7642\u77ad\u7a1c\u7ce7\u826f\u8ad2\u907c\u91cf\u9675\u9818\u529b\u7dd1\u502b\u5398\u6797\u6dcb\u71d0\u7433\u81e8\u8f2a\u96a3\u9c57\u9e9f\u7460\u5841\u6d99\u7d2f\u985e\u4ee4\u4f36\u4f8b\u51b7\u52b1\u5dba\u601c\u73b2\u793c\u82d3\u9234\u96b7\u96f6\u970a\u9e97\u9f62\u66a6\u6b74\u5217\u52a3\u70c8\u88c2\u5ec9\u604b\u6190\u6f23\u7149\u7c3e\u7df4\u806f" ], [ "cfa1", "\u84ee\u9023\u932c\u5442\u9b6f\u6ad3\u7089\u8cc2\u8def\u9732\u52b4\u5a41\u5eca\u5f04\u6717\u697c\u6994\u6d6a\u6f0f\u7262\u72fc\u7bed\u8001\u807e\u874b\u90ce\u516d\u9e93\u7984\u808b\u9332\u8ad6\u502d\u548c\u8a71\u6b6a\u8cc4\u8107\u60d1\u67a0\u9df2\u4e99\u4e98\u9c10\u8a6b\u85c1\u8568\u6900\u6e7e\u7897\u8155" ], [ "d0a1", "\u5f0c\u4e10\u4e15\u4e2a\u4e31\u4e36\u4e3c\u4e3f\u4e42\u4e56\u4e58\u4e82\u4e85\u8c6b\u4e8a\u8212\u5f0d\u4e8e\u4e9e\u4e9f\u4ea0\u4ea2\u4eb0\u4eb3\u4eb6\u4ece\u4ecd\u4ec4\u4ec6\u4ec2\u4ed7\u4ede\u4eed\u4edf\u4ef7\u4f09\u4f5a\u4f30\u4f5b\u4f5d\u4f57\u4f47\u4f76\u4f88\u4f8f\u4f98\u4f7b\u4f69\u4f70\u4f91\u4f6f\u4f86\u4f96\u5118\u4fd4\u4fdf\u4fce\u4fd8\u4fdb\u4fd1\u4fda\u4fd0\u4fe4\u4fe5\u501a\u5028\u5014\u502a\u5025\u5005\u4f1c\u4ff6\u5021\u5029\u502c\u4ffe\u4fef\u5011\u5006\u5043\u5047\u6703\u5055\u5050\u5048\u505a\u5056\u506c\u5078\u5080\u509a\u5085\u50b4\u50b2" ], [ "d1a1", "\u50c9\u50ca\u50b3\u50c2\u50d6\u50de\u50e5\u50ed\u50e3\u50ee\u50f9\u50f5\u5109\u5101\u5102\u5116\u5115\u5114\u511a\u5121\u513a\u5137\u513c\u513b\u513f\u5140\u5152\u514c\u5154\u5162\u7af8\u5169\u516a\u516e\u5180\u5182\u56d8\u518c\u5189\u518f\u5191\u5193\u5195\u5196\u51a4\u51a6\u51a2\u51a9\u51aa\u51ab\u51b3\u51b1\u51b2\u51b0\u51b5\u51bd\u51c5\u51c9\u51db\u51e0\u8655\u51e9\u51ed\u51f0\u51f5\u51fe\u5204\u520b\u5214\u520e\u5227\u522a\u522e\u5233\u5239\u524f\u5244\u524b\u524c\u525e\u5254\u526a\u5274\u5269\u5273\u527f\u527d\u528d\u5294\u5292\u5271\u5288\u5291\u8fa8" ], [ "d2a1", "\u8fa7\u52ac\u52ad\u52bc\u52b5\u52c1\u52cd\u52d7\u52de\u52e3\u52e6\u98ed\u52e0\u52f3\u52f5\u52f8\u52f9\u5306\u5308\u7538\u530d\u5310\u530f\u5315\u531a\u5323\u532f\u5331\u5333\u5338\u5340\u5346\u5345\u4e17\u5349\u534d\u51d6\u535e\u5369\u536e\u5918\u537b\u5377\u5382\u5396\u53a0\u53a6\u53a5\u53ae\u53b0\u53b6\u53c3\u7c12\u96d9\u53df\u66fc\u71ee\u53ee\u53e8\u53ed\u53fa\u5401\u543d\u5440\u542c\u542d\u543c\u542e\u5436\u5429\u541d\u544e\u548f\u5475\u548e\u545f\u5471\u5477\u5470\u5492\u547b\u5480\u5476\u5484\u5490\u5486\u54c7\u54a2\u54b8\u54a5\u54ac\u54c4\u54c8\u54a8" ], [ "d3a1", "\u54ab\u54c2\u54a4\u54be\u54bc\u54d8\u54e5\u54e6\u550f\u5514\u54fd\u54ee\u54ed\u54fa\u54e2\u5539\u5540\u5563\u554c\u552e\u555c\u5545\u5556\u5557\u5538\u5533\u555d\u5599\u5580\u54af\u558a\u559f\u557b\u557e\u5598\u559e\u55ae\u557c\u5583\u55a9\u5587\u55a8\u55da\u55c5\u55df\u55c4\u55dc\u55e4\u55d4\u5614\u55f7\u5616\u55fe\u55fd\u561b\u55f9\u564e\u5650\u71df\u5634\u5636\u5632\u5638\u566b\u5664\u562f\u566c\u566a\u5686\u5680\u568a\u56a0\u5694\u568f\u56a5\u56ae\u56b6\u56b4\u56c2\u56bc\u56c1\u56c3\u56c0\u56c8\u56ce\u56d1\u56d3\u56d7\u56ee\u56f9\u5700\u56ff\u5704\u5709" ], [ "d4a1", "\u5708\u570b\u570d\u5713\u5718\u5716\u55c7\u571c\u5726\u5737\u5738\u574e\u573b\u5740\u574f\u5769\u57c0\u5788\u5761\u577f\u5789\u5793\u57a0\u57b3\u57a4\u57aa\u57b0\u57c3\u57c6\u57d4\u57d2\u57d3\u580a\u57d6\u57e3\u580b\u5819\u581d\u5872\u5821\u5862\u584b\u5870\u6bc0\u5852\u583d\u5879\u5885\u58b9\u589f\u58ab\u58ba\u58de\u58bb\u58b8\u58ae\u58c5\u58d3\u58d1\u58d7\u58d9\u58d8\u58e5\u58dc\u58e4\u58df\u58ef\u58fa\u58f9\u58fb\u58fc\u58fd\u5902\u590a\u5910\u591b\u68a6\u5925\u592c\u592d\u5932\u5938\u593e\u7ad2\u5955\u5950\u594e\u595a\u5958\u5962\u5960\u5967\u596c\u5969" ], [ "d5a1", "\u5978\u5981\u599d\u4f5e\u4fab\u59a3\u59b2\u59c6\u59e8\u59dc\u598d\u59d9\u59da\u5a25\u5a1f\u5a11\u5a1c\u5a09\u5a1a\u5a40\u5a6c\u5a49\u5a35\u5a36\u5a62\u5a6a\u5a9a\u5abc\u5abe\u5acb\u5ac2\u5abd\u5ae3\u5ad7\u5ae6\u5ae9\u5ad6\u5afa\u5afb\u5b0c\u5b0b\u5b16\u5b32\u5ad0\u5b2a\u5b36\u5b3e\u5b43\u5b45\u5b40\u5b51\u5b55\u5b5a\u5b5b\u5b65\u5b69\u5b70\u5b73\u5b75\u5b78\u6588\u5b7a\u5b80\u5b83\u5ba6\u5bb8\u5bc3\u5bc7\u5bc9\u5bd4\u5bd0\u5be4\u5be6\u5be2\u5bde\u5be5\u5beb\u5bf0\u5bf6\u5bf3\u5c05\u5c07\u5c08\u5c0d\u5c13\u5c20\u5c22\u5c28\u5c38\u5c39\u5c41\u5c46\u5c4e\u5c53" ], [ "d6a1", "\u5c50\u5c4f\u5b71\u5c6c\u5c6e\u4e62\u5c76\u5c79\u5c8c\u5c91\u5c94\u599b\u5cab\u5cbb\u5cb6\u5cbc\u5cb7\u5cc5\u5cbe\u5cc7\u5cd9\u5ce9\u5cfd\u5cfa\u5ced\u5d8c\u5cea\u5d0b\u5d15\u5d17\u5d5c\u5d1f\u5d1b\u5d11\u5d14\u5d22\u5d1a\u5d19\u5d18\u5d4c\u5d52\u5d4e\u5d4b\u5d6c\u5d73\u5d76\u5d87\u5d84\u5d82\u5da2\u5d9d\u5dac\u5dae\u5dbd\u5d90\u5db7\u5dbc\u5dc9\u5dcd\u5dd3\u5dd2\u5dd6\u5ddb\u5deb\u5df2\u5df5\u5e0b\u5e1a\u5e19\u5e11\u5e1b\u5e36\u5e37\u5e44\u5e43\u5e40\u5e4e\u5e57\u5e54\u5e5f\u5e62\u5e64\u5e47\u5e75\u5e76\u5e7a\u9ebc\u5e7f\u5ea0\u5ec1\u5ec2\u5ec8\u5ed0\u5ecf" ], [ "d7a1", "\u5ed6\u5ee3\u5edd\u5eda\u5edb\u5ee2\u5ee1\u5ee8\u5ee9\u5eec\u5ef1\u5ef3\u5ef0\u5ef4\u5ef8\u5efe\u5f03\u5f09\u5f5d\u5f5c\u5f0b\u5f11\u5f16\u5f29\u5f2d\u5f38\u5f41\u5f48\u5f4c\u5f4e\u5f2f\u5f51\u5f56\u5f57\u5f59\u5f61\u5f6d\u5f73\u5f77\u5f83\u5f82\u5f7f\u5f8a\u5f88\u5f91\u5f87\u5f9e\u5f99\u5f98\u5fa0\u5fa8\u5fad\u5fbc\u5fd6\u5ffb\u5fe4\u5ff8\u5ff1\u5fdd\u60b3\u5fff\u6021\u6060\u6019\u6010\u6029\u600e\u6031\u601b\u6015\u602b\u6026\u600f\u603a\u605a\u6041\u606a\u6077\u605f\u604a\u6046\u604d\u6063\u6043\u6064\u6042\u606c\u606b\u6059\u6081\u608d\u60e7\u6083\u609a" ], [ "d8a1", "\u6084\u609b\u6096\u6097\u6092\u60a7\u608b\u60e1\u60b8\u60e0\u60d3\u60b4\u5ff0\u60bd\u60c6\u60b5\u60d8\u614d\u6115\u6106\u60f6\u60f7\u6100\u60f4\u60fa\u6103\u6121\u60fb\u60f1\u610d\u610e\u6147\u613e\u6128\u6127\u614a\u613f\u613c\u612c\u6134\u613d\u6142\u6144\u6173\u6177\u6158\u6159\u615a\u616b\u6174\u616f\u6165\u6171\u615f\u615d\u6153\u6175\u6199\u6196\u6187\u61ac\u6194\u619a\u618a\u6191\u61ab\u61ae\u61cc\u61ca\u61c9\u61f7\u61c8\u61c3\u61c6\u61ba\u61cb\u7f79\u61cd\u61e6\u61e3\u61f6\u61fa\u61f4\u61ff\u61fd\u61fc\u61fe\u6200\u6208\u6209\u620d\u620c\u6214\u621b" ], [ "d9a1", "\u621e\u6221\u622a\u622e\u6230\u6232\u6233\u6241\u624e\u625e\u6263\u625b\u6260\u6268\u627c\u6282\u6289\u627e\u6292\u6293\u6296\u62d4\u6283\u6294\u62d7\u62d1\u62bb\u62cf\u62ff\u62c6\u64d4\u62c8\u62dc\u62cc\u62ca\u62c2\u62c7\u629b\u62c9\u630c\u62ee\u62f1\u6327\u6302\u6308\u62ef\u62f5\u6350\u633e\u634d\u641c\u634f\u6396\u638e\u6380\u63ab\u6376\u63a3\u638f\u6389\u639f\u63b5\u636b\u6369\u63be\u63e9\u63c0\u63c6\u63e3\u63c9\u63d2\u63f6\u63c4\u6416\u6434\u6406\u6413\u6426\u6436\u651d\u6417\u6428\u640f\u6467\u646f\u6476\u644e\u652a\u6495\u6493\u64a5\u64a9\u6488\u64bc" ], [ "daa1", "\u64da\u64d2\u64c5\u64c7\u64bb\u64d8\u64c2\u64f1\u64e7\u8209\u64e0\u64e1\u62ac\u64e3\u64ef\u652c\u64f6\u64f4\u64f2\u64fa\u6500\u64fd\u6518\u651c\u6505\u6524\u6523\u652b\u6534\u6535\u6537\u6536\u6538\u754b\u6548\u6556\u6555\u654d\u6558\u655e\u655d\u6572\u6578\u6582\u6583\u8b8a\u659b\u659f\u65ab\u65b7\u65c3\u65c6\u65c1\u65c4\u65cc\u65d2\u65db\u65d9\u65e0\u65e1\u65f1\u6772\u660a\u6603\u65fb\u6773\u6635\u6636\u6634\u661c\u664f\u6644\u6649\u6641\u665e\u665d\u6664\u6667\u6668\u665f\u6662\u6670\u6683\u6688\u668e\u6689\u6684\u6698\u669d\u66c1\u66b9\u66c9\u66be\u66bc" ], [ "dba1", "\u66c4\u66b8\u66d6\u66da\u66e0\u663f\u66e6\u66e9\u66f0\u66f5\u66f7\u670f\u6716\u671e\u6726\u6727\u9738\u672e\u673f\u6736\u6741\u6738\u6737\u6746\u675e\u6760\u6759\u6763\u6764\u6789\u6770\u67a9\u677c\u676a\u678c\u678b\u67a6\u67a1\u6785\u67b7\u67ef\u67b4\u67ec\u67b3\u67e9\u67b8\u67e4\u67de\u67dd\u67e2\u67ee\u67b9\u67ce\u67c6\u67e7\u6a9c\u681e\u6846\u6829\u6840\u684d\u6832\u684e\u68b3\u682b\u6859\u6863\u6877\u687f\u689f\u688f\u68ad\u6894\u689d\u689b\u6883\u6aae\u68b9\u6874\u68b5\u68a0\u68ba\u690f\u688d\u687e\u6901\u68ca\u6908\u68d8\u6922\u6926\u68e1\u690c\u68cd" ], [ "dca1", "\u68d4\u68e7\u68d5\u6936\u6912\u6904\u68d7\u68e3\u6925\u68f9\u68e0\u68ef\u6928\u692a\u691a\u6923\u6921\u68c6\u6979\u6977\u695c\u6978\u696b\u6954\u697e\u696e\u6939\u6974\u693d\u6959\u6930\u6961\u695e\u695d\u6981\u696a\u69b2\u69ae\u69d0\u69bf\u69c1\u69d3\u69be\u69ce\u5be8\u69ca\u69dd\u69bb\u69c3\u69a7\u6a2e\u6991\u69a0\u699c\u6995\u69b4\u69de\u69e8\u6a02\u6a1b\u69ff\u6b0a\u69f9\u69f2\u69e7\u6a05\u69b1\u6a1e\u69ed\u6a14\u69eb\u6a0a\u6a12\u6ac1\u6a23\u6a13\u6a44\u6a0c\u6a72\u6a36\u6a78\u6a47\u6a62\u6a59\u6a66\u6a48\u6a38\u6a22\u6a90\u6a8d\u6aa0\u6a84\u6aa2\u6aa3" ], [ "dda1", "\u6a97\u8617\u6abb\u6ac3\u6ac2\u6ab8\u6ab3\u6aac\u6ade\u6ad1\u6adf\u6aaa\u6ada\u6aea\u6afb\u6b05\u8616\u6afa\u6b12\u6b16\u9b31\u6b1f\u6b38\u6b37\u76dc\u6b39\u98ee\u6b47\u6b43\u6b49\u6b50\u6b59\u6b54\u6b5b\u6b5f\u6b61\u6b78\u6b79\u6b7f\u6b80\u6b84\u6b83\u6b8d\u6b98\u6b95\u6b9e\u6ba4\u6baa\u6bab\u6baf\u6bb2\u6bb1\u6bb3\u6bb7\u6bbc\u6bc6\u6bcb\u6bd3\u6bdf\u6bec\u6beb\u6bf3\u6bef\u9ebe\u6c08\u6c13\u6c14\u6c1b\u6c24\u6c23\u6c5e\u6c55\u6c62\u6c6a\u6c82\u6c8d\u6c9a\u6c81\u6c9b\u6c7e\u6c68\u6c73\u6c92\u6c90\u6cc4\u6cf1\u6cd3\u6cbd\u6cd7\u6cc5\u6cdd\u6cae\u6cb1\u6cbe" ], [ "dea1", "\u6cba\u6cdb\u6cef\u6cd9\u6cea\u6d1f\u884d\u6d36\u6d2b\u6d3d\u6d38\u6d19\u6d35\u6d33\u6d12\u6d0c\u6d63\u6d93\u6d64\u6d5a\u6d79\u6d59\u6d8e\u6d95\u6fe4\u6d85\u6df9\u6e15\u6e0a\u6db5\u6dc7\u6de6\u6db8\u6dc6\u6dec\u6dde\u6dcc\u6de8\u6dd2\u6dc5\u6dfa\u6dd9\u6de4\u6dd5\u6dea\u6dee\u6e2d\u6e6e\u6e2e\u6e19\u6e72\u6e5f\u6e3e\u6e23\u6e6b\u6e2b\u6e76\u6e4d\u6e1f\u6e43\u6e3a\u6e4e\u6e24\u6eff\u6e1d\u6e38\u6e82\u6eaa\u6e98\u6ec9\u6eb7\u6ed3\u6ebd\u6eaf\u6ec4\u6eb2\u6ed4\u6ed5\u6e8f\u6ea5\u6ec2\u6e9f\u6f41\u6f11\u704c\u6eec\u6ef8\u6efe\u6f3f\u6ef2\u6f31\u6eef\u6f32\u6ecc" ], [ "dfa1", "\u6f3e\u6f13\u6ef7\u6f86\u6f7a\u6f78\u6f81\u6f80\u6f6f\u6f5b\u6ff3\u6f6d\u6f82\u6f7c\u6f58\u6f8e\u6f91\u6fc2\u6f66\u6fb3\u6fa3\u6fa1\u6fa4\u6fb9\u6fc6\u6faa\u6fdf\u6fd5\u6fec\u6fd4\u6fd8\u6ff1\u6fee\u6fdb\u7009\u700b\u6ffa\u7011\u7001\u700f\u6ffe\u701b\u701a\u6f74\u701d\u7018\u701f\u7030\u703e\u7032\u7051\u7063\u7099\u7092\u70af\u70f1\u70ac\u70b8\u70b3\u70ae\u70df\u70cb\u70dd\u70d9\u7109\u70fd\u711c\u7119\u7165\u7155\u7188\u7166\u7162\u714c\u7156\u716c\u718f\u71fb\u7184\u7195\u71a8\u71ac\u71d7\u71b9\u71be\u71d2\u71c9\u71d4\u71ce\u71e0\u71ec\u71e7\u71f5\u71fc" ], [ "e0a1", "\u71f9\u71ff\u720d\u7210\u721b\u7228\u722d\u722c\u7230\u7232\u723b\u723c\u723f\u7240\u7246\u724b\u7258\u7274\u727e\u7282\u7281\u7287\u7292\u7296\u72a2\u72a7\u72b9\u72b2\u72c3\u72c6\u72c4\u72ce\u72d2\u72e2\u72e0\u72e1\u72f9\u72f7\u500f\u7317\u730a\u731c\u7316\u731d\u7334\u732f\u7329\u7325\u733e\u734e\u734f\u9ed8\u7357\u736a\u7368\u7370\u7378\u7375\u737b\u737a\u73c8\u73b3\u73ce\u73bb\u73c0\u73e5\u73ee\u73de\u74a2\u7405\u746f\u7425\u73f8\u7432\u743a\u7455\u743f\u745f\u7459\u7441\u745c\u7469\u7470\u7463\u746a\u7476\u747e\u748b\u749e\u74a7\u74ca\u74cf\u74d4\u73f1" ], [ "e1a1", "\u74e0\u74e3\u74e7\u74e9\u74ee\u74f2\u74f0\u74f1\u74f8\u74f7\u7504\u7503\u7505\u750c\u750e\u750d\u7515\u7513\u751e\u7526\u752c\u753c\u7544\u754d\u754a\u7549\u755b\u7546\u755a\u7569\u7564\u7567\u756b\u756d\u7578\u7576\u7586\u7587\u7574\u758a\u7589\u7582\u7594\u759a\u759d\u75a5\u75a3\u75c2\u75b3\u75c3\u75b5\u75bd\u75b8\u75bc\u75b1\u75cd\u75ca\u75d2\u75d9\u75e3\u75de\u75fe\u75ff\u75fc\u7601\u75f0\u75fa\u75f2\u75f3\u760b\u760d\u7609\u761f\u7627\u7620\u7621\u7622\u7624\u7634\u7630\u763b\u7647\u7648\u7646\u765c\u7658\u7661\u7662\u7668\u7669\u766a\u7667\u766c\u7670" ], [ "e2a1", "\u7672\u7676\u7678\u767c\u7680\u7683\u7688\u768b\u768e\u7696\u7693\u7699\u769a\u76b0\u76b4\u76b8\u76b9\u76ba\u76c2\u76cd\u76d6\u76d2\u76de\u76e1\u76e5\u76e7\u76ea\u862f\u76fb\u7708\u7707\u7704\u7729\u7724\u771e\u7725\u7726\u771b\u7737\u7738\u7747\u775a\u7768\u776b\u775b\u7765\u777f\u777e\u7779\u778e\u778b\u7791\u77a0\u779e\u77b0\u77b6\u77b9\u77bf\u77bc\u77bd\u77bb\u77c7\u77cd\u77d7\u77da\u77dc\u77e3\u77ee\u77fc\u780c\u7812\u7926\u7820\u792a\u7845\u788e\u7874\u7886\u787c\u789a\u788c\u78a3\u78b5\u78aa\u78af\u78d1\u78c6\u78cb\u78d4\u78be\u78bc\u78c5\u78ca\u78ec" ], [ "e3a1", "\u78e7\u78da\u78fd\u78f4\u7907\u7912\u7911\u7919\u792c\u792b\u7940\u7960\u7957\u795f\u795a\u7955\u7953\u797a\u797f\u798a\u799d\u79a7\u9f4b\u79aa\u79ae\u79b3\u79b9\u79ba\u79c9\u79d5\u79e7\u79ec\u79e1\u79e3\u7a08\u7a0d\u7a18\u7a19\u7a20\u7a1f\u7980\u7a31\u7a3b\u7a3e\u7a37\u7a43\u7a57\u7a49\u7a61\u7a62\u7a69\u9f9d\u7a70\u7a79\u7a7d\u7a88\u7a97\u7a95\u7a98\u7a96\u7aa9\u7ac8\u7ab0\u7ab6\u7ac5\u7ac4\u7abf\u9083\u7ac7\u7aca\u7acd\u7acf\u7ad5\u7ad3\u7ad9\u7ada\u7add\u7ae1\u7ae2\u7ae6\u7aed\u7af0\u7b02\u7b0f\u7b0a\u7b06\u7b33\u7b18\u7b19\u7b1e\u7b35\u7b28\u7b36\u7b50" ], [ "e4a1", "\u7b7a\u7b04\u7b4d\u7b0b\u7b4c\u7b45\u7b75\u7b65\u7b74\u7b67\u7b70\u7b71\u7b6c\u7b6e\u7b9d\u7b98\u7b9f\u7b8d\u7b9c\u7b9a\u7b8b\u7b92\u7b8f\u7b5d\u7b99\u7bcb\u7bc1\u7bcc\u7bcf\u7bb4\u7bc6\u7bdd\u7be9\u7c11\u7c14\u7be6\u7be5\u7c60\u7c00\u7c07\u7c13\u7bf3\u7bf7\u7c17\u7c0d\u7bf6\u7c23\u7c27\u7c2a\u7c1f\u7c37\u7c2b\u7c3d\u7c4c\u7c43\u7c54\u7c4f\u7c40\u7c50\u7c58\u7c5f\u7c64\u7c56\u7c65\u7c6c\u7c75\u7c83\u7c90\u7ca4\u7cad\u7ca2\u7cab\u7ca1\u7ca8\u7cb3\u7cb2\u7cb1\u7cae\u7cb9\u7cbd\u7cc0\u7cc5\u7cc2\u7cd8\u7cd2\u7cdc\u7ce2\u9b3b\u7cef\u7cf2\u7cf4\u7cf6\u7cfa\u7d06" ], [ "e5a1", "\u7d02\u7d1c\u7d15\u7d0a\u7d45\u7d4b\u7d2e\u7d32\u7d3f\u7d35\u7d46\u7d73\u7d56\u7d4e\u7d72\u7d68\u7d6e\u7d4f\u7d63\u7d93\u7d89\u7d5b\u7d8f\u7d7d\u7d9b\u7dba\u7dae\u7da3\u7db5\u7dc7\u7dbd\u7dab\u7e3d\u7da2\u7daf\u7ddc\u7db8\u7d9f\u7db0\u7dd8\u7ddd\u7de4\u7dde\u7dfb\u7df2\u7de1\u7e05\u7e0a\u7e23\u7e21\u7e12\u7e31\u7e1f\u7e09\u7e0b\u7e22\u7e46\u7e66\u7e3b\u7e35\u7e39\u7e43\u7e37\u7e32\u7e3a\u7e67\u7e5d\u7e56\u7e5e\u7e59\u7e5a\u7e79\u7e6a\u7e69\u7e7c\u7e7b\u7e83\u7dd5\u7e7d\u8fae\u7e7f\u7e88\u7e89\u7e8c\u7e92\u7e90\u7e93\u7e94\u7e96\u7e8e\u7e9b\u7e9c\u7f38\u7f3a" ], [ "e6a1", "\u7f45\u7f4c\u7f4d\u7f4e\u7f50\u7f51\u7f55\u7f54\u7f58\u7f5f\u7f60\u7f68\u7f69\u7f67\u7f78\u7f82\u7f86\u7f83\u7f88\u7f87\u7f8c\u7f94\u7f9e\u7f9d\u7f9a\u7fa3\u7faf\u7fb2\u7fb9\u7fae\u7fb6\u7fb8\u8b71\u7fc5\u7fc6\u7fca\u7fd5\u7fd4\u7fe1\u7fe6\u7fe9\u7ff3\u7ff9\u98dc\u8006\u8004\u800b\u8012\u8018\u8019\u801c\u8021\u8028\u803f\u803b\u804a\u8046\u8052\u8058\u805a\u805f\u8062\u8068\u8073\u8072\u8070\u8076\u8079\u807d\u807f\u8084\u8086\u8085\u809b\u8093\u809a\u80ad\u5190\u80ac\u80db\u80e5\u80d9\u80dd\u80c4\u80da\u80d6\u8109\u80ef\u80f1\u811b\u8129\u8123\u812f\u814b" ], [ "e7a1", "\u968b\u8146\u813e\u8153\u8151\u80fc\u8171\u816e\u8165\u8166\u8174\u8183\u8188\u818a\u8180\u8182\u81a0\u8195\u81a4\u81a3\u815f\u8193\u81a9\u81b0\u81b5\u81be\u81b8\u81bd\u81c0\u81c2\u81ba\u81c9\u81cd\u81d1\u81d9\u81d8\u81c8\u81da\u81df\u81e0\u81e7\u81fa\u81fb\u81fe\u8201\u8202\u8205\u8207\u820a\u820d\u8210\u8216\u8229\u822b\u8238\u8233\u8240\u8259\u8258\u825d\u825a\u825f\u8264\u8262\u8268\u826a\u826b\u822e\u8271\u8277\u8278\u827e\u828d\u8292\u82ab\u829f\u82bb\u82ac\u82e1\u82e3\u82df\u82d2\u82f4\u82f3\u82fa\u8393\u8303\u82fb\u82f9\u82de\u8306\u82dc\u8309\u82d9" ], [ "e8a1", "\u8335\u8334\u8316\u8332\u8331\u8340\u8339\u8350\u8345\u832f\u832b\u8317\u8318\u8385\u839a\u83aa\u839f\u83a2\u8396\u8323\u838e\u8387\u838a\u837c\u83b5\u8373\u8375\u83a0\u8389\u83a8\u83f4\u8413\u83eb\u83ce\u83fd\u8403\u83d8\u840b\u83c1\u83f7\u8407\u83e0\u83f2\u840d\u8422\u8420\u83bd\u8438\u8506\u83fb\u846d\u842a\u843c\u855a\u8484\u8477\u846b\u84ad\u846e\u8482\u8469\u8446\u842c\u846f\u8479\u8435\u84ca\u8462\u84b9\u84bf\u849f\u84d9\u84cd\u84bb\u84da\u84d0\u84c1\u84c6\u84d6\u84a1\u8521\u84ff\u84f4\u8517\u8518\u852c\u851f\u8515\u8514\u84fc\u8540\u8563\u8558\u8548" ], [ "e9a1", "\u8541\u8602\u854b\u8555\u8580\u85a4\u8588\u8591\u858a\u85a8\u856d\u8594\u859b\u85ea\u8587\u859c\u8577\u857e\u8590\u85c9\u85ba\u85cf\u85b9\u85d0\u85d5\u85dd\u85e5\u85dc\u85f9\u860a\u8613\u860b\u85fe\u85fa\u8606\u8622\u861a\u8630\u863f\u864d\u4e55\u8654\u865f\u8667\u8671\u8693\u86a3\u86a9\u86aa\u868b\u868c\u86b6\u86af\u86c4\u86c6\u86b0\u86c9\u8823\u86ab\u86d4\u86de\u86e9\u86ec\u86df\u86db\u86ef\u8712\u8706\u8708\u8700\u8703\u86fb\u8711\u8709\u870d\u86f9\u870a\u8734\u873f\u8737\u873b\u8725\u8729\u871a\u8760\u875f\u8778\u874c\u874e\u8774\u8757\u8768\u876e\u8759" ], [ "eaa1", "\u8753\u8763\u876a\u8805\u87a2\u879f\u8782\u87af\u87cb\u87bd\u87c0\u87d0\u96d6\u87ab\u87c4\u87b3\u87c7\u87c6\u87bb\u87ef\u87f2\u87e0\u880f\u880d\u87fe\u87f6\u87f7\u880e\u87d2\u8811\u8816\u8815\u8822\u8821\u8831\u8836\u8839\u8827\u883b\u8844\u8842\u8852\u8859\u885e\u8862\u886b\u8881\u887e\u889e\u8875\u887d\u88b5\u8872\u8882\u8897\u8892\u88ae\u8899\u88a2\u888d\u88a4\u88b0\u88bf\u88b1\u88c3\u88c4\u88d4\u88d8\u88d9\u88dd\u88f9\u8902\u88fc\u88f4\u88e8\u88f2\u8904\u890c\u890a\u8913\u8943\u891e\u8925\u892a\u892b\u8941\u8944\u893b\u8936\u8938\u894c\u891d\u8960\u895e" ], [ "eba1", "\u8966\u8964\u896d\u896a\u896f\u8974\u8977\u897e\u8983\u8988\u898a\u8993\u8998\u89a1\u89a9\u89a6\u89ac\u89af\u89b2\u89ba\u89bd\u89bf\u89c0\u89da\u89dc\u89dd\u89e7\u89f4\u89f8\u8a03\u8a16\u8a10\u8a0c\u8a1b\u8a1d\u8a25\u8a36\u8a41\u8a5b\u8a52\u8a46\u8a48\u8a7c\u8a6d\u8a6c\u8a62\u8a85\u8a82\u8a84\u8aa8\u8aa1\u8a91\u8aa5\u8aa6\u8a9a\u8aa3\u8ac4\u8acd\u8ac2\u8ada\u8aeb\u8af3\u8ae7\u8ae4\u8af1\u8b14\u8ae0\u8ae2\u8af7\u8ade\u8adb\u8b0c\u8b07\u8b1a\u8ae1\u8b16\u8b10\u8b17\u8b20\u8b33\u97ab\u8b26\u8b2b\u8b3e\u8b28\u8b41\u8b4c\u8b4f\u8b4e\u8b49\u8b56\u8b5b\u8b5a\u8b6b" ], [ "eca1", "\u8b5f\u8b6c\u8b6f\u8b74\u8b7d\u8b80\u8b8c\u8b8e\u8b92\u8b93\u8b96\u8b99\u8b9a\u8c3a\u8c41\u8c3f\u8c48\u8c4c\u8c4e\u8c50\u8c55\u8c62\u8c6c\u8c78\u8c7a\u8c82\u8c89\u8c85\u8c8a\u8c8d\u8c8e\u8c94\u8c7c\u8c98\u621d\u8cad\u8caa\u8cbd\u8cb2\u8cb3\u8cae\u8cb6\u8cc8\u8cc1\u8ce4\u8ce3\u8cda\u8cfd\u8cfa\u8cfb\u8d04\u8d05\u8d0a\u8d07\u8d0f\u8d0d\u8d10\u9f4e\u8d13\u8ccd\u8d14\u8d16\u8d67\u8d6d\u8d71\u8d73\u8d81\u8d99\u8dc2\u8dbe\u8dba\u8dcf\u8dda\u8dd6\u8dcc\u8ddb\u8dcb\u8dea\u8deb\u8ddf\u8de3\u8dfc\u8e08\u8e09\u8dff\u8e1d\u8e1e\u8e10\u8e1f\u8e42\u8e35\u8e30\u8e34\u8e4a" ], [ "eda1", "\u8e47\u8e49\u8e4c\u8e50\u8e48\u8e59\u8e64\u8e60\u8e2a\u8e63\u8e55\u8e76\u8e72\u8e7c\u8e81\u8e87\u8e85\u8e84\u8e8b\u8e8a\u8e93\u8e91\u8e94\u8e99\u8eaa\u8ea1\u8eac\u8eb0\u8ec6\u8eb1\u8ebe\u8ec5\u8ec8\u8ecb\u8edb\u8ee3\u8efc\u8efb\u8eeb\u8efe\u8f0a\u8f05\u8f15\u8f12\u8f19\u8f13\u8f1c\u8f1f\u8f1b\u8f0c\u8f26\u8f33\u8f3b\u8f39\u8f45\u8f42\u8f3e\u8f4c\u8f49\u8f46\u8f4e\u8f57\u8f5c\u8f62\u8f63\u8f64\u8f9c\u8f9f\u8fa3\u8fad\u8faf\u8fb7\u8fda\u8fe5\u8fe2\u8fea\u8fef\u9087\u8ff4\u9005\u8ff9\u8ffa\u9011\u9015\u9021\u900d\u901e\u9016\u900b\u9027\u9036\u9035\u9039\u8ff8" ], [ "eea1", "\u904f\u9050\u9051\u9052\u900e\u9049\u903e\u9056\u9058\u905e\u9068\u906f\u9076\u96a8\u9072\u9082\u907d\u9081\u9080\u908a\u9089\u908f\u90a8\u90af\u90b1\u90b5\u90e2\u90e4\u6248\u90db\u9102\u9112\u9119\u9132\u9130\u914a\u9156\u9158\u9163\u9165\u9169\u9173\u9172\u918b\u9189\u9182\u91a2\u91ab\u91af\u91aa\u91b5\u91b4\u91ba\u91c0\u91c1\u91c9\u91cb\u91d0\u91d6\u91df\u91e1\u91db\u91fc\u91f5\u91f6\u921e\u91ff\u9214\u922c\u9215\u9211\u925e\u9257\u9245\u9249\u9264\u9248\u9295\u923f\u924b\u9250\u929c\u9296\u9293\u929b\u925a\u92cf\u92b9\u92b7\u92e9\u930f\u92fa\u9344\u932e" ], [ "efa1", "\u9319\u9322\u931a\u9323\u933a\u9335\u933b\u935c\u9360\u937c\u936e\u9356\u93b0\u93ac\u93ad\u9394\u93b9\u93d6\u93d7\u93e8\u93e5\u93d8\u93c3\u93dd\u93d0\u93c8\u93e4\u941a\u9414\u9413\u9403\u9407\u9410\u9436\u942b\u9435\u9421\u943a\u9441\u9452\u9444\u945b\u9460\u9462\u945e\u946a\u9229\u9470\u9475\u9477\u947d\u945a\u947c\u947e\u9481\u947f\u9582\u9587\u958a\u9594\u9596\u9598\u9599\u95a0\u95a8\u95a7\u95ad\u95bc\u95bb\u95b9\u95be\u95ca\u6ff6\u95c3\u95cd\u95cc\u95d5\u95d4\u95d6\u95dc\u95e1\u95e5\u95e2\u9621\u9628\u962e\u962f\u9642\u964c\u964f\u964b\u9677\u965c\u965e" ], [ "f0a1", "\u965d\u965f\u9666\u9672\u966c\u968d\u9698\u9695\u9697\u96aa\u96a7\u96b1\u96b2\u96b0\u96b4\u96b6\u96b8\u96b9\u96ce\u96cb\u96c9\u96cd\u894d\u96dc\u970d\u96d5\u96f9\u9704\u9706\u9708\u9713\u970e\u9711\u970f\u9716\u9719\u9724\u972a\u9730\u9739\u973d\u973e\u9744\u9746\u9748\u9742\u9749\u975c\u9760\u9764\u9766\u9768\u52d2\u976b\u9771\u9779\u9785\u977c\u9781\u977a\u9786\u978b\u978f\u9790\u979c\u97a8\u97a6\u97a3\u97b3\u97b4\u97c3\u97c6\u97c8\u97cb\u97dc\u97ed\u9f4f\u97f2\u7adf\u97f6\u97f5\u980f\u980c\u9838\u9824\u9821\u9837\u983d\u9846\u984f\u984b\u986b\u986f\u9870" ], [ "f1a1", "\u9871\u9874\u9873\u98aa\u98af\u98b1\u98b6\u98c4\u98c3\u98c6\u98e9\u98eb\u9903\u9909\u9912\u9914\u9918\u9921\u991d\u991e\u9924\u9920\u992c\u992e\u993d\u993e\u9942\u9949\u9945\u9950\u994b\u9951\u9952\u994c\u9955\u9997\u9998\u99a5\u99ad\u99ae\u99bc\u99df\u99db\u99dd\u99d8\u99d1\u99ed\u99ee\u99f1\u99f2\u99fb\u99f8\u9a01\u9a0f\u9a05\u99e2\u9a19\u9a2b\u9a37\u9a45\u9a42\u9a40\u9a43\u9a3e\u9a55\u9a4d\u9a5b\u9a57\u9a5f\u9a62\u9a65\u9a64\u9a69\u9a6b\u9a6a\u9aad\u9ab0\u9abc\u9ac0\u9acf\u9ad1\u9ad3\u9ad4\u9ade\u9adf\u9ae2\u9ae3\u9ae6\u9aef\u9aeb\u9aee\u9af4\u9af1\u9af7" ], [ "f2a1", "\u9afb\u9b06\u9b18\u9b1a\u9b1f\u9b22\u9b23\u9b25\u9b27\u9b28\u9b29\u9b2a\u9b2e\u9b2f\u9b32\u9b44\u9b43\u9b4f\u9b4d\u9b4e\u9b51\u9b58\u9b74\u9b93\u9b83\u9b91\u9b96\u9b97\u9b9f\u9ba0\u9ba8\u9bb4\u9bc0\u9bca\u9bb9\u9bc6\u9bcf\u9bd1\u9bd2\u9be3\u9be2\u9be4\u9bd4\u9be1\u9c3a\u9bf2\u9bf1\u9bf0\u9c15\u9c14\u9c09\u9c13\u9c0c\u9c06\u9c08\u9c12\u9c0a\u9c04\u9c2e\u9c1b\u9c25\u9c24\u9c21\u9c30\u9c47\u9c32\u9c46\u9c3e\u9c5a\u9c60\u9c67\u9c76\u9c78\u9ce7\u9cec\u9cf0\u9d09\u9d08\u9ceb\u9d03\u9d06\u9d2a\u9d26\u9daf\u9d23\u9d1f\u9d44\u9d15\u9d12\u9d41\u9d3f\u9d3e\u9d46\u9d48" ], [ "f3a1", "\u9d5d\u9d5e\u9d64\u9d51\u9d50\u9d59\u9d72\u9d89\u9d87\u9dab\u9d6f\u9d7a\u9d9a\u9da4\u9da9\u9db2\u9dc4\u9dc1\u9dbb\u9db8\u9dba\u9dc6\u9dcf\u9dc2\u9dd9\u9dd3\u9df8\u9de6\u9ded\u9def\u9dfd\u9e1a\u9e1b\u9e1e\u9e75\u9e79\u9e7d\u9e81\u9e88\u9e8b\u9e8c\u9e92\u9e95\u9e91\u9e9d\u9ea5\u9ea9\u9eb8\u9eaa\u9ead\u9761\u9ecc\u9ece\u9ecf\u9ed0\u9ed4\u9edc\u9ede\u9edd\u9ee0\u9ee5\u9ee8\u9eef\u9ef4\u9ef6\u9ef7\u9ef9\u9efb\u9efc\u9efd\u9f07\u9f08\u76b7\u9f15\u9f21\u9f2c\u9f3e\u9f4a\u9f52\u9f54\u9f63\u9f5f\u9f60\u9f61\u9f66\u9f67\u9f6c\u9f6a\u9f77\u9f72\u9f76\u9f95\u9f9c\u9fa0" ], [ "f4a1", "\u582f\u69c7\u9059\u7464\u51dc\u7199" ], [ "f9a1", "\u7e8a\u891c\u9348\u9288\u84dc\u4fc9\u70bb\u6631\u68c8\u92f9\u66fb\u5f45\u4e28\u4ee1\u4efc\u4f00\u4f03\u4f39\u4f56\u4f92\u4f8a\u4f9a\u4f94\u4fcd\u5040\u5022\u4fff\u501e\u5046\u5070\u5042\u5094\u50f4\u50d8\u514a\u5164\u519d\u51be\u51ec\u5215\u529c\u52a6\u52c0\u52db\u5300\u5307\u5324\u5372\u5393\u53b2\u53dd\ufa0e\u549c\u548a\u54a9\u54ff\u5586\u5759\u5765\u57ac\u57c8\u57c7\ufa0f\ufa10\u589e\u58b2\u590b\u5953\u595b\u595d\u5963\u59a4\u59ba\u5b56\u5bc0\u752f\u5bd8\u5bec\u5c1e\u5ca6\u5cba\u5cf5\u5d27\u5d53\ufa11\u5d42\u5d6d\u5db8\u5db9\u5dd0\u5f21\u5f34\u5f67\u5fb7" ], [ "faa1", "\u5fde\u605d\u6085\u608a\u60de\u60d5\u6120\u60f2\u6111\u6137\u6130\u6198\u6213\u62a6\u63f5\u6460\u649d\u64ce\u654e\u6600\u6615\u663b\u6609\u662e\u661e\u6624\u6665\u6657\u6659\ufa12\u6673\u6699\u66a0\u66b2\u66bf\u66fa\u670e\uf929\u6766\u67bb\u6852\u67c0\u6801\u6844\u68cf\ufa13\u6968\ufa14\u6998\u69e2\u6a30\u6a6b\u6a46\u6a73\u6a7e\u6ae2\u6ae4\u6bd6\u6c3f\u6c5c\u6c86\u6c6f\u6cda\u6d04\u6d87\u6d6f\u6d96\u6dac\u6dcf\u6df8\u6df2\u6dfc\u6e39\u6e5c\u6e27\u6e3c\u6ebf\u6f88\u6fb5\u6ff5\u7005\u7007\u7028\u7085\u70ab\u710f\u7104\u715c\u7146\u7147\ufa15\u71c1\u71fe\u72b1" ], [ "fba1", "\u72be\u7324\ufa16\u7377\u73bd\u73c9\u73d6\u73e3\u73d2\u7407\u73f5\u7426\u742a\u7429\u742e\u7462\u7489\u749f\u7501\u756f\u7682\u769c\u769e\u769b\u76a6\ufa17\u7746\u52af\u7821\u784e\u7864\u787a\u7930\ufa18\ufa19\ufa1a\u7994\ufa1b\u799b\u7ad1\u7ae7\ufa1c\u7aeb\u7b9e\ufa1d\u7d48\u7d5c\u7db7\u7da0\u7dd6\u7e52\u7f47\u7fa1\ufa1e\u8301\u8362\u837f\u83c7\u83f6\u8448\u84b4\u8553\u8559\u856b\ufa1f\u85b0\ufa20\ufa21\u8807\u88f5\u8a12\u8a37\u8a79\u8aa7\u8abe\u8adf\ufa22\u8af6\u8b53\u8b7f\u8cf0\u8cf4\u8d12\u8d76\ufa23\u8ecf\ufa24\ufa25\u9067\u90de\ufa26\u9115\u9127\u91da" ], [ "fca1", "\u91d7\u91de\u91ed\u91ee\u91e4\u91e5\u9206\u9210\u920a\u923a\u9240\u923c\u924e\u9259\u9251\u9239\u9267\u92a7\u9277\u9278\u92e7\u92d7\u92d9\u92d0\ufa27\u92d5\u92e0\u92d3\u9325\u9321\u92fb\ufa28\u931e\u92ff\u931d\u9302\u9370\u9357\u93a4\u93c6\u93de\u93f8\u9431\u9445\u9448\u9592\uf9dc\ufa29\u969d\u96af\u9733\u973b\u9743\u974d\u974f\u9751\u9755\u9857\u9865\ufa2a\ufa2b\u9927\ufa2c\u999e\u9a4e\u9ad9\u9adc\u9b75\u9b72\u9b8f\u9bb1\u9bbb\u9c00\u9d70\u9d6b\ufa2d\u9e19\u9ed1" ], [ "fcf1", "\u2170", 9, "\uffe2\uffe4\uff07\uff02" ], [ "8fa2af", "\u02d8\u02c7\xb8\u02d9\u02dd\xaf\u02db\u02da\uff5e\u0384\u0385" ], [ "8fa2c2", "\xa1\xa6\xbf" ], [ "8fa2eb", "\xba\xaa\xa9\xae\u2122\xa4\u2116" ], [ "8fa6e1", "\u0386\u0388\u0389\u038a\u03aa" ], [ "8fa6e7", "\u038c" ], [ "8fa6e9", "\u038e\u03ab" ], [ "8fa6ec", "\u038f" ], [ "8fa6f1", "\u03ac\u03ad\u03ae\u03af\u03ca\u0390\u03cc\u03c2\u03cd\u03cb\u03b0\u03ce" ], [ "8fa7c2", "\u0402", 10, "\u040e\u040f" ], [ "8fa7f2", "\u0452", 10, "\u045e\u045f" ], [ "8fa9a1", "\xc6\u0110" ], [ "8fa9a4", "\u0126" ], [ "8fa9a6", "\u0132" ], [ "8fa9a8", "\u0141\u013f" ], [ "8fa9ab", "\u014a\xd8\u0152" ], [ "8fa9af", "\u0166\xde" ], [ "8fa9c1", "\xe6\u0111\xf0\u0127\u0131\u0133\u0138\u0142\u0140\u0149\u014b\xf8\u0153\xdf\u0167\xfe" ], [ "8faaa1", "\xc1\xc0\xc4\xc2\u0102\u01cd\u0100\u0104\xc5\xc3\u0106\u0108\u010c\xc7\u010a\u010e\xc9\xc8\xcb\xca\u011a\u0116\u0112\u0118" ], [ "8faaba", "\u011c\u011e\u0122\u0120\u0124\xcd\xcc\xcf\xce\u01cf\u0130\u012a\u012e\u0128\u0134\u0136\u0139\u013d\u013b\u0143\u0147\u0145\xd1\xd3\xd2\xd6\xd4\u01d1\u0150\u014c\xd5\u0154\u0158\u0156\u015a\u015c\u0160\u015e\u0164\u0162\xda\xd9\xdc\xdb\u016c\u01d3\u0170\u016a\u0172\u016e\u0168\u01d7\u01db\u01d9\u01d5\u0174\xdd\u0178\u0176\u0179\u017d\u017b" ], [ "8faba1", "\xe1\xe0\xe4\xe2\u0103\u01ce\u0101\u0105\xe5\xe3\u0107\u0109\u010d\xe7\u010b\u010f\xe9\xe8\xeb\xea\u011b\u0117\u0113\u0119\u01f5\u011d\u011f" ], [ "8fabbd", "\u0121\u0125\xed\xec\xef\xee\u01d0" ], [ "8fabc5", "\u012b\u012f\u0129\u0135\u0137\u013a\u013e\u013c\u0144\u0148\u0146\xf1\xf3\xf2\xf6\xf4\u01d2\u0151\u014d\xf5\u0155\u0159\u0157\u015b\u015d\u0161\u015f\u0165\u0163\xfa\xf9\xfc\xfb\u016d\u01d4\u0171\u016b\u0173\u016f\u0169\u01d8\u01dc\u01da\u01d6\u0175\xfd\xff\u0177\u017a\u017e\u017c" ], [ "8fb0a1", "\u4e02\u4e04\u4e05\u4e0c\u4e12\u4e1f\u4e23\u4e24\u4e28\u4e2b\u4e2e\u4e2f\u4e30\u4e35\u4e40\u4e41\u4e44\u4e47\u4e51\u4e5a\u4e5c\u4e63\u4e68\u4e69\u4e74\u4e75\u4e79\u4e7f\u4e8d\u4e96\u4e97\u4e9d\u4eaf\u4eb9\u4ec3\u4ed0\u4eda\u4edb\u4ee0\u4ee1\u4ee2\u4ee8\u4eef\u4ef1\u4ef3\u4ef5\u4efd\u4efe\u4eff\u4f00\u4f02\u4f03\u4f08\u4f0b\u4f0c\u4f12\u4f15\u4f16\u4f17\u4f19\u4f2e\u4f31\u4f60\u4f33\u4f35\u4f37\u4f39\u4f3b\u4f3e\u4f40\u4f42\u4f48\u4f49\u4f4b\u4f4c\u4f52\u4f54\u4f56\u4f58\u4f5f\u4f63\u4f6a\u4f6c\u4f6e\u4f71\u4f77\u4f78\u4f79\u4f7a\u4f7d\u4f7e\u4f81\u4f82\u4f84" ], [ "8fb1a1", "\u4f85\u4f89\u4f8a\u4f8c\u4f8e\u4f90\u4f92\u4f93\u4f94\u4f97\u4f99\u4f9a\u4f9e\u4f9f\u4fb2\u4fb7\u4fb9\u4fbb\u4fbc\u4fbd\u4fbe\u4fc0\u4fc1\u4fc5\u4fc6\u4fc8\u4fc9\u4fcb\u4fcc\u4fcd\u4fcf\u4fd2\u4fdc\u4fe0\u4fe2\u4ff0\u4ff2\u4ffc\u4ffd\u4fff\u5000\u5001\u5004\u5007\u500a\u500c\u500e\u5010\u5013\u5017\u5018\u501b\u501c\u501d\u501e\u5022\u5027\u502e\u5030\u5032\u5033\u5035\u5040\u5041\u5042\u5045\u5046\u504a\u504c\u504e\u5051\u5052\u5053\u5057\u5059\u505f\u5060\u5062\u5063\u5066\u5067\u506a\u506d\u5070\u5071\u503b\u5081\u5083\u5084\u5086\u508a\u508e\u508f\u5090" ], [ "8fb2a1", "\u5092\u5093\u5094\u5096\u509b\u509c\u509e", 4, "\u50aa\u50af\u50b0\u50b9\u50ba\u50bd\u50c0\u50c3\u50c4\u50c7\u50cc\u50ce\u50d0\u50d3\u50d4\u50d8\u50dc\u50dd\u50df\u50e2\u50e4\u50e6\u50e8\u50e9\u50ef\u50f1\u50f6\u50fa\u50fe\u5103\u5106\u5107\u5108\u510b\u510c\u510d\u510e\u50f2\u5110\u5117\u5119\u511b\u511c\u511d\u511e\u5123\u5127\u5128\u512c\u512d\u512f\u5131\u5133\u5134\u5135\u5138\u5139\u5142\u514a\u514f\u5153\u5155\u5157\u5158\u515f\u5164\u5166\u517e\u5183\u5184\u518b\u518e\u5198\u519d\u51a1\u51a3\u51ad\u51b8\u51ba\u51bc\u51be\u51bf\u51c2" ], [ "8fb3a1", "\u51c8\u51cf\u51d1\u51d2\u51d3\u51d5\u51d8\u51de\u51e2\u51e5\u51ee\u51f2\u51f3\u51f4\u51f7\u5201\u5202\u5205\u5212\u5213\u5215\u5216\u5218\u5222\u5228\u5231\u5232\u5235\u523c\u5245\u5249\u5255\u5257\u5258\u525a\u525c\u525f\u5260\u5261\u5266\u526e\u5277\u5278\u5279\u5280\u5282\u5285\u528a\u528c\u5293\u5295\u5296\u5297\u5298\u529a\u529c\u52a4\u52a5\u52a6\u52a7\u52af\u52b0\u52b6\u52b7\u52b8\u52ba\u52bb\u52bd\u52c0\u52c4\u52c6\u52c8\u52cc\u52cf\u52d1\u52d4\u52d6\u52db\u52dc\u52e1\u52e5\u52e8\u52e9\u52ea\u52ec\u52f0\u52f1\u52f4\u52f6\u52f7\u5300\u5303\u530a\u530b" ], [ "8fb4a1", "\u530c\u5311\u5313\u5318\u531b\u531c\u531e\u531f\u5325\u5327\u5328\u5329\u532b\u532c\u532d\u5330\u5332\u5335\u533c\u533d\u533e\u5342\u534c\u534b\u5359\u535b\u5361\u5363\u5365\u536c\u536d\u5372\u5379\u537e\u5383\u5387\u5388\u538e\u5393\u5394\u5399\u539d\u53a1\u53a4\u53aa\u53ab\u53af\u53b2\u53b4\u53b5\u53b7\u53b8\u53ba\u53bd\u53c0\u53c5\u53cf\u53d2\u53d3\u53d5\u53da\u53dd\u53de\u53e0\u53e6\u53e7\u53f5\u5402\u5413\u541a\u5421\u5427\u5428\u542a\u542f\u5431\u5434\u5435\u5443\u5444\u5447\u544d\u544f\u545e\u5462\u5464\u5466\u5467\u5469\u546b\u546d\u546e\u5474\u547f" ], [ "8fb5a1", "\u5481\u5483\u5485\u5488\u5489\u548d\u5491\u5495\u5496\u549c\u549f\u54a1\u54a6\u54a7\u54a9\u54aa\u54ad\u54ae\u54b1\u54b7\u54b9\u54ba\u54bb\u54bf\u54c6\u54ca\u54cd\u54ce\u54e0\u54ea\u54ec\u54ef\u54f6\u54fc\u54fe\u54ff\u5500\u5501\u5505\u5508\u5509\u550c\u550d\u550e\u5515\u552a\u552b\u5532\u5535\u5536\u553b\u553c\u553d\u5541\u5547\u5549\u554a\u554d\u5550\u5551\u5558\u555a\u555b\u555e\u5560\u5561\u5564\u5566\u557f\u5581\u5582\u5586\u5588\u558e\u558f\u5591\u5592\u5593\u5594\u5597\u55a3\u55a4\u55ad\u55b2\u55bf\u55c1\u55c3\u55c6\u55c9\u55cb\u55cc\u55ce\u55d1\u55d2" ], [ "8fb6a1", "\u55d3\u55d7\u55d8\u55db\u55de\u55e2\u55e9\u55f6\u55ff\u5605\u5608\u560a\u560d", 5, "\u5619\u562c\u5630\u5633\u5635\u5637\u5639\u563b\u563c\u563d\u563f\u5640\u5641\u5643\u5644\u5646\u5649\u564b\u564d\u564f\u5654\u565e\u5660\u5661\u5662\u5663\u5666\u5669\u566d\u566f\u5671\u5672\u5675\u5684\u5685\u5688\u568b\u568c\u5695\u5699\u569a\u569d\u569e\u569f\u56a6\u56a7\u56a8\u56a9\u56ab\u56ac\u56ad\u56b1\u56b3\u56b7\u56be\u56c5\u56c9\u56ca\u56cb\u56cf\u56d0\u56cc\u56cd\u56d9\u56dc\u56dd\u56df\u56e1\u56e4", 4, "\u56f1\u56eb\u56ed" ], [ "8fb7a1", "\u56f6\u56f7\u5701\u5702\u5707\u570a\u570c\u5711\u5715\u571a\u571b\u571d\u5720\u5722\u5723\u5724\u5725\u5729\u572a\u572c\u572e\u572f\u5733\u5734\u573d\u573e\u573f\u5745\u5746\u574c\u574d\u5752\u5762\u5765\u5767\u5768\u576b\u576d", 4, "\u5773\u5774\u5775\u5777\u5779\u577a\u577b\u577c\u577e\u5781\u5783\u578c\u5794\u5797\u5799\u579a\u579c\u579d\u579e\u579f\u57a1\u5795\u57a7\u57a8\u57a9\u57ac\u57b8\u57bd\u57c7\u57c8\u57cc\u57cf\u57d5\u57dd\u57de\u57e4\u57e6\u57e7\u57e9\u57ed\u57f0\u57f5\u57f6\u57f8\u57fd\u57fe\u57ff\u5803\u5804\u5808\u5809\u57e1" ], [ "8fb8a1", "\u580c\u580d\u581b\u581e\u581f\u5820\u5826\u5827\u582d\u5832\u5839\u583f\u5849\u584c\u584d\u584f\u5850\u5855\u585f\u5861\u5864\u5867\u5868\u5878\u587c\u587f\u5880\u5881\u5887\u5888\u5889\u588a\u588c\u588d\u588f\u5890\u5894\u5896\u589d\u58a0\u58a1\u58a2\u58a6\u58a9\u58b1\u58b2\u58c4\u58bc\u58c2\u58c8\u58cd\u58ce\u58d0\u58d2\u58d4\u58d6\u58da\u58dd\u58e1\u58e2\u58e9\u58f3\u5905\u5906\u590b\u590c\u5912\u5913\u5914\u8641\u591d\u5921\u5923\u5924\u5928\u592f\u5930\u5933\u5935\u5936\u593f\u5943\u5946\u5952\u5953\u5959\u595b\u595d\u595e\u595f\u5961\u5963\u596b\u596d" ], [ "8fb9a1", "\u596f\u5972\u5975\u5976\u5979\u597b\u597c\u598b\u598c\u598e\u5992\u5995\u5997\u599f\u59a4\u59a7\u59ad\u59ae\u59af\u59b0\u59b3\u59b7\u59ba\u59bc\u59c1\u59c3\u59c4\u59c8\u59ca\u59cd\u59d2\u59dd\u59de\u59df\u59e3\u59e4\u59e7\u59ee\u59ef\u59f1\u59f2\u59f4\u59f7\u5a00\u5a04\u5a0c\u5a0d\u5a0e\u5a12\u5a13\u5a1e\u5a23\u5a24\u5a27\u5a28\u5a2a\u5a2d\u5a30\u5a44\u5a45\u5a47\u5a48\u5a4c\u5a50\u5a55\u5a5e\u5a63\u5a65\u5a67\u5a6d\u5a77\u5a7a\u5a7b\u5a7e\u5a8b\u5a90\u5a93\u5a96\u5a99\u5a9c\u5a9e\u5a9f\u5aa0\u5aa2\u5aa7\u5aac\u5ab1\u5ab2\u5ab3\u5ab5\u5ab8\u5aba\u5abb\u5abf" ], [ "8fbaa1", "\u5ac4\u5ac6\u5ac8\u5acf\u5ada\u5adc\u5ae0\u5ae5\u5aea\u5aee\u5af5\u5af6\u5afd\u5b00\u5b01\u5b08\u5b17\u5b34\u5b19\u5b1b\u5b1d\u5b21\u5b25\u5b2d\u5b38\u5b41\u5b4b\u5b4c\u5b52\u5b56\u5b5e\u5b68\u5b6e\u5b6f\u5b7c\u5b7d\u5b7e\u5b7f\u5b81\u5b84\u5b86\u5b8a\u5b8e\u5b90\u5b91\u5b93\u5b94\u5b96\u5ba8\u5ba9\u5bac\u5bad\u5baf\u5bb1\u5bb2\u5bb7\u5bba\u5bbc\u5bc0\u5bc1\u5bcd\u5bcf\u5bd6", 4, "\u5be0\u5bef\u5bf1\u5bf4\u5bfd\u5c0c\u5c17\u5c1e\u5c1f\u5c23\u5c26\u5c29\u5c2b\u5c2c\u5c2e\u5c30\u5c32\u5c35\u5c36\u5c59\u5c5a\u5c5c\u5c62\u5c63\u5c67\u5c68\u5c69" ], [ "8fbba1", "\u5c6d\u5c70\u5c74\u5c75\u5c7a\u5c7b\u5c7c\u5c7d\u5c87\u5c88\u5c8a\u5c8f\u5c92\u5c9d\u5c9f\u5ca0\u5ca2\u5ca3\u5ca6\u5caa\u5cb2\u5cb4\u5cb5\u5cba\u5cc9\u5ccb\u5cd2\u5cdd\u5cd7\u5cee\u5cf1\u5cf2\u5cf4\u5d01\u5d06\u5d0d\u5d12\u5d2b\u5d23\u5d24\u5d26\u5d27\u5d31\u5d34\u5d39\u5d3d\u5d3f\u5d42\u5d43\u5d46\u5d48\u5d55\u5d51\u5d59\u5d4a\u5d5f\u5d60\u5d61\u5d62\u5d64\u5d6a\u5d6d\u5d70\u5d79\u5d7a\u5d7e\u5d7f\u5d81\u5d83\u5d88\u5d8a\u5d92\u5d93\u5d94\u5d95\u5d99\u5d9b\u5d9f\u5da0\u5da7\u5dab\u5db0\u5db4\u5db8\u5db9\u5dc3\u5dc7\u5dcb\u5dd0\u5dce\u5dd8\u5dd9\u5de0\u5de4" ], [ "8fbca1", "\u5de9\u5df8\u5df9\u5e00\u5e07\u5e0d\u5e12\u5e14\u5e15\u5e18\u5e1f\u5e20\u5e2e\u5e28\u5e32\u5e35\u5e3e\u5e4b\u5e50\u5e49\u5e51\u5e56\u5e58\u5e5b\u5e5c\u5e5e\u5e68\u5e6a", 4, "\u5e70\u5e80\u5e8b\u5e8e\u5ea2\u5ea4\u5ea5\u5ea8\u5eaa\u5eac\u5eb1\u5eb3\u5ebd\u5ebe\u5ebf\u5ec6\u5ecc\u5ecb\u5ece\u5ed1\u5ed2\u5ed4\u5ed5\u5edc\u5ede\u5ee5\u5eeb\u5f02\u5f06\u5f07\u5f08\u5f0e\u5f19\u5f1c\u5f1d\u5f21\u5f22\u5f23\u5f24\u5f28\u5f2b\u5f2c\u5f2e\u5f30\u5f34\u5f36\u5f3b\u5f3d\u5f3f\u5f40\u5f44\u5f45\u5f47\u5f4d\u5f50\u5f54\u5f58\u5f5b\u5f60\u5f63\u5f64\u5f67" ], [ "8fbda1", "\u5f6f\u5f72\u5f74\u5f75\u5f78\u5f7a\u5f7d\u5f7e\u5f89\u5f8d\u5f8f\u5f96\u5f9c\u5f9d\u5fa2\u5fa7\u5fab\u5fa4\u5fac\u5faf\u5fb0\u5fb1\u5fb8\u5fc4\u5fc7\u5fc8\u5fc9\u5fcb\u5fd0", 4, "\u5fde\u5fe1\u5fe2\u5fe8\u5fe9\u5fea\u5fec\u5fed\u5fee\u5fef\u5ff2\u5ff3\u5ff6\u5ffa\u5ffc\u6007\u600a\u600d\u6013\u6014\u6017\u6018\u601a\u601f\u6024\u602d\u6033\u6035\u6040\u6047\u6048\u6049\u604c\u6051\u6054\u6056\u6057\u605d\u6061\u6067\u6071\u607e\u607f\u6082\u6086\u6088\u608a\u608e\u6091\u6093\u6095\u6098\u609d\u609e\u60a2\u60a4\u60a5\u60a8\u60b0\u60b1\u60b7" ], [ "8fbea1", "\u60bb\u60be\u60c2\u60c4\u60c8\u60c9\u60ca\u60cb\u60ce\u60cf\u60d4\u60d5\u60d9\u60db\u60dd\u60de\u60e2\u60e5\u60f2\u60f5\u60f8\u60fc\u60fd\u6102\u6107\u610a\u610c\u6110", 4, "\u6116\u6117\u6119\u611c\u611e\u6122\u612a\u612b\u6130\u6131\u6135\u6136\u6137\u6139\u6141\u6145\u6146\u6149\u615e\u6160\u616c\u6172\u6178\u617b\u617c\u617f\u6180\u6181\u6183\u6184\u618b\u618d\u6192\u6193\u6197\u6198\u619c\u619d\u619f\u61a0\u61a5\u61a8\u61aa\u61ad\u61b8\u61b9\u61bc\u61c0\u61c1\u61c2\u61ce\u61cf\u61d5\u61dc\u61dd\u61de\u61df\u61e1\u61e2\u61e7\u61e9\u61e5" ], [ "8fbfa1", "\u61ec\u61ed\u61ef\u6201\u6203\u6204\u6207\u6213\u6215\u621c\u6220\u6222\u6223\u6227\u6229\u622b\u6239\u623d\u6242\u6243\u6244\u6246\u624c\u6250\u6251\u6252\u6254\u6256\u625a\u625c\u6264\u626d\u626f\u6273\u627a\u627d\u628d\u628e\u628f\u6290\u62a6\u62a8\u62b3\u62b6\u62b7\u62ba\u62be\u62bf\u62c4\u62ce\u62d5\u62d6\u62da\u62ea\u62f2\u62f4\u62fc\u62fd\u6303\u6304\u630a\u630b\u630d\u6310\u6313\u6316\u6318\u6329\u632a\u632d\u6335\u6336\u6339\u633c\u6341\u6342\u6343\u6344\u6346\u634a\u634b\u634e\u6352\u6353\u6354\u6358\u635b\u6365\u6366\u636c\u636d\u6371\u6374\u6375" ], [ "8fc0a1", "\u6378\u637c\u637d\u637f\u6382\u6384\u6387\u638a\u6390\u6394\u6395\u6399\u639a\u639e\u63a4\u63a6\u63ad\u63ae\u63af\u63bd\u63c1\u63c5\u63c8\u63ce\u63d1\u63d3\u63d4\u63d5\u63dc\u63e0\u63e5\u63ea\u63ec\u63f2\u63f3\u63f5\u63f8\u63f9\u6409\u640a\u6410\u6412\u6414\u6418\u641e\u6420\u6422\u6424\u6425\u6429\u642a\u642f\u6430\u6435\u643d\u643f\u644b\u644f\u6451\u6452\u6453\u6454\u645a\u645b\u645c\u645d\u645f\u6460\u6461\u6463\u646d\u6473\u6474\u647b\u647d\u6485\u6487\u648f\u6490\u6491\u6498\u6499\u649b\u649d\u649f\u64a1\u64a3\u64a6\u64a8\u64ac\u64b3\u64bd\u64be\u64bf" ], [ "8fc1a1", "\u64c4\u64c9\u64ca\u64cb\u64cc\u64ce\u64d0\u64d1\u64d5\u64d7\u64e4\u64e5\u64e9\u64ea\u64ed\u64f0\u64f5\u64f7\u64fb\u64ff\u6501\u6504\u6508\u6509\u650a\u650f\u6513\u6514\u6516\u6519\u651b\u651e\u651f\u6522\u6526\u6529\u652e\u6531\u653a\u653c\u653d\u6543\u6547\u6549\u6550\u6552\u6554\u655f\u6560\u6567\u656b\u657a\u657d\u6581\u6585\u658a\u6592\u6595\u6598\u659d\u65a0\u65a3\u65a6\u65ae\u65b2\u65b3\u65b4\u65bf\u65c2\u65c8\u65c9\u65ce\u65d0\u65d4\u65d6\u65d8\u65df\u65f0\u65f2\u65f4\u65f5\u65f9\u65fe\u65ff\u6600\u6604\u6608\u6609\u660d\u6611\u6612\u6615\u6616\u661d" ], [ "8fc2a1", "\u661e\u6621\u6622\u6623\u6624\u6626\u6629\u662a\u662b\u662c\u662e\u6630\u6631\u6633\u6639\u6637\u6640\u6645\u6646\u664a\u664c\u6651\u664e\u6657\u6658\u6659\u665b\u665c\u6660\u6661\u66fb\u666a\u666b\u666c\u667e\u6673\u6675\u667f\u6677\u6678\u6679\u667b\u6680\u667c\u668b\u668c\u668d\u6690\u6692\u6699\u669a\u669b\u669c\u669f\u66a0\u66a4\u66ad\u66b1\u66b2\u66b5\u66bb\u66bf\u66c0\u66c2\u66c3\u66c8\u66cc\u66ce\u66cf\u66d4\u66db\u66df\u66e8\u66eb\u66ec\u66ee\u66fa\u6705\u6707\u670e\u6713\u6719\u671c\u6720\u6722\u6733\u673e\u6745\u6747\u6748\u674c\u6754\u6755\u675d" ], [ "8fc3a1", "\u6766\u676c\u676e\u6774\u6776\u677b\u6781\u6784\u678e\u678f\u6791\u6793\u6796\u6798\u6799\u679b\u67b0\u67b1\u67b2\u67b5\u67bb\u67bc\u67bd\u67f9\u67c0\u67c2\u67c3\u67c5\u67c8\u67c9\u67d2\u67d7\u67d9\u67dc\u67e1\u67e6\u67f0\u67f2\u67f6\u67f7\u6852\u6814\u6819\u681d\u681f\u6828\u6827\u682c\u682d\u682f\u6830\u6831\u6833\u683b\u683f\u6844\u6845\u684a\u684c\u6855\u6857\u6858\u685b\u686b\u686e", 4, "\u6875\u6879\u687a\u687b\u687c\u6882\u6884\u6886\u6888\u6896\u6898\u689a\u689c\u68a1\u68a3\u68a5\u68a9\u68aa\u68ae\u68b2\u68bb\u68c5\u68c8\u68cc\u68cf" ], [ "8fc4a1", "\u68d0\u68d1\u68d3\u68d6\u68d9\u68dc\u68dd\u68e5\u68e8\u68ea\u68eb\u68ec\u68ed\u68f0\u68f1\u68f5\u68f6\u68fb\u68fc\u68fd\u6906\u6909\u690a\u6910\u6911\u6913\u6916\u6917\u6931\u6933\u6935\u6938\u693b\u6942\u6945\u6949\u694e\u6957\u695b\u6963\u6964\u6965\u6966\u6968\u6969\u696c\u6970\u6971\u6972\u697a\u697b\u697f\u6980\u698d\u6992\u6996\u6998\u69a1\u69a5\u69a6\u69a8\u69ab\u69ad\u69af\u69b7\u69b8\u69ba\u69bc\u69c5\u69c8\u69d1\u69d6\u69d7\u69e2\u69e5\u69ee\u69ef\u69f1\u69f3\u69f5\u69fe\u6a00\u6a01\u6a03\u6a0f\u6a11\u6a15\u6a1a\u6a1d\u6a20\u6a24\u6a28\u6a30\u6a32" ], [ "8fc5a1", "\u6a34\u6a37\u6a3b\u6a3e\u6a3f\u6a45\u6a46\u6a49\u6a4a\u6a4e\u6a50\u6a51\u6a52\u6a55\u6a56\u6a5b\u6a64\u6a67\u6a6a\u6a71\u6a73\u6a7e\u6a81\u6a83\u6a86\u6a87\u6a89\u6a8b\u6a91\u6a9b\u6a9d\u6a9e\u6a9f\u6aa5\u6aab\u6aaf\u6ab0\u6ab1\u6ab4\u6abd\u6abe\u6abf\u6ac6\u6ac9\u6ac8\u6acc\u6ad0\u6ad4\u6ad5\u6ad6\u6adc\u6add\u6ae4\u6ae7\u6aec\u6af0\u6af1\u6af2\u6afc\u6afd\u6b02\u6b03\u6b06\u6b07\u6b09\u6b0f\u6b10\u6b11\u6b17\u6b1b\u6b1e\u6b24\u6b28\u6b2b\u6b2c\u6b2f\u6b35\u6b36\u6b3b\u6b3f\u6b46\u6b4a\u6b4d\u6b52\u6b56\u6b58\u6b5d\u6b60\u6b67\u6b6b\u6b6e\u6b70\u6b75\u6b7d" ], [ "8fc6a1", "\u6b7e\u6b82\u6b85\u6b97\u6b9b\u6b9f\u6ba0\u6ba2\u6ba3\u6ba8\u6ba9\u6bac\u6bad\u6bae\u6bb0\u6bb8\u6bb9\u6bbd\u6bbe\u6bc3\u6bc4\u6bc9\u6bcc\u6bd6\u6bda\u6be1\u6be3\u6be6\u6be7\u6bee\u6bf1\u6bf7\u6bf9\u6bff\u6c02\u6c04\u6c05\u6c09\u6c0d\u6c0e\u6c10\u6c12\u6c19\u6c1f\u6c26\u6c27\u6c28\u6c2c\u6c2e\u6c33\u6c35\u6c36\u6c3a\u6c3b\u6c3f\u6c4a\u6c4b\u6c4d\u6c4f\u6c52\u6c54\u6c59\u6c5b\u6c5c\u6c6b\u6c6d\u6c6f\u6c74\u6c76\u6c78\u6c79\u6c7b\u6c85\u6c86\u6c87\u6c89\u6c94\u6c95\u6c97\u6c98\u6c9c\u6c9f\u6cb0\u6cb2\u6cb4\u6cc2\u6cc6\u6ccd\u6ccf\u6cd0\u6cd1\u6cd2\u6cd4\u6cd6" ], [ "8fc7a1", "\u6cda\u6cdc\u6ce0\u6ce7\u6ce9\u6ceb\u6cec\u6cee\u6cf2\u6cf4\u6d04\u6d07\u6d0a\u6d0e\u6d0f\u6d11\u6d13\u6d1a\u6d26\u6d27\u6d28\u6c67\u6d2e\u6d2f\u6d31\u6d39\u6d3c\u6d3f\u6d57\u6d5e\u6d5f\u6d61\u6d65\u6d67\u6d6f\u6d70\u6d7c\u6d82\u6d87\u6d91\u6d92\u6d94\u6d96\u6d97\u6d98\u6daa\u6dac\u6db4\u6db7\u6db9\u6dbd\u6dbf\u6dc4\u6dc8\u6dca\u6dce\u6dcf\u6dd6\u6ddb\u6ddd\u6ddf\u6de0\u6de2\u6de5\u6de9\u6def\u6df0\u6df4\u6df6\u6dfc\u6e00\u6e04\u6e1e\u6e22\u6e27\u6e32\u6e36\u6e39\u6e3b\u6e3c\u6e44\u6e45\u6e48\u6e49\u6e4b\u6e4f\u6e51\u6e52\u6e53\u6e54\u6e57\u6e5c\u6e5d\u6e5e" ], [ "8fc8a1", "\u6e62\u6e63\u6e68\u6e73\u6e7b\u6e7d\u6e8d\u6e93\u6e99\u6ea0\u6ea7\u6ead\u6eae\u6eb1\u6eb3\u6ebb\u6ebf\u6ec0\u6ec1\u6ec3\u6ec7\u6ec8\u6eca\u6ecd\u6ece\u6ecf\u6eeb\u6eed\u6eee\u6ef9\u6efb\u6efd\u6f04\u6f08\u6f0a\u6f0c\u6f0d\u6f16\u6f18\u6f1a\u6f1b\u6f26\u6f29\u6f2a\u6f2f\u6f30\u6f33\u6f36\u6f3b\u6f3c\u6f2d\u6f4f\u6f51\u6f52\u6f53\u6f57\u6f59\u6f5a\u6f5d\u6f5e\u6f61\u6f62\u6f68\u6f6c\u6f7d\u6f7e\u6f83\u6f87\u6f88\u6f8b\u6f8c\u6f8d\u6f90\u6f92\u6f93\u6f94\u6f96\u6f9a\u6f9f\u6fa0\u6fa5\u6fa6\u6fa7\u6fa8\u6fae\u6faf\u6fb0\u6fb5\u6fb6\u6fbc\u6fc5\u6fc7\u6fc8\u6fca" ], [ "8fc9a1", "\u6fda\u6fde\u6fe8\u6fe9\u6ff0\u6ff5\u6ff9\u6ffc\u6ffd\u7000\u7005\u7006\u7007\u700d\u7017\u7020\u7023\u702f\u7034\u7037\u7039\u703c\u7043\u7044\u7048\u7049\u704a\u704b\u7054\u7055\u705d\u705e\u704e\u7064\u7065\u706c\u706e\u7075\u7076\u707e\u7081\u7085\u7086\u7094", 4, "\u709b\u70a4\u70ab\u70b0\u70b1\u70b4\u70b7\u70ca\u70d1\u70d3\u70d4\u70d5\u70d6\u70d8\u70dc\u70e4\u70fa\u7103", 4, "\u710b\u710c\u710f\u711e\u7120\u712b\u712d\u712f\u7130\u7131\u7138\u7141\u7145\u7146\u7147\u714a\u714b\u7150\u7152\u7157\u715a\u715c\u715e\u7160" ], [ "8fcaa1", "\u7168\u7179\u7180\u7185\u7187\u718c\u7192\u719a\u719b\u71a0\u71a2\u71af\u71b0\u71b2\u71b3\u71ba\u71bf\u71c0\u71c1\u71c4\u71cb\u71cc\u71d3\u71d6\u71d9\u71da\u71dc\u71f8\u71fe\u7200\u7207\u7208\u7209\u7213\u7217\u721a\u721d\u721f\u7224\u722b\u722f\u7234\u7238\u7239\u7241\u7242\u7243\u7245\u724e\u724f\u7250\u7253\u7255\u7256\u725a\u725c\u725e\u7260\u7263\u7268\u726b\u726e\u726f\u7271\u7277\u7278\u727b\u727c\u727f\u7284\u7289\u728d\u728e\u7293\u729b\u72a8\u72ad\u72ae\u72b1\u72b4\u72be\u72c1\u72c7\u72c9\u72cc\u72d5\u72d6\u72d8\u72df\u72e5\u72f3\u72f4\u72fa\u72fb" ], [ "8fcba1", "\u72fe\u7302\u7304\u7305\u7307\u730b\u730d\u7312\u7313\u7318\u7319\u731e\u7322\u7324\u7327\u7328\u732c\u7331\u7332\u7335\u733a\u733b\u733d\u7343\u734d\u7350\u7352\u7356\u7358\u735d\u735e\u735f\u7360\u7366\u7367\u7369\u736b\u736c\u736e\u736f\u7371\u7377\u7379\u737c\u7380\u7381\u7383\u7385\u7386\u738e\u7390\u7393\u7395\u7397\u7398\u739c\u739e\u739f\u73a0\u73a2\u73a5\u73a6\u73aa\u73ab\u73ad\u73b5\u73b7\u73b9\u73bc\u73bd\u73bf\u73c5\u73c6\u73c9\u73cb\u73cc\u73cf\u73d2\u73d3\u73d6\u73d9\u73dd\u73e1\u73e3\u73e6\u73e7\u73e9\u73f4\u73f5\u73f7\u73f9\u73fa\u73fb\u73fd" ], [ "8fcca1", "\u73ff\u7400\u7401\u7404\u7407\u740a\u7411\u741a\u741b\u7424\u7426\u7428", 9, "\u7439\u7440\u7443\u7444\u7446\u7447\u744b\u744d\u7451\u7452\u7457\u745d\u7462\u7466\u7467\u7468\u746b\u746d\u746e\u7471\u7472\u7480\u7481\u7485\u7486\u7487\u7489\u748f\u7490\u7491\u7492\u7498\u7499\u749a\u749c\u749f\u74a0\u74a1\u74a3\u74a6\u74a8\u74a9\u74aa\u74ab\u74ae\u74af\u74b1\u74b2\u74b5\u74b9\u74bb\u74bf\u74c8\u74c9\u74cc\u74d0\u74d3\u74d8\u74da\u74db\u74de\u74df\u74e4\u74e8\u74ea\u74eb\u74ef\u74f4\u74fa\u74fb\u74fc\u74ff\u7506" ], [ "8fcda1", "\u7512\u7516\u7517\u7520\u7521\u7524\u7527\u7529\u752a\u752f\u7536\u7539\u753d\u753e\u753f\u7540\u7543\u7547\u7548\u754e\u7550\u7552\u7557\u755e\u755f\u7561\u756f\u7571\u7579", 5, "\u7581\u7585\u7590\u7592\u7593\u7595\u7599\u759c\u75a2\u75a4\u75b4\u75ba\u75bf\u75c0\u75c1\u75c4\u75c6\u75cc\u75ce\u75cf\u75d7\u75dc\u75df\u75e0\u75e1\u75e4\u75e7\u75ec\u75ee\u75ef\u75f1\u75f9\u7600\u7602\u7603\u7604\u7607\u7608\u760a\u760c\u760f\u7612\u7613\u7615\u7616\u7619\u761b\u761c\u761d\u761e\u7623\u7625\u7626\u7629\u762d\u7632\u7633\u7635\u7638\u7639" ], [ "8fcea1", "\u763a\u763c\u764a\u7640\u7641\u7643\u7644\u7645\u7649\u764b\u7655\u7659\u765f\u7664\u7665\u766d\u766e\u766f\u7671\u7674\u7681\u7685\u768c\u768d\u7695\u769b\u769c\u769d\u769f\u76a0\u76a2", 6, "\u76aa\u76ad\u76bd\u76c1\u76c5\u76c9\u76cb\u76cc\u76ce\u76d4\u76d9\u76e0\u76e6\u76e8\u76ec\u76f0\u76f1\u76f6\u76f9\u76fc\u7700\u7706\u770a\u770e\u7712\u7714\u7715\u7717\u7719\u771a\u771c\u7722\u7728\u772d\u772e\u772f\u7734\u7735\u7736\u7739\u773d\u773e\u7742\u7745\u7746\u774a\u774d\u774e\u774f\u7752\u7756\u7757\u775c\u775e\u775f\u7760\u7762" ], [ "8fcfa1", "\u7764\u7767\u776a\u776c\u7770\u7772\u7773\u7774\u777a\u777d\u7780\u7784\u778c\u778d\u7794\u7795\u7796\u779a\u779f\u77a2\u77a7\u77aa\u77ae\u77af\u77b1\u77b5\u77be\u77c3\u77c9\u77d1\u77d2\u77d5\u77d9\u77de\u77df\u77e0\u77e4\u77e6\u77ea\u77ec\u77f0\u77f1\u77f4\u77f8\u77fb\u7805\u7806\u7809\u780d\u780e\u7811\u781d\u7821\u7822\u7823\u782d\u782e\u7830\u7835\u7837\u7843\u7844\u7847\u7848\u784c\u784e\u7852\u785c\u785e\u7860\u7861\u7863\u7864\u7868\u786a\u786e\u787a\u787e\u788a\u788f\u7894\u7898\u78a1\u789d\u789e\u789f\u78a4\u78a8\u78ac\u78ad\u78b0\u78b1\u78b2\u78b3" ], [ "8fd0a1", "\u78bb\u78bd\u78bf\u78c7\u78c8\u78c9\u78cc\u78ce\u78d2\u78d3\u78d5\u78d6\u78e4\u78db\u78df\u78e0\u78e1\u78e6\u78ea\u78f2\u78f3\u7900\u78f6\u78f7\u78fa\u78fb\u78ff\u7906\u790c\u7910\u791a\u791c\u791e\u791f\u7920\u7925\u7927\u7929\u792d\u7931\u7934\u7935\u793b\u793d\u793f\u7944\u7945\u7946\u794a\u794b\u794f\u7951\u7954\u7958\u795b\u795c\u7967\u7969\u796b\u7972\u7979\u797b\u797c\u797e\u798b\u798c\u7991\u7993\u7994\u7995\u7996\u7998\u799b\u799c\u79a1\u79a8\u79a9\u79ab\u79af\u79b1\u79b4\u79b8\u79bb\u79c2\u79c4\u79c7\u79c8\u79ca\u79cf\u79d4\u79d6\u79da\u79dd\u79de" ], [ "8fd1a1", "\u79e0\u79e2\u79e5\u79ea\u79eb\u79ed\u79f1\u79f8\u79fc\u7a02\u7a03\u7a07\u7a09\u7a0a\u7a0c\u7a11\u7a15\u7a1b\u7a1e\u7a21\u7a27\u7a2b\u7a2d\u7a2f\u7a30\u7a34\u7a35\u7a38\u7a39\u7a3a\u7a44\u7a45\u7a47\u7a48\u7a4c\u7a55\u7a56\u7a59\u7a5c\u7a5d\u7a5f\u7a60\u7a65\u7a67\u7a6a\u7a6d\u7a75\u7a78\u7a7e\u7a80\u7a82\u7a85\u7a86\u7a8a\u7a8b\u7a90\u7a91\u7a94\u7a9e\u7aa0\u7aa3\u7aac\u7ab3\u7ab5\u7ab9\u7abb\u7abc\u7ac6\u7ac9\u7acc\u7ace\u7ad1\u7adb\u7ae8\u7ae9\u7aeb\u7aec\u7af1\u7af4\u7afb\u7afd\u7afe\u7b07\u7b14\u7b1f\u7b23\u7b27\u7b29\u7b2a\u7b2b\u7b2d\u7b2e\u7b2f\u7b30" ], [ "8fd2a1", "\u7b31\u7b34\u7b3d\u7b3f\u7b40\u7b41\u7b47\u7b4e\u7b55\u7b60\u7b64\u7b66\u7b69\u7b6a\u7b6d\u7b6f\u7b72\u7b73\u7b77\u7b84\u7b89\u7b8e\u7b90\u7b91\u7b96\u7b9b\u7b9e\u7ba0\u7ba5\u7bac\u7baf\u7bb0\u7bb2\u7bb5\u7bb6\u7bba\u7bbb\u7bbc\u7bbd\u7bc2\u7bc5\u7bc8\u7bca\u7bd4\u7bd6\u7bd7\u7bd9\u7bda\u7bdb\u7be8\u7bea\u7bf2\u7bf4\u7bf5\u7bf8\u7bf9\u7bfa\u7bfc\u7bfe\u7c01\u7c02\u7c03\u7c04\u7c06\u7c09\u7c0b\u7c0c\u7c0e\u7c0f\u7c19\u7c1b\u7c20\u7c25\u7c26\u7c28\u7c2c\u7c31\u7c33\u7c34\u7c36\u7c39\u7c3a\u7c46\u7c4a\u7c55\u7c51\u7c52\u7c53\u7c59", 5 ], [ "8fd3a1", "\u7c61\u7c63\u7c67\u7c69\u7c6d\u7c6e\u7c70\u7c72\u7c79\u7c7c\u7c7d\u7c86\u7c87\u7c8f\u7c94\u7c9e\u7ca0\u7ca6\u7cb0\u7cb6\u7cb7\u7cba\u7cbb\u7cbc\u7cbf\u7cc4\u7cc7\u7cc8\u7cc9\u7ccd\u7ccf\u7cd3\u7cd4\u7cd5\u7cd7\u7cd9\u7cda\u7cdd\u7ce6\u7ce9\u7ceb\u7cf5\u7d03\u7d07\u7d08\u7d09\u7d0f\u7d11\u7d12\u7d13\u7d16\u7d1d\u7d1e\u7d23\u7d26\u7d2a\u7d2d\u7d31\u7d3c\u7d3d\u7d3e\u7d40\u7d41\u7d47\u7d48\u7d4d\u7d51\u7d53\u7d57\u7d59\u7d5a\u7d5c\u7d5d\u7d65\u7d67\u7d6a\u7d70\u7d78\u7d7a\u7d7b\u7d7f\u7d81\u7d82\u7d83\u7d85\u7d86\u7d88\u7d8b\u7d8c\u7d8d\u7d91\u7d96\u7d97\u7d9d" ], [ "8fd4a1", "\u7d9e\u7da6\u7da7\u7daa\u7db3\u7db6\u7db7\u7db9\u7dc2", 4, "\u7dcc\u7dcd\u7dce\u7dd7\u7dd9\u7e00\u7de2\u7de5\u7de6\u7dea\u7deb\u7ded\u7df1\u7df5\u7df6\u7df9\u7dfa\u7e08\u7e10\u7e11\u7e15\u7e17\u7e1c\u7e1d\u7e20\u7e27\u7e28\u7e2c\u7e2d\u7e2f\u7e33\u7e36\u7e3f\u7e44\u7e45\u7e47\u7e4e\u7e50\u7e52\u7e58\u7e5f\u7e61\u7e62\u7e65\u7e6b\u7e6e\u7e6f\u7e73\u7e78\u7e7e\u7e81\u7e86\u7e87\u7e8a\u7e8d\u7e91\u7e95\u7e98\u7e9a\u7e9d\u7e9e\u7f3c\u7f3b\u7f3d\u7f3e\u7f3f\u7f43\u7f44\u7f47\u7f4f\u7f52\u7f53\u7f5b\u7f5c\u7f5d\u7f61\u7f63\u7f64\u7f65\u7f66\u7f6d" ], [ "8fd5a1", "\u7f71\u7f7d\u7f7e\u7f7f\u7f80\u7f8b\u7f8d\u7f8f\u7f90\u7f91\u7f96\u7f97\u7f9c\u7fa1\u7fa2\u7fa6\u7faa\u7fad\u7fb4\u7fbc\u7fbf\u7fc0\u7fc3\u7fc8\u7fce\u7fcf\u7fdb\u7fdf\u7fe3\u7fe5\u7fe8\u7fec\u7fee\u7fef\u7ff2\u7ffa\u7ffd\u7ffe\u7fff\u8007\u8008\u800a\u800d\u800e\u800f\u8011\u8013\u8014\u8016\u801d\u801e\u801f\u8020\u8024\u8026\u802c\u802e\u8030\u8034\u8035\u8037\u8039\u803a\u803c\u803e\u8040\u8044\u8060\u8064\u8066\u806d\u8071\u8075\u8081\u8088\u808e\u809c\u809e\u80a6\u80a7\u80ab\u80b8\u80b9\u80c8\u80cd\u80cf\u80d2\u80d4\u80d5\u80d7\u80d8\u80e0\u80ed\u80ee" ], [ "8fd6a1", "\u80f0\u80f2\u80f3\u80f6\u80f9\u80fa\u80fe\u8103\u810b\u8116\u8117\u8118\u811c\u811e\u8120\u8124\u8127\u812c\u8130\u8135\u813a\u813c\u8145\u8147\u814a\u814c\u8152\u8157\u8160\u8161\u8167\u8168\u8169\u816d\u816f\u8177\u8181\u8190\u8184\u8185\u8186\u818b\u818e\u8196\u8198\u819b\u819e\u81a2\u81ae\u81b2\u81b4\u81bb\u81cb\u81c3\u81c5\u81ca\u81ce\u81cf\u81d5\u81d7\u81db\u81dd\u81de\u81e1\u81e4\u81eb\u81ec\u81f0\u81f1\u81f2\u81f5\u81f6\u81f8\u81f9\u81fd\u81ff\u8200\u8203\u820f\u8213\u8214\u8219\u821a\u821d\u8221\u8222\u8228\u8232\u8234\u823a\u8243\u8244\u8245\u8246" ], [ "8fd7a1", "\u824b\u824e\u824f\u8251\u8256\u825c\u8260\u8263\u8267\u826d\u8274\u827b\u827d\u827f\u8280\u8281\u8283\u8284\u8287\u8289\u828a\u828e\u8291\u8294\u8296\u8298\u829a\u829b\u82a0\u82a1\u82a3\u82a4\u82a7\u82a8\u82a9\u82aa\u82ae\u82b0\u82b2\u82b4\u82b7\u82ba\u82bc\u82be\u82bf\u82c6\u82d0\u82d5\u82da\u82e0\u82e2\u82e4\u82e8\u82ea\u82ed\u82ef\u82f6\u82f7\u82fd\u82fe\u8300\u8301\u8307\u8308\u830a\u830b\u8354\u831b\u831d\u831e\u831f\u8321\u8322\u832c\u832d\u832e\u8330\u8333\u8337\u833a\u833c\u833d\u8342\u8343\u8344\u8347\u834d\u834e\u8351\u8355\u8356\u8357\u8370\u8378" ], [ "8fd8a1", "\u837d\u837f\u8380\u8382\u8384\u8386\u838d\u8392\u8394\u8395\u8398\u8399\u839b\u839c\u839d\u83a6\u83a7\u83a9\u83ac\u83be\u83bf\u83c0\u83c7\u83c9\u83cf\u83d0\u83d1\u83d4\u83dd\u8353\u83e8\u83ea\u83f6\u83f8\u83f9\u83fc\u8401\u8406\u840a\u840f\u8411\u8415\u8419\u83ad\u842f\u8439\u8445\u8447\u8448\u844a\u844d\u844f\u8451\u8452\u8456\u8458\u8459\u845a\u845c\u8460\u8464\u8465\u8467\u846a\u8470\u8473\u8474\u8476\u8478\u847c\u847d\u8481\u8485\u8492\u8493\u8495\u849e\u84a6\u84a8\u84a9\u84aa\u84af\u84b1\u84b4\u84ba\u84bd\u84be\u84c0\u84c2\u84c7\u84c8\u84cc\u84cf\u84d3" ], [ "8fd9a1", "\u84dc\u84e7\u84ea\u84ef\u84f0\u84f1\u84f2\u84f7\u8532\u84fa\u84fb\u84fd\u8502\u8503\u8507\u850c\u850e\u8510\u851c\u851e\u8522\u8523\u8524\u8525\u8527\u852a\u852b\u852f\u8533\u8534\u8536\u853f\u8546\u854f", 4, "\u8556\u8559\u855c", 6, "\u8564\u856b\u856f\u8579\u857a\u857b\u857d\u857f\u8581\u8585\u8586\u8589\u858b\u858c\u858f\u8593\u8598\u859d\u859f\u85a0\u85a2\u85a5\u85a7\u85b4\u85b6\u85b7\u85b8\u85bc\u85bd\u85be\u85bf\u85c2\u85c7\u85ca\u85cb\u85ce\u85ad\u85d8\u85da\u85df\u85e0\u85e6\u85e8\u85ed\u85f3\u85f6\u85fc" ], [ "8fdaa1", "\u85ff\u8600\u8604\u8605\u860d\u860e\u8610\u8611\u8612\u8618\u8619\u861b\u861e\u8621\u8627\u8629\u8636\u8638\u863a\u863c\u863d\u8640\u8642\u8646\u8652\u8653\u8656\u8657\u8658\u8659\u865d\u8660", 4, "\u8669\u866c\u866f\u8675\u8676\u8677\u867a\u868d\u8691\u8696\u8698\u869a\u869c\u86a1\u86a6\u86a7\u86a8\u86ad\u86b1\u86b3\u86b4\u86b5\u86b7\u86b8\u86b9\u86bf\u86c0\u86c1\u86c3\u86c5\u86d1\u86d2\u86d5\u86d7\u86da\u86dc\u86e0\u86e3\u86e5\u86e7\u8688\u86fa\u86fc\u86fd\u8704\u8705\u8707\u870b\u870e\u870f\u8710\u8713\u8714\u8719\u871e\u871f\u8721\u8723" ], [ "8fdba1", "\u8728\u872e\u872f\u8731\u8732\u8739\u873a\u873c\u873d\u873e\u8740\u8743\u8745\u874d\u8758\u875d\u8761\u8764\u8765\u876f\u8771\u8772\u877b\u8783", 6, "\u878b\u878c\u8790\u8793\u8795\u8797\u8798\u8799\u879e\u87a0\u87a3\u87a7\u87ac\u87ad\u87ae\u87b1\u87b5\u87be\u87bf\u87c1\u87c8\u87c9\u87ca\u87ce\u87d5\u87d6\u87d9\u87da\u87dc\u87df\u87e2\u87e3\u87e4\u87ea\u87eb\u87ed\u87f1\u87f3\u87f8\u87fa\u87ff\u8801\u8803\u8806\u8809\u880a\u880b\u8810\u8819\u8812\u8813\u8814\u8818\u881a\u881b\u881c\u881e\u881f\u8828\u882d\u882e\u8830\u8832\u8835" ], [ "8fdca1", "\u883a\u883c\u8841\u8843\u8845\u8848\u8849\u884a\u884b\u884e\u8851\u8855\u8856\u8858\u885a\u885c\u885f\u8860\u8864\u8869\u8871\u8879\u887b\u8880\u8898\u889a\u889b\u889c\u889f\u88a0\u88a8\u88aa\u88ba\u88bd\u88be\u88c0\u88ca", 4, "\u88d1\u88d2\u88d3\u88db\u88de\u88e7\u88ef\u88f0\u88f1\u88f5\u88f7\u8901\u8906\u890d\u890e\u890f\u8915\u8916\u8918\u8919\u891a\u891c\u8920\u8926\u8927\u8928\u8930\u8931\u8932\u8935\u8939\u893a\u893e\u8940\u8942\u8945\u8946\u8949\u894f\u8952\u8957\u895a\u895b\u895c\u8961\u8962\u8963\u896b\u896e\u8970\u8973\u8975\u897a" ], [ "8fdda1", "\u897b\u897c\u897d\u8989\u898d\u8990\u8994\u8995\u899b\u899c\u899f\u89a0\u89a5\u89b0\u89b4\u89b5\u89b6\u89b7\u89bc\u89d4", 4, "\u89e5\u89e9\u89eb\u89ed\u89f1\u89f3\u89f6\u89f9\u89fd\u89ff\u8a04\u8a05\u8a07\u8a0f\u8a11\u8a12\u8a14\u8a15\u8a1e\u8a20\u8a22\u8a24\u8a26\u8a2b\u8a2c\u8a2f\u8a35\u8a37\u8a3d\u8a3e\u8a40\u8a43\u8a45\u8a47\u8a49\u8a4d\u8a4e\u8a53\u8a56\u8a57\u8a58\u8a5c\u8a5d\u8a61\u8a65\u8a67\u8a75\u8a76\u8a77\u8a79\u8a7a\u8a7b\u8a7e\u8a7f\u8a80\u8a83\u8a86\u8a8b\u8a8f\u8a90\u8a92\u8a96\u8a97\u8a99\u8a9f\u8aa7\u8aa9\u8aae\u8aaf\u8ab3" ], [ "8fdea1", "\u8ab6\u8ab7\u8abb\u8abe\u8ac3\u8ac6\u8ac8\u8ac9\u8aca\u8ad1\u8ad3\u8ad4\u8ad5\u8ad7\u8add\u8adf\u8aec\u8af0\u8af4\u8af5\u8af6\u8afc\u8aff\u8b05\u8b06\u8b0b\u8b11\u8b1c\u8b1e\u8b1f\u8b0a\u8b2d\u8b30\u8b37\u8b3c\u8b42", 4, "\u8b48\u8b52\u8b53\u8b54\u8b59\u8b4d\u8b5e\u8b63\u8b6d\u8b76\u8b78\u8b79\u8b7c\u8b7e\u8b81\u8b84\u8b85\u8b8b\u8b8d\u8b8f\u8b94\u8b95\u8b9c\u8b9e\u8b9f\u8c38\u8c39\u8c3d\u8c3e\u8c45\u8c47\u8c49\u8c4b\u8c4f\u8c51\u8c53\u8c54\u8c57\u8c58\u8c5b\u8c5d\u8c59\u8c63\u8c64\u8c66\u8c68\u8c69\u8c6d\u8c73\u8c75\u8c76\u8c7b\u8c7e\u8c86" ], [ "8fdfa1", "\u8c87\u8c8b\u8c90\u8c92\u8c93\u8c99\u8c9b\u8c9c\u8ca4\u8cb9\u8cba\u8cc5\u8cc6\u8cc9\u8ccb\u8ccf\u8cd6\u8cd5\u8cd9\u8cdd\u8ce1\u8ce8\u8cec\u8cef\u8cf0\u8cf2\u8cf5\u8cf7\u8cf8\u8cfe\u8cff\u8d01\u8d03\u8d09\u8d12\u8d17\u8d1b\u8d65\u8d69\u8d6c\u8d6e\u8d7f\u8d82\u8d84\u8d88\u8d8d\u8d90\u8d91\u8d95\u8d9e\u8d9f\u8da0\u8da6\u8dab\u8dac\u8daf\u8db2\u8db5\u8db7\u8db9\u8dbb\u8dc0\u8dc5\u8dc6\u8dc7\u8dc8\u8dca\u8dce\u8dd1\u8dd4\u8dd5\u8dd7\u8dd9\u8de4\u8de5\u8de7\u8dec\u8df0\u8dbc\u8df1\u8df2\u8df4\u8dfd\u8e01\u8e04\u8e05\u8e06\u8e0b\u8e11\u8e14\u8e16\u8e20\u8e21\u8e22" ], [ "8fe0a1", "\u8e23\u8e26\u8e27\u8e31\u8e33\u8e36\u8e37\u8e38\u8e39\u8e3d\u8e40\u8e41\u8e4b\u8e4d\u8e4e\u8e4f\u8e54\u8e5b\u8e5c\u8e5d\u8e5e\u8e61\u8e62\u8e69\u8e6c\u8e6d\u8e6f\u8e70\u8e71\u8e79\u8e7a\u8e7b\u8e82\u8e83\u8e89\u8e90\u8e92\u8e95\u8e9a\u8e9b\u8e9d\u8e9e\u8ea2\u8ea7\u8ea9\u8ead\u8eae\u8eb3\u8eb5\u8eba\u8ebb\u8ec0\u8ec1\u8ec3\u8ec4\u8ec7\u8ecf\u8ed1\u8ed4\u8edc\u8ee8\u8eee\u8ef0\u8ef1\u8ef7\u8ef9\u8efa\u8eed\u8f00\u8f02\u8f07\u8f08\u8f0f\u8f10\u8f16\u8f17\u8f18\u8f1e\u8f20\u8f21\u8f23\u8f25\u8f27\u8f28\u8f2c\u8f2d\u8f2e\u8f34\u8f35\u8f36\u8f37\u8f3a\u8f40\u8f41" ], [ "8fe1a1", "\u8f43\u8f47\u8f4f\u8f51", 4, "\u8f58\u8f5d\u8f5e\u8f65\u8f9d\u8fa0\u8fa1\u8fa4\u8fa5\u8fa6\u8fb5\u8fb6\u8fb8\u8fbe\u8fc0\u8fc1\u8fc6\u8fca\u8fcb\u8fcd\u8fd0\u8fd2\u8fd3\u8fd5\u8fe0\u8fe3\u8fe4\u8fe8\u8fee\u8ff1\u8ff5\u8ff6\u8ffb\u8ffe\u9002\u9004\u9008\u900c\u9018\u901b\u9028\u9029\u902f\u902a\u902c\u902d\u9033\u9034\u9037\u903f\u9043\u9044\u904c\u905b\u905d\u9062\u9066\u9067\u906c\u9070\u9074\u9079\u9085\u9088\u908b\u908c\u908e\u9090\u9095\u9097\u9098\u9099\u909b\u90a0\u90a1\u90a2\u90a5\u90b0\u90b2\u90b3\u90b4\u90b6\u90bd\u90cc\u90be\u90c3" ], [ "8fe2a1", "\u90c4\u90c5\u90c7\u90c8\u90d5\u90d7\u90d8\u90d9\u90dc\u90dd\u90df\u90e5\u90d2\u90f6\u90eb\u90ef\u90f0\u90f4\u90fe\u90ff\u9100\u9104\u9105\u9106\u9108\u910d\u9110\u9114\u9116\u9117\u9118\u911a\u911c\u911e\u9120\u9125\u9122\u9123\u9127\u9129\u912e\u912f\u9131\u9134\u9136\u9137\u9139\u913a\u913c\u913d\u9143\u9147\u9148\u914f\u9153\u9157\u9159\u915a\u915b\u9161\u9164\u9167\u916d\u9174\u9179\u917a\u917b\u9181\u9183\u9185\u9186\u918a\u918e\u9191\u9193\u9194\u9195\u9198\u919e\u91a1\u91a6\u91a8\u91ac\u91ad\u91ae\u91b0\u91b1\u91b2\u91b3\u91b6\u91bb\u91bc\u91bd\u91bf" ], [ "8fe3a1", "\u91c2\u91c3\u91c5\u91d3\u91d4\u91d7\u91d9\u91da\u91de\u91e4\u91e5\u91e9\u91ea\u91ec", 5, "\u91f7\u91f9\u91fb\u91fd\u9200\u9201\u9204\u9205\u9206\u9207\u9209\u920a\u920c\u9210\u9212\u9213\u9216\u9218\u921c\u921d\u9223\u9224\u9225\u9226\u9228\u922e\u922f\u9230\u9233\u9235\u9236\u9238\u9239\u923a\u923c\u923e\u9240\u9242\u9243\u9246\u9247\u924a\u924d\u924e\u924f\u9251\u9258\u9259\u925c\u925d\u9260\u9261\u9265\u9267\u9268\u9269\u926e\u926f\u9270\u9275", 4, "\u927b\u927c\u927d\u927f\u9288\u9289\u928a\u928d\u928e\u9292\u9297" ], [ "8fe4a1", "\u9299\u929f\u92a0\u92a4\u92a5\u92a7\u92a8\u92ab\u92af\u92b2\u92b6\u92b8\u92ba\u92bb\u92bc\u92bd\u92bf", 4, "\u92c5\u92c6\u92c7\u92c8\u92cb\u92cc\u92cd\u92ce\u92d0\u92d3\u92d5\u92d7\u92d8\u92d9\u92dc\u92dd\u92df\u92e0\u92e1\u92e3\u92e5\u92e7\u92e8\u92ec\u92ee\u92f0\u92f9\u92fb\u92ff\u9300\u9302\u9308\u930d\u9311\u9314\u9315\u931c\u931d\u931e\u931f\u9321\u9324\u9325\u9327\u9329\u932a\u9333\u9334\u9336\u9337\u9347\u9348\u9349\u9350\u9351\u9352\u9355\u9357\u9358\u935a\u935e\u9364\u9365\u9367\u9369\u936a\u936d\u936f\u9370\u9371\u9373\u9374\u9376" ], [ "8fe5a1", "\u937a\u937d\u937f\u9380\u9381\u9382\u9388\u938a\u938b\u938d\u938f\u9392\u9395\u9398\u939b\u939e\u93a1\u93a3\u93a4\u93a6\u93a8\u93ab\u93b4\u93b5\u93b6\u93ba\u93a9\u93c1\u93c4\u93c5\u93c6\u93c7\u93c9", 4, "\u93d3\u93d9\u93dc\u93de\u93df\u93e2\u93e6\u93e7\u93f9\u93f7\u93f8\u93fa\u93fb\u93fd\u9401\u9402\u9404\u9408\u9409\u940d\u940e\u940f\u9415\u9416\u9417\u941f\u942e\u942f\u9431\u9432\u9433\u9434\u943b\u943f\u943d\u9443\u9445\u9448\u944a\u944c\u9455\u9459\u945c\u945f\u9461\u9463\u9468\u946b\u946d\u946e\u946f\u9471\u9472\u9484\u9483\u9578\u9579" ], [ "8fe6a1", "\u957e\u9584\u9588\u958c\u958d\u958e\u959d\u959e\u959f\u95a1\u95a6\u95a9\u95ab\u95ac\u95b4\u95b6\u95ba\u95bd\u95bf\u95c6\u95c8\u95c9\u95cb\u95d0\u95d1\u95d2\u95d3\u95d9\u95da\u95dd\u95de\u95df\u95e0\u95e4\u95e6\u961d\u961e\u9622\u9624\u9625\u9626\u962c\u9631\u9633\u9637\u9638\u9639\u963a\u963c\u963d\u9641\u9652\u9654\u9656\u9657\u9658\u9661\u966e\u9674\u967b\u967c\u967e\u967f\u9681\u9682\u9683\u9684\u9689\u9691\u9696\u969a\u969d\u969f\u96a4\u96a5\u96a6\u96a9\u96ae\u96af\u96b3\u96ba\u96ca\u96d2\u5db2\u96d8\u96da\u96dd\u96de\u96df\u96e9\u96ef\u96f1\u96fa\u9702" ], [ "8fe7a1", "\u9703\u9705\u9709\u971a\u971b\u971d\u9721\u9722\u9723\u9728\u9731\u9733\u9741\u9743\u974a\u974e\u974f\u9755\u9757\u9758\u975a\u975b\u9763\u9767\u976a\u976e\u9773\u9776\u9777\u9778\u977b\u977d\u977f\u9780\u9789\u9795\u9796\u9797\u9799\u979a\u979e\u979f\u97a2\u97ac\u97ae\u97b1\u97b2\u97b5\u97b6\u97b8\u97b9\u97ba\u97bc\u97be\u97bf\u97c1\u97c4\u97c5\u97c7\u97c9\u97ca\u97cc\u97cd\u97ce\u97d0\u97d1\u97d4\u97d7\u97d8\u97d9\u97dd\u97de\u97e0\u97db\u97e1\u97e4\u97ef\u97f1\u97f4\u97f7\u97f8\u97fa\u9807\u980a\u9819\u980d\u980e\u9814\u9816\u981c\u981e\u9820\u9823\u9826" ], [ "8fe8a1", "\u982b\u982e\u982f\u9830\u9832\u9833\u9835\u9825\u983e\u9844\u9847\u984a\u9851\u9852\u9853\u9856\u9857\u9859\u985a\u9862\u9863\u9865\u9866\u986a\u986c\u98ab\u98ad\u98ae\u98b0\u98b4\u98b7\u98b8\u98ba\u98bb\u98bf\u98c2\u98c5\u98c8\u98cc\u98e1\u98e3\u98e5\u98e6\u98e7\u98ea\u98f3\u98f6\u9902\u9907\u9908\u9911\u9915\u9916\u9917\u991a\u991b\u991c\u991f\u9922\u9926\u9927\u992b\u9931", 4, "\u9939\u993a\u993b\u993c\u9940\u9941\u9946\u9947\u9948\u994d\u994e\u9954\u9958\u9959\u995b\u995c\u995e\u995f\u9960\u999b\u999d\u999f\u99a6\u99b0\u99b1\u99b2\u99b5" ], [ "8fe9a1", "\u99b9\u99ba\u99bd\u99bf\u99c3\u99c9\u99d3\u99d4\u99d9\u99da\u99dc\u99de\u99e7\u99ea\u99eb\u99ec\u99f0\u99f4\u99f5\u99f9\u99fd\u99fe\u9a02\u9a03\u9a04\u9a0b\u9a0c\u9a10\u9a11\u9a16\u9a1e\u9a20\u9a22\u9a23\u9a24\u9a27\u9a2d\u9a2e\u9a33\u9a35\u9a36\u9a38\u9a47\u9a41\u9a44\u9a4a\u9a4b\u9a4c\u9a4e\u9a51\u9a54\u9a56\u9a5d\u9aaa\u9aac\u9aae\u9aaf\u9ab2\u9ab4\u9ab5\u9ab6\u9ab9\u9abb\u9abe\u9abf\u9ac1\u9ac3\u9ac6\u9ac8\u9ace\u9ad0\u9ad2\u9ad5\u9ad6\u9ad7\u9adb\u9adc\u9ae0\u9ae4\u9ae5\u9ae7\u9ae9\u9aec\u9af2\u9af3\u9af5\u9af9\u9afa\u9afd\u9aff", 4 ], [ "8feaa1", "\u9b04\u9b05\u9b08\u9b09\u9b0b\u9b0c\u9b0d\u9b0e\u9b10\u9b12\u9b16\u9b19\u9b1b\u9b1c\u9b20\u9b26\u9b2b\u9b2d\u9b33\u9b34\u9b35\u9b37\u9b39\u9b3a\u9b3d\u9b48\u9b4b\u9b4c\u9b55\u9b56\u9b57\u9b5b\u9b5e\u9b61\u9b63\u9b65\u9b66\u9b68\u9b6a", 4, "\u9b73\u9b75\u9b77\u9b78\u9b79\u9b7f\u9b80\u9b84\u9b85\u9b86\u9b87\u9b89\u9b8a\u9b8b\u9b8d\u9b8f\u9b90\u9b94\u9b9a\u9b9d\u9b9e\u9ba6\u9ba7\u9ba9\u9bac\u9bb0\u9bb1\u9bb2\u9bb7\u9bb8\u9bbb\u9bbc\u9bbe\u9bbf\u9bc1\u9bc7\u9bc8\u9bce\u9bd0\u9bd7\u9bd8\u9bdd\u9bdf\u9be5\u9be7\u9bea\u9beb\u9bef\u9bf3\u9bf7\u9bf8" ], [ "8feba1", "\u9bf9\u9bfa\u9bfd\u9bff\u9c00\u9c02\u9c0b\u9c0f\u9c11\u9c16\u9c18\u9c19\u9c1a\u9c1c\u9c1e\u9c22\u9c23\u9c26", 4, "\u9c31\u9c35\u9c36\u9c37\u9c3d\u9c41\u9c43\u9c44\u9c45\u9c49\u9c4a\u9c4e\u9c4f\u9c50\u9c53\u9c54\u9c56\u9c58\u9c5b\u9c5d\u9c5e\u9c5f\u9c63\u9c69\u9c6a\u9c5c\u9c6b\u9c68\u9c6e\u9c70\u9c72\u9c75\u9c77\u9c7b\u9ce6\u9cf2\u9cf7\u9cf9\u9d0b\u9d02\u9d11\u9d17\u9d18\u9d1c\u9d1d\u9d1e\u9d2f\u9d30\u9d32\u9d33\u9d34\u9d3a\u9d3c\u9d45\u9d3d\u9d42\u9d43\u9d47\u9d4a\u9d53\u9d54\u9d5f\u9d63\u9d62\u9d65\u9d69\u9d6a\u9d6b\u9d70\u9d76\u9d77\u9d7b" ], [ "8feca1", "\u9d7c\u9d7e\u9d83\u9d84\u9d86\u9d8a\u9d8d\u9d8e\u9d92\u9d93\u9d95\u9d96\u9d97\u9d98\u9da1\u9daa\u9dac\u9dae\u9db1\u9db5\u9db9\u9dbc\u9dbf\u9dc3\u9dc7\u9dc9\u9dca\u9dd4\u9dd5\u9dd6\u9dd7\u9dda\u9dde\u9ddf\u9de0\u9de5\u9de7\u9de9\u9deb\u9dee\u9df0\u9df3\u9df4\u9dfe\u9e0a\u9e02\u9e07\u9e0e\u9e10\u9e11\u9e12\u9e15\u9e16\u9e19\u9e1c\u9e1d\u9e7a\u9e7b\u9e7c\u9e80\u9e82\u9e83\u9e84\u9e85\u9e87\u9e8e\u9e8f\u9e96\u9e98\u9e9b\u9e9e\u9ea4\u9ea8\u9eac\u9eae\u9eaf\u9eb0\u9eb3\u9eb4\u9eb5\u9ec6\u9ec8\u9ecb\u9ed5\u9edf\u9ee4\u9ee7\u9eec\u9eed\u9eee\u9ef0\u9ef1\u9ef2\u9ef5" ], [ "8feda1", "\u9ef8\u9eff\u9f02\u9f03\u9f09\u9f0f\u9f10\u9f11\u9f12\u9f14\u9f16\u9f17\u9f19\u9f1a\u9f1b\u9f1f\u9f22\u9f26\u9f2a\u9f2b\u9f2f\u9f31\u9f32\u9f34\u9f37\u9f39\u9f3a\u9f3c\u9f3d\u9f3f\u9f41\u9f43", 4, "\u9f53\u9f55\u9f56\u9f57\u9f58\u9f5a\u9f5d\u9f5e\u9f68\u9f69\u9f6d", 4, "\u9f73\u9f75\u9f7a\u9f7d\u9f8f\u9f90\u9f91\u9f92\u9f94\u9f96\u9f97\u9f9e\u9fa1\u9fa2\u9fa3\u9fa5" ] ];
    cc._RF.pop();
  }, {} ],
  events: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8c67e2z+VdPZ6SnpgarxiZD", "events");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.event = void 0;
    class event_node {
      constructor(target, func) {
        this.target = null;
        this.func = null;
        this.target = target;
        this.func = func;
      }
    }
    var event;
    (function(event) {
      var event_map = null;
      function register_event(name, target, func) {
        null == event_map && (event_map = new Map());
        let array = event_map.has(name) ? event_map.get(name) : [];
        array.push(new event_node(target, func));
        event_map.set(name, array);
      }
      event.register_event = register_event;
      function unregister_event(name, target, func = null) {
        null == event_map && (event_map = new Map());
        if (event_map.has(name)) {
          let array = [];
          if (null == func) event_map.delete(name); else {
            array = event_map.get(name).filter(x => x.target != target || x.func != func);
            event_map.set(name, array);
          }
        }
      }
      event.unregister_event = unregister_event;
      function trigger_event(name, ...param) {
        event_map.has(name) && event_map.get(name).length > 0 && event_map.get(name).forEach(node => {
          node.func.call(node.target, param[0], param[1], param[2], param[3], param[4], param[5], param[6], param[7], param[8], param[9]);
          param.length > 10 && console.error("Event arguments more than 10.");
        });
      }
      event.trigger_event = trigger_event;
    })(event = exports.event || (exports.event = {}));
    cc._RF.pop();
  }, {} ],
  extension: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "73d90Cpfv1IxYCP90e35cfT", "extension");
    Array.prototype.remove || Object.defineProperty(Array.prototype, "remove", {
      value: function remove(elem) {
        return this.filter(e => e !== elem);
      }
    });
    Array.prototype.safe_find || Object.defineProperty(Array.prototype, "safe_find", {
      value: function safe_find(callbackfn) {
        let l = this.filter(callbackfn);
        return l.length > 0 ? l[0] : null;
      }
    });
    Array.prototype.add || Object.defineProperty(Array.prototype, "add", {
      value: function add(elem) {
        return this.push(elem);
      }
    });
    Array.prototype.contains || Object.defineProperty(Array.prototype, "contains", {
      value: function contains(elem) {
        return this.filter(v => v == elem).length > 0;
      }
    });
    Array.prototype.add_after || Object.defineProperty(Array.prototype, "add_after", {
      value: function add_after(elemMark, elem) {
        let index = this.findIndex(x => x == elemMark);
        this.splice(index + 1, 0, elem);
      }
    });
    Array.prototype.to_list || Object.defineProperty(Array.prototype, "to_list", {
      value: function to_list() {
        return Object.assign([], this);
      }
    });
    Map.prototype.add || Object.defineProperty(Map.prototype, "add", {
      value: function add(key, value) {
        return this.set(key, value);
      }
    });
    Map.prototype.remove || Object.defineProperty(Map.prototype, "remove", {
      value: function remove(key) {
        return this.delete(key);
      }
    });
    cc._RF.pop();
  }, {} ],
  game_auxi: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "323d1gNk6dKLpEa3M8VRNOL", "game_auxi");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.game_auxi = void 0;
    const global_data_1 = require("../global_data");
    const protocols_1 = require("../protocols");
    const utils_1 = require("../../common/utils");
    const websocket_1 = require("../../common/websocket");
    var game_auxi;
    (function(game_auxi) {
      game_auxi.PRI_ROOM_TYPE_CREATE = 0;
      game_auxi.PRI_ROOM_TYPE_ENTER = 1;
      game_auxi.PRI_ROOM_TYPE_DISMISS = 2;
      game_auxi.PRI_ROOM_TYPE_SELECT = 3;
      game_auxi.SUB_AUXI_CREATE_TABLE_SUCCESS_V20 = 1;
      game_auxi.SUB_AUXI_CREATE_TABLE_FAIL_V20 = 2;
      game_auxi.SUB_AUXI_DISMISS_TABLE_SUCCESS_V20 = 3;
      game_auxi.SUB_AUXI_DISMISS_TABLE_FAIL_V20 = 4;
      game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20 = 5;
      game_auxi.SUB_AUXI_JOIN_TABLE_FAIL_V20 = 6;
      game_auxi.SUB_AUXI_QUERY_TABLE_SUCCESS_V20 = 7;
      game_auxi.SUB_AUXI_QUERY_TABLE_FAIL_V20 = 8;
      class struct_select_private_data {}
      game_auxi.struct_select_private_data = struct_select_private_data;
      class struct_enter_private_data {}
      game_auxi.struct_enter_private_data = struct_enter_private_data;
      game_auxi._the_auxi_socket = null;
      game_auxi._private_room_type = 0;
      game_auxi._int_base_index = 0;
      game_auxi._int_item_index = 0;
      game_auxi._int_game_id = 0;
      game_auxi._str_rule = "";
      game_auxi._str_dismiss_room_code = "";
      game_auxi._struct_enter_private_data = null;
      game_auxi._vector_my_private_room = null;
      game_auxi._int_enter_game_id = 0;
      game_auxi._int_enter_room_id = 0;
      game_auxi._enter_private_code = "";
      function init() {
        game_auxi._the_auxi_socket = new websocket_1.websocket();
        game_auxi._the_auxi_socket.onSocketOpen = () => {
          on_socket_connect(0);
        };
        game_auxi._the_auxi_socket.onSocketMessage = (mainCmdID, subCmdID, data) => {
          on_socket_receive(mainCmdID, subCmdID, data);
        };
        game_auxi._the_auxi_socket.onSocketClose = event => {
          on_socket_close();
        };
        game_auxi._the_auxi_socket.onSocketError = event => {
          on_socket_error(event);
        };
        game_auxi._private_room_type = 0;
        game_auxi._int_base_index = 0;
        game_auxi._int_item_index = 0;
        game_auxi._str_rule = "";
        game_auxi._int_game_id = 0;
        game_auxi._str_dismiss_room_code = "";
        game_auxi._struct_enter_private_data = new struct_enter_private_data();
        game_auxi._vector_my_private_room = [];
        game_auxi._int_enter_game_id = 0;
        game_auxi._int_enter_room_id = 0;
        game_auxi._enter_private_code = "";
      }
      game_auxi.init = init;
      function select_private_room() {
        game_auxi._private_room_type = game_auxi.PRI_ROOM_TYPE_SELECT;
        game_auxi._the_auxi_socket.close();
        game_auxi._the_auxi_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9003);
        utils_1.utils.send("AuxiOperation", {
          type: game_auxi.PRI_ROOM_TYPE_SELECT,
          param: ""
        });
        return true;
      }
      game_auxi.select_private_room = select_private_room;
      function dismiss_private_room(str_code) {
        game_auxi._private_room_type = game_auxi.PRI_ROOM_TYPE_DISMISS;
        game_auxi._str_dismiss_room_code = str_code;
        game_auxi._the_auxi_socket.close();
        game_auxi._the_auxi_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9003);
        utils_1.utils.send("AuxiOperation", {
          type: game_auxi.PRI_ROOM_TYPE_DISMISS,
          param: ""
        });
        return true;
      }
      game_auxi.dismiss_private_room = dismiss_private_room;
      function enter_private_room(str_code) {
        game_auxi._private_room_type = game_auxi.PRI_ROOM_TYPE_ENTER;
        game_auxi._enter_private_code = str_code;
        game_auxi._the_auxi_socket.close();
        game_auxi._the_auxi_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9003);
        utils_1.utils.send("AuxiOperation", {
          type: game_auxi.PRI_ROOM_TYPE_ENTER,
          param: str_code
        });
        return true;
      }
      game_auxi.enter_private_room = enter_private_room;
      function create_private_room(int_game_id, int_item_id, int_base_id, str_rule) {
        game_auxi._private_room_type = game_auxi.PRI_ROOM_TYPE_CREATE;
        game_auxi._int_base_index = int_base_id;
        game_auxi._int_item_index = int_item_id;
        game_auxi._str_rule = str_rule || "";
        game_auxi._int_game_id = int_game_id;
        game_auxi._the_auxi_socket.close();
        game_auxi._the_auxi_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9003);
        utils_1.utils.send("AuxiOperation", {
          type: game_auxi.PRI_ROOM_TYPE_CREATE,
          param: ""
        });
        return true;
      }
      game_auxi.create_private_room = create_private_room;
      function on_socket_connect(int_code) {
        console.log("\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\uff1a%d", int_code);
        if (0 == int_code) if (game_auxi._private_room_type == game_auxi.PRI_ROOM_TYPE_CREATE) {
          let the_data = new protocols_1.protocols.CMD_AUXI_CREATE_TABLE();
          the_data.base = global_data_1.global_data.get_lobby_base_info2();
          the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
          the_data.session = global_data_1.global_data.get_the_user_data()._str_session;
          the_data.mac = global_data_1.global_data.get_mac();
          the_data.gameid = game_auxi._int_game_id;
          the_data.ruleitem = game_auxi._int_base_index;
          the_data.tallykind = game_auxi._int_item_index;
          game_auxi._str_rule && (the_data.rule = game_auxi._str_rule);
          game_auxi._the_auxi_socket.sendData(protocols_1.protocols.MDM_AUXI, protocols_1.protocols.SUB_AUXI_CREATE_TABLE, the_data.toBuffer());
          console.log("\u521b\u5efa\u684c\u5b50\u534f\u8bae...");
        } else if (game_auxi._private_room_type == game_auxi.PRI_ROOM_TYPE_ENTER) {
          let the_data = new protocols_1.protocols.CMD_AUXI_JOIN_TABLE();
          the_data.base = global_data_1.global_data.get_lobby_base_info2();
          the_data.code = game_auxi._enter_private_code;
          game_auxi._the_auxi_socket.sendData(protocols_1.protocols.MDM_AUXI, protocols_1.protocols.SUB_AUXI_JOIN_TABLE, the_data.toBuffer());
          console.log("\u8fdb\u5165\u684c\u5b50\u534f\u8bae...");
        } else if (game_auxi._private_room_type == game_auxi.PRI_ROOM_TYPE_DISMISS) {
          let the_data = new protocols_1.protocols.CMD_AUXI_DISMISS_TABLE();
          the_data.base = global_data_1.global_data.get_lobby_base_info2();
          the_data.code = game_auxi._str_dismiss_room_code;
          the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
          the_data.session = global_data_1.global_data.get_the_user_data()._str_session;
          game_auxi._the_auxi_socket.sendData(protocols_1.protocols.MDM_AUXI, protocols_1.protocols.SUB_AUXI_DISMISS_TABLE, the_data.toBuffer());
          console.log("\u89e3\u6563\u684c\u5b50\u534f\u8bae...");
        } else if (game_auxi._private_room_type == game_auxi.PRI_ROOM_TYPE_SELECT) {
          let the_data = new protocols_1.protocols.CMD_AUXI_QUERY_TABLE();
          the_data.base = global_data_1.global_data.get_lobby_base_info2();
          the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
          the_data.session = global_data_1.global_data.get_the_user_data()._str_session;
          game_auxi._the_auxi_socket.sendData(protocols_1.protocols.MDM_AUXI, protocols_1.protocols.SUB_AUXI_QUERY_TABLE, the_data.toBuffer());
          console.log("\u67e5\u8be2\u79c1\u4eba\u623f\u684c\u5b50\u534f\u8bae...");
        }
      }
      game_auxi.on_socket_connect = on_socket_connect;
      function on_socket_close() {
        console.log("\u7f51\u7edc\u5173\u95ed\u72b6\u6001");
      }
      game_auxi.on_socket_close = on_socket_close;
      function on_socket_error(event) {
        console.log("\u7f51\u7edc\u9519\u8bef", event);
        utils_1.utils.hide_loading();
        utils_1.utils.send("EnterAuxiResultError");
      }
      game_auxi.on_socket_error = on_socket_error;
      function on_socket_receive(int_main_id, int_sub_id, ptr_data) {
        if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_CREATE_TABLE_SUCCESS) {
          let ptr_success = new protocols_1.protocols.CMD_AUXI_CREATE_TABLE_SUCCESS();
          ptr_success.fromBuffer(ptr_data);
          console.log("\u7528\u6237\u521b\u5efa\u623f\u95f4\u6210\u529f...", ptr_success.code);
          game_auxi._int_enter_game_id = ptr_success.gameid;
          game_auxi._int_enter_room_id = ptr_success.roomid;
          game_auxi._enter_private_code = ptr_success.code;
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_CREATE_TABLE_SUCCESS_V20,
            str_result: ""
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_CREATE_TABLE_FAIL) {
          let ptr_message = new protocols_1.protocols.CMD_AUXI_CREATE_TABLE_FAIL();
          ptr_message.fromBuffer(ptr_data);
          let uint_flag = ptr_message.flag;
          console.log("\u7528\u6237\u521b\u5efa\u623f\u95f4\u5931\u8d25...", uint_flag);
          console.log("\u5931\u8d25\u4fe1\u606f", ptr_message.message);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_CREATE_TABLE_FAIL_V20,
            str_result: ptr_message.message
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_DISMISS_TABLE_SUCCESS) {
          let ptr_message = new protocols_1.protocols.CMD_AUXI_DISMISS_TABLE_SUCCESS();
          ptr_message.fromBuffer(ptr_data);
          console.log("\u7528\u6237\u89e3\u6563\u623f\u95f4\u6210\u529f...", ptr_message.flag);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_DISMISS_TABLE_SUCCESS_V20,
            str_result: ""
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_DISMISS_TABLE_FAIL) {
          let ptr_message = new protocols_1.protocols.CMD_AUXI_DISMISS_TABLE_FAIL();
          ptr_message.fromBuffer(ptr_data);
          console.log("\u7528\u6237\u89e3\u6563\u623f\u95f4\u5931\u8d25...", ptr_message.flag);
          console.log("\u5931\u8d25\u4fe1\u606f", ptr_message.message);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_DISMISS_TABLE_FAIL_V20,
            str_result: ptr_message.message
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_JOIN_TABLE_SUCCESS) {
          let ptr_join_success = new protocols_1.protocols.CMD_AUXI_JOIN_TABLE_SUCCESS();
          ptr_join_success.fromBuffer(ptr_data);
          game_auxi._struct_enter_private_data = new struct_enter_private_data();
          game_auxi._int_enter_game_id = ptr_join_success.gameid;
          game_auxi._int_enter_room_id = ptr_join_success.roomid;
          game_auxi._struct_enter_private_data.nickname = utils_1.utils.gbk_2_utf8(ptr_join_success.nickname);
          game_auxi._struct_enter_private_data.kind_name = ptr_join_success.tallyname;
          game_auxi._struct_enter_private_data.gameid = ptr_join_success.gameid;
          console.log("\u7528\u6237\u52a0\u5165\u623f\u95f4\u6210\u529f...", ptr_join_success.gameid);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_JOIN_TABLE_SUCCESS_V20,
            str_result: ""
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && protocols_1.protocols.SUB_AUXI_JOIN_TABLE_FAIL == int_sub_id) {
          let ptr_message = new protocols_1.protocols.CMD_AUXI_JOIN_TABLE_FAIL();
          ptr_message.fromBuffer(ptr_data);
          console.log("\u7528\u6237\u52a0\u5165\u623f\u95f4\u5931\u8d25...", ptr_message.flag);
          console.log("\u5931\u8d25\u4fe1\u606f", ptr_message.message);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_JOIN_TABLE_FAIL_V20,
            str_result: ptr_message.message
          });
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_QUERY_TABLE_SUCCESS) {
          let cmd_data = new protocols_1.protocols.CMD_AUXI_QUERY_TABLE_SUCCESS();
          cmd_data.fromBuffer(ptr_data);
          let int_room_count = cmd_data.auxi_query_table.length;
          game_auxi._vector_my_private_room = [];
          if (int_room_count > 0) for (let i = 0; i < int_room_count; i++) {
            let ptr_room_data = cmd_data.auxi_query_table[i];
            let the_private_data = new struct_select_private_data();
            the_private_data.code = ptr_room_data.code;
            the_private_data.gameid = ptr_room_data.gameid;
            the_private_data.kind_name = ptr_room_data.tallyname;
            the_private_data.tatalcount = ptr_room_data.totalcount;
            the_private_data.currentcount = ptr_room_data.currcount;
            game_auxi._vector_my_private_room.push(the_private_data);
          }
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_QUERY_TABLE_SUCCESS_V20,
            str_result: ""
          });
          console.log("\u7528\u6237\u67e5\u8be2\u623f\u95f4\u6210\u529f...", int_room_count);
        } else if (int_main_id == protocols_1.protocols.MDM_AUXI && int_sub_id == protocols_1.protocols.SUB_AUXI_QUERY_TABLE_FAIL) {
          let ptr_message = new protocols_1.protocols.CMD_AUXI_QUERY_TABLE_FAIL();
          ptr_message.fromBuffer(ptr_data);
          console.log("\u7528\u6237\u67e5\u8be2\u623f\u95f4\u5931\u8d25...", ptr_message.flag);
          console.log("\u5931\u8d25\u4fe1\u606f", ptr_message.message);
          utils_1.utils.send("EnterAuxiResult", {
            int_code: game_auxi.SUB_AUXI_QUERY_TABLE_FAIL_V20,
            str_result: ptr_message.message
          });
        } else {
          console.log("\u63a5\u6536\u672a\u77e5\u9519\u8bef...");
          utils_1.utils.send("EnterAuxiResult", {
            int_code: -1,
            str_result: "\u597d\u53cb\u623f\u5931\u8d25..."
          });
        }
        game_auxi._the_auxi_socket.close();
      }
      game_auxi.on_socket_receive = on_socket_receive;
    })(game_auxi = exports.game_auxi || (exports.game_auxi = {}));
    window && (window.game_auxi = game_auxi);
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../common/websocket": "websocket",
    "../global_data": "global_data",
    "../protocols": "protocols"
  } ],
  game_controller: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e3b79zn5hFK46NXMGhHd5kq", "game_controller");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.game_controller = void 0;
    const room_controller_1 = require("./room_controller");
    const protocols_1 = require("../protocols");
    const global_data_1 = require("../global_data");
    const global_define_1 = require("../global_define");
    const lobby_framework_1 = require("../lobby_framework");
    const utils_1 = require("../../common/utils");
    var game_controller;
    (function(game_controller) {
      var _int_user_id = 0;
      var _ptr_frame_user_data = null;
      var _the_server_info = null;
      var _the_option = null;
      function init() {
        _int_user_id = 0;
        _ptr_frame_user_data = new Array();
        _the_server_info = new protocols_1.protocols.IPC_GF_ServerInfo();
        _the_option = new protocols_1.protocols.CMD_GF_Option();
      }
      game_controller.init = init;
      function get_room_data() {
        return room_controller_1.room_controller.get_room_data();
      }
      game_controller.get_room_data = get_room_data;
      function on_channel_message(int_main_id, int_sub_id, data) {
        if (int_main_id == protocols_1.protocols.IPC_MAIN_SOCKET) return on_socket_message(int_main_id, int_sub_id, data);
        if (int_main_id == protocols_1.protocols.IPC_MAIN_CONFIG) return on_config_message(int_main_id, int_sub_id, data);
        if (int_main_id == protocols_1.protocols.IPC_MAIN_USER) return on_user_message(int_main_id, int_sub_id, data);
        if (int_main_id == protocols_1.protocols.IPC_MAIN_CONCTROL) return on_control_message(int_main_id, int_sub_id, data);
        return true;
      }
      game_controller.on_channel_message = on_channel_message;
      function on_socket_message(int_main_id, int_sub_id, data) {
        if (int_sub_id == protocols_1.protocols.IPC_SUB_SOCKET_RECV) {
          let ptr_package = data;
          if (ptr_package.wMainCmdID == protocols_1.protocols.MDM_FRAME) return on_frame_message(ptr_package.wMainCmdID, ptr_package.wSubCmdID, ptr_package.cbBuffer);
          if (ptr_package.wMainCmdID == protocols_1.protocols.MDM_GAME) return on_game_message(ptr_package.wMainCmdID, ptr_package.wSubCmdID, ptr_package.cbBuffer);
        }
        return true;
      }
      game_controller.on_socket_message = on_socket_message;
      function on_frame_message(int_main_id, int_sub_id, data) {
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_OPTION) {
          _the_option = new protocols_1.protocols.CMD_GF_Option();
          _the_option.fromBuffer(data);
          return true;
        }
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_SCENE) return true;
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_CHAT) {
          let ptr_user_chat = new protocols_1.protocols.CMD_USER_CHAT();
          ptr_user_chat.fromBuffer(data);
          let user_data = get_user_data_by_user_id(ptr_user_chat.userid);
          if (null == user_data) return true;
          return on_game_user_chat(user_data, ptr_user_chat.chat);
        }
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_MESSAGE) {
          let ptr_message = new protocols_1.protocols.CMD_FRAME_MESSAGE();
          ptr_message.fromBuffer(data);
          2 == ptr_message.type && utils_1.utils.show_hint(ptr_message.message);
          return true;
        }
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_KICKOUT_RET) {
          let kickout_ret_data = new protocols_1.protocols.CMD_FRAME_KICKOUT_RET();
          kickout_ret_data.fromBuffer(data);
          if (_int_user_id != kickout_ret_data.userid) return;
          switch (kickout_ret_data.flag) {
           case 0:
            let ptr_user_data = get_user_data_by_user_id(kickout_ret_data.touserid);
            if (null == ptr_user_data) return;
            let str_message = "\u73a9\u5bb6\u3010" + ptr_user_data.szName + "\u3011\u5df2\u88ab\u8e22\u79bb\u623f\u95f4\u3002";
            utils_1.utils.show_hint(str_message);
            break;

           case 1:
            utils_1.utils.show_hint("\u6b63\u5728\u6e38\u620f\u4e2d\uff0c\u65e0\u6cd5\u8e22TA\u79bb\u5f00\u3002");
            break;

           case 2:
            utils_1.utils.show_hint("\u65e0\u6cd5\u8e22\u51faVIP\u7b49\u7ea7\u6bd4\u81ea\u5df1\u9ad8\u7684\u73a9\u5bb6\u3002");
            break;

           case 3:
            utils_1.utils.show_hint("\u60a8\u5f53\u524d\u6ca1\u6709\u8e22\u4eba\u5361\u3002");
            break;

           case 4:
            utils_1.utils.show_hint("\u5bf9\u65b9\u5df2\u7ecf\u79bb\u5f00\uff0c\u65e0\u9700\u8e22TA\u79bb\u5f00\u3002");
          }
          return true;
        }
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_KICKOUT_NOTICE) {
          let kickout_data = new protocols_1.protocols.CMD_FRAME_KICKOUT_NOTICE();
          kickout_data.fromBuffer(data);
          if (_int_user_id == kickout_data.userid) return true;
          if (_int_user_id == kickout_data.touserid) {
            stand_up(false);
            let ptr_user_data = get_user_data_by_user_id(kickout_data.userid);
            if (null == ptr_user_data) return true;
            utils_1.utils.show_message_box({
              content: "\u60a8\u88ab\u3010" + ptr_user_data.szName + "\u3011\u8bf7\u51fa\u4e86\u8be5\u6e38\u620f\u684c\u5b50\u3002",
              button_count: 2,
              onClick: index => {
                0 == index && on_btn_kick_message_changetable(null);
              }
            });
            return true;
          }
          return true;
        }
        if (int_sub_id == protocols_1.protocols.SUB_FRAME_REDPACKET_GAMEC) {
          let ptr_gamec = new protocols_1.protocols.CMD_REDPACKET_INFO();
          ptr_gamec.fromBuffer(data);
          if (ptr_gamec.userid != global_data_1.global_data.get_the_user_data()._int_user_id) return true;
          utils_1.utils.send("RedpacketCountUpdate", ptr_gamec.finish_count, ptr_gamec.totle_count, ptr_gamec.interval - ptr_gamec.pass_time);
          return true;
        }
        return true;
      }
      game_controller.on_frame_message = on_frame_message;
      function on_btn_kick_message_changetable(obj) {
        re_sit_down();
      }
      game_controller.on_btn_kick_message_changetable = on_btn_kick_message_changetable;
      function on_config_message(int_main_id, int_sub_id, data) {
        if (int_sub_id == protocols_1.protocols.IPC_SUB_SERVER_INFO) {
          let ptr_server_info = data;
          console.log("ptr_server_info : ", ptr_server_info);
          _the_server_info = ptr_server_info;
          _int_user_id = _the_server_info.dwUserID;
        }
        return true;
      }
      game_controller.on_config_message = on_config_message;
      function on_user_message(int_main_id, int_sub_id, data) {
        if (int_sub_id == protocols_1.protocols.IPC_SUB_USER_COME) {
          let the_user_data = data;
          let the_user = new protocols_1.protocols.tagUserData();
          the_user.wFaceID = the_user_data.wFaceID;
          the_user.wTableID = the_user_data.wTableID;
          the_user.wChairID = the_user_data.wChairID;
          the_user.wNetDelay = the_user_data.wNetDelay;
          the_user.cbGender = the_user_data.cbGender;
          the_user.cbMember = the_user_data.cbMember;
          the_user.cbUserStatus = the_user_data.cbUserStatus;
          the_user.dwUserID = the_user_data.dwUserID;
          the_user.dwGroupID = the_user_data.dwGroupID;
          the_user.dwUserRight = the_user_data.dwUserRight;
          the_user.dwMasterRight = the_user_data.dwMasterRight;
          the_user.lGold = the_user_data.lGold;
          the_user.lScore = the_user_data.lScore;
          the_user.lWinCount = the_user_data.lWinCount;
          the_user.lLostCount = the_user_data.lLostCount;
          the_user.lDrawCount = the_user_data.lDrawCount;
          the_user.lFleeCount = the_user_data.lFleeCount;
          the_user.lExperience = the_user_data.lExperience;
          the_user.cbFaceEnable = the_user_data.cbFaceEnable;
          the_user.lCharm = the_user_data.lCharm;
          the_user.lPraise = the_user_data.lPraise;
          the_user.cbCameraStatus = the_user_data.cbCameraStatus;
          the_user.szName = the_user_data.szName;
          the_user.szGroupName = the_user_data.szGroupName;
          return insert_user_data(the_user);
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_USER_STATUS) {
          let ptr_user_status = data;
          if (!(ptr_user_status.cbUserStatus < global_define_1.CONST.US_SIT)) return update_user_data(ptr_user_status.dwUserID, ptr_user_status.cbUserStatus, ptr_user_status.wNetDelay);
          if (ptr_user_status.dwUserID != _int_user_id) return delete_user_data(ptr_user_status.dwUserID);
          return true;
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_USER_SCORE) {
          let ptr_user_score = data;
          let ptr_user_data = get_user_data_by_user_id(ptr_user_score.userid);
          if (null == ptr_user_data) return true;
          let bool_notice = false;
          ptr_user_score.data.lGold == ptr_user_data.lGold && ptr_user_score.data.lScore == ptr_user_data.lScore || (bool_notice = true);
          let old_gold = ptr_user_data.lGold;
          let old_score = ptr_user_data.lScore;
          ptr_user_data.lGold = ptr_user_score.data.lGold;
          ptr_user_data.gametime = ptr_user_score.data.dwGameTime;
          ptr_user_data.lScore = ptr_user_score.data.lScore;
          ptr_user_data.lWinCount = ptr_user_score.data.lWinCount;
          ptr_user_data.lLostCount = ptr_user_score.data.lLostCount;
          ptr_user_data.lDrawCount = ptr_user_score.data.lDrawCount;
          ptr_user_data.lFleeCount = ptr_user_score.data.lFleeCount;
          ptr_user_data.lExperience = ptr_user_score.data.lExperience;
          ptr_user_data.lCharm = ptr_user_score.data.nCharm;
          ptr_user_data.lPraise = ptr_user_score.data.nPraise;
          if (bool_notice) {
            let ret = on_game_user_score(ptr_user_data, ptr_user_data.cbUserStatus == global_define_1.CONST.US_LOOKON);
            if (!ret) {
              ptr_user_data.lGold = old_gold;
              ptr_user_data.lScore = old_score;
            }
            return ret;
          }
          return true;
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_GAME_START) {
          let all_send = true;
          _ptr_frame_user_data.forEach(element => {
            element.cbUserStatus = global_define_1.CONST.US_PLAY;
            if (false == on_game_user_status(element, false)) {
              all_send = false;
              return;
            }
          });
          return all_send;
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_GAME_FINISH) {
          let all_send = true;
          _ptr_frame_user_data.forEach(element => {
            element.cbUserStatus = global_define_1.CONST.US_SIT;
            if (false == on_game_user_status(element, false)) {
              all_send = false;
              return;
            }
          });
          return all_send;
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_REDPACKET_INFO) {
          let ptr_user_redpacket = data;
          if (ptr_user_redpacket.userid != global_data_1.global_data.get_the_user_data()._int_user_id) return true;
          utils_1.utils.send("RedpacketInfoUpdate", ptr_user_redpacket);
          return true;
        }
        return true;
      }
      game_controller.on_user_message = on_user_message;
      function on_control_message(int_main_id, int_sub_id, data) {
        if (int_sub_id == protocols_1.protocols.IPC_SUB_START_FINISH) {
          let the_data = new protocols_1.protocols.CMD_FRAME_INFO();
          the_data.allowlookon = _the_option.bAllowLookon;
          return send_data(protocols_1.protocols.MDM_FRAME, protocols_1.protocols.SUB_FRAME_INFO, the_data.toBuffer());
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_CLOSE_FRAME) {
          close_to_room();
          return true;
        }
        if (int_sub_id == protocols_1.protocols.IPC_SUB_NOTICT_FRAME) return true;
        return true;
      }
      game_controller.on_control_message = on_control_message;
      function close_room(legal = false, lobbyhint) {
        room_controller_1.room_controller.close_room(legal, lobbyhint);
      }
      game_controller.close_room = close_room;
      function re_sit_down(table_id = global_define_1.CONST.INVALID_TABLE, chair_id = global_define_1.CONST.INVALID_CHAIR) {
        return room_controller_1.room_controller.sit_down(table_id, chair_id);
      }
      game_controller.re_sit_down = re_sit_down;
      function stand_up(bool_force) {
        return room_controller_1.room_controller.stand_up(bool_force);
      }
      game_controller.stand_up = stand_up;
      function close_to_room(legal = false, lobbyhint) {
        setTimeout(() => {
          close_room(legal, lobbyhint);
        }, .1);
      }
      game_controller.close_to_room = close_to_room;
      function set_game_status(param_status) {
        _the_option.bGameStatus = param_status;
      }
      game_controller.set_game_status = set_game_status;
      function get_game_status() {
        if (_the_option) return _the_option.bGameStatus;
        return 0;
      }
      game_controller.get_game_status = get_game_status;
      function send_game_ready() {
        let tt = new ArrayBuffer(0);
        return send_data(protocols_1.protocols.MDM_FRAME, protocols_1.protocols.SUB_FRAME_READY, tt);
      }
      game_controller.send_game_ready = send_game_ready;
      function send_game_data(param_id, param_json) {
        return send_data(protocols_1.protocols.MDM_GAME, param_id, "string" == typeof param_json ? utils_1.utils.str2ab(param_json) : param_json);
      }
      game_controller.send_game_data = send_game_data;
      function send_data(mainCmdID, subCmdID, arrayBuffer) {
        return room_controller_1.room_controller.send_data_to_server(mainCmdID, subCmdID, arrayBuffer);
      }
      game_controller.send_data = send_data;
      function insert_user_data(ptr_user_data) {
        if (ptr_user_data.wTableID == global_define_1.CONST.INVALID_TABLE) {
          if (_int_user_id != ptr_user_data.dwUserID) return true;
          _ptr_frame_user_data = new Array();
        }
        if (ptr_user_data.wChairID >= _the_server_info.wChairCount) return true;
        _ptr_frame_user_data.push(ptr_user_data);
        let ret = on_game_user_enter(ptr_user_data, ptr_user_data.cbUserStatus == global_define_1.CONST.US_LOOKON);
        ret || _ptr_frame_user_data.pop();
        return ret;
      }
      game_controller.insert_user_data = insert_user_data;
      function delete_user_data(user_id) {
        let l = _ptr_frame_user_data.filter(x => x.dwUserID == user_id);
        if (l && l.length > 0) {
          let ret = on_game_user_left(l[0], l[0].cbUserStatus == global_define_1.CONST.US_LOOKON);
          ret && (_ptr_frame_user_data = _ptr_frame_user_data.filter(x => x != l[0]));
          return ret;
        }
        return true;
      }
      game_controller.delete_user_data = delete_user_data;
      function update_user_data(int_user_id, int_status, int_net_delay) {
        let ptr_user_data = get_user_data_by_user_id(int_user_id);
        if (null == ptr_user_data) return true;
        ptr_user_data.wNetDelay = int_net_delay;
        ptr_user_data.cbUserStatus = int_status;
        return on_game_user_status(ptr_user_data, int_status == global_define_1.CONST.US_LOOKON);
      }
      game_controller.update_user_data = update_user_data;
      function get_user_data_by_user_id(int_user_id) {
        let l = _ptr_frame_user_data.filter(x => x.dwUserID == int_user_id);
        if (l && l.length > 0) return l[0];
        return null;
      }
      game_controller.get_user_data_by_user_id = get_user_data_by_user_id;
      function get_user_data_by_chair_id(int_chair_id) {
        null == _ptr_frame_user_data && (_ptr_frame_user_data = new Array());
        let user = _ptr_frame_user_data.filter(x => x.wChairID == int_chair_id);
        if (user && user.length > 0) return user[0];
        return null;
      }
      game_controller.get_user_data_by_chair_id = get_user_data_by_chair_id;
      function get_self_user_data() {
        return get_user_data_by_user_id(_int_user_id);
      }
      game_controller.get_self_user_data = get_self_user_data;
      function switch_to_view_id(chair_id) {
        let ptr_user_data = get_self_user_data();
        if (null == ptr_user_data) return -1;
        let chair_count = _the_server_info.wChairCount;
        let view_id = chair_id + chair_count - ptr_user_data.wChairID;
        switch (chair_count) {
         case 2:
         case 3:
          view_id += 1;
          break;

         case 4:
         case 5:
          view_id += 2;
          break;

         case 6:
         case 7:
          view_id += 3;
          break;

         case 8:
          view_id += 4;
        }
        return view_id % chair_count;
      }
      game_controller.switch_to_view_id = switch_to_view_id;
      function switch_to_chair_id(view_id) {
        let ptr_user_data = get_self_user_data();
        if (null == ptr_user_data) return -1;
        let chair_count = _the_server_info.wChairCount;
        let chair_id = view_id + chair_count;
        switch (chair_count) {
         case 2:
         case 3:
          chair_id -= 1;
          break;

         case 4:
         case 5:
          chair_id -= 2;
          break;

         case 6:
         case 7:
          chair_id -= 3;
          break;

         case 8:
          chair_id -= 4;
        }
        return (chair_id + ptr_user_data.wChairID) % chair_count;
      }
      game_controller.switch_to_chair_id = switch_to_chair_id;
      function pause_message() {
        return room_controller_1.room_controller.pause_message();
      }
      game_controller.pause_message = pause_message;
      function restore_message() {
        return room_controller_1.room_controller.restore_message();
      }
      game_controller.restore_message = restore_message;
      function send_user_chat(str_chat) {
        if (null == get_self_user_data()) return true;
        let the_data = new protocols_1.protocols.CMD_USER_CHAT();
        the_data.color = 0;
        the_data.touserid = 0;
        the_data.userid = get_self_user_data().dwUserID;
        let tt = utils_1.utils.utf8_2_gbk(str_chat);
        the_data.chat = str_chat;
        the_data.len = tt.byteLength + 1;
        return send_data(protocols_1.protocols.MDM_FRAME, protocols_1.protocols.SUB_FRAME_CHAT, the_data.toBuffer());
      }
      game_controller.send_user_chat = send_user_chat;
      function send_user_report(the_unit) {
        if (the_unit.user_count <= 0) return false;
        if (the_unit.user_count >= 8) return false;
        if (the_unit.report_kind > global_define_1.CONST.KIND_REPORT_COUNT) return false;
        if (the_unit.report_kind <= global_define_1.CONST.KIND_REPORT_NULL) return false;
        let the_data = new protocols_1.protocols.CMD_FRAME_REPORT();
        the_data.userid = new Array(8);
        for (let i = 0; i < 8; ++i) the_unit.user_id[i] ? the_data.userid[i] = the_unit.user_id[i] : the_data.userid[i] = 0;
        the_data.count = the_unit.user_count;
        the_data.kind = the_unit.report_kind;
        return send_data(protocols_1.protocols.MDM_FRAME, protocols_1.protocols.SUB_FRAME_REPORT, the_data.toBuffer());
      }
      game_controller.send_user_report = send_user_report;
      function send_user_kick(userid, touserid) {
        if (userid == touserid) return true;
        let the_data = new protocols_1.protocols.CMD_FRAME_KICKOUT();
        the_data.userid = userid;
        the_data.touserid = touserid;
        return send_data(protocols_1.protocols.MDM_FRAME, protocols_1.protocols.SUB_FRAME_KICKOUT, the_data.toBuffer());
      }
      game_controller.send_user_kick = send_user_kick;
      function on_game_message(int_main_id, int_sub_id, data) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_message(int_main_id, int_sub_id, data);
          return true;
        }
        return false;
      }
      game_controller.on_game_message = on_game_message;
      function on_game_user_left(ptr_user_data, bool_look) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_left(ptr_user_data, bool_look);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_left = on_game_user_left;
      function on_game_user_status(ptr_user_data, bool_look) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_status(ptr_user_data, bool_look);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_status = on_game_user_status;
      function on_game_user_enter(ptr_user_data, bool_look) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_enter(ptr_user_data, bool_look);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_enter = on_game_user_enter;
      function on_game_user_data(ptr_user_data, bool_look) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_data(ptr_user_data, bool_look);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_data = on_game_user_data;
      function on_game_user_score(ptr_user_data, bool_look) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_score(ptr_user_data, bool_look);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_score = on_game_user_score;
      function on_game_user_chat(ptr_user_data, string_chat) {
        if (lobby_framework_1.lobby_framework.get_game_engine()) {
          lobby_framework_1.lobby_framework.get_game_engine().on_game_user_chat(ptr_user_data, string_chat);
          return true;
        }
        return false;
      }
      game_controller.on_game_user_chat = on_game_user_chat;
    })(game_controller = exports.game_controller || (exports.game_controller = {}));
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../lobby_framework": "lobby_framework",
    "../protocols": "protocols",
    "./room_controller": "room_controller"
  } ],
  game_state: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cefdaR0kiVN/aAB3E1ox5xS", "game_state");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.game_state = void 0;
    const lobby_framework_1 = require("../lobby_framework");
    const state_1 = require("./state");
    const global_data_1 = require("../global_data");
    const task_1 = require("../../common/task");
    const utils_1 = require("../../common/utils");
    const global_define_1 = require("../global_define");
    const room_controller_1 = require("../game/room_controller");
    class game_state extends state_1.base_state {
      constructor() {
        super(...arguments);
        this.room_data = null;
        this.game_data = null;
        this.code = null;
        this.game_update_id = null;
        this.enter_game_timer = -1;
      }
      onEnter(from, event) {
        console.log("game_state enter!", event);
        this.room_data = event.room;
        this.game_data = event.game;
        this.code = event.code;
        let that = this;
        room_controller_1.room_controller.init();
        utils_1.utils.on("BackToLobby", this, this.onEventBackToLobby);
        utils_1.utils.on("ReEnterGame", this, this.onEventReEnterGame);
        utils_1.utils.on("EnterGameTimer", this, this.onEventEnterGameTimer);
        utils_1.utils.on("PushTask", this, this.onEventPushTask);
        utils_1.utils.on("RefreshTaskButtonRedPoint", this, this.onEventRefreshTaskButtonRedPoint);
        global_data_1.global_data.current_room_data = this.room_data;
        let percent = 0;
        let launch_game_task = new task_1.strict_task("launch_game_task");
        launch_game_task.add_sub_task(new task_1.task("preload_scene").do((done, fail) => {
          utils_1.utils.show_loading("\u6b63\u5728\u8fdb\u5165\u6e38\u620f");
          let l_game_scene = global_data_1.global_data.get_game_scene_by_id(this.room_data._int_game_id);
          cc.director.preloadScene(l_game_scene["loadscene"], (completeCount, totalCount, item) => {
            if (totalCount > 1) {
              let new_percent = Math.floor(completeCount / totalCount * 100);
              new_percent > percent && (percent = new_percent);
              utils_1.utils.show_loading_text(`\u6b63\u5728\u8fdb\u5165\u6e38\u620f... (${percent}%)`);
            } else utils_1.utils.show_loading_text("\u6b63\u5728\u8fdb\u5165\u6e38\u620f...");
          }, error => {
            if (error) {
              utils_1.utils.send("BackToLobby", {
                reason: 1004,
                type: "hint",
                msg: "\u52a0\u8f7d\u573a\u666f\u5931\u8d25\uff0c\u8bf7\u4fee\u590d\u5ba2\u6237\u7aef\u5e76\u518d\u6b21\u5c1d\u8bd5\uff01",
                legal: true
              });
              fail();
            } else done();
          });
        }));
        launch_game_task.add_sub_task(new task_1.task("connect").do((done, fail) => {
          room_controller_1.room_controller.init_game_room(that.room_data, that.game_data, that.code) ? done() : fail();
        }));
        launch_game_task.run();
        this.game_update_id = setInterval(function() {
          that.update(.01);
        }, 10);
      }
      onExit(to, event) {
        utils_1.utils.off("ReEnterGame", this, this.onEventReEnterGame);
        utils_1.utils.off("BackToLobby", this, this.onEventBackToLobby);
        utils_1.utils.off("EnterGameTimer", this, this.onEventEnterGameTimer);
        utils_1.utils.off("PushTask", this, this.onEventPushTask);
        utils_1.utils.off("RefreshTaskButtonRedPoint", this, this.onEventRefreshTaskButtonRedPoint);
        room_controller_1.room_controller.cleanup();
        global_data_1.global_data.chat_records = [];
        global_data_1.global_data.current_room_data = null;
        if (this.game_update_id) {
          clearInterval(this.game_update_id);
          this.game_update_id = null;
        }
        this.enter_game_timer = -1;
      }
      onEventReEnterGame(target_room_data) {
        lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Game, {
          room: target_room_data
        });
      }
      onEventBackToLobby(data) {
        console.log("onEventBackToLobby", data);
        if ("reenter" == data.type) {
          setTimeout(() => {
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
              reason: data.reason,
              type: "reenter",
              room: data.room
            });
          }, 1);
          return;
        }
        global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_ROOM && utils_1.utils.show_loading_cancel("\u8fdb\u5165\u623f\u95f4\u5931\u8d25\uff0c\u70b9\u51fb\u4efb\u610f\u533a\u57df\u53d6\u6d88...");
        if (data.msg) if ("hint" == data.type) {
          utils_1.utils.show_hint(data.msg);
          setTimeout(() => {
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
              reason: data.reason,
              legal: data.legal
            });
          }, 1e3);
        } else if ("msgbox" == data.type) {
          if (global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME) return;
          utils_1.utils.show_message_box({
            content: data.msg,
            button_count: 1,
            onClick: () => {
              lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
                reason: data.reason,
                legal: data.legal
              });
            }
          });
        } else "lobbyhint" == data.type ? setTimeout(() => {
          if (global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME) return;
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
            reason: data.reason,
            hint: data.msg,
            legal: data.legal
          });
        }, 1) : setTimeout(() => {
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
            reason: data.reason,
            legal: data.legal
          });
        }, 1); else setTimeout(() => {
          lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
            reason: data.reason,
            legal: data.legal
          });
        }, 1);
      }
      onEventEnterGameTimer(time) {
        this.enter_game_timer = time;
      }
      onEventPushTask(task) {
        task.gameid == this.game_data._int_game_id && utils_1.utils.send("TaskTipUpdated", true);
      }
      onEventRefreshTaskButtonRedPoint(param) {
        let v1 = global_data_1.global_data.new_task_data.forever_tasks.some(x => 2 == x.status && x.gameid == this.game_data._int_game_id);
        let v2 = global_data_1.global_data.new_task_data.day_tasks.some(x => 2 == x.status && x.gameid == this.game_data._int_game_id);
        let v3 = global_data_1.global_data.new_task_data.week_tasks.some(x => 2 == x.status && x.gameid == this.game_data._int_game_id);
        utils_1.utils.send("TaskTipUpdated", v1 || v2 || v3);
      }
      update(dt) {
        room_controller_1.room_controller.update(dt);
        if (this.enter_game_timer > 0) {
          this.enter_game_timer -= dt;
          if (this.enter_game_timer < 0) {
            this.enter_game_timer = -1;
            console.log("enterGameTimer up");
            if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) {
              utils_1.utils.show_loading_cancel("\u8fdb\u5165\u623f\u95f4\u5931\u8d25\uff0c\u70b9\u51fb\u4efb\u610f\u533a\u57df\u53d6\u6d88...");
              lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
                reason: 1012,
                legal: true
              });
            }
          }
        }
      }
    }
    exports.game_state = game_state;
    cc._RF.pop();
  }, {
    "../../common/task": "task",
    "../../common/utils": "utils",
    "../game/room_controller": "room_controller",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../lobby_framework": "lobby_framework",
    "./state": "state"
  } ],
  game_tools: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e59bdyRqcdHEZeYa01Cgi6L", "game_tools");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    const CHandleButton_1 = require("./widget/CHandleButton");
    const table_3d_layout_1 = require("./table_3d_layout");
    const cards_3d_config_1 = require("./cards_3d_config");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let game_tools = (() => {
      let game_tools = class game_tools extends cc.Component {
        static newImg(obj) {
          let name = "newImg";
          obj && null != obj.name && (name = obj.name);
          let n = new cc.Node(name);
          let c = n.addComponent(cc.Sprite);
          c.sizeMode = cc.Sprite.SizeMode.RAW;
          c.trim = false;
          obj && obj.path && (c.spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(obj.path));
          return n;
        }
        static newBtn(obj) {
          let name = "newBtn";
          obj && null != obj.name && (name = obj.name);
          let n = new cc.Node(name);
          let c = n.addComponent(cc.Sprite);
          c.sizeMode = cc.Sprite.SizeMode.RAW;
          c.trim = false;
          obj && obj.normal && (c.spriteFrame = table_3d_layout_1.Layout3DResources.GetSpriteFrame(obj.normal));
          let b = n.addComponent(cc.Button);
          b.interactable = true;
          b.target = b.node;
          b.transition = cc.Button.Transition.SCALE;
          b.zoomScale = .9;
          n.addComponent(CHandleButton_1.default);
          return n;
        }
        static newLabelBM(obj) {
          let name = "newLabelBM";
          obj && null != obj.name && (name = obj.name);
          let n = new cc.Node(name);
          let l = n.addComponent(cc.Label);
          obj.path && (l.font = table_3d_layout_1.Layout3DResources.GetFont(obj.path));
          obj.str && (l.string = obj.str);
          return n;
        }
        static decode(decode) {}
        static readfile(path) {}
        static clone(obj) {
          if (null == obj) return null;
          return JSON.parse(JSON.stringify(obj));
        }
        static enumValues(e) {
          return Object.keys(e).filter(key => isNaN(Number(e[key])));
        }
        static getLayoutViewSize() {
          let w = cc.Canvas.instance.node.width;
          let h = cc.Canvas.instance.node.height;
          let over2 = w / h >= 2;
          if (w / h > 16 / 9) {
            w = h * (16 / 9);
            return {
              width: w,
              height: h,
              over2: over2
            };
          }
          return {
            width: w,
            height: h,
            over2: over2
          };
        }
        static log(...x) {
          cards_3d_config_1.LayoutConfig.log_enable && console.log("", x);
        }
      };
      game_tools = __decorate([ ccclass ], game_tools);
      return game_tools;
    })();
    exports.default = game_tools;
    cc._RF.pop();
  }, {
    "./cards_3d_config": "cards_3d_config",
    "./table_3d_layout": "table_3d_layout",
    "./widget/CHandleButton": "CHandleButton"
  } ],
  "gb18030-ranges": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f5606uQJeFFBoYZ/4jyESLO", "gb18030-ranges");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.gb18030_ranges = void 0;
    exports.gb18030_ranges = {
      uChars: [ 128, 165, 169, 178, 184, 216, 226, 235, 238, 244, 248, 251, 253, 258, 276, 284, 300, 325, 329, 334, 364, 463, 465, 467, 469, 471, 473, 475, 477, 506, 594, 610, 712, 716, 730, 930, 938, 962, 970, 1026, 1104, 1106, 8209, 8215, 8218, 8222, 8231, 8241, 8244, 8246, 8252, 8365, 8452, 8454, 8458, 8471, 8482, 8556, 8570, 8596, 8602, 8713, 8720, 8722, 8726, 8731, 8737, 8740, 8742, 8748, 8751, 8760, 8766, 8777, 8781, 8787, 8802, 8808, 8816, 8854, 8858, 8870, 8896, 8979, 9322, 9372, 9548, 9588, 9616, 9622, 9634, 9652, 9662, 9672, 9676, 9680, 9702, 9735, 9738, 9793, 9795, 11906, 11909, 11913, 11917, 11928, 11944, 11947, 11951, 11956, 11960, 11964, 11979, 12284, 12292, 12312, 12319, 12330, 12351, 12436, 12447, 12535, 12543, 12586, 12842, 12850, 12964, 13200, 13215, 13218, 13253, 13263, 13267, 13270, 13384, 13428, 13727, 13839, 13851, 14617, 14703, 14801, 14816, 14964, 15183, 15471, 15585, 16471, 16736, 17208, 17325, 17330, 17374, 17623, 17997, 18018, 18212, 18218, 18301, 18318, 18760, 18811, 18814, 18820, 18823, 18844, 18848, 18872, 19576, 19620, 19738, 19887, 40870, 59244, 59336, 59367, 59413, 59417, 59423, 59431, 59437, 59443, 59452, 59460, 59478, 59493, 63789, 63866, 63894, 63976, 63986, 64016, 64018, 64021, 64025, 64034, 64037, 64042, 65074, 65093, 65107, 65112, 65127, 65132, 65375, 65510, 65536 ],
      gbChars: [ 0, 36, 38, 45, 50, 81, 89, 95, 96, 100, 103, 104, 105, 109, 126, 133, 148, 172, 175, 179, 208, 306, 307, 308, 309, 310, 311, 312, 313, 341, 428, 443, 544, 545, 558, 741, 742, 749, 750, 805, 819, 820, 7922, 7924, 7925, 7927, 7934, 7943, 7944, 7945, 7950, 8062, 8148, 8149, 8152, 8164, 8174, 8236, 8240, 8262, 8264, 8374, 8380, 8381, 8384, 8388, 8390, 8392, 8393, 8394, 8396, 8401, 8406, 8416, 8419, 8424, 8437, 8439, 8445, 8482, 8485, 8496, 8521, 8603, 8936, 8946, 9046, 9050, 9063, 9066, 9076, 9092, 9100, 9108, 9111, 9113, 9131, 9162, 9164, 9218, 9219, 11329, 11331, 11334, 11336, 11346, 11361, 11363, 11366, 11370, 11372, 11375, 11389, 11682, 11686, 11687, 11692, 11694, 11714, 11716, 11723, 11725, 11730, 11736, 11982, 11989, 12102, 12336, 12348, 12350, 12384, 12393, 12395, 12397, 12510, 12553, 12851, 12962, 12973, 13738, 13823, 13919, 13933, 14080, 14298, 14585, 14698, 15583, 15847, 16318, 16434, 16438, 16481, 16729, 17102, 17122, 17315, 17320, 17402, 17418, 17859, 17909, 17911, 17915, 17916, 17936, 17939, 17961, 18664, 18703, 18814, 18962, 19043, 33469, 33470, 33471, 33484, 33485, 33490, 33497, 33501, 33505, 33513, 33520, 33536, 33550, 37845, 37921, 37948, 38029, 38038, 38064, 38065, 38066, 38069, 38075, 38076, 38078, 39108, 39109, 39113, 39114, 39115, 39116, 39265, 39394, 189e3 ]
    };
    cc._RF.pop();
  }, {} ],
  "gbk-added": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "df58fzd1ENEyb5Iy+kLomIm", "gbk-added");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.gbk_added = void 0;
    exports.gbk_added = [ [ "a140", "\ue4c6", 62 ], [ "a180", "\ue505", 32 ], [ "a240", "\ue526", 62 ], [ "a280", "\ue565", 32 ], [ "a2ab", "\ue766", 5 ], [ "a2e3", "\u20ac\ue76d" ], [ "a2ef", "\ue76e\ue76f" ], [ "a2fd", "\ue770\ue771" ], [ "a340", "\ue586", 62 ], [ "a380", "\ue5c5", 31, "\u3000" ], [ "a440", "\ue5e6", 62 ], [ "a480", "\ue625", 32 ], [ "a4f4", "\ue772", 10 ], [ "a540", "\ue646", 62 ], [ "a580", "\ue685", 32 ], [ "a5f7", "\ue77d", 7 ], [ "a640", "\ue6a6", 62 ], [ "a680", "\ue6e5", 32 ], [ "a6b9", "\ue785", 7 ], [ "a6d9", "\ue78d", 6 ], [ "a6ec", "\ue794\ue795" ], [ "a6f3", "\ue796" ], [ "a6f6", "\ue797", 8 ], [ "a740", "\ue706", 62 ], [ "a780", "\ue745", 32 ], [ "a7c2", "\ue7a0", 14 ], [ "a7f2", "\ue7af", 12 ], [ "a896", "\ue7bc", 10 ], [ "a8bc", "\ue7c7" ], [ "a8bf", "\u01f9" ], [ "a8c1", "\ue7c9\ue7ca\ue7cb\ue7cc" ], [ "a8ea", "\ue7cd", 20 ], [ "a958", "\ue7e2" ], [ "a95b", "\ue7e3" ], [ "a95d", "\ue7e4\ue7e5\ue7e6" ], [ "a989", "\u303e\u2ff0", 11 ], [ "a997", "\ue7f4", 12 ], [ "a9f0", "\ue801", 14 ], [ "aaa1", "\ue000", 93 ], [ "aba1", "\ue05e", 93 ], [ "aca1", "\ue0bc", 93 ], [ "ada1", "\ue11a", 93 ], [ "aea1", "\ue178", 93 ], [ "afa1", "\ue1d6", 93 ], [ "d7fa", "\ue810", 4 ], [ "f8a1", "\ue234", 93 ], [ "f9a1", "\ue292", 93 ], [ "faa1", "\ue2f0", 93 ], [ "fba1", "\ue34e", 93 ], [ "fca1", "\ue3ac", 93 ], [ "fda1", "\ue40a", 93 ], [ "fe50", "\u2e81\ue816\ue817\ue818\u2e84\u3473\u3447\u2e88\u2e8b\ue81e\u359e\u361a\u360e\u2e8c\u2e97\u396e\u3918\ue826\u39cf\u39df\u3a73\u39d0\ue82b\ue82c\u3b4e\u3c6e\u3ce0\u2ea7\ue831\ue832\u2eaa\u4056\u415f\u2eae\u4337\u2eb3\u2eb6\u2eb7\ue83b\u43b1\u43ac\u2ebb\u43dd\u44d6\u4661\u464c\ue843" ], [ "fe80", "\u4723\u4729\u477c\u478d\u2eca\u4947\u497a\u497d\u4982\u4983\u4985\u4986\u499f\u499b\u49b7\u49b6\ue854\ue855\u4ca3\u4c9f\u4ca0\u4ca1\u4c77\u4ca2\u4d13", 6, "\u4dae\ue864\ue468", 93 ] ];
    cc._RF.pop();
  }, {} ],
  global_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3689405fbBK0o1OUtZWTWpr", "global_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.global_data = void 0;
    const protocols_1 = require("./protocols");
    const utils_1 = require("../common/utils");
    const global_define_1 = require("./global_define");
    const lobby_types_1 = require("./lobby_types");
    var global_data;
    (function(global_data) {
      global_data.lobby_version = "";
      global_data.app_version = "";
      global_data.kind_id = 0;
      global_data.game_id = 0;
      global_data.area_id = 0;
      global_data.channel_id = 0;
      global_data.version = 0;
      global_data.keyword = "";
      global_data.package_name = "";
      global_data.mac = "";
      global_data.game_scene_name = [];
      global_data.appid = "";
      global_data.server_protocol = "";
      global_data.logon_server = "";
      global_data.game_server = "";
      global_data.push_server = "";
      global_data.push_port = 0;
      global_data.nav_pay_appid = "";
      global_data.nav_pay_env = "";
      global_data.game_rule_tab_order = [];
      global_data.post_error = true;
      global_data.midas_offer_id = "";
      global_data.midas_env = 0;
      global_data.appkey = "";
      global_data.cpid = "";
      global_data.cpkey = "";
      global_data.pay_pkey = "";
      global_data.dealid = "";
      global_data.qqgameid = "";
      global_data.version_name = "";
      global_data.is_online = false;
      global_data.default_passport = null;
      global_data.force_startup_scene = "";
      global_data.force_use_http = false;
      global_data.force_use_https = false;
      global_data.force_launch_options = null;
      global_data.user_location = "\u672a\u77e5";
      global_data.hide_mode = "";
      global_data.wechat_openId = "";
      global_data.logon_param = null;
      global_data.force_passport_logon = false;
      global_data.request_relogon = false;
      global_data.launch_options = null;
      global_data.share_sign = null;
      global_data.invite_by = null;
      global_data.share_ticket = null;
      global_data.just_share_sign = false;
      global_data.send_share_reward = false;
      global_data.nav_guid = "";
      global_data.pay_result = null;
      global_data.private_code = null;
      global_data.invite_by_user_id = null;
      global_data.private_result = null;
      global_data.invite_by_other = false;
      global_data.match_invite_id = null;
      global_data.is_match_invite = false;
      global_data.lottery_popup = null;
      global_data.local_task = new Map();
      global_data.task_data = [];
      global_data.spriteFrameMap = null;
      global_data.webSpriteFrameCache = null;
      global_data.cached_emotion_clips = new Map();
      global_data.chat_records = [];
      global_data.share_window_state = lobby_types_1.lobby_types.ShareState.Available;
      global_data.force_friend_kind = [ 124, 107, 108, 127, 128, 111, 119, 126, 125 ];
      global_data.force_no_friend_game = [ 124, 138, 142, 147, 999 ];
      global_data.force_no_rule = [ 229, 148, 212, 149 ];
      global_data.custom_lobby = true;
      global_data.custom_lobby_scene_name = "lobbyYiFu";
      class struct_global_user_data {
        constructor() {
          this._int_user_id = 0;
          this._str_account = "";
          this._str_nick_name = "";
          this._str_password = "";
          this._str_password_md5 = "";
          this._long_ingot = 0;
          this._long_gold = 0;
          this._long_charm = 0;
          this._int_user_right = 0;
          this._int_logon_count = 0;
          this._int_pay_count = 0;
          this._int_face_id = 0;
          this._int_sex = 0;
          this._str_phone = "";
          this._int_praise = 0;
          this._str_session = "";
          this._int_master_right = 0;
          this._int_game_time = 0;
          this._int_golden_beans = 0;
          this._int_red_packet = 0;
          this._int_relief_gold = 0;
          this._int_relief_beans = 0;
          this._long_bank_gold = 0;
          this._int_code = 0;
          this._str_ip = "";
          this._float_longitude = 0;
          this._float_latitude = 0;
          this._int_introducer = 0;
          this._int_wantcode = 0;
          this._str_local_address = "";
          this._wechat_nickname = "";
          this._wechat_gender = 0;
          this._wechat_avatar_url = "";
          this._int_experience = 0;
          this._int_ingame = 0;
        }
      }
      global_data.struct_global_user_data = struct_global_user_data;
      class struct_packet_item {
        constructor() {
          this._int_game_id = 0;
          this._int_kind = 0;
          this._int_limit = 0;
          this._int_base = 0;
          this._int_tax = 0;
          this._int_count = 0;
          this._int_money = [ 5 ];
          this._str_name = "";
          this._str_desc = "";
          this._str_base_desc = "";
          this._str_tax_desc = "";
        }
      }
      global_data.struct_packet_item = struct_packet_item;
      class struct_red_packet {
        constructor() {
          this._int_game_id = 0;
          this._int_expire = 0;
          this._str_name = "";
          this._vector_main_item = [];
        }
      }
      global_data.struct_red_packet = struct_red_packet;
      class struct_game_item {
        constructor() {
          this.int_game_id = 0;
          this.the_vector_games = [];
        }
      }
      global_data.struct_game_item = struct_game_item;
      class struct_game_data {
        constructor() {
          this._int_game_id = 0;
          this._str_name = "";
          this._str_desc = "";
        }
      }
      global_data.struct_game_data = struct_game_data;
      class struct_prop_data {
        constructor() {
          this._int_id = 0;
          this._int_mask = 0;
          this._int_type = 0;
          this._str_name = "";
          this._str_caption = "";
          this._bool_can_sale = false;
          this._bool_can_use = false;
        }
      }
      global_data.struct_prop_data = struct_prop_data;
      class struct_status_data {
        constructor() {
          this._int_id = 0;
          this._int_mask = 0;
          this._str_name = "";
          this._str_caption = "";
          this._bool_show = false;
        }
      }
      global_data.struct_status_data = struct_status_data;
      class struct_room_data {
        constructor() {
          this._int_id = 0;
          this._int_room_id = 0;
          this._str_name = "";
          this._int_online_count = 0;
          this._str_address = "";
          this._int_port = 0;
          this._int_game_id = 0;
          this._int_room_mode = 0;
          this._int_room_kind = 0;
          this._int_limit_mask = 0;
          this._int_min_score = 0;
          this._int_max_score = 0;
          this._int_min_gold = 0;
          this._int_max_gold = 0;
          this._int_min_charm = 0;
          this._int_max_charm = 0;
          this._str_rule = "";
          this._int_game_genre = 0;
          this._int_table_count = 0;
          this._int_chair_count = 0;
          this._int_game_version = 0;
        }
      }
      global_data.struct_room_data = struct_room_data;
      global_data.is_wifi = false;
      global_data.last_room_data = null;
      global_data.connected = true;
      global_data.current_room_data = null;
      global_data.current_room_tab_id = 0;
      global_data.game_engine = null;
      var _the_user_data = new struct_global_user_data();
      function get_the_user_data() {
        return _the_user_data;
      }
      global_data.get_the_user_data = get_the_user_data;
      global_data.vector_prop_data = [];
      global_data.vector_status_data = [];
      global_data.map_self_prop_data = new Map();
      global_data.map_self_status_data = new Map();
      global_data.vector_game_data = [];
      global_data._vector_room_data = [];
      global_data._vector_games = [];
      global_data._vector_red_packet = [];
      global_data._int_server_time = 0;
      global_data._int_local_time = 0;
      global_data._vector_relief_game = [];
      global_data._str_relief_share_img_url = "";
      global_data._str_relief_share_img_text = "";
      global_data._int_relief_gold = 0;
      global_data._int_relief_gold_threshold = 0;
      global_data.notices = null;
      global_data.notice_data = [];
      global_data.mail_data = [];
      global_data.taskboard_data = new lobby_types_1.lobby_types.TaskBoardData();
      global_data.invite_reward_data = new lobby_types_1.lobby_types.InviteRewardData();
      global_data.lottery_data = new lobby_types_1.lobby_types.LotteryPanelData();
      global_data.new_task_data = new lobby_types_1.lobby_types.NewTaskData();
      global_data._str_daily_gold_share_img_url = "";
      global_data._str_daily_gold_share_img_text = "";
      global_data._str_invite_reward_share_img_url = "";
      global_data._str_invite_reward_share_img_text = "";
      global_data._str_lottery_share_img_url = "";
      global_data._str_lottery_share_img_text = "";
      global_data._int_invite_reward_gold = 1e3;
      global_data._int_show_privilege = 0;
      global_data.video_ad_id = null;
      global_data.subscribe_lottery_id = "";
      global_data._int_server_min_version = 0;
      global_data._int_server_cur_version = 0;
      global_data._int_server_max_version = 0;
      global_data._uint_auth_mask = 0;
      global_data._uint_module_mask = 0;
      global_data._uint_payment_mask = 0;
      global_data.common_json_data = null;
      global_data.game_json_data = null;
      global_data.gamelist_json_data = null;
      global_data.gamelist_from_server = null;
      global_data.gameCount = 0;
      function make_url(url_id) {
        if (global_data.common_json_data && global_data.common_json_data.http_address && global_data.common_json_data.http_address.length > 0) {
          let url = global_data.common_json_data.http_address.filter(x => x.id == url_id);
          return url.length > 0 ? fill_url(url[0].address) : "";
        }
        return "";
      }
      global_data.make_url = make_url;
      function fill_url(str_url) {
        str_url = str_url.replace("{KINDID}", String(global_data.kind_id));
        str_url = str_url.replace("{AREAID}", String(global_data.area_id));
        str_url = str_url.replace("{CHANNELID}", String(global_data.channel_id));
        str_url = str_url.replace("{KEYWORD}", global_data.keyword);
        str_url = str_url.replace("{VERSION}", String(global_data.version));
        str_url = str_url.replace("{USERID}", String(_the_user_data._int_user_id));
        str_url = str_url.replace("{ACCOUNTS}", _the_user_data._str_account);
        str_url = str_url.replace("{PASSWORD}", _the_user_data._str_password);
        str_url = str_url.replace("{PASSWORDMD5}", _the_user_data._str_password_md5);
        str_url = str_url.replace("{SESSION}", _the_user_data._str_session);
        str_url = str_url.replace("{PACKAGE}", global_data.package_name);
        global_data.force_use_http && (str_url = str_url.replace("https://", "http://"));
        global_data.force_use_https && (str_url = str_url.replace("http://", "https://"));
        return str_url;
      }
      global_data.fill_url = fill_url;
      var _login_base_info = null;
      function get_lobby_base_info2() {
        if (!_login_base_info) {
          _login_base_info = new protocols_1.protocols.CMD_BASE_INFO2();
          _login_base_info.area = global_data.area_id;
          _login_base_info.channel = global_data.channel_id;
          _login_base_info.clienttype = 2;
          _login_base_info.app = global_data.kind_id;
          _login_base_info.keyword = global_data.keyword;
          _login_base_info.package = 0;
          _login_base_info.version = global_data.version;
        }
        return _login_base_info;
      }
      global_data.get_lobby_base_info2 = get_lobby_base_info2;
      function have_wechat_pay() {
        return (global_data._uint_payment_mask & protocols_1.protocols.MASK_PAY_WEIXINPAY) > 0;
      }
      global_data.have_wechat_pay = have_wechat_pay;
      function have_midas_pay() {
        return have_channel_pay();
      }
      global_data.have_midas_pay = have_midas_pay;
      function have_channel_pay() {
        return (global_data._uint_payment_mask & protocols_1.protocols.MASK_PAY_CHANNELPAY) > 0;
      }
      global_data.have_channel_pay = have_channel_pay;
      function have_module_auth(authmask) {
        return (global_data._uint_auth_mask & authmask) > 0;
      }
      global_data.have_module_auth = have_module_auth;
      function have_module_payment(paymask) {
        return (global_data._uint_payment_mask & paymask) > 0;
      }
      global_data.have_module_payment = have_module_payment;
      function have_module(modulemask) {
        return (global_data._uint_module_mask & modulemask) > 0;
      }
      global_data.have_module = have_module;
      function have_module_shop() {
        let shop_module = (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_SHOP) > 0;
        let wechat_pay = have_wechat_pay();
        let channel_pay = have_channel_pay();
        return utils_1.utils.is_ios() ? utils_1.utils.is_wechat() ? shop_module && wechat_pay : shop_module && channel_pay : shop_module && (wechat_pay || channel_pay);
      }
      global_data.have_module_shop = have_module_shop;
      function have_module_auto_activity() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_AUTO_ACTIVITY) > 0;
      }
      global_data.have_module_auto_activity = have_module_auto_activity;
      function have_module_auto_sign() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_AUTO_LUCK) > 0;
      }
      global_data.have_module_auto_sign = have_module_auto_sign;
      function have_module_sign() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_SIGN) > 0;
      }
      global_data.have_module_sign = have_module_sign;
      function have_auth_register() {
        return (global_data._uint_auth_mask & protocols_1.protocols.MASK_AUTH_REGISTER) > 0;
      }
      global_data.have_auth_register = have_auth_register;
      function have_auth_wechat() {
        return (global_data._uint_auth_mask & protocols_1.protocols.MASK_AUTH_WECHAT) > 0;
      }
      global_data.have_auth_wechat = have_auth_wechat;
      function have_module_gamelist() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_GAMELIST) > 0;
      }
      global_data.have_module_gamelist = have_module_gamelist;
      function have_module_notice() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_NOTICE) > 0;
      }
      global_data.have_module_notice = have_module_notice;
      function have_module_activity() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_ACTIVITY) > 0;
      }
      global_data.have_module_activity = have_module_activity;
      function have_module_push() {
        if (global_data.custom_lobby) return false;
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_PUSH) > 0;
      }
      global_data.have_module_push = have_module_push;
      function have_module_exchange() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_EXCHANGE) > 0;
      }
      global_data.have_module_exchange = have_module_exchange;
      function have_module_redpacket() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_REDPACKET) > 0;
      }
      global_data.have_module_redpacket = have_module_redpacket;
      function have_module_wechat_share() {
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_SHARE_WECHAT) > 0;
      }
      global_data.have_module_wechat_share = have_module_wechat_share;
      function have_module_friend() {
        if (global_data.force_friend_kind.filter(x => x == global_data.kind_id).length > 0) return true;
        return (global_data._uint_module_mask & protocols_1.protocols.MASK_MODULE_MINIGAME) > 0;
      }
      global_data.have_module_friend = have_module_friend;
      function have_switch_private_card() {
        return false;
      }
      global_data.have_switch_private_card = have_switch_private_card;
      global_data.wx_game_prop_list = [ 1003, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1032 ];
      global_data.wx_game_status_list = [ 1003, 1017, 1018 ];
      global_data.wx_game_status_to_prop_image = {
        1003: 1006,
        1017: 1017,
        1018: 1018
      };
      function get_prop_id_by_status_id(id) {
        return global_data.wx_game_status_to_prop_image[id];
      }
      global_data.get_prop_id_by_status_id = get_prop_id_by_status_id;
      function get_prop_data_by_id(id) {
        return global_data.vector_prop_data.safe_find(x => x._int_id == id);
      }
      global_data.get_prop_data_by_id = get_prop_data_by_id;
      function get_status_data_by_id(id) {
        return global_data.vector_status_data.safe_find(x => x._int_id == id);
      }
      global_data.get_status_data_by_id = get_status_data_by_id;
      function set_prop_count_by_id(id, count) {
        global_data.map_self_prop_data.set(id, count);
        if (0 == id) {
          global_data.map_self_prop_data.clear();
          return;
        }
        0 == count && global_data.map_self_prop_data.delete(id);
      }
      global_data.set_prop_count_by_id = set_prop_count_by_id;
      function get_prop_count_by_id(id) {
        if (global_data.map_self_prop_data.has(id)) return global_data.map_self_prop_data.get(id);
        return 0;
      }
      global_data.get_prop_count_by_id = get_prop_count_by_id;
      function set_status_time_by_id(id, time) {
        global_data.map_self_status_data.set(id, time);
        if (0 == id) {
          global_data.map_self_status_data.clear();
          return;
        }
        0 == time && global_data.map_self_status_data.delete(id);
      }
      global_data.set_status_time_by_id = set_status_time_by_id;
      function get_status_time_by_id(id) {
        if (global_data.map_self_status_data.has(id)) return global_data.map_self_status_data.get(id);
        return 0;
      }
      global_data.get_status_time_by_id = get_status_time_by_id;
      function get_game_list_by_gameid(gameid) {
        if (global_data.game_json_data) {
          let games = global_data.game_json_data.wechatgame;
          for (let i = 0; i < games.length; ++i) if (games[i].id == gameid) return games[i].list;
        }
        return null;
      }
      global_data.get_game_list_by_gameid = get_game_list_by_gameid;
      function get_game_name_by_gameid(gameid) {
        if (global_data.gamelist_json_data && global_data.gamelist_json_data.game) {
          let game = global_data.gamelist_json_data.game;
          for (let i = 0; i < game.length; ++i) if (game[i].id == gameid) return game[i].name;
        }
        return "";
      }
      global_data.get_game_name_by_gameid = get_game_name_by_gameid;
      function get_room_data(int_game_id, int_room_id) {
        for (let i = 0; i < global_data._vector_room_data.length; ++i) if (global_data._vector_room_data[i]._int_game_id == int_game_id && global_data._vector_room_data[i]._int_room_id == int_room_id) return global_data._vector_room_data[i];
        return null;
      }
      global_data.get_room_data = get_room_data;
      function get_game_data(game_id) {
        return global_data.vector_game_data.safe_find(x => x._int_game_id == game_id);
      }
      global_data.get_game_data = get_game_data;
      function set_self_gold(gold) {
        _the_user_data._long_gold = gold;
        update_user_data();
      }
      global_data.set_self_gold = set_self_gold;
      function update_user_data() {
        utils_1.utils.send("UserUpdate");
      }
      global_data.update_user_data = update_user_data;
      function request_user_data(done, fail) {
        let url = make_url(global_define_1.CONST.HTTP_UPDATE_USER_DATA);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: (data, msg) => {
            _the_user_data._long_gold = data.bodygold;
            _the_user_data._long_bank_gold = data.gold;
            _the_user_data._long_ingot = data.ingot;
            _the_user_data._int_pay_count = data.rechargeamount;
            _the_user_data._long_charm = data.charm;
            _the_user_data._int_praise = data.praise;
            _the_user_data._int_golden_beans = data.bean;
            _the_user_data._int_red_packet = data.redpacket;
            let prop = data.prop;
            global_data.map_self_prop_data.clear();
            prop && prop.length > 0 && prop.forEach(p => {
              set_prop_count_by_id(p.fund_id, p.fund_count);
            });
            let status = data.prop_status;
            global_data.map_self_status_data.clear();
            status && status.length > 0 && status.forEach(p => {
              set_status_time_by_id(p.fund_id, p.expired_time);
            });
            update_user_data();
            done && done();
          },
          fail: err => {
            fail && fail();
          }
        });
      }
      global_data.request_user_data = request_user_data;
      function get_curr_scene() {
        let s = cc.director.getScene();
        let scene_name = global_data.custom_lobby ? global_data.custom_lobby_scene_name : "lobby";
        if (s.name == scene_name) return global_define_1.CONST.SCENE_ROOM;
        if ("start" == s.name || "logon" == s.name || "relogon" == s.name) return global_define_1.CONST.SCENE_LOGON;
        return global_define_1.CONST.SCENE_GAME;
      }
      global_data.get_curr_scene = get_curr_scene;
      function get_server_time() {
        return Math.floor(Date.now() / 1e3) - global_data._int_local_time + global_data._int_server_time;
      }
      global_data.get_server_time = get_server_time;
      function check_is_relief_game(game_id) {
        if (null == global_data._vector_relief_game || 0 == global_data._vector_relief_game.length) return false;
        return global_data._vector_relief_game.indexOf(game_id) >= 0;
      }
      global_data.check_is_relief_game = check_is_relief_game;
      function check_game_valid(id) {
        let in_json = global_data.vector_game_data.some(function(value) {
          return value._int_game_id == id;
        });
        let in_config = global_data.game_scene_name.some(function(value) {
          return value.id == id;
        });
        return in_json && in_config;
      }
      global_data.check_game_valid = check_game_valid;
      global_data.subgameList = [ 114, 124, 132, 142 ];
      function check_game_available(id) {
        if (!check_game_valid(id)) return false;
        if (!global_data.have_module_gamelist()) {
          if (132 == global_data.game_id && 132 == id) return true;
          if (114 == global_data.game_id && 114 == id) return true;
          if (142 == global_data.game_id && 142 == id) return true;
          if (124 == global_data.kind_id && 124 == id) return true;
          if (115 == global_data.kind_id && 132 == id) return true;
          if (global_data.subgameList.some(x => x == id)) return false;
        }
        return true;
      }
      global_data.check_game_available = check_game_available;
      function single_game_mode() {
        return 1 == global_data.gameCount;
      }
      global_data.single_game_mode = single_game_mode;
      function validate_task_item(task_id, complete_kindid) {
        if (49 == task_id) return false;
        if (1 == task_id) {
          if (have_module_shop()) return true;
          return false;
        }
        if (check_game_available(complete_kindid)) return true;
        if (check_game_available(complete_kindid + 100)) return true;
        return false;
      }
      global_data.validate_task_item = validate_task_item;
      function validate_new_task_item(task) {
        if (0 != task.authmask && !have_module_auth(task.authmask)) return false;
        if (0 != task.paymask && !have_module_payment(task.paymask)) return false;
        if (0 != task.modulemask1 && !have_module(task.modulemask1)) return false;
        if (0 != task.gameid && !check_game_valid(task.gameid)) return false;
        if (task.status == global_define_1.CONST.TASK_STATUS_FINISH) return false;
        return true;
      }
      global_data.validate_new_task_item = validate_new_task_item;
      function check_bind_wechat() {
        if (!get_the_user_data()) return false;
        if ((get_the_user_data()._int_user_right & protocols_1.protocols.UR_MASK_CHECK_WECHAT) > 0) return true;
        return false;
      }
      global_data.check_bind_wechat = check_bind_wechat;
      function get_mac() {
        if ("" == global_data.mac) {
          let m = utils_1.utils.getLocalStorage("udid");
          if (m) global_data.mac = m; else {
            global_data.mac = utils_1.utils.getGUID();
            utils_1.utils.setLocalStorage("udid", global_data.mac);
          }
        }
        console.log("mac:", global_data.mac);
        return global_data.mac;
      }
      global_data.get_mac = get_mac;
      function get_game_scene_by_id(game_id) {
        let list = global_data.game_scene_name.filter(x => x.id == game_id);
        return list.length > 0 ? list[0] : null;
      }
      global_data.get_game_scene_by_id = get_game_scene_by_id;
      function get_taskboard_item_data(type) {
        let list = global_data.taskboard_data.items.filter(x => x.webData.reward_type == type);
        return list.length > 0 ? list[0] : null;
      }
      global_data.get_taskboard_item_data = get_taskboard_item_data;
      global_data.emotion_clip_config = [ {
        width: 100,
        height: 100,
        count: 2,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 2,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 3,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 3,
        turn: 12,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 2,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 2,
        turn: 12,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 2,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 12,
        turn: 1,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 8,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 3,
        turn: 12,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 5,
        turn: 3,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 4,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 12,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 8,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 9,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 6,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 9,
        turn: 1,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 14,
        turn: 1,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 5,
        turn: 3,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 9,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 2,
        turn: 10,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 7,
        turn: 2,
        time: 2
      }, {
        width: 100,
        height: 100,
        count: 4,
        turn: 12,
        time: 3
      }, {
        width: 100,
        height: 100,
        count: 8,
        turn: 2,
        time: 2
      } ];
    })(global_data = exports.global_data || (exports.global_data = {}));
    cc._RF.pop();
  }, {
    "../common/utils": "utils",
    "./global_define": "global_define",
    "./lobby_types": "lobby_types",
    "./protocols": "protocols"
  } ],
  global_define: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8778069vshHJ4tjyk5fxSAt", "global_define");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CONST = void 0;
    var CONST;
    (function(CONST) {
      CONST.MAX_INT64 = Number.MAX_SAFE_INTEGER;
      CONST.MIN_INT64 = Number.MIN_SAFE_INTEGER;
      CONST.SOCKET_VER = 69;
      CONST.SOCKET_PACKAGE = 2046;
      CONST.SOCKET_BUFFER = 10240;
      CONST.NAME_LEN = 32;
      CONST.PASS_LEN = 33;
      CONST.IP_LEN = 16;
      CONST.MAC_LEN = 33;
      CONST.SESSION_LEN = 33;
      CONST.MD5_LEN = 33;
      CONST.MOBILE_LEN = 16;
      CONST.MQ_LEN = 64;
      CONST.CODE_LEN = 12;
      CONST.INVALID_TABLE = -1;
      CONST.INVALID_CHAIR = -1;
      CONST.MAX_CHAIR = 8;
      CONST.MAX_CONNECT_COUNT = 2048;
      CONST.KIND_CLIENT_PC = 1;
      CONST.KIND_CLIENT_MOBILE = 2;
      CONST.KIND_TABLE_VERSIONS_NUM = 500;
      CONST.KIND_AREA_ANDROID = 1;
      CONST.KIND_AREA_IOS = 2;
      CONST.KIND_AREA_WINDOWS = 1e3;
      CONST.KIND_CHANNEL_WECHAT = 1;
      CONST.KIND_CHANNEL_NOPAY = 2;
      CONST.KIND_CHANNEL_XIAOMI = 3;
      CONST.KIND_CHANNEL_360SAFE = 4;
      CONST.KIND_CHANNEL_QQ = 5;
      CONST.KIND_CHANNEL_QIFAN = 6;
      CONST.KIND_CHANNEL_BAIDU = 7;
      CONST.KIND_CHANNEL_HUAWEI = 8;
      CONST.KIND_CHANNEL_LENOVO = 9;
      CONST.KIND_CHANNEL_OPPLE = 10;
      CONST.KIND_CHANNEL_ANZHI = 11;
      CONST.KIND_CHANNEL_WANDOUJIA = 12;
      CONST.KIND_CHANNEL_MEIZU = 13;
      CONST.KIND_CHANNEL_MUMAYI = 14;
      CONST.KIND_CHANNEL_EGAME = 15;
      CONST.KIND_CHANNEL_BAIDU_NONET = 16;
      CONST.KIND_CHANNEL_VIVO = 17;
      CONST.KIND_CHANNEL_ALI = 19;
      CONST.KIND_SERVICES_ADMIN = 1;
      CONST.KIND_SERVICES_LOGON = 2;
      CONST.KIND_SERVICES_AUXI = 3;
      CONST.KIND_SERVICES_FILTER = 4;
      CONST.KIND_SERVICES_PUSH = 6;
      CONST.KIND_SERVICES_SUSTAIN = 7;
      CONST.KIND_SERVICES_LOG = 8;
      CONST.KIND_SERVICES_GAME = 9;
      CONST.KIND_SERVICES_ROUTE = 10;
      CONST.ROOM_KIND_SCORE = 1;
      CONST.ROOM_KIND_EDUCATE = 8;
      CONST.ROOM_KIND_SCGOLD = 16;
      CONST.ROOM_KIND_NOCHEAT = 32;
      CONST.ROOM_KIND_BETA = 64;
      CONST.ROOM_KIND_LINEUP = 128;
      CONST.ROOM_KIND_WEIGHT = 256;
      CONST.ROOM_KIND_TABLE_LIST = 512;
      CONST.ROOM_KIND_MIN_BEANS = 1024;
      CONST.ROOM_KIND_MAX_BEANS = 2048;
      CONST.ROOM_KIND_MINI_GAME = 4096;
      CONST.ROOM_MODE_NORMAL = 0;
      CONST.ROOM_MODE_MOBILE = 1;
      CONST.ROOM_MODE_FRIEND = 4;
      CONST.ROOM_MODE_REDPACKET = 8;
      CONST.RESULT_KIND_WIN = 0;
      CONST.RESULT_KIND_LOST = 1;
      CONST.RESULT_KIND_DRAW = 2;
      CONST.RESULT_KIND_FLEE = 3;
      CONST.RESULT_KIND_NULL = 4;
      CONST.TALLY_KIND_GOLD = 1;
      CONST.TALLY_KIND_INGOT = 2;
      CONST.TALLY_KIND_CHARM = 3;
      CONST.TALLY_KIND_PRAISE = 4;
      CONST.TALLY_KIND_SCORE = 5;
      CONST.KIND_START_FULL = 0;
      CONST.KIND_START_READY = 1;
      CONST.KIND_START_CUSTOM = 2;
      CONST.KIND_START_FREEDOM = 3;
      CONST.KIND_FRIEND_NULL = 0;
      CONST.KIND_FRIEND_COUNT = 1;
      CONST.TALLY_FRIEND_NULL = 0;
      CONST.TALLY_FRIEND_GOLD = 1;
      CONST.TALLY_FRIEND_SCORE = 2;
      CONST.GS_FREE = 0;
      CONST.GS_PLAYING = 100;
      CONST.US_NULL = 0;
      CONST.US_FREE = 1;
      CONST.US_SIT = 2;
      CONST.US_READY = 3;
      CONST.US_LOOKON = 4;
      CONST.US_PLAY = 5;
      CONST.US_OFFLINE = 6;
      CONST.KIND_LOGON_REGISTER = 1;
      CONST.KIND_LOGON_ACCOUNT = 2;
      CONST.KIND_LOGON_PHONE = 3;
      CONST.KIND_LOGON_WECHAT = 4;
      CONST.KIND_LOGON_TENCENT = 5;
      CONST.KIND_LOGON_CHANNEL = 6;
      CONST.PAY_TYPE_APPLE = 3e3;
      CONST.PAY_TYPE_APPLE_TEST = 3001;
      CONST.PAY_TYPE_ALIPAY = 3002;
      CONST.PAY_TYPE_XIAOMI = 3005;
      CONST.PAY_TYPE_BAIDU = 3007;
      CONST.PAY_TYPE_LIANXIANG = 3008;
      CONST.PAY_TYPE_HUAWEI = 3009;
      CONST.PAY_TYPE_MEIZU = 3010;
      CONST.PAY_TYPE_WECHAT = 3011;
      CONST.PAY_TYPE_VIVO = 3015;
      CONST.PAY_TYPE_OPPO = 3016;
      CONST.DTP_NULL = 0;
      CONST.DTP_USER_ID = 1;
      CONST.DTP_USER_REGACCOUNTS = 2;
      CONST.DTP_USER_PASS = 3;
      CONST.DTP_USER_GENDER = 4;
      CONST.DTP_USER_FACE = 5;
      CONST.DTP_USER_RIGHT = 6;
      CONST.DTP_MASTER_RIGHT = 7;
      CONST.DTP_USER_NICKNAME = 10;
      CONST.DTP_USER_MOBILE = 11;
      CONST.DTP_USER_PHONE = 12;
      CONST.DTP_USER_PROP = 13;
      CONST.DTP_USER_PROP_STATUS = 14;
      CONST.DTP_USER_DATAEXT = 15;
      CONST.DTP_USER_STATUS = 100;
      CONST.DTP_USER_TABLE = 101;
      CONST.DTP_USER_CHAIR = 102;
      CONST.DTP_USER_PING = 103;
      CONST.DTP_USER_INDEX = 104;
      CONST.DTP_USER_ROUND = 105;
      CONST.DTP_USER_WIN = 200;
      CONST.DTP_USER_LOST = 201;
      CONST.DTP_USER_DRAW = 202;
      CONST.DTP_USER_FLEE = 203;
      CONST.DTP_WIN_RATE = 204;
      CONST.DTP_LOST_RATE = 205;
      CONST.DTP_DRAW_RATE = 206;
      CONST.DTP_FLEE_RATE = 207;
      CONST.DTP_USER_GOLD = 209;
      CONST.DTP_USER_SCORE = 210;
      CONST.DTP_USER_PLAY_COUNT = 211;
      CONST.DTP_USER_EXPERIENCE = 212;
      CONST.DTP_USER_BEAUTY = 215;
      CONST.DTP_USER_PRAISE = 216;
      CONST.LIMIT_SCORE_MIN = 1;
      CONST.LIMIT_SCORE_MAX = 2;
      CONST.LIMIT_GOLD_MIN = 4;
      CONST.LIMIT_GOLD_MAX = 8;
      CONST.LIMIT_BEAUTY_MIN = 16;
      CONST.LIMIT_BEAUTY_MAX = 32;
      CONST.LIMIT_VERSION_MIN = 64;
      CONST.LIMIT_VERSION_MAX = 128;
      CONST.LIMIT_SAME_IP = 256;
      CONST.CODE_LOGON_SUCCESS = 0;
      CONST.CODE_LOGON_NEED_UPDATE = 2;
      CONST.CODE_LOGON_ACCOUNT_ERROR = 3;
      CONST.CODE_LOGON_PASSWORD_ERROR = 4;
      CONST.CODE_LOGON_REJECT = 5;
      CONST.CODE_LOGON_STOP = 6;
      CONST.CODE_LOGON_UNKONW = 10;
      CONST.KIND_REPORT_NULL = 0;
      CONST.KIND_REPORT_NICKNAME = 1;
      CONST.KIND_REPORT_ABUSE = 2;
      CONST.KIND_REPORT_CHEAT = 3;
      CONST.KIND_REPORT_COUNT = 4;
      CONST.KIND_MESSAGE_INFO = 1;
      CONST.KIND_MESSAGE_BOX = 2;
      CONST.KIND_MESSAGE_CLOSE = 4096;
      CONST.HTTP_POST_URL = 1;
      CONST.HTTP_GET_SIGNDATA = 2;
      CONST.HTTP_DO_SIGN = 3;
      CONST.HTTP_GET_NOTICE = 4;
      CONST.HTTP_CHANGE_INFO = 5;
      CONST.HTTP_CHANGE_HEAD = 6;
      CONST.HTTP_CHANGE_NICKNAME = 7;
      CONST.HTTP_CHANGE_PASSWORD = 8;
      CONST.HTTP_CHANGE_PHONE = 9;
      CONST.HTTP_GET_GOLD = 10;
      CONST.HTTP_USER_REGISTER = 'https://open.bookse.cn/api.svc/api?{"head":{"FunctionCode":"UserRegister"},"reqdata":{"kindid":{KINDID},"areaid":{AREAID},"channel":{CHANNELID},"version":{VERSION},"regaccounts":"{ACCOUNTS}","password":"{PASSWORD}","accounts":"{NICKNAME}","keyword":"{KEYWORD}"}}';
      CONST.HTTP_QUERY_GOLD = 12;
      CONST.HTTP_GET_SQL = "https://init.bookse.cn/mobile/entry.php?kindid={KINDID}&areaid={AREAID}&channel={CHANNELID}&version={VERSION}&keyword={KEYWORD}";
      CONST.HTTP_CREATEORDER = 14;
      CONST.HTTP_ALIPAY_CALLBACK = 15;
      CONST.HTTP_GET_PROP_DATA = 16;
      CONST.HTTP_SALE_PROP = 17;
      CONST.HTTP_AUCTION_LIST = 18;
      CONST.HTTP_AUCTION_OPERATION = 19;
      CONST.HTTP_TASK_DATA = 20;
      CONST.HTTP_TASK_REWARD = 21;
      CONST.HTTP_RANK_LIST = 22;
      CONST.HTTP_RANK_OPERATION = 23;
      CONST.HTTP_EXCHANGE_LIST = 24;
      CONST.HTTP_EXCHANGE_OPERATION = 25;
      CONST.HTTP_EXCHANGE_RECORD = 26;
      CONST.HTTP_CLIENT_AWARD = 27;
      CONST.HTTP_INGOT_LIST = 28;
      CONST.HTTP_INGOT_OPERATION = 29;
      CONST.HTTP_UPDATE_USER_DATA = 30;
      CONST.HTTP_USE_PROP = 31;
      CONST.HTTP_BUY_PROP = 32;
      CONST.HTTP_SNED_SMS = 33;
      CONST.HTTP_FIND_ACCOUNTS = 34;
      CONST.HTTP_RESET_PASSWORD = 35;
      CONST.HTTP_RECEIVE_AWARD = 36;
      CONST.HTTP_REG_REAL_NAME = 37;
      CONST.HTTP_SYSTEM_RESOURCES = 38;
      CONST.HTTP_GET_USER_RESOURCES = 39;
      CONST.HTTP_PUT_USER_RESOURCES = 40;
      CONST.HTTP_INTRODUCE_INVITE = 41;
      CONST.HTTP_INTRODUCE_LIST = 42;
      CONST.HTTP_INTRODUCE_REWARD = 43;
      CONST.HTTP_DOWNLOAD_FAILE = "http://data.bookse.cn:8080/mobile/statistics.php?id={ID}&msg={MSG}";
      CONST.HTTP_INTRODUCE_CODE = 45;
      CONST.HTTP_PROP_SHOP = 46;
      CONST.HTTP_ACCESS_GOLD = 47;
      CONST.HTTP_SYSTEM_RESOURCES_HTTPS = 48;
      CONST.HTTP_GET_USER_RESOURCES_HTTPS = 49;
      CONST.HTTP_PUT_USER_RESOURCES_HTTPS = 50;
      CONST.HTTP_PAY_ALI = 51;
      CONST.HTTP_GET_PHONE_CODE = 52;
      CONST.HTTP_CHANGE_ACCOUNT = 53;
      CONST.HTTPS_GET_IMG_RESOURCES = 54;
      CONST.HTTPS_BIND_PHONE = 55;
      CONST.HTTPS_BIND_WECHAT = 56;
      CONST.HTTP_CHANGE_NICKNAME_NEW = 57;
      CONST.HTTP_EXCHANGE_REDPACKET_LIST = 58;
      CONST.HTTP_EXCHANGE_REDPACKET = 59;
      CONST.HTTP_GET_RELIEF = 60;
      CONST.HTTP_PAY_WECHAT = 61;
      CONST.HTTP_GET_ORDER_WECHATMINIGAME = 62;
      CONST.HTTP_PAY_WECHATMINIGAME = 63;
      CONST.HTTP_WECHATMINIGAME_PAY = 68;
      CONST.HTTP_ACTIVITY_FORM_REQUEST = 69;
      CONST.HTTP_INVITE_REWARD_REQUEST = 70;
      CONST.HTTP_INVITE_REWARD_STATUS = 71;
      CONST.HTTP_INVITE_REWARD_GET = 72;
      CONST.HTTP_DAILY_REWARD_STATUS = 73;
      CONST.HTTP_DAILY_REWARD_GET = 74;
      CONST.HTTP_INVITE_SECRET_REWARD_GET = 75;
      CONST.HTTP_WXGAME_RES = 76;
      CONST.HTTP_MINIGAME_PAY = 77;
      CONST.HTTP_MINIGAME_BINDWECHAT = 78;
      CONST.HTTP_MINIGAME_DAILY_REWARD_STATUS = 79;
      CONST.HTTP_MINIGAME_DAILY_REWARD_GET = 80;
      CONST.HTTP_MINIGAME_SIGN_REWARD_STATUS = 81;
      CONST.HTTP_MINIGAME_SIGN_REWARD_GET = 82;
      CONST.HTTP_MINIGAME_WECHAT_SESSION = 83;
      CONST.HTTP_USER_ADDRESS_INSERT = 91;
      CONST.HTTP_USER_ADDRESS_SEARCH = 92;
      CONST.HTTP_MAIL_QUERY = 97;
      CONST.HTTP_MAIL_AWARD = 98;
      CONST.HTTP_MAIL_DEL = 99;
      CONST.HTTP_LOTTERY_QUERY = 100;
      CONST.HTTP_LOTTERY_SUBSCRIBE = 101;
      CONST.HTTP_LOTTERY_SHARE = 102;
      CONST.HTTP_FEEDBACK = 103;
      CONST.HTTP_NAME_CHECK = 109;
      CONST.HTTP_WECHAT_OPENID = 129;
      CONST.HTTP_MATCH_LISTS = 135;
      CONST.HTTP_MATCH_RESULT = 136;
      CONST.HINT_COMMON_MESSAGE_REDPACKET_RULE = 11;
      CONST.HINT_COMMON_MESSAGE_REDPACKET_WECHAT = 12;
      CONST.HINT_COMMON_MESSAGE_REDPACKET_CODE = 13;
      CONST.HINT_COMMON_MESSAGE_REDPACKET_EXCHANGE = 14;
      CONST.HINT_COMMON_MESSAGE_SHARE_BEANS_HINT = 15;
      CONST.HINT_COMMON_MESSAGE_SHARE_GOLD_HINT = 16;
      CONST.SCENE_NULL = 0;
      CONST.SCENE_LOGON = 1;
      CONST.SCENE_ROOM = 2;
      CONST.SCENE_GAME = 3;
      CONST.SCENE_PLAYGROUND = 4;
      CONST.ID_PROP_GOLD = 1;
      CONST.ID_PROP_INGOT = 2;
      CONST.ID_PROP_BILL = 3;
      CONST.ID_PROP_OXHEAD = 1001;
      CONST.ID_PROP_LOTTER = 1002;
      CONST.ID_PROP_RECARD = 1003;
      CONST.ID_PROP_SMALL_BUGLE = 1004;
      CONST.ID_PROP_BIG_BUGLE = 1005;
      CONST.ID_PROP_RECARD_ONE = 1006;
      CONST.ID_PROP_VIP_1 = 1007;
      CONST.ID_PROP_VIP_2 = 1008;
      CONST.ID_PROP_VIP_3 = 1009;
      CONST.ID_PROP_VIP_4 = 1010;
      CONST.ID_PROP_EMOTE_EGG = 1011;
      CONST.ID_PROP_EMOTE_SLIPPER = 1012;
      CONST.ID_PROP_EMOTE_BOMB = 1013;
      CONST.ID_PROP_EMOTE_ROSE = 1014;
      CONST.ID_PROP_EMOTE_PRAISE = 1015;
      CONST.ID_PROP_KICKOUT = 1016;
      CONST.ID_PROP_SCOREDOUBLE = 1017;
      CONST.ID_PROP_SCORESHIELD = 1018;
      CONST.ID_PROP_CHARMCLEAR = 1019;
      CONST.ID_PROP_SCORECLEAR = 1020;
      CONST.ID_PROP_PACKAGE = 1021;
      CONST.ID_PROP_ROOM_CARD = 1025;
      CONST.ID_PROP_IPAD = 2001;
      CONST.ID_PROP_POWER = 2002;
      CONST.ID_PROP_POLAROID = 2003;
      CONST.ID_PROP_DOLL = 2004;
      CONST.ID_PROP_BILL_50 = 2005;
      CONST.ID_PROP_BILL_100 = 2006;
      CONST.ID_PROP_GOLD_100W = 2007;
      CONST.ID_PROP_GOLD_30W = 2008;
      CONST.ID_PROP_GOLD_5W = 2009;
      CONST.ID_PROP_GOLD_20W = 2010;
      CONST.ID_PROP_GOLD_50W = 2011;
      CONST.ID_PROP_GOLD_200W = 2012;
      CONST.ID_PROP_GOLD_500W = 2013;
      CONST.ID_PROP_BILL_20 = 2014;
      CONST.ID_PROP_STATUS_RECARD = 1003;
      CONST.ID_PROP_STATUS_VIP_1 = 1007;
      CONST.ID_PROP_STATUS_VIP_2 = 1008;
      CONST.ID_PROP_STATUS_VIP_3 = 1009;
      CONST.ID_PROP_STATUS_VIP_4 = 1010;
      CONST.ID_PROP_STATUS_SMALL_BUGLE = 1011;
      CONST.ID_PROP_STATUS_BIG_BUGLE = 1012;
      CONST.ID_PROP_STATUS_SCOREDOUBLE = 1017;
      CONST.ID_PROP_STATUS_SCORESHIELD = 1018;
      CONST.ID_PROP_STATUS_SIGN = 1019;
      CONST.ID_PROP_STATUS_SHARE = 1020;
      CONST.ID_PROP_STATUS_VIPAWARD_1 = 11007;
      CONST.ID_PROP_STATUS_VIPAWARD_2 = 11008;
      CONST.ID_PROP_STATUS_VIPAWARD_3 = 11009;
      CONST.ID_PROP_STATUS_VIPAWARD_4 = 11010;
      CONST.ROOM_LIMIT_SCORE_MIN = 1;
      CONST.ROOM_LIMIT_SCORE_MAX = 2;
      CONST.ROOM_LIMIT_GOLD_MIN = 4;
      CONST.ROOM_LIMIT_GOLD_MAX = 8;
      CONST.ROOM_LIMIT_CHARM_MIN = 16;
      CONST.ROOM_LIMIT_CHARM_MAX = 32;
      CONST.ID_REWARD_WECHAT = 305;
      CONST.SHARE_FOR_BEAN = 316;
      CONST.SHARE_FOR_GOLD = 317;
      CONST.TASK_STATUS_DOIND = 1;
      CONST.TASK_STATUS_DONE = 2;
      CONST.TASK_STATUS_FINISH = 4;
    })(CONST = exports.CONST || (exports.CONST = {}));
    cc._RF.pop();
  }, {} ],
  httprequest: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f4268xgi+BH9r9LfpldIOyA", "httprequest");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.httprequest = void 0;
    const utils_1 = require("./utils");
    class httprequest {
      constructor() {
        this.timeOutTime = 15;
        this.timeEclipsed = 0;
        this.check_timeout_id = null;
        this.onReply = () => {};
        this.onError = () => {};
        this.onProgress = () => {};
      }
      send(url, method, data, user, password) {
        console.log(`[HTTP REQ] url:${url} method:${method} data:${data} user:${user} password:${password}`);
        if (utils_1.utils.is_vivo()) {
          let that = this;
          let xhr = qg.request({
            url: url,
            method: method || "GET",
            data: data || "",
            dataType: "string",
            success: res => {
              console.log(`[HTTP RESP] res:${res} res.data:${res.data} res.header:${res.header} res.statusCode:${res.statusCode}`);
              res.statusCode >= 200 && res.statusCode < 400 ? that.onReply && that.onReply(res.data) : that.onError && that.onError(res.data);
              clearInterval(that.check_timeout_id);
            },
            fail: (error, code) => {
              console.log(`[HTTP RESP ERR] error:${error} code:${code}`);
              that.onError && that.onError(`${error} (${code})`);
              clearInterval(that.check_timeout_id);
            },
            complete: () => {}
          });
          this.timeEclipsed = 0;
          this.check_timeout_id = setInterval(function() {
            that.timeEclipsed += .1;
            if (that.timeEclipsed > that.timeOutTime) {
              clearInterval(that.check_timeout_id);
              xhr.abort();
              console.log("[HTTP RESP TIMEOUT]");
              that.onError && that.onError("\u8bf7\u6c42\u6570\u636e\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01");
            }
          }, 100);
        } else {
          let xhr = new XMLHttpRequest();
          let that = this;
          this.timeEclipsed = 0;
          this.check_timeout_id = setInterval(function() {
            that.timeEclipsed += .1;
            if (that.timeEclipsed > that.timeOutTime) {
              clearInterval(that.check_timeout_id);
              xhr.abort();
              console.log("[HTTP RESP TIMEOUT]");
              that.onError && that.onError("\u8bf7\u6c42\u6570\u636e\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01");
            }
            that.onProgress && that.onProgress(Math.floor(that.timeOutTime - that.timeEclipsed));
          }, 100);
          xhr.onreadystatechange = function() {
            if (4 == xhr.readyState) {
              let response = xhr.responseText;
              xhr.status >= 200 && xhr.status < 400 ? that.onReply && that.onReply(response) : that.onError && that.onError(response);
              clearInterval(that.check_timeout_id);
            }
          };
          let _method = method || "GET";
          user && password ? xhr.open(_method, url, true, user, password) : xhr.open(_method, url, true);
          data ? xhr.send(data) : xhr.send();
        }
      }
    }
    exports.httprequest = httprequest;
    cc._RF.pop();
  }, {
    "./utils": "utils"
  } ],
  index: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7b76dTKk1lMGpxyqwyZW4d5", "index");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.encodings = void 0;
    const dbcsData = require("./dbcs-data");
    const DBCSCodec = require("./dbcs-codec");
    let modules = [ DBCSCodec, dbcsData ];
    exports.encodings = {};
    for (let i = 0; i < modules.length; i++) {
      let module = modules[i];
      for (let enc in module) if (Object.prototype.hasOwnProperty.call(module, enc)) if ("object" === typeof module[enc]) for (let item in module[enc]) Object.prototype.hasOwnProperty.call(module[enc], item) && (exports.encodings[item] = module[enc][item]); else exports.encodings[enc] = module[enc];
    }
    cc._RF.pop();
  }, {
    "./dbcs-codec": "dbcs-codec",
    "./dbcs-data": "dbcs-data"
  } ],
  init_state: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a81f6mUlrZOUaAa9pGn4CLC", "init_state");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.init_state = void 0;
    const lobby_framework_1 = require("../lobby_framework");
    const state_1 = require("./state");
    const task_1 = require("../../common/task");
    const global_data_1 = require("../global_data");
    const platform_1 = require("../platform/platform");
    const utils_1 = require("../../common/utils");
    const sound_manager_1 = require("../sound_manager");
    const global_define_1 = require("../global_define");
    let LOCAL_CONFIG_PATH = "config";
    let init_state = (() => {
      class init_state extends state_1.base_state {
        constructor() {
          super(...arguments);
          this.init_task = null;
          this.time = 0;
        }
        static slow_progress_increased() {
          this.load_res_progress += 1;
          let p = Math.floor(this.load_res_progress / this.load_res_progress_total * 100);
          utils_1.utils.send("InitLoadingText", `\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90(${Math.min(100, Math.floor(50 + p / 2))}%)`);
        }
        output_time(task_name) {}
        onEnter(from, event) {
          console.log("init_state enter", event);
          this.time = new Date().getTime();
          this.init_task = new task_1.task("init main");
          this.init_task.add_sub_task(new task_1.task("platform_init").do(done => {
            this.platform_init(done);
          }));
          this.init_task.add_sub_task(new task_1.task("clean_old_assets").do(done => {
            this.output_time("platform_init");
            this.clean_old_assets(done);
          }));
          this.init_task.add_sub_task(new task_1.task("read_config").do(done => {
            this.output_time("clean_old_assets");
            this.read_config(done);
          }));
          this.init_task.add_sub_task(new task_1.task("register_callbacks").do(done => {
            this.output_time("read_config");
            utils_1.utils.is_wechat() ? this.register_callbacks(done) : utils_1.utils.is_window() && done();
          }));
          this.init_task.add_sub_task(new task_1.task("framework_init").do(done => {
            this.output_time("register_callbacks");
            utils_1.utils.is_wechat() ? this.framework_init(done) : utils_1.utils.is_window() && done();
          }));
          this.init_task.add_sub_task(new task_1.task("app_global_init").do(done => {
            this.output_time("framework_init");
            this.app_global_init(done);
          }));
          this.init_task.add_sub_task(new task_1.task("load_resources").do(done => {
            this.output_time("app_global_init");
            this.load_resources(done);
          }));
          this.init_task.on({
            success: () => {
              this.output_time("load_resources");
              console.log("init_state task all done!", global_data_1.global_data);
              lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Logon);
            }
          });
          this.init_task.run();
          utils_1.utils.send("SetLoadingProgress", .1, "\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90");
        }
        onExit(to, event) {
          console.log("init_state exit");
        }
        read_config(done) {
          utils_1.utils.load_json_res({
            path: LOCAL_CONFIG_PATH,
            success: json => {
              let js = json.json;
              console.log(js);
              global_data_1.global_data.lobby_version = js.lobby_version;
              global_data_1.global_data.app_version = js.app_version;
              global_data_1.global_data.kind_id = js.kind_id;
              global_data_1.global_data.game_id = js.game_id;
              global_data_1.global_data.area_id = js.area_id;
              global_data_1.global_data.keyword = js.keyword;
              if (utils_1.utils.is_wechat()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_WECHAT;
                global_data_1.global_data.version = js.wechat.version;
                global_data_1.global_data.appid = js.wechat.appid;
                global_data_1.global_data.package_name = js.wechat.package_name;
                global_data_1.global_data.midas_offer_id = js.wechat.midas_offer_id;
                global_data_1.global_data.midas_env = js.wechat.midas_env;
              }
              if (utils_1.utils.is_window()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_WECHAT;
                global_data_1.global_data.version = js.wechat.version;
                global_data_1.global_data.appid = js.wechat.appid;
                global_data_1.global_data.package_name = js.wechat.package_name;
                global_data_1.global_data.midas_offer_id = js.wechat.midas_offer_id;
                global_data_1.global_data.midas_env = js.wechat.midas_env;
              } else if (utils_1.utils.is_oppo()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_OPPLE;
                global_data_1.global_data.version = js.oppo.version;
                global_data_1.global_data.appid = js.oppo.appid;
                global_data_1.global_data.package_name = js.oppo.package_name;
                global_data_1.global_data.appkey = js.oppo.appkey;
                global_data_1.global_data.version_name = js.oppo.version_name;
              } else if (utils_1.utils.is_vivo()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_VIVO;
                global_data_1.global_data.version = js.vivo.version;
                global_data_1.global_data.package_name = js.vivo.package_name;
              } else if (utils_1.utils.is_huawei()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_HUAWEI;
                global_data_1.global_data.version = js.huawei.version;
                global_data_1.global_data.appid = js.huawei.appid;
                global_data_1.global_data.package_name = js.huawei.package_name;
                global_data_1.global_data.cpid = js.huawei.cpid;
                global_data_1.global_data.pay_pkey = js.huawei.pay_pkey;
              } else if (utils_1.utils.is_baidu()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_BAIDU_NONET;
                global_data_1.global_data.version = js.baidu.version;
                global_data_1.global_data.appid = js.baidu.appid;
                global_data_1.global_data.appkey = js.baidu.appkey;
                global_data_1.global_data.dealid = js.baidu.dealid;
                global_data_1.global_data.cpid = js.baidu.cpid;
                global_data_1.global_data.cpkey = js.baidu.cpkey;
              } else if (utils_1.utils.is_qq()) {
                global_data_1.global_data.channel_id = global_define_1.CONST.KIND_CHANNEL_QQ;
                global_data_1.global_data.version = js.qq.version;
                global_data_1.global_data.appid = js.qq.appid;
                global_data_1.global_data.qqgameid = js.qq.qqgameid;
              }
              lobby_framework_1.lobby_framework.apply_server_by_type(js, js.logon_type);
              global_data_1.global_data.game_scene_name = js.game_scene_name;
              global_data_1.global_data.game_rule_tab_order = js.game_rule_tab_order;
              global_data_1.global_data.post_error = js.post_error;
              global_data_1.global_data.default_passport = js.default_passport;
              done();
            }
          });
        }
        platform_init(done) {
          platform_1.platform.init();
          done();
        }
        clean_old_assets(done) {
          utils_1.utils.send("InitLoadingText", "\u6b63\u5728\u6e05\u7406\u65e7\u6570\u636e...");
          platform_1.platform.inst.cleanAllCachesByUrl({
            complete: () => {
              utils_1.utils.send("InitLoadingText", "\u6e05\u7406\u5b8c\u6210");
              done();
            }
          });
        }
        register_callbacks(done) {
          platform_1.platform.inst.onError(lobby_framework_1.lobby_framework.onError);
          platform_1.platform.inst.onHide(lobby_framework_1.lobby_framework.onHide);
          platform_1.platform.inst.onShow(lobby_framework_1.lobby_framework.onShow);
          platform_1.platform.inst.onNetworkStatusChange(lobby_framework_1.lobby_framework.onNetworkStatusChange);
          done();
        }
        framework_init(done) {
          let framework_init_task = new task_1.parallel_task("framework_init_task");
          framework_init_task.add_sub_task(new task_1.task("getSystemInfo").do(done => {
            platform_1.platform.inst.getSystemInfo({
              success: () => {
                done();
              }
            });
          }));
          framework_init_task.add_sub_task(new task_1.task("getNetworkType").do(done => {
            platform_1.platform.inst.getNetworkType({
              success: res => {
                global_data_1.global_data.is_wifi = "wifi" == res.networkType;
              },
              complete: () => {
                done();
              }
            });
          }));
          framework_init_task.add_sub_task(new task_1.task("setKeepScreenOn").do(done => {
            platform_1.platform.inst.setKeepScreenOn({
              keepScreenOn: true,
              complete: () => {
                done();
              }
            });
          }));
          framework_init_task.add_sub_task(new task_1.task("init settings").do(done => {
            let music_string = utils_1.utils.getLocalStorage("Music");
            sound_manager_1.sound_manager.enable_music(!(music_string && "off" == music_string));
            let sound_string = utils_1.utils.getLocalStorage("Sound");
            sound_manager_1.sound_manager.enable_sound(!(sound_string && "off" == sound_string));
            lobby_framework_1.lobby_framework.set_last_active_time();
            global_data_1.global_data.last_room_data = null;
            done();
          }));
          framework_init_task.on({
            success: () => {
              done();
            }
          });
          framework_init_task.run();
        }
        app_global_init(done) {
          let percent = 0;
          cc.resources.load("Prefab/AppGlobal", (completeCount, totalCount, item) => {
            let new_percent = Math.floor(completeCount / totalCount * 100);
            new_percent > percent && (percent = new_percent);
            utils_1.utils.send("InitLoadingText", `\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90(${Math.floor(percent / 2)}%)`);
          }, (error, prefab) => {
            let newNode = cc.instantiate(prefab);
            cc.director.getScene().addChild(newNode);
            setTimeout(() => {
              done();
            }, 5);
          });
        }
        load_resources(done) {
          let p = msg => {};
          utils_1.utils.send("SetLoadingProgress", .1, "\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90");
          let load_resources_task = new task_1.parallel_task("load_resources_task");
          global_data_1.global_data.spriteFrameMap = new Map();
          global_data_1.global_data.webSpriteFrameCache = new Map();
          load_resources_task.add_sub_task(new task_1.task("dynamic textures").do(done => {
            p("dynamic textures");
            utils_1.utils.load_atlas_res_dir({
              path: "DynamicTextures",
              success: (atlas_array, urls) => {
                atlas_array.forEach(atlas => {
                  atlas.getSpriteFrames().forEach(sp => {
                    global_data_1.global_data.spriteFrameMap.set(sp.name, sp);
                  });
                });
              },
              complete: () => {
                init_state.slow_progress_increased();
                done();
              }
            });
          }));
          load_resources_task.add_sub_task(new task_1.task("lr_mainbg").do(done => {
            p("lr_mainbg");
            utils_1.utils.load_sprite_res({
              path: "Game/LobbyRes/lr_mainbg",
              success: sprite => {
                global_data_1.global_data.spriteFrameMap.set("lr_mainbg", sprite);
              },
              complete: () => {
                init_state.slow_progress_increased();
                done();
              }
            });
          }));
          load_resources_task.add_sub_task(new task_1.task("lr_add_favorite").do(done => {
            p("lr_add_favorite");
            utils_1.utils.load_sprite_res({
              path: "Game/LobbyRes/lr_add_favorite",
              success: sprite => {
                global_data_1.global_data.spriteFrameMap.set("lr_add_favorite", sprite);
              },
              complete: () => {
                init_state.slow_progress_increased();
                done();
              }
            });
          }));
          global_data_1.global_data.game_scene_name.forEach(game => {
            load_resources_task.add_sub_task(new task_1.task(`${game.id} game_textures`).do(done => {
              p(`${game.id} game_textures`);
              utils_1.utils.load_atlas_res({
                path: "Game/" + game.id + "/LobbyRes/game_textures",
                success: atlas => {
                  atlas.getSpriteFrames().forEach(sp => {
                    global_data_1.global_data.spriteFrameMap.set(utils_1.utils.get_game_res_name(game.id, sp.name), sp);
                  });
                },
                complete: () => {
                  init_state.slow_progress_increased();
                  done();
                }
              });
            }));
          });
          global_data_1.global_data.game_scene_name.forEach(game => {
            load_resources_task.add_sub_task(new task_1.task(`${game.id} game_textures1`).do(done => {
              p(`${game.id} game_textures1`);
              utils_1.utils.load_atlas_res({
                path: "Game/" + game.id + "/LobbyRes/game_textures1",
                nocheck: true,
                success: atlas => {
                  atlas.getSpriteFrames().forEach(sp => {
                    global_data_1.global_data.spriteFrameMap.set(utils_1.utils.get_game_res_name(game.id, sp.name), sp);
                  });
                },
                complete: () => {
                  init_state.slow_progress_increased();
                  done();
                }
              });
            }));
          });
          let overwrite_task = new task_1.parallel_task("overwrite_tasks");
          let lobby_res_names = [ "lr_room_beginner", "lr_room_expert", "lr_room_friend", "lr_room_master", "lr_room_medium" ];
          global_data_1.global_data.game_scene_name.forEach(game => {
            lobby_res_names.forEach(res_name => {
              p(`${game.id} ${res_name} overwrite lobby_res`);
              overwrite_task.add_sub_task(new task_1.task(`${game.id} ${res_name} overwrite lobby_res`).do(done => {
                let path = utils_1.utils.get_game_res_name(game.id, res_name);
                utils_1.utils.load_sprite_res({
                  path: path,
                  nocheck: true,
                  success: sprite => {
                    global_data_1.global_data.spriteFrameMap.set(path, sprite);
                  },
                  complete: () => {
                    init_state.slow_progress_increased();
                    done();
                  }
                });
              }));
            });
          });
          overwrite_task.on({
            success: () => {
              init_state.slow_progress_increased();
              done();
            }
          });
          load_resources_task.on({
            complete: () => {
              init_state.slow_progress_increased();
              overwrite_task.run();
            }
          });
          load_resources_task.run();
        }
      }
      init_state.load_res_progress_total = 20;
      init_state.load_res_progress = 0;
      return init_state;
    })();
    exports.init_state = init_state;
    cc._RF.pop();
  }, {
    "../../common/task": "task",
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../lobby_framework": "lobby_framework",
    "../platform/platform": "platform",
    "../sound_manager": "sound_manager",
    "./state": "state"
  } ],
  "jszip.min": [ function(require, module, exports) {
    (function(global, Buffer) {
      "use strict";
      cc._RF.push(module, "ec8e8L/3HZO5KxWoLftr+DI", "jszip.min");
      "use strict";
      !function(a) {
        if ("object" == typeof exports && "undefined" != typeof module) module.exports = a(); else if ("function" == typeof define && define.amd) define([], a); else {
          var b;
          b = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, 
          b.JSZip = a();
        }
      }(function() {
        return function a(b, c, d) {
          function e(g, h) {
            if (!c[g]) {
              if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(g, !0);
                if (f) return f(g, !0);
                var j = new Error("Cannot find module '" + g + "'");
                throw j.code = "MODULE_NOT_FOUND", j;
              }
              var k = c[g] = {
                exports: {}
              };
              b[g][0].call(k.exports, function(a) {
                var c = b[g][1][a];
                return e(c || a);
              }, k, k.exports, a, b, c, d);
            }
            return c[g].exports;
          }
          for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
          return e;
        }({
          1: [ function(a, b, c) {
            var d = a("./utils"), e = a("./support"), f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            c.encode = function(a) {
              for (var b, c, e, g, h, i, j, k = [], l = 0, m = a.length, n = m, o = "string" !== d.getTypeOf(a); l < a.length; ) n = m - l, 
              o ? (b = a[l++], c = l < m ? a[l++] : 0, e = l < m ? a[l++] : 0) : (b = a.charCodeAt(l++), 
              c = l < m ? a.charCodeAt(l++) : 0, e = l < m ? a.charCodeAt(l++) : 0), g = b >> 2, 
              h = (3 & b) << 4 | c >> 4, i = n > 1 ? (15 & c) << 2 | e >> 6 : 64, j = n > 2 ? 63 & e : 64, 
              k.push(f.charAt(g) + f.charAt(h) + f.charAt(i) + f.charAt(j));
              return k.join("");
            }, c.decode = function(a) {
              var b, c, d, g, h, i, j, k = 0, l = 0, m = "data:";
              if (a.substr(0, m.length) === m) throw new Error("Invalid base64 input, it looks like a data url.");
              a = a.replace(/[^A-Za-z0-9\+\/\=]/g, "");
              var n = 3 * a.length / 4;
              if (a.charAt(a.length - 1) === f.charAt(64) && n--, a.charAt(a.length - 2) === f.charAt(64) && n--, 
              n % 1 !== 0) throw new Error("Invalid base64 input, bad content length.");
              var o;
              for (o = e.uint8array ? new Uint8Array(0 | n) : new Array(0 | n); k < a.length; ) g = f.indexOf(a.charAt(k++)), 
              h = f.indexOf(a.charAt(k++)), i = f.indexOf(a.charAt(k++)), j = f.indexOf(a.charAt(k++)), 
              b = g << 2 | h >> 4, c = (15 & h) << 4 | i >> 2, d = (3 & i) << 6 | j, o[l++] = b, 
              64 !== i && (o[l++] = c), 64 !== j && (o[l++] = d);
              return o;
            };
          }, {
            "./support": 30,
            "./utils": 32
          } ],
          2: [ function(a, b, c) {
            function d(a, b, c, d, e) {
              this.compressedSize = a, this.uncompressedSize = b, this.crc32 = c, this.compression = d, 
              this.compressedContent = e;
            }
            var e = a("./external"), f = a("./stream/DataWorker"), g = a("./stream/DataLengthProbe"), h = a("./stream/Crc32Probe"), g = a("./stream/DataLengthProbe");
            d.prototype = {
              getContentWorker: function getContentWorker() {
                var a = new f(e.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new g("data_length")), b = this;
                return a.on("end", function() {
                  if (this.streamInfo.data_length !== b.uncompressedSize) throw new Error("Bug : uncompressed data size mismatch");
                }), a;
              },
              getCompressedWorker: function getCompressedWorker() {
                return new f(e.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
              }
            }, d.createWorkerFrom = function(a, b, c) {
              return a.pipe(new h()).pipe(new g("uncompressedSize")).pipe(b.compressWorker(c)).pipe(new g("compressedSize")).withStreamInfo("compression", b);
            }, b.exports = d;
          }, {
            "./external": 6,
            "./stream/Crc32Probe": 25,
            "./stream/DataLengthProbe": 26,
            "./stream/DataWorker": 27
          } ],
          3: [ function(a, b, c) {
            var d = a("./stream/GenericWorker");
            c.STORE = {
              magic: "\0\0",
              compressWorker: function compressWorker(a) {
                return new d("STORE compression");
              },
              uncompressWorker: function uncompressWorker() {
                return new d("STORE decompression");
              }
            }, c.DEFLATE = a("./flate");
          }, {
            "./flate": 7,
            "./stream/GenericWorker": 28
          } ],
          4: [ function(a, b, c) {
            function d() {
              for (var a, b = [], c = 0; c < 256; c++) {
                a = c;
                for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                b[c] = a;
              }
              return b;
            }
            function e(a, b, c, d) {
              var e = h, f = d + c;
              a ^= -1;
              for (var g = d; g < f; g++) a = a >>> 8 ^ e[255 & (a ^ b[g])];
              return -1 ^ a;
            }
            function f(a, b, c, d) {
              var e = h, f = d + c;
              a ^= -1;
              for (var g = d; g < f; g++) a = a >>> 8 ^ e[255 & (a ^ b.charCodeAt(g))];
              return -1 ^ a;
            }
            var g = a("./utils"), h = d();
            b.exports = function(a, b) {
              if ("undefined" == typeof a || !a.length) return 0;
              var c = "string" !== g.getTypeOf(a);
              return c ? e(0 | b, a, a.length, 0) : f(0 | b, a, a.length, 0);
            };
          }, {
            "./utils": 32
          } ],
          5: [ function(a, b, c) {
            c.base64 = !1, c.binary = !1, c.dir = !1, c.createFolders = !0, c.date = null, c.compression = null, 
            c.compressionOptions = null, c.comment = null, c.unixPermissions = null, c.dosPermissions = null;
          }, {} ],
          6: [ function(a, b, c) {
            var d = null;
            d = "undefined" != typeof Promise ? Promise : a("lie"), b.exports = {
              Promise: d
            };
          }, {
            lie: 37
          } ],
          7: [ function(a, b, c) {
            function d(a, b) {
              h.call(this, "FlateWorker/" + a), this._pako = null, this._pakoAction = a, this._pakoOptions = b, 
              this.meta = {};
            }
            var e = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array, f = a("pako"), g = a("./utils"), h = a("./stream/GenericWorker"), i = e ? "uint8array" : "array";
            c.magic = "\b\0", g.inherits(d, h), d.prototype.processChunk = function(a) {
              this.meta = a.meta, null === this._pako && this._createPako(), this._pako.push(g.transformTo(i, a.data), !1);
            }, d.prototype.flush = function() {
              h.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], !0);
            }, d.prototype.cleanUp = function() {
              h.prototype.cleanUp.call(this), this._pako = null;
            }, d.prototype._createPako = function() {
              this._pako = new f[this._pakoAction]({
                raw: !0,
                level: this._pakoOptions.level || -1
              });
              var a = this;
              this._pako.onData = function(b) {
                a.push({
                  data: b,
                  meta: a.meta
                });
              };
            }, c.compressWorker = function(a) {
              return new d("Deflate", a);
            }, c.uncompressWorker = function() {
              return new d("Inflate", {});
            };
          }, {
            "./stream/GenericWorker": 28,
            "./utils": 32,
            pako: 38
          } ],
          8: [ function(a, b, c) {
            function d(a, b, c, d) {
              f.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = b, this.zipPlatform = c, 
              this.encodeFileName = d, this.streamFiles = a, this.accumulate = !1, this.contentBuffer = [], 
              this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, 
              this._sources = [];
            }
            var e = a("../utils"), f = a("../stream/GenericWorker"), g = a("../utf8"), h = a("../crc32"), i = a("../signature"), j = function j(a, b) {
              var c, d = "";
              for (c = 0; c < b; c++) d += String.fromCharCode(255 & a), a >>>= 8;
              return d;
            }, k = function k(a, b) {
              var c = a;
              return a || (c = b ? 16893 : 33204), (65535 & c) << 16;
            }, l = function l(a, b) {
              return 63 & (a || 0);
            }, m = function m(a, b, c, d, f, _m) {
              var n, o, p = a.file, q = a.compression, r = _m !== g.utf8encode, s = e.transformTo("string", _m(p.name)), t = e.transformTo("string", g.utf8encode(p.name)), u = p.comment, v = e.transformTo("string", _m(u)), w = e.transformTo("string", g.utf8encode(u)), x = t.length !== p.name.length, y = w.length !== u.length, z = "", A = "", B = "", C = p.dir, D = p.date, E = {
                crc32: 0,
                compressedSize: 0,
                uncompressedSize: 0
              };
              b && !c || (E.crc32 = a.crc32, E.compressedSize = a.compressedSize, E.uncompressedSize = a.uncompressedSize);
              var F = 0;
              b && (F |= 8), r || !x && !y || (F |= 2048);
              var G = 0, H = 0;
              C && (G |= 16), "UNIX" === f ? (H = 798, G |= k(p.unixPermissions, C)) : (H = 20, 
              G |= l(p.dosPermissions, C)), n = D.getUTCHours(), n <<= 6, n |= D.getUTCMinutes(), 
              n <<= 5, n |= D.getUTCSeconds() / 2, o = D.getUTCFullYear() - 1980, o <<= 4, o |= D.getUTCMonth() + 1, 
              o <<= 5, o |= D.getUTCDate(), x && (A = j(1, 1) + j(h(s), 4) + t, z += "up" + j(A.length, 2) + A), 
              y && (B = j(1, 1) + j(h(v), 4) + w, z += "uc" + j(B.length, 2) + B);
              var I = "";
              I += "\n\0", I += j(F, 2), I += q.magic, I += j(n, 2), I += j(o, 2), I += j(E.crc32, 4), 
              I += j(E.compressedSize, 4), I += j(E.uncompressedSize, 4), I += j(s.length, 2), 
              I += j(z.length, 2);
              var J = i.LOCAL_FILE_HEADER + I + s + z, K = i.CENTRAL_FILE_HEADER + j(H, 2) + I + j(v.length, 2) + "\0\0\0\0" + j(G, 4) + j(d, 4) + s + z + v;
              return {
                fileRecord: J,
                dirRecord: K
              };
            }, n = function n(a, b, c, d, f) {
              var g = "", h = e.transformTo("string", f(d));
              return i.CENTRAL_DIRECTORY_END + "\0\0\0\0" + j(a, 2) + j(a, 2) + j(b, 4) + j(c, 4) + j(h.length, 2) + h;
            }, o = function o(a) {
              var b = "";
              return i.DATA_DESCRIPTOR + j(a.crc32, 4) + j(a.compressedSize, 4) + j(a.uncompressedSize, 4);
            };
            e.inherits(d, f), d.prototype.push = function(a) {
              var b = a.meta.percent || 0, c = this.entriesCount, d = this._sources.length;
              this.accumulate ? this.contentBuffer.push(a) : (this.bytesWritten += a.data.length, 
              f.prototype.push.call(this, {
                data: a.data,
                meta: {
                  currentFile: this.currentFile,
                  percent: c ? (b + 100 * (c - d - 1)) / c : 100
                }
              }));
            }, d.prototype.openedSource = function(a) {
              this.currentSourceOffset = this.bytesWritten, this.currentFile = a.file.name;
              var b = this.streamFiles && !a.file.dir;
              if (b) {
                var c = m(a, b, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                this.push({
                  data: c.fileRecord,
                  meta: {
                    percent: 0
                  }
                });
              } else this.accumulate = !0;
            }, d.prototype.closedSource = function(a) {
              this.accumulate = !1;
              var b = this.streamFiles && !a.file.dir, c = m(a, b, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
              if (this.dirRecords.push(c.dirRecord), b) this.push({
                data: o(a),
                meta: {
                  percent: 100
                }
              }); else for (this.push({
                data: c.fileRecord,
                meta: {
                  percent: 0
                }
              }); this.contentBuffer.length; ) this.push(this.contentBuffer.shift());
              this.currentFile = null;
            }, d.prototype.flush = function() {
              for (var a = this.bytesWritten, b = 0; b < this.dirRecords.length; b++) this.push({
                data: this.dirRecords[b],
                meta: {
                  percent: 100
                }
              });
              var c = this.bytesWritten - a, d = n(this.dirRecords.length, c, a, this.zipComment, this.encodeFileName);
              this.push({
                data: d,
                meta: {
                  percent: 100
                }
              });
            }, d.prototype.prepareNextSource = function() {
              this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), 
              this.isPaused ? this.previous.pause() : this.previous.resume();
            }, d.prototype.registerPrevious = function(a) {
              this._sources.push(a);
              var b = this;
              return a.on("data", function(a) {
                b.processChunk(a);
              }), a.on("end", function() {
                b.closedSource(b.previous.streamInfo), b._sources.length ? b.prepareNextSource() : b.end();
              }), a.on("error", function(a) {
                b.error(a);
              }), this;
            }, d.prototype.resume = function() {
              return !!f.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), 
              !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), 
              !0));
            }, d.prototype.error = function(a) {
              var b = this._sources;
              if (!f.prototype.error.call(this, a)) return !1;
              for (var c = 0; c < b.length; c++) try {
                b[c].error(a);
              } catch (a) {}
              return !0;
            }, d.prototype.lock = function() {
              f.prototype.lock.call(this);
              for (var a = this._sources, b = 0; b < a.length; b++) a[b].lock();
            }, b.exports = d;
          }, {
            "../crc32": 4,
            "../signature": 23,
            "../stream/GenericWorker": 28,
            "../utf8": 31,
            "../utils": 32
          } ],
          9: [ function(a, b, c) {
            var d = a("../compressions"), e = a("./ZipFileWorker"), f = function f(a, b) {
              var c = a || b, e = d[c];
              if (!e) throw new Error(c + " is not a valid compression method !");
              return e;
            };
            c.generateWorker = function(a, b, c) {
              var d = new e(b.streamFiles, c, b.platform, b.encodeFileName), g = 0;
              try {
                a.forEach(function(a, c) {
                  g++;
                  var e = f(c.options.compression, b.compression), h = c.options.compressionOptions || b.compressionOptions || {}, i = c.dir, j = c.date;
                  c._compressWorker(e, h).withStreamInfo("file", {
                    name: a,
                    dir: i,
                    date: j,
                    comment: c.comment || "",
                    unixPermissions: c.unixPermissions,
                    dosPermissions: c.dosPermissions
                  }).pipe(d);
                }), d.entriesCount = g;
              } catch (h) {
                d.error(h);
              }
              return d;
            };
          }, {
            "../compressions": 3,
            "./ZipFileWorker": 8
          } ],
          10: [ function(a, b, c) {
            function d() {
              if (!(this instanceof d)) return new d();
              if (arguments.length) throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
              this.files = {}, this.comment = null, this.root = "", this.clone = function() {
                var a = new d();
                for (var b in this) "function" != typeof this[b] && (a[b] = this[b]);
                return a;
              };
            }
            d.prototype = a("./object"), d.prototype.loadAsync = a("./load"), d.support = a("./support"), 
            d.defaults = a("./defaults"), d.version = "3.2.0", d.loadAsync = function(a, b) {
              return new d().loadAsync(a, b);
            }, d.external = a("./external"), b.exports = d;
          }, {
            "./defaults": 5,
            "./external": 6,
            "./load": 11,
            "./object": 15,
            "./support": 30
          } ],
          11: [ function(a, b, c) {
            function d(a) {
              return new f.Promise(function(b, c) {
                var d = a.decompressed.getContentWorker().pipe(new i());
                d.on("error", function(a) {
                  c(a);
                }).on("end", function() {
                  d.streamInfo.crc32 !== a.decompressed.crc32 ? c(new Error("Corrupted zip : CRC32 mismatch")) : b();
                }).resume();
              });
            }
            var e = a("./utils"), f = a("./external"), g = a("./utf8"), e = a("./utils"), h = a("./zipEntries"), i = a("./stream/Crc32Probe"), j = a("./nodejsUtils");
            b.exports = function(a, b) {
              var c = this;
              return b = e.extend(b || {}, {
                base64: !1,
                checkCRC32: !1,
                optimizedBinaryString: !1,
                createFolders: !1,
                decodeFileName: g.utf8decode
              }), j.isNode && j.isStream(a) ? f.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : e.prepareContent("the loaded zip file", a, !0, b.optimizedBinaryString, b.base64).then(function(a) {
                var c = new h(b);
                return c.load(a), c;
              }).then(function(a) {
                var c = [ f.Promise.resolve(a) ], e = a.files;
                if (b.checkCRC32) for (var g = 0; g < e.length; g++) c.push(d(e[g]));
                return f.Promise.all(c);
              }).then(function(a) {
                for (var d = a.shift(), e = d.files, f = 0; f < e.length; f++) {
                  var g = e[f];
                  c.file(g.fileNameStr, g.decompressed, {
                    binary: !0,
                    optimizedBinaryString: !0,
                    date: g.date,
                    dir: g.dir,
                    comment: g.fileCommentStr.length ? g.fileCommentStr : null,
                    unixPermissions: g.unixPermissions,
                    dosPermissions: g.dosPermissions,
                    createFolders: b.createFolders
                  });
                }
                return d.zipComment.length && (c.comment = d.zipComment), c;
              });
            };
          }, {
            "./external": 6,
            "./nodejsUtils": 14,
            "./stream/Crc32Probe": 25,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntries": 33
          } ],
          12: [ function(a, b, c) {
            function d(a, b) {
              f.call(this, "Nodejs stream input adapter for " + a), this._upstreamEnded = !1, 
              this._bindStream(b);
            }
            var e = a("../utils"), f = a("../stream/GenericWorker");
            e.inherits(d, f), d.prototype._bindStream = function(a) {
              var b = this;
              this._stream = a, a.pause(), a.on("data", function(a) {
                b.push({
                  data: a,
                  meta: {
                    percent: 0
                  }
                });
              }).on("error", function(a) {
                b.isPaused ? this.generatedError = a : b.error(a);
              }).on("end", function() {
                b.isPaused ? b._upstreamEnded = !0 : b.end();
              });
            }, d.prototype.pause = function() {
              return !!f.prototype.pause.call(this) && (this._stream.pause(), !0);
            }, d.prototype.resume = function() {
              return !!f.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), 
              !0);
            }, b.exports = d;
          }, {
            "../stream/GenericWorker": 28,
            "../utils": 32
          } ],
          13: [ function(a, b, c) {
            function d(a, b, c) {
              e.call(this, b), this._helper = a;
              var d = this;
              a.on("data", function(a, b) {
                d.push(a) || d._helper.pause(), c && c(b);
              }).on("error", function(a) {
                d.emit("error", a);
              }).on("end", function() {
                d.push(null);
              });
            }
            var e = a("readable-stream").Readable, f = a("../utils");
            f.inherits(d, e), d.prototype._read = function() {
              this._helper.resume();
            }, b.exports = d;
          }, {
            "../utils": 32,
            "readable-stream": 16
          } ],
          14: [ function(a, b, c) {
            b.exports = {
              isNode: "undefined" != typeof Buffer,
              newBufferFrom: function newBufferFrom(a, b) {
                if (Buffer.from && Buffer.from !== Uint8Array.from) return Buffer.from(a, b);
                if ("number" == typeof a) throw new Error('The "data" argument must not be a number');
                return new Buffer(a, b);
              },
              allocBuffer: function allocBuffer(a) {
                if (Buffer.alloc) return Buffer.alloc(a);
                var b = new Buffer(a);
                return b.fill(0), b;
              },
              isBuffer: function isBuffer(a) {
                return Buffer.isBuffer(a);
              },
              isStream: function isStream(a) {
                return a && "function" == typeof a.on && "function" == typeof a.pause && "function" == typeof a.resume;
              }
            };
          }, {} ],
          15: [ function(a, b, c) {
            function d(a) {
              return "[object RegExp]" === Object.prototype.toString.call(a);
            }
            var e = a("./utf8"), f = a("./utils"), g = a("./stream/GenericWorker"), h = a("./stream/StreamHelper"), i = a("./defaults"), j = a("./compressedObject"), k = a("./zipObject"), l = a("./generate"), m = a("./nodejsUtils"), n = a("./nodejs/NodejsStreamInputAdapter"), o = function o(a, b, c) {
              var d, e = f.getTypeOf(b), h = f.extend(c || {}, i);
              h.date = h.date || new Date(), null !== h.compression && (h.compression = h.compression.toUpperCase()), 
              "string" == typeof h.unixPermissions && (h.unixPermissions = parseInt(h.unixPermissions, 8)), 
              h.unixPermissions && 16384 & h.unixPermissions && (h.dir = !0), h.dosPermissions && 16 & h.dosPermissions && (h.dir = !0), 
              h.dir && (a = q(a)), h.createFolders && (d = p(a)) && r.call(this, d, !0);
              var l = "string" === e && !1 === h.binary && !1 === h.base64;
              c && "undefined" != typeof c.binary || (h.binary = !l);
              var o = b instanceof j && 0 === b.uncompressedSize;
              (o || h.dir || !b || 0 === b.length) && (h.base64 = !1, h.binary = !0, b = "", h.compression = "STORE", 
              e = "string");
              var s = null;
              s = b instanceof j || b instanceof g ? b : m.isNode && m.isStream(b) ? new n(a, b) : f.prepareContent(a, b, h.binary, h.optimizedBinaryString, h.base64);
              var t = new k(a, s, h);
              this.files[a] = t;
            }, p = function p(a) {
              "/" === a.slice(-1) && (a = a.substring(0, a.length - 1));
              var b = a.lastIndexOf("/");
              return b > 0 ? a.substring(0, b) : "";
            }, q = function q(a) {
              return "/" !== a.slice(-1) && (a += "/"), a;
            }, r = function r(a, b) {
              return b = "undefined" != typeof b ? b : i.createFolders, a = q(a), this.files[a] || o.call(this, a, null, {
                dir: !0,
                createFolders: b
              }), this.files[a];
            }, s = {
              load: function load() {
                throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
              },
              forEach: function forEach(a) {
                var b, c, d;
                for (b in this.files) this.files.hasOwnProperty(b) && (d = this.files[b], c = b.slice(this.root.length, b.length), 
                c && b.slice(0, this.root.length) === this.root && a(c, d));
              },
              filter: function filter(a) {
                var b = [];
                return this.forEach(function(c, d) {
                  a(c, d) && b.push(d);
                }), b;
              },
              file: function file(a, b, c) {
                if (1 === arguments.length) {
                  if (d(a)) {
                    var e = a;
                    return this.filter(function(a, b) {
                      return !b.dir && e.test(a);
                    });
                  }
                  var f = this.files[this.root + a];
                  return f && !f.dir ? f : null;
                }
                return a = this.root + a, o.call(this, a, b, c), this;
              },
              folder: function folder(a) {
                if (!a) return this;
                if (d(a)) return this.filter(function(b, c) {
                  return c.dir && a.test(b);
                });
                var b = this.root + a, c = r.call(this, b), e = this.clone();
                return e.root = c.name, e;
              },
              remove: function remove(a) {
                a = this.root + a;
                var b = this.files[a];
                if (b || ("/" !== a.slice(-1) && (a += "/"), b = this.files[a]), b && !b.dir) delete this.files[a]; else for (var c = this.filter(function(b, c) {
                  return c.name.slice(0, a.length) === a;
                }), d = 0; d < c.length; d++) delete this.files[c[d].name];
                return this;
              },
              generate: function generate(a) {
                throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
              },
              generateInternalStream: function generateInternalStream(a) {
                var b, c = {};
                try {
                  if (c = f.extend(a || {}, {
                    streamFiles: !1,
                    compression: "STORE",
                    compressionOptions: null,
                    type: "",
                    platform: "DOS",
                    comment: null,
                    mimeType: "application/zip",
                    encodeFileName: e.utf8encode
                  }), c.type = c.type.toLowerCase(), c.compression = c.compression.toUpperCase(), 
                  "binarystring" === c.type && (c.type = "string"), !c.type) throw new Error("No output type specified.");
                  f.checkSupport(c.type), "darwin" !== c.platform && "freebsd" !== c.platform && "linux" !== c.platform && "sunos" !== c.platform || (c.platform = "UNIX"), 
                  "win32" === c.platform && (c.platform = "DOS");
                  var d = c.comment || this.comment || "";
                  b = l.generateWorker(this, c, d);
                } catch (i) {
                  b = new g("error"), b.error(i);
                }
                return new h(b, c.type || "string", c.mimeType);
              },
              generateAsync: function generateAsync(a, b) {
                return this.generateInternalStream(a).accumulate(b);
              },
              generateNodeStream: function generateNodeStream(a, b) {
                return a = a || {}, a.type || (a.type = "nodebuffer"), this.generateInternalStream(a).toNodejsStream(b);
              }
            };
            b.exports = s;
          }, {
            "./compressedObject": 2,
            "./defaults": 5,
            "./generate": 9,
            "./nodejs/NodejsStreamInputAdapter": 12,
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31,
            "./utils": 32,
            "./zipObject": 35
          } ],
          16: [ function(a, b, c) {
            b.exports = a("stream");
          }, {
            stream: void 0
          } ],
          17: [ function(a, b, c) {
            function d(a) {
              e.call(this, a);
              for (var b = 0; b < this.data.length; b++) a[b] = 255 & a[b];
            }
            var e = a("./DataReader"), f = a("../utils");
            f.inherits(d, e), d.prototype.byteAt = function(a) {
              return this.data[this.zero + a];
            }, d.prototype.lastIndexOfSignature = function(a) {
              for (var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = this.length - 4; f >= 0; --f) if (this.data[f] === b && this.data[f + 1] === c && this.data[f + 2] === d && this.data[f + 3] === e) return f - this.zero;
              return -1;
            }, d.prototype.readAndCheckSignature = function(a) {
              var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = this.readData(4);
              return b === f[0] && c === f[1] && d === f[2] && e === f[3];
            }, d.prototype.readData = function(a) {
              if (this.checkOffset(a), 0 === a) return [];
              var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
              return this.index += a, b;
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./DataReader": 18
          } ],
          18: [ function(a, b, c) {
            function d(a) {
              this.data = a, this.length = a.length, this.index = 0, this.zero = 0;
            }
            var e = a("../utils");
            d.prototype = {
              checkOffset: function checkOffset(a) {
                this.checkIndex(this.index + a);
              },
              checkIndex: function checkIndex(a) {
                if (this.length < this.zero + a || a < 0) throw new Error("End of data reached (data length = " + this.length + ", asked index = " + a + "). Corrupted zip ?");
              },
              setIndex: function setIndex(a) {
                this.checkIndex(a), this.index = a;
              },
              skip: function skip(a) {
                this.setIndex(this.index + a);
              },
              byteAt: function byteAt(a) {},
              readInt: function readInt(a) {
                var b, c = 0;
                for (this.checkOffset(a), b = this.index + a - 1; b >= this.index; b--) c = (c << 8) + this.byteAt(b);
                return this.index += a, c;
              },
              readString: function readString(a) {
                return e.transformTo("string", this.readData(a));
              },
              readData: function readData(a) {},
              lastIndexOfSignature: function lastIndexOfSignature(a) {},
              readAndCheckSignature: function readAndCheckSignature(a) {},
              readDate: function readDate() {
                var a = this.readInt(4);
                return new Date(Date.UTC(1980 + (a >> 25 & 127), (a >> 21 & 15) - 1, a >> 16 & 31, a >> 11 & 31, a >> 5 & 63, (31 & a) << 1));
              }
            }, b.exports = d;
          }, {
            "../utils": 32
          } ],
          19: [ function(a, b, c) {
            function d(a) {
              e.call(this, a);
            }
            var e = a("./Uint8ArrayReader"), f = a("../utils");
            f.inherits(d, e), d.prototype.readData = function(a) {
              this.checkOffset(a);
              var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
              return this.index += a, b;
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./Uint8ArrayReader": 21
          } ],
          20: [ function(a, b, c) {
            function d(a) {
              e.call(this, a);
            }
            var e = a("./DataReader"), f = a("../utils");
            f.inherits(d, e), d.prototype.byteAt = function(a) {
              return this.data.charCodeAt(this.zero + a);
            }, d.prototype.lastIndexOfSignature = function(a) {
              return this.data.lastIndexOf(a) - this.zero;
            }, d.prototype.readAndCheckSignature = function(a) {
              var b = this.readData(4);
              return a === b;
            }, d.prototype.readData = function(a) {
              this.checkOffset(a);
              var b = this.data.slice(this.zero + this.index, this.zero + this.index + a);
              return this.index += a, b;
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./DataReader": 18
          } ],
          21: [ function(a, b, c) {
            function d(a) {
              e.call(this, a);
            }
            var e = a("./ArrayReader"), f = a("../utils");
            f.inherits(d, e), d.prototype.readData = function(a) {
              if (this.checkOffset(a), 0 === a) return new Uint8Array(0);
              var b = this.data.subarray(this.zero + this.index, this.zero + this.index + a);
              return this.index += a, b;
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./ArrayReader": 17
          } ],
          22: [ function(a, b, c) {
            var d = a("../utils"), e = a("../support"), f = a("./ArrayReader"), g = a("./StringReader"), h = a("./NodeBufferReader"), i = a("./Uint8ArrayReader");
            b.exports = function(a) {
              var b = d.getTypeOf(a);
              return d.checkSupport(b), "string" !== b || e.uint8array ? "nodebuffer" === b ? new h(a) : e.uint8array ? new i(d.transformTo("uint8array", a)) : new f(d.transformTo("array", a)) : new g(a);
            };
          }, {
            "../support": 30,
            "../utils": 32,
            "./ArrayReader": 17,
            "./NodeBufferReader": 19,
            "./StringReader": 20,
            "./Uint8ArrayReader": 21
          } ],
          23: [ function(a, b, c) {
            c.LOCAL_FILE_HEADER = "PK\x03\x04", c.CENTRAL_FILE_HEADER = "PK\x01\x02", c.CENTRAL_DIRECTORY_END = "PK\x05\x06", 
            c.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x06\x07", c.ZIP64_CENTRAL_DIRECTORY_END = "PK\x06\x06", 
            c.DATA_DESCRIPTOR = "PK\x07\b";
          }, {} ],
          24: [ function(a, b, c) {
            function d(a) {
              e.call(this, "ConvertWorker to " + a), this.destType = a;
            }
            var e = a("./GenericWorker"), f = a("../utils");
            f.inherits(d, e), d.prototype.processChunk = function(a) {
              this.push({
                data: f.transformTo(this.destType, a.data),
                meta: a.meta
              });
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./GenericWorker": 28
          } ],
          25: [ function(a, b, c) {
            function d() {
              e.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
            }
            var e = a("./GenericWorker"), f = a("../crc32"), g = a("../utils");
            g.inherits(d, e), d.prototype.processChunk = function(a) {
              this.streamInfo.crc32 = f(a.data, this.streamInfo.crc32 || 0), this.push(a);
            }, b.exports = d;
          }, {
            "../crc32": 4,
            "../utils": 32,
            "./GenericWorker": 28
          } ],
          26: [ function(a, b, c) {
            function d(a) {
              f.call(this, "DataLengthProbe for " + a), this.propName = a, this.withStreamInfo(a, 0);
            }
            var e = a("../utils"), f = a("./GenericWorker");
            e.inherits(d, f), d.prototype.processChunk = function(a) {
              if (a) {
                var b = this.streamInfo[this.propName] || 0;
                this.streamInfo[this.propName] = b + a.data.length;
              }
              f.prototype.processChunk.call(this, a);
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./GenericWorker": 28
          } ],
          27: [ function(a, b, c) {
            function d(a) {
              f.call(this, "DataWorker");
              var b = this;
              this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", 
              this._tickScheduled = !1, a.then(function(a) {
                b.dataIsReady = !0, b.data = a, b.max = a && a.length || 0, b.type = e.getTypeOf(a), 
                b.isPaused || b._tickAndRepeat();
              }, function(a) {
                b.error(a);
              });
            }
            var e = a("../utils"), f = a("./GenericWorker"), g = 16384;
            e.inherits(d, f), d.prototype.cleanUp = function() {
              f.prototype.cleanUp.call(this), this.data = null;
            }, d.prototype.resume = function() {
              return !!f.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, 
              e.delay(this._tickAndRepeat, [], this)), !0);
            }, d.prototype._tickAndRepeat = function() {
              this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (e.delay(this._tickAndRepeat, [], this), 
              this._tickScheduled = !0));
            }, d.prototype._tick = function() {
              if (this.isPaused || this.isFinished) return !1;
              var a = g, b = null, c = Math.min(this.max, this.index + a);
              if (this.index >= this.max) return this.end();
              switch (this.type) {
               case "string":
                b = this.data.substring(this.index, c);
                break;

               case "uint8array":
                b = this.data.subarray(this.index, c);
                break;

               case "array":
               case "nodebuffer":
                b = this.data.slice(this.index, c);
              }
              return this.index = c, this.push({
                data: b,
                meta: {
                  percent: this.max ? this.index / this.max * 100 : 0
                }
              });
            }, b.exports = d;
          }, {
            "../utils": 32,
            "./GenericWorker": 28
          } ],
          28: [ function(a, b, c) {
            function d(a) {
              this.name = a || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, 
              this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = {
                data: [],
                end: [],
                error: []
              }, this.previous = null;
            }
            d.prototype = {
              push: function push(a) {
                this.emit("data", a);
              },
              end: function end() {
                if (this.isFinished) return !1;
                this.flush();
                try {
                  this.emit("end"), this.cleanUp(), this.isFinished = !0;
                } catch (a) {
                  this.emit("error", a);
                }
                return !0;
              },
              error: function error(a) {
                return !this.isFinished && (this.isPaused ? this.generatedError = a : (this.isFinished = !0, 
                this.emit("error", a), this.previous && this.previous.error(a), this.cleanUp()), 
                !0);
              },
              on: function on(a, b) {
                return this._listeners[a].push(b), this;
              },
              cleanUp: function cleanUp() {
                this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
              },
              emit: function emit(a, b) {
                if (this._listeners[a]) for (var c = 0; c < this._listeners[a].length; c++) this._listeners[a][c].call(this, b);
              },
              pipe: function pipe(a) {
                return a.registerPrevious(this);
              },
              registerPrevious: function registerPrevious(a) {
                if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
                this.streamInfo = a.streamInfo, this.mergeStreamInfo(), this.previous = a;
                var b = this;
                return a.on("data", function(a) {
                  b.processChunk(a);
                }), a.on("end", function() {
                  b.end();
                }), a.on("error", function(a) {
                  b.error(a);
                }), this;
              },
              pause: function pause() {
                return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), 
                !0);
              },
              resume: function resume() {
                if (!this.isPaused || this.isFinished) return !1;
                this.isPaused = !1;
                var a = !1;
                return this.generatedError && (this.error(this.generatedError), a = !0), this.previous && this.previous.resume(), 
                !a;
              },
              flush: function flush() {},
              processChunk: function processChunk(a) {
                this.push(a);
              },
              withStreamInfo: function withStreamInfo(a, b) {
                return this.extraStreamInfo[a] = b, this.mergeStreamInfo(), this;
              },
              mergeStreamInfo: function mergeStreamInfo() {
                for (var a in this.extraStreamInfo) this.extraStreamInfo.hasOwnProperty(a) && (this.streamInfo[a] = this.extraStreamInfo[a]);
              },
              lock: function lock() {
                if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
                this.isLocked = !0, this.previous && this.previous.lock();
              },
              toString: function toString() {
                var a = "Worker " + this.name;
                return this.previous ? this.previous + " -> " + a : a;
              }
            }, b.exports = d;
          }, {} ],
          29: [ function(a, b, c) {
            function d(a, b, c) {
              switch (a) {
               case "blob":
                return h.newBlob(h.transformTo("arraybuffer", b), c);

               case "base64":
                return k.encode(b);

               default:
                return h.transformTo(a, b);
              }
            }
            function e(a, b) {
              var c, d = 0, e = null, f = 0;
              for (c = 0; c < b.length; c++) f += b[c].length;
              switch (a) {
               case "string":
                return b.join("");

               case "array":
                return Array.prototype.concat.apply([], b);

               case "uint8array":
                for (e = new Uint8Array(f), c = 0; c < b.length; c++) e.set(b[c], d), d += b[c].length;
                return e;

               case "nodebuffer":
                return Buffer.concat(b);

               default:
                throw new Error("concat : unsupported type '" + a + "'");
              }
            }
            function f(a, b) {
              return new m.Promise(function(c, f) {
                var g = [], h = a._internalType, i = a._outputType, j = a._mimeType;
                a.on("data", function(a, c) {
                  g.push(a), b && b(c);
                }).on("error", function(a) {
                  g = [], f(a);
                }).on("end", function() {
                  try {
                    var a = d(i, e(h, g), j);
                    c(a);
                  } catch (b) {
                    f(b);
                  }
                  g = [];
                }).resume();
              });
            }
            function g(a, b, c) {
              var d = b;
              switch (b) {
               case "blob":
               case "arraybuffer":
                d = "uint8array";
                break;

               case "base64":
                d = "string";
              }
              try {
                this._internalType = d, this._outputType = b, this._mimeType = c, h.checkSupport(d), 
                this._worker = a.pipe(new i(d)), a.lock();
              } catch (e) {
                this._worker = new j("error"), this._worker.error(e);
              }
            }
            var h = a("../utils"), i = a("./ConvertWorker"), j = a("./GenericWorker"), k = a("../base64"), l = a("../support"), m = a("../external"), n = null;
            if (l.nodestream) try {
              n = a("../nodejs/NodejsStreamOutputAdapter");
            } catch (o) {}
            g.prototype = {
              accumulate: function accumulate(a) {
                return f(this, a);
              },
              on: function on(a, b) {
                var c = this;
                return "data" === a ? this._worker.on(a, function(a) {
                  b.call(c, a.data, a.meta);
                }) : this._worker.on(a, function() {
                  h.delay(b, arguments, c);
                }), this;
              },
              resume: function resume() {
                return h.delay(this._worker.resume, [], this._worker), this;
              },
              pause: function pause() {
                return this._worker.pause(), this;
              },
              toNodejsStream: function toNodejsStream(a) {
                if (h.checkSupport("nodestream"), "nodebuffer" !== this._outputType) throw new Error(this._outputType + " is not supported by this method");
                return new n(this, {
                  objectMode: "nodebuffer" !== this._outputType
                }, a);
              }
            }, b.exports = g;
          }, {
            "../base64": 1,
            "../external": 6,
            "../nodejs/NodejsStreamOutputAdapter": 13,
            "../support": 30,
            "../utils": 32,
            "./ConvertWorker": 24,
            "./GenericWorker": 28
          } ],
          30: [ function(a, b, c) {
            if (c.base64 = !0, c.array = !0, c.string = !0, c.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, 
            c.nodebuffer = "undefined" != typeof Buffer, c.uint8array = "undefined" != typeof Uint8Array, 
            "undefined" == typeof ArrayBuffer) c.blob = !1; else {
              var d = new ArrayBuffer(0);
              try {
                c.blob = 0 === new Blob([ d ], {
                  type: "application/zip"
                }).size;
              } catch (e) {
                try {
                  var f = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder, g = new f();
                  g.append(d), c.blob = 0 === g.getBlob("application/zip").size;
                } catch (e) {
                  c.blob = !1;
                }
              }
            }
            try {
              c.nodestream = !!a("readable-stream").Readable;
            } catch (e) {
              c.nodestream = !1;
            }
          }, {
            "readable-stream": 16
          } ],
          31: [ function(a, b, c) {
            function d() {
              i.call(this, "utf-8 decode"), this.leftOver = null;
            }
            function e() {
              i.call(this, "utf-8 encode");
            }
            for (var f = a("./utils"), g = a("./support"), h = a("./nodejsUtils"), i = a("./stream/GenericWorker"), j = new Array(256), k = 0; k < 256; k++) j[k] = k >= 252 ? 6 : k >= 248 ? 5 : k >= 240 ? 4 : k >= 224 ? 3 : k >= 192 ? 2 : 1;
            j[254] = j[254] = 1;
            var l = function l(a) {
              var b, c, d, e, f, h = a.length, i = 0;
              for (e = 0; e < h; e++) c = a.charCodeAt(e), 55296 === (64512 & c) && e + 1 < h && (d = a.charCodeAt(e + 1), 
              56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), e++)), i += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
              for (b = g.uint8array ? new Uint8Array(i) : new Array(i), f = 0, e = 0; f < i; e++) c = a.charCodeAt(e), 
              55296 === (64512 & c) && e + 1 < h && (d = a.charCodeAt(e + 1), 56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), 
              e++)), c < 128 ? b[f++] = c : c < 2048 ? (b[f++] = 192 | c >>> 6, b[f++] = 128 | 63 & c) : c < 65536 ? (b[f++] = 224 | c >>> 12, 
              b[f++] = 128 | c >>> 6 & 63, b[f++] = 128 | 63 & c) : (b[f++] = 240 | c >>> 18, 
              b[f++] = 128 | c >>> 12 & 63, b[f++] = 128 | c >>> 6 & 63, b[f++] = 128 | 63 & c);
              return b;
            }, m = function m(a, b) {
              var c;
              for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]); ) c--;
              return c < 0 ? b : 0 === c ? b : c + j[a[c]] > b ? c : b;
            }, n = function n(a) {
              var b, c, d, e, g = a.length, h = new Array(2 * g);
              for (c = 0, b = 0; b < g; ) if (d = a[b++], d < 128) h[c++] = d; else if (e = j[d], 
              e > 4) h[c++] = 65533, b += e - 1; else {
                for (d &= 2 === e ? 31 : 3 === e ? 15 : 7; e > 1 && b < g; ) d = d << 6 | 63 & a[b++], 
                e--;
                e > 1 ? h[c++] = 65533 : d < 65536 ? h[c++] = d : (d -= 65536, h[c++] = 55296 | d >> 10 & 1023, 
                h[c++] = 56320 | 1023 & d);
              }
              return h.length !== c && (h.subarray ? h = h.subarray(0, c) : h.length = c), f.applyFromCharCode(h);
            };
            c.utf8encode = function(a) {
              return g.nodebuffer ? h.newBufferFrom(a, "utf-8") : l(a);
            }, c.utf8decode = function(a) {
              return g.nodebuffer ? f.transformTo("nodebuffer", a).toString("utf-8") : (a = f.transformTo(g.uint8array ? "uint8array" : "array", a), 
              n(a));
            }, f.inherits(d, i), d.prototype.processChunk = function(a) {
              var b = f.transformTo(g.uint8array ? "uint8array" : "array", a.data);
              if (this.leftOver && this.leftOver.length) {
                if (g.uint8array) {
                  var d = b;
                  b = new Uint8Array(d.length + this.leftOver.length), b.set(this.leftOver, 0), b.set(d, this.leftOver.length);
                } else b = this.leftOver.concat(b);
                this.leftOver = null;
              }
              var e = m(b), h = b;
              e !== b.length && (g.uint8array ? (h = b.subarray(0, e), this.leftOver = b.subarray(e, b.length)) : (h = b.slice(0, e), 
              this.leftOver = b.slice(e, b.length))), this.push({
                data: c.utf8decode(h),
                meta: a.meta
              });
            }, d.prototype.flush = function() {
              this.leftOver && this.leftOver.length && (this.push({
                data: c.utf8decode(this.leftOver),
                meta: {}
              }), this.leftOver = null);
            }, c.Utf8DecodeWorker = d, f.inherits(e, i), e.prototype.processChunk = function(a) {
              this.push({
                data: c.utf8encode(a.data),
                meta: a.meta
              });
            }, c.Utf8EncodeWorker = e;
          }, {
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./support": 30,
            "./utils": 32
          } ],
          32: [ function(a, b, c) {
            function d(a) {
              var b = null;
              return b = i.uint8array ? new Uint8Array(a.length) : new Array(a.length), f(a, b);
            }
            function e(a) {
              return a;
            }
            function f(a, b) {
              for (var c = 0; c < a.length; ++c) b[c] = 255 & a.charCodeAt(c);
              return b;
            }
            function g(a) {
              var b = 65536, d = c.getTypeOf(a), e = !0;
              if ("uint8array" === d ? e = n.applyCanBeUsed.uint8array : "nodebuffer" === d && (e = n.applyCanBeUsed.nodebuffer), 
              e) for (;b > 1; ) try {
                return n.stringifyByChunk(a, d, b);
              } catch (f) {
                b = Math.floor(b / 2);
              }
              return n.stringifyByChar(a);
            }
            function h(a, b) {
              for (var c = 0; c < a.length; c++) b[c] = a[c];
              return b;
            }
            var i = a("./support"), j = a("./base64"), k = a("./nodejsUtils"), l = a("set-immediate-shim"), m = a("./external");
            c.newBlob = function(a, b) {
              c.checkSupport("blob");
              try {
                return new Blob([ a ], {
                  type: b
                });
              } catch (d) {
                try {
                  var e = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder, f = new e();
                  return f.append(a), f.getBlob(b);
                } catch (d) {
                  throw new Error("Bug : can't construct the Blob.");
                }
              }
            };
            var n = {
              stringifyByChunk: function stringifyByChunk(a, b, c) {
                var d = [], e = 0, f = a.length;
                if (f <= c) return String.fromCharCode.apply(null, a);
                for (;e < f; ) "array" === b || "nodebuffer" === b ? d.push(String.fromCharCode.apply(null, a.slice(e, Math.min(e + c, f)))) : d.push(String.fromCharCode.apply(null, a.subarray(e, Math.min(e + c, f)))), 
                e += c;
                return d.join("");
              },
              stringifyByChar: function stringifyByChar(a) {
                for (var b = "", c = 0; c < a.length; c++) b += String.fromCharCode(a[c]);
                return b;
              },
              applyCanBeUsed: {
                uint8array: function() {
                  try {
                    return i.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;
                  } catch (a) {
                    return !1;
                  }
                }(),
                nodebuffer: function() {
                  try {
                    return i.nodebuffer && 1 === String.fromCharCode.apply(null, k.allocBuffer(1)).length;
                  } catch (a) {
                    return !1;
                  }
                }()
              }
            };
            c.applyFromCharCode = g;
            var o = {};
            o.string = {
              string: e,
              array: function array(a) {
                return f(a, new Array(a.length));
              },
              arraybuffer: function arraybuffer(a) {
                return o.string.uint8array(a).buffer;
              },
              uint8array: function uint8array(a) {
                return f(a, new Uint8Array(a.length));
              },
              nodebuffer: function nodebuffer(a) {
                return f(a, k.allocBuffer(a.length));
              }
            }, o.array = {
              string: g,
              array: e,
              arraybuffer: function arraybuffer(a) {
                return new Uint8Array(a).buffer;
              },
              uint8array: function uint8array(a) {
                return new Uint8Array(a);
              },
              nodebuffer: function nodebuffer(a) {
                return k.newBufferFrom(a);
              }
            }, o.arraybuffer = {
              string: function string(a) {
                return g(new Uint8Array(a));
              },
              array: function array(a) {
                return h(new Uint8Array(a), new Array(a.byteLength));
              },
              arraybuffer: e,
              uint8array: function uint8array(a) {
                return new Uint8Array(a);
              },
              nodebuffer: function nodebuffer(a) {
                return k.newBufferFrom(new Uint8Array(a));
              }
            }, o.uint8array = {
              string: g,
              array: function array(a) {
                return h(a, new Array(a.length));
              },
              arraybuffer: function arraybuffer(a) {
                return a.buffer;
              },
              uint8array: e,
              nodebuffer: function nodebuffer(a) {
                return k.newBufferFrom(a);
              }
            }, o.nodebuffer = {
              string: g,
              array: function array(a) {
                return h(a, new Array(a.length));
              },
              arraybuffer: function arraybuffer(a) {
                return o.nodebuffer.uint8array(a).buffer;
              },
              uint8array: function uint8array(a) {
                return h(a, new Uint8Array(a.length));
              },
              nodebuffer: e
            }, c.transformTo = function(a, b) {
              if (b || (b = ""), !a) return b;
              c.checkSupport(a);
              var d = c.getTypeOf(b), e = o[d][a](b);
              return e;
            }, c.getTypeOf = function(a) {
              return "string" == typeof a ? "string" : "[object Array]" === Object.prototype.toString.call(a) ? "array" : i.nodebuffer && k.isBuffer(a) ? "nodebuffer" : i.uint8array && a instanceof Uint8Array ? "uint8array" : i.arraybuffer && a instanceof ArrayBuffer ? "arraybuffer" : void 0;
            }, c.checkSupport = function(a) {
              var b = i[a.toLowerCase()];
              if (!b) throw new Error(a + " is not supported by this platform");
            }, c.MAX_VALUE_16BITS = 65535, c.MAX_VALUE_32BITS = -1, c.pretty = function(a) {
              var b, c, d = "";
              for (c = 0; c < (a || "").length; c++) b = a.charCodeAt(c), d += "\\x" + (b < 16 ? "0" : "") + b.toString(16).toUpperCase();
              return d;
            }, c.delay = function(a, b, c) {
              l(function() {
                a.apply(c || null, b || []);
              });
            }, c.inherits = function(a, b) {
              var c = function c() {};
              c.prototype = b.prototype, a.prototype = new c();
            }, c.extend = function() {
              var a, b, c = {};
              for (a = 0; a < arguments.length; a++) for (b in arguments[a]) arguments[a].hasOwnProperty(b) && "undefined" == typeof c[b] && (c[b] = arguments[a][b]);
              return c;
            }, c.prepareContent = function(a, b, e, f, g) {
              var h = m.Promise.resolve(b).then(function(a) {
                var b = i.blob && (a instanceof Blob || -1 !== [ "[object File]", "[object Blob]" ].indexOf(Object.prototype.toString.call(a)));
                return b && "undefined" != typeof FileReader ? new m.Promise(function(b, c) {
                  var d = new FileReader();
                  d.onload = function(a) {
                    b(a.target.result);
                  }, d.onerror = function(a) {
                    c(a.target.error);
                  }, d.readAsArrayBuffer(a);
                }) : a;
              });
              return h.then(function(b) {
                var h = c.getTypeOf(b);
                return h ? ("arraybuffer" === h ? b = c.transformTo("uint8array", b) : "string" === h && (g ? b = j.decode(b) : e && !0 !== f && (b = d(b))), 
                b) : m.Promise.reject(new Error("Can't read the data of '" + a + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
              });
            };
          }, {
            "./base64": 1,
            "./external": 6,
            "./nodejsUtils": 14,
            "./support": 30,
            "set-immediate-shim": 54
          } ],
          33: [ function(a, b, c) {
            function d(a) {
              this.files = [], this.loadOptions = a;
            }
            var e = a("./reader/readerFor"), f = a("./utils"), g = a("./signature"), h = a("./zipEntry"), i = (a("./utf8"), 
            a("./support"));
            d.prototype = {
              checkSignature: function checkSignature(a) {
                if (!this.reader.readAndCheckSignature(a)) {
                  this.reader.index -= 4;
                  var b = this.reader.readString(4);
                  throw new Error("Corrupted zip or bug: unexpected signature (" + f.pretty(b) + ", expected " + f.pretty(a) + ")");
                }
              },
              isSignature: function isSignature(a, b) {
                var c = this.reader.index;
                this.reader.setIndex(a);
                var d = this.reader.readString(4), e = d === b;
                return this.reader.setIndex(c), e;
              },
              readBlockEndOfCentral: function readBlockEndOfCentral() {
                this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), 
                this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), 
                this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), 
                this.zipCommentLength = this.reader.readInt(2);
                var a = this.reader.readData(this.zipCommentLength), b = i.uint8array ? "uint8array" : "array", c = f.transformTo(b, a);
                this.zipComment = this.loadOptions.decodeFileName(c);
              },
              readBlockZip64EndOfCentral: function readBlockZip64EndOfCentral() {
                this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), 
                this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), 
                this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), 
                this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
                for (var a, b, c, d = this.zip64EndOfCentralSize - 44, e = 0; e < d; ) a = this.reader.readInt(2), 
                b = this.reader.readInt(4), c = this.reader.readData(b), this.zip64ExtensibleData[a] = {
                  id: a,
                  length: b,
                  value: c
                };
              },
              readBlockZip64EndOfCentralLocator: function readBlockZip64EndOfCentralLocator() {
                if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), 
                this.disksCount = this.reader.readInt(4), this.disksCount > 1) throw new Error("Multi-volumes zip are not supported");
              },
              readLocalFiles: function readLocalFiles() {
                var a, b;
                for (a = 0; a < this.files.length; a++) b = this.files[a], this.reader.setIndex(b.localHeaderOffset), 
                this.checkSignature(g.LOCAL_FILE_HEADER), b.readLocalPart(this.reader), b.handleUTF8(), 
                b.processAttributes();
              },
              readCentralDir: function readCentralDir() {
                var a;
                for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(g.CENTRAL_FILE_HEADER); ) a = new h({
                  zip64: this.zip64
                }, this.loadOptions), a.readCentralPart(this.reader), this.files.push(a);
                if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length) throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
              },
              readEndOfCentral: function readEndOfCentral() {
                var a = this.reader.lastIndexOfSignature(g.CENTRAL_DIRECTORY_END);
                if (a < 0) {
                  var b = !this.isSignature(0, g.LOCAL_FILE_HEADER);
                  throw b ? new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : new Error("Corrupted zip: can't find end of central directory");
                }
                this.reader.setIndex(a);
                var c = a;
                if (this.checkSignature(g.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), 
                this.diskNumber === f.MAX_VALUE_16BITS || this.diskWithCentralDirStart === f.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === f.MAX_VALUE_16BITS || this.centralDirRecords === f.MAX_VALUE_16BITS || this.centralDirSize === f.MAX_VALUE_32BITS || this.centralDirOffset === f.MAX_VALUE_32BITS) {
                  if (this.zip64 = !0, a = this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR), 
                  a < 0) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                  if (this.reader.setIndex(a), this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_LOCATOR), 
                  this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, g.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(g.ZIP64_CENTRAL_DIRECTORY_END), 
                  this.relativeOffsetEndOfZip64CentralDir < 0)) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
                  this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(g.ZIP64_CENTRAL_DIRECTORY_END), 
                  this.readBlockZip64EndOfCentral();
                }
                var d = this.centralDirOffset + this.centralDirSize;
                this.zip64 && (d += 20, d += 12 + this.zip64EndOfCentralSize);
                var e = c - d;
                if (e > 0) this.isSignature(c, g.CENTRAL_FILE_HEADER) || (this.reader.zero = e); else if (e < 0) throw new Error("Corrupted zip: missing " + Math.abs(e) + " bytes.");
              },
              prepareReader: function prepareReader(a) {
                this.reader = e(a);
              },
              load: function load(a) {
                this.prepareReader(a), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
              }
            }, b.exports = d;
          }, {
            "./reader/readerFor": 22,
            "./signature": 23,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntry": 34
          } ],
          34: [ function(a, b, c) {
            function d(a, b) {
              this.options = a, this.loadOptions = b;
            }
            var e = a("./reader/readerFor"), f = a("./utils"), g = a("./compressedObject"), h = a("./crc32"), i = a("./utf8"), j = a("./compressions"), k = a("./support"), l = 0, m = 3, n = function n(a) {
              for (var b in j) if (j.hasOwnProperty(b) && j[b].magic === a) return j[b];
              return null;
            };
            d.prototype = {
              isEncrypted: function isEncrypted() {
                return 1 === (1 & this.bitFlag);
              },
              useUTF8: function useUTF8() {
                return 2048 === (2048 & this.bitFlag);
              },
              readLocalPart: function readLocalPart(a) {
                var b, c;
                if (a.skip(22), this.fileNameLength = a.readInt(2), c = a.readInt(2), this.fileName = a.readData(this.fileNameLength), 
                a.skip(c), -1 === this.compressedSize || -1 === this.uncompressedSize) throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");
                if (b = n(this.compressionMethod), null === b) throw new Error("Corrupted zip : compression " + f.pretty(this.compressionMethod) + " unknown (inner file : " + f.transformTo("string", this.fileName) + ")");
                this.decompressed = new g(this.compressedSize, this.uncompressedSize, this.crc32, b, a.readData(this.compressedSize));
              },
              readCentralPart: function readCentralPart(a) {
                this.versionMadeBy = a.readInt(2), a.skip(2), this.bitFlag = a.readInt(2), this.compressionMethod = a.readString(2), 
                this.date = a.readDate(), this.crc32 = a.readInt(4), this.compressedSize = a.readInt(4), 
                this.uncompressedSize = a.readInt(4);
                var b = a.readInt(2);
                if (this.extraFieldsLength = a.readInt(2), this.fileCommentLength = a.readInt(2), 
                this.diskNumberStart = a.readInt(2), this.internalFileAttributes = a.readInt(2), 
                this.externalFileAttributes = a.readInt(4), this.localHeaderOffset = a.readInt(4), 
                this.isEncrypted()) throw new Error("Encrypted zip are not supported");
                a.skip(b), this.readExtraFields(a), this.parseZIP64ExtraField(a), this.fileComment = a.readData(this.fileCommentLength);
              },
              processAttributes: function processAttributes() {
                this.unixPermissions = null, this.dosPermissions = null;
                var a = this.versionMadeBy >> 8;
                this.dir = !!(16 & this.externalFileAttributes), a === l && (this.dosPermissions = 63 & this.externalFileAttributes), 
                a === m && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0);
              },
              parseZIP64ExtraField: function parseZIP64ExtraField(a) {
                if (this.extraFields[1]) {
                  var b = e(this.extraFields[1].value);
                  this.uncompressedSize === f.MAX_VALUE_32BITS && (this.uncompressedSize = b.readInt(8)), 
                  this.compressedSize === f.MAX_VALUE_32BITS && (this.compressedSize = b.readInt(8)), 
                  this.localHeaderOffset === f.MAX_VALUE_32BITS && (this.localHeaderOffset = b.readInt(8)), 
                  this.diskNumberStart === f.MAX_VALUE_32BITS && (this.diskNumberStart = b.readInt(4));
                }
              },
              readExtraFields: function readExtraFields(a) {
                var b, c, d, e = a.index + this.extraFieldsLength;
                for (this.extraFields || (this.extraFields = {}); a.index < e; ) b = a.readInt(2), 
                c = a.readInt(2), d = a.readData(c), this.extraFields[b] = {
                  id: b,
                  length: c,
                  value: d
                };
              },
              handleUTF8: function handleUTF8() {
                var a = k.uint8array ? "uint8array" : "array";
                if (this.useUTF8()) this.fileNameStr = i.utf8decode(this.fileName), this.fileCommentStr = i.utf8decode(this.fileComment); else {
                  var b = this.findExtraFieldUnicodePath();
                  if (null !== b) this.fileNameStr = b; else {
                    var c = f.transformTo(a, this.fileName);
                    this.fileNameStr = this.loadOptions.decodeFileName(c);
                  }
                  var d = this.findExtraFieldUnicodeComment();
                  if (null !== d) this.fileCommentStr = d; else {
                    var e = f.transformTo(a, this.fileComment);
                    this.fileCommentStr = this.loadOptions.decodeFileName(e);
                  }
                }
              },
              findExtraFieldUnicodePath: function findExtraFieldUnicodePath() {
                var a = this.extraFields[28789];
                if (a) {
                  var b = e(a.value);
                  return 1 !== b.readInt(1) ? null : h(this.fileName) !== b.readInt(4) ? null : i.utf8decode(b.readData(a.length - 5));
                }
                return null;
              },
              findExtraFieldUnicodeComment: function findExtraFieldUnicodeComment() {
                var a = this.extraFields[25461];
                if (a) {
                  var b = e(a.value);
                  return 1 !== b.readInt(1) ? null : h(this.fileComment) !== b.readInt(4) ? null : i.utf8decode(b.readData(a.length - 5));
                }
                return null;
              }
            }, b.exports = d;
          }, {
            "./compressedObject": 2,
            "./compressions": 3,
            "./crc32": 4,
            "./reader/readerFor": 22,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32
          } ],
          35: [ function(a, b, c) {
            var d = a("./stream/StreamHelper"), e = a("./stream/DataWorker"), f = a("./utf8"), g = a("./compressedObject"), h = a("./stream/GenericWorker"), i = function i(a, b, c) {
              this.name = a, this.dir = c.dir, this.date = c.date, this.comment = c.comment, this.unixPermissions = c.unixPermissions, 
              this.dosPermissions = c.dosPermissions, this._data = b, this._dataBinary = c.binary, 
              this.options = {
                compression: c.compression,
                compressionOptions: c.compressionOptions
              };
            };
            i.prototype = {
              internalStream: function internalStream(a) {
                var b = null, c = "string";
                try {
                  if (!a) throw new Error("No output type specified.");
                  c = a.toLowerCase();
                  var e = "string" === c || "text" === c;
                  "binarystring" !== c && "text" !== c || (c = "string"), b = this._decompressWorker();
                  var g = !this._dataBinary;
                  g && !e && (b = b.pipe(new f.Utf8EncodeWorker())), !g && e && (b = b.pipe(new f.Utf8DecodeWorker()));
                } catch (i) {
                  b = new h("error"), b.error(i);
                }
                return new d(b, c, "");
              },
              async: function async(a, b) {
                return this.internalStream(a).accumulate(b);
              },
              nodeStream: function nodeStream(a, b) {
                return this.internalStream(a || "nodebuffer").toNodejsStream(b);
              },
              _compressWorker: function _compressWorker(a, b) {
                if (this._data instanceof g && this._data.compression.magic === a.magic) return this._data.getCompressedWorker();
                var c = this._decompressWorker();
                return this._dataBinary || (c = c.pipe(new f.Utf8EncodeWorker())), g.createWorkerFrom(c, a, b);
              },
              _decompressWorker: function _decompressWorker() {
                return this._data instanceof g ? this._data.getContentWorker() : this._data instanceof h ? this._data : new e(this._data);
              }
            };
            for (var j = [ "asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer" ], k = function k() {
              throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
            }, l = 0; l < j.length; l++) i.prototype[j[l]] = k;
            b.exports = i;
          }, {
            "./compressedObject": 2,
            "./stream/DataWorker": 27,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31
          } ],
          36: [ function(a, b, c) {
            (function(a) {
              function c() {
                k = !0;
                for (var a, b, c = l.length; c; ) {
                  for (b = l, l = [], a = -1; ++a < c; ) b[a]();
                  c = l.length;
                }
                k = !1;
              }
              function d(a) {
                1 !== l.push(a) || k || e();
              }
              var e, f = a.MutationObserver || a.WebKitMutationObserver;
              if (f) {
                var g = 0, h = new f(c), i = a.document.createTextNode("");
                h.observe(i, {
                  characterData: !0
                }), e = function e() {
                  i.data = g = ++g % 2;
                };
              } else if (a.setImmediate || "undefined" == typeof a.MessageChannel) e = "document" in a && "onreadystatechange" in a.document.createElement("script") ? function() {
                var b = a.document.createElement("script");
                b.onreadystatechange = function() {
                  c(), b.onreadystatechange = null, b.parentNode.removeChild(b), b = null;
                }, a.document.documentElement.appendChild(b);
              } : function() {
                setTimeout(c, 0);
              }; else {
                var j = new a.MessageChannel();
                j.port1.onmessage = c, e = function e() {
                  j.port2.postMessage(0);
                };
              }
              var k, l = [];
              b.exports = d;
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
          }, {} ],
          37: [ function(a, b, c) {
            function d() {}
            function e(a) {
              if ("function" != typeof a) throw new TypeError("resolver must be a function");
              this.state = s, this.queue = [], this.outcome = void 0, a !== d && i(this, a);
            }
            function f(a, b, c) {
              this.promise = a, "function" == typeof b && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), 
              "function" == typeof c && (this.onRejected = c, this.callRejected = this.otherCallRejected);
            }
            function g(a, b, c) {
              o(function() {
                var d;
                try {
                  d = b(c);
                } catch (e) {
                  return p.reject(a, e);
                }
                d === a ? p.reject(a, new TypeError("Cannot resolve promise with itself")) : p.resolve(a, d);
              });
            }
            function h(a) {
              var b = a && a.then;
              if (a && ("object" == typeof a || "function" == typeof a) && "function" == typeof b) return function() {
                b.apply(a, arguments);
              };
            }
            function i(a, b) {
              function c(b) {
                f || (f = !0, p.reject(a, b));
              }
              function d(b) {
                f || (f = !0, p.resolve(a, b));
              }
              function e() {
                b(d, c);
              }
              var f = !1, g = j(e);
              "error" === g.status && c(g.value);
            }
            function j(a, b) {
              var c = {};
              try {
                c.value = a(b), c.status = "success";
              } catch (d) {
                c.status = "error", c.value = d;
              }
              return c;
            }
            function k(a) {
              return a instanceof this ? a : p.resolve(new this(d), a);
            }
            function l(a) {
              var b = new this(d);
              return p.reject(b, a);
            }
            function m(a) {
              function b(a, b) {
                function d(a) {
                  g[b] = a, ++h !== e || f || (f = !0, p.resolve(j, g));
                }
                c.resolve(a).then(d, function(a) {
                  f || (f = !0, p.reject(j, a));
                });
              }
              var c = this;
              if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
              var e = a.length, f = !1;
              if (!e) return this.resolve([]);
              for (var g = new Array(e), h = 0, i = -1, j = new this(d); ++i < e; ) b(a[i], i);
              return j;
            }
            function n(a) {
              function b(a) {
                c.resolve(a).then(function(a) {
                  f || (f = !0, p.resolve(h, a));
                }, function(a) {
                  f || (f = !0, p.reject(h, a));
                });
              }
              var c = this;
              if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
              var e = a.length, f = !1;
              if (!e) return this.resolve([]);
              for (var g = -1, h = new this(d); ++g < e; ) b(a[g]);
              return h;
            }
            var o = a("immediate"), p = {}, q = [ "REJECTED" ], r = [ "FULFILLED" ], s = [ "PENDING" ];
            b.exports = e, e.prototype["finally"] = function(a) {
              function b(b) {
                function c() {
                  return b;
                }
                return d.resolve(a()).then(c);
              }
              function c(b) {
                function c() {
                  throw b;
                }
                return d.resolve(a()).then(c);
              }
              if ("function" != typeof a) return this;
              var d = this.constructor;
              return this.then(b, c);
            }, e.prototype["catch"] = function(a) {
              return this.then(null, a);
            }, e.prototype.then = function(a, b) {
              if ("function" != typeof a && this.state === r || "function" != typeof b && this.state === q) return this;
              var c = new this.constructor(d);
              if (this.state !== s) {
                var e = this.state === r ? a : b;
                g(c, e, this.outcome);
              } else this.queue.push(new f(c, a, b));
              return c;
            }, f.prototype.callFulfilled = function(a) {
              p.resolve(this.promise, a);
            }, f.prototype.otherCallFulfilled = function(a) {
              g(this.promise, this.onFulfilled, a);
            }, f.prototype.callRejected = function(a) {
              p.reject(this.promise, a);
            }, f.prototype.otherCallRejected = function(a) {
              g(this.promise, this.onRejected, a);
            }, p.resolve = function(a, b) {
              var c = j(h, b);
              if ("error" === c.status) return p.reject(a, c.value);
              var d = c.value;
              if (d) i(a, d); else {
                a.state = r, a.outcome = b;
                for (var e = -1, f = a.queue.length; ++e < f; ) a.queue[e].callFulfilled(b);
              }
              return a;
            }, p.reject = function(a, b) {
              a.state = q, a.outcome = b;
              for (var c = -1, d = a.queue.length; ++c < d; ) a.queue[c].callRejected(b);
              return a;
            }, e.resolve = k, e.reject = l, e.all = m, e.race = n;
          }, {
            immediate: 36
          } ],
          38: [ function(a, b, c) {
            var d = a("./lib/utils/common").assign, e = a("./lib/deflate"), f = a("./lib/inflate"), g = a("./lib/zlib/constants"), h = {};
            d(h, e, f, g), b.exports = h;
          }, {
            "./lib/deflate": 39,
            "./lib/inflate": 40,
            "./lib/utils/common": 41,
            "./lib/zlib/constants": 44
          } ],
          39: [ function(a, b, c) {
            function d(a) {
              if (!(this instanceof d)) return new d(a);
              this.options = i.assign({
                level: s,
                method: u,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: t,
                to: ""
              }, a || {});
              var b = this.options;
              b.raw && b.windowBits > 0 ? b.windowBits = -b.windowBits : b.gzip && b.windowBits > 0 && b.windowBits < 16 && (b.windowBits += 16), 
              this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l(), 
              this.strm.avail_out = 0;
              var c = h.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
              if (c !== p) throw new Error(k[c]);
              if (b.header && h.deflateSetHeader(this.strm, b.header), b.dictionary) {
                var e;
                if (e = "string" == typeof b.dictionary ? j.string2buf(b.dictionary) : "[object ArrayBuffer]" === m.call(b.dictionary) ? new Uint8Array(b.dictionary) : b.dictionary, 
                c = h.deflateSetDictionary(this.strm, e), c !== p) throw new Error(k[c]);
                this._dict_set = !0;
              }
            }
            function e(a, b) {
              var c = new d(b);
              if (c.push(a, !0), c.err) throw c.msg || k[c.err];
              return c.result;
            }
            function f(a, b) {
              return b = b || {}, b.raw = !0, e(a, b);
            }
            function g(a, b) {
              return b = b || {}, b.gzip = !0, e(a, b);
            }
            var h = a("./zlib/deflate"), i = a("./utils/common"), j = a("./utils/strings"), k = a("./zlib/messages"), l = a("./zlib/zstream"), m = Object.prototype.toString, n = 0, o = 4, p = 0, q = 1, r = 2, s = -1, t = 0, u = 8;
            d.prototype.push = function(a, b) {
              var c, d, e = this.strm, f = this.options.chunkSize;
              if (this.ended) return !1;
              d = b === ~~b ? b : !0 === b ? o : n, "string" == typeof a ? e.input = j.string2buf(a) : "[object ArrayBuffer]" === m.call(a) ? e.input = new Uint8Array(a) : e.input = a, 
              e.next_in = 0, e.avail_in = e.input.length;
              do {
                if (0 === e.avail_out && (e.output = new i.Buf8(f), e.next_out = 0, e.avail_out = f), 
                c = h.deflate(e, d), c !== q && c !== p) return this.onEnd(c), this.ended = !0, 
                !1;
                0 !== e.avail_out && (0 !== e.avail_in || d !== o && d !== r) || ("string" === this.options.to ? this.onData(j.buf2binstring(i.shrinkBuf(e.output, e.next_out))) : this.onData(i.shrinkBuf(e.output, e.next_out)));
              } while ((e.avail_in > 0 || 0 === e.avail_out) && c !== q);
              return d === o ? (c = h.deflateEnd(this.strm), this.onEnd(c), this.ended = !0, c === p) : d !== r || (this.onEnd(p), 
              e.avail_out = 0, !0);
            }, d.prototype.onData = function(a) {
              this.chunks.push(a);
            }, d.prototype.onEnd = function(a) {
              a === p && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), 
              this.chunks = [], this.err = a, this.msg = this.strm.msg;
            }, c.Deflate = d, c.deflate = e, c.deflateRaw = f, c.gzip = g;
          }, {
            "./utils/common": 41,
            "./utils/strings": 42,
            "./zlib/deflate": 46,
            "./zlib/messages": 51,
            "./zlib/zstream": 53
          } ],
          40: [ function(a, b, c) {
            function d(a) {
              if (!(this instanceof d)) return new d(a);
              this.options = h.assign({
                chunkSize: 16384,
                windowBits: 0,
                to: ""
              }, a || {});
              var b = this.options;
              b.raw && b.windowBits >= 0 && b.windowBits < 16 && (b.windowBits = -b.windowBits, 
              0 === b.windowBits && (b.windowBits = -15)), !(b.windowBits >= 0 && b.windowBits < 16) || a && a.windowBits || (b.windowBits += 32), 
              b.windowBits > 15 && b.windowBits < 48 && 0 === (15 & b.windowBits) && (b.windowBits |= 15), 
              this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l(), 
              this.strm.avail_out = 0;
              var c = g.inflateInit2(this.strm, b.windowBits);
              if (c !== j.Z_OK) throw new Error(k[c]);
              this.header = new m(), g.inflateGetHeader(this.strm, this.header);
            }
            function e(a, b) {
              var c = new d(b);
              if (c.push(a, !0), c.err) throw c.msg || k[c.err];
              return c.result;
            }
            function f(a, b) {
              return b = b || {}, b.raw = !0, e(a, b);
            }
            var g = a("./zlib/inflate"), h = a("./utils/common"), i = a("./utils/strings"), j = a("./zlib/constants"), k = a("./zlib/messages"), l = a("./zlib/zstream"), m = a("./zlib/gzheader"), n = Object.prototype.toString;
            d.prototype.push = function(a, b) {
              var c, d, e, f, k, l, m = this.strm, o = this.options.chunkSize, p = this.options.dictionary, q = !1;
              if (this.ended) return !1;
              d = b === ~~b ? b : !0 === b ? j.Z_FINISH : j.Z_NO_FLUSH, "string" == typeof a ? m.input = i.binstring2buf(a) : "[object ArrayBuffer]" === n.call(a) ? m.input = new Uint8Array(a) : m.input = a, 
              m.next_in = 0, m.avail_in = m.input.length;
              do {
                if (0 === m.avail_out && (m.output = new h.Buf8(o), m.next_out = 0, m.avail_out = o), 
                c = g.inflate(m, j.Z_NO_FLUSH), c === j.Z_NEED_DICT && p && (l = "string" == typeof p ? i.string2buf(p) : "[object ArrayBuffer]" === n.call(p) ? new Uint8Array(p) : p, 
                c = g.inflateSetDictionary(this.strm, l)), c === j.Z_BUF_ERROR && !0 === q && (c = j.Z_OK, 
                q = !1), c !== j.Z_STREAM_END && c !== j.Z_OK) return this.onEnd(c), this.ended = !0, 
                !1;
                m.next_out && (0 !== m.avail_out && c !== j.Z_STREAM_END && (0 !== m.avail_in || d !== j.Z_FINISH && d !== j.Z_SYNC_FLUSH) || ("string" === this.options.to ? (e = i.utf8border(m.output, m.next_out), 
                f = m.next_out - e, k = i.buf2string(m.output, e), m.next_out = f, m.avail_out = o - f, 
                f && h.arraySet(m.output, m.output, e, f, 0), this.onData(k)) : this.onData(h.shrinkBuf(m.output, m.next_out)))), 
                0 === m.avail_in && 0 === m.avail_out && (q = !0);
              } while ((m.avail_in > 0 || 0 === m.avail_out) && c !== j.Z_STREAM_END);
              return c === j.Z_STREAM_END && (d = j.Z_FINISH), d === j.Z_FINISH ? (c = g.inflateEnd(this.strm), 
              this.onEnd(c), this.ended = !0, c === j.Z_OK) : d !== j.Z_SYNC_FLUSH || (this.onEnd(j.Z_OK), 
              m.avail_out = 0, !0);
            }, d.prototype.onData = function(a) {
              this.chunks.push(a);
            }, d.prototype.onEnd = function(a) {
              a === j.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = h.flattenChunks(this.chunks)), 
              this.chunks = [], this.err = a, this.msg = this.strm.msg;
            }, c.Inflate = d, c.inflate = e, c.inflateRaw = f, c.ungzip = e;
          }, {
            "./utils/common": 41,
            "./utils/strings": 42,
            "./zlib/constants": 44,
            "./zlib/gzheader": 47,
            "./zlib/inflate": 49,
            "./zlib/messages": 51,
            "./zlib/zstream": 53
          } ],
          41: [ function(a, b, c) {
            var d = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            c.assign = function(a) {
              for (var b = Array.prototype.slice.call(arguments, 1); b.length; ) {
                var c = b.shift();
                if (c) {
                  if ("object" != typeof c) throw new TypeError(c + "must be non-object");
                  for (var d in c) c.hasOwnProperty(d) && (a[d] = c[d]);
                }
              }
              return a;
            }, c.shrinkBuf = function(a, b) {
              return a.length === b ? a : a.subarray ? a.subarray(0, b) : (a.length = b, a);
            };
            var e = {
              arraySet: function arraySet(a, b, c, d, e) {
                if (b.subarray && a.subarray) return void a.set(b.subarray(c, c + d), e);
                for (var f = 0; f < d; f++) a[e + f] = b[c + f];
              },
              flattenChunks: function flattenChunks(a) {
                var b, c, d, e, f, g;
                for (d = 0, b = 0, c = a.length; b < c; b++) d += a[b].length;
                for (g = new Uint8Array(d), e = 0, b = 0, c = a.length; b < c; b++) f = a[b], g.set(f, e), 
                e += f.length;
                return g;
              }
            }, f = {
              arraySet: function arraySet(a, b, c, d, e) {
                for (var f = 0; f < d; f++) a[e + f] = b[c + f];
              },
              flattenChunks: function flattenChunks(a) {
                return [].concat.apply([], a);
              }
            };
            c.setTyped = function(a) {
              a ? (c.Buf8 = Uint8Array, c.Buf16 = Uint16Array, c.Buf32 = Int32Array, c.assign(c, e)) : (c.Buf8 = Array, 
              c.Buf16 = Array, c.Buf32 = Array, c.assign(c, f));
            }, c.setTyped(d);
          }, {} ],
          42: [ function(a, b, c) {
            function d(a, b) {
              if (b < 65537 && (a.subarray && g || !a.subarray && f)) return String.fromCharCode.apply(null, e.shrinkBuf(a, b));
              for (var c = "", d = 0; d < b; d++) c += String.fromCharCode(a[d]);
              return c;
            }
            var e = a("./common"), f = !0, g = !0;
            try {
              String.fromCharCode.apply(null, [ 0 ]);
            } catch (h) {
              f = !1;
            }
            try {
              String.fromCharCode.apply(null, new Uint8Array(1));
            } catch (h) {
              g = !1;
            }
            for (var i = new e.Buf8(256), j = 0; j < 256; j++) i[j] = j >= 252 ? 6 : j >= 248 ? 5 : j >= 240 ? 4 : j >= 224 ? 3 : j >= 192 ? 2 : 1;
            i[254] = i[254] = 1, c.string2buf = function(a) {
              var b, c, d, f, g, h = a.length, i = 0;
              for (f = 0; f < h; f++) c = a.charCodeAt(f), 55296 === (64512 & c) && f + 1 < h && (d = a.charCodeAt(f + 1), 
              56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), i += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
              for (b = new e.Buf8(i), g = 0, f = 0; g < i; f++) c = a.charCodeAt(f), 55296 === (64512 & c) && f + 1 < h && (d = a.charCodeAt(f + 1), 
              56320 === (64512 & d) && (c = 65536 + (c - 55296 << 10) + (d - 56320), f++)), c < 128 ? b[g++] = c : c < 2048 ? (b[g++] = 192 | c >>> 6, 
              b[g++] = 128 | 63 & c) : c < 65536 ? (b[g++] = 224 | c >>> 12, b[g++] = 128 | c >>> 6 & 63, 
              b[g++] = 128 | 63 & c) : (b[g++] = 240 | c >>> 18, b[g++] = 128 | c >>> 12 & 63, 
              b[g++] = 128 | c >>> 6 & 63, b[g++] = 128 | 63 & c);
              return b;
            }, c.buf2binstring = function(a) {
              return d(a, a.length);
            }, c.binstring2buf = function(a) {
              for (var b = new e.Buf8(a.length), c = 0, d = b.length; c < d; c++) b[c] = a.charCodeAt(c);
              return b;
            }, c.buf2string = function(a, b) {
              var c, e, f, g, h = b || a.length, j = new Array(2 * h);
              for (e = 0, c = 0; c < h; ) if (f = a[c++], f < 128) j[e++] = f; else if (g = i[f], 
              g > 4) j[e++] = 65533, c += g - 1; else {
                for (f &= 2 === g ? 31 : 3 === g ? 15 : 7; g > 1 && c < h; ) f = f << 6 | 63 & a[c++], 
                g--;
                g > 1 ? j[e++] = 65533 : f < 65536 ? j[e++] = f : (f -= 65536, j[e++] = 55296 | f >> 10 & 1023, 
                j[e++] = 56320 | 1023 & f);
              }
              return d(j, e);
            }, c.utf8border = function(a, b) {
              var c;
              for (b = b || a.length, b > a.length && (b = a.length), c = b - 1; c >= 0 && 128 === (192 & a[c]); ) c--;
              return c < 0 ? b : 0 === c ? b : c + i[a[c]] > b ? c : b;
            };
          }, {
            "./common": 41
          } ],
          43: [ function(a, b, c) {
            function d(a, b, c, d) {
              for (var e = 65535 & a | 0, f = a >>> 16 & 65535 | 0, g = 0; 0 !== c; ) {
                g = c > 2e3 ? 2e3 : c, c -= g;
                do {
                  e = e + b[d++] | 0, f = f + e | 0;
                } while (--g);
                e %= 65521, f %= 65521;
              }
              return e | f << 16 | 0;
            }
            b.exports = d;
          }, {} ],
          44: [ function(a, b, c) {
            b.exports = {
              Z_NO_FLUSH: 0,
              Z_PARTIAL_FLUSH: 1,
              Z_SYNC_FLUSH: 2,
              Z_FULL_FLUSH: 3,
              Z_FINISH: 4,
              Z_BLOCK: 5,
              Z_TREES: 6,
              Z_OK: 0,
              Z_STREAM_END: 1,
              Z_NEED_DICT: 2,
              Z_ERRNO: -1,
              Z_STREAM_ERROR: -2,
              Z_DATA_ERROR: -3,
              Z_BUF_ERROR: -5,
              Z_NO_COMPRESSION: 0,
              Z_BEST_SPEED: 1,
              Z_BEST_COMPRESSION: 9,
              Z_DEFAULT_COMPRESSION: -1,
              Z_FILTERED: 1,
              Z_HUFFMAN_ONLY: 2,
              Z_RLE: 3,
              Z_FIXED: 4,
              Z_DEFAULT_STRATEGY: 0,
              Z_BINARY: 0,
              Z_TEXT: 1,
              Z_UNKNOWN: 2,
              Z_DEFLATED: 8
            };
          }, {} ],
          45: [ function(a, b, c) {
            function d() {
              for (var a, b = [], c = 0; c < 256; c++) {
                a = c;
                for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                b[c] = a;
              }
              return b;
            }
            function e(a, b, c, d) {
              var e = f, g = d + c;
              a ^= -1;
              for (var h = d; h < g; h++) a = a >>> 8 ^ e[255 & (a ^ b[h])];
              return -1 ^ a;
            }
            var f = d();
            b.exports = e;
          }, {} ],
          46: [ function(a, b, c) {
            function d(a, b) {
              return a.msg = I[b], b;
            }
            function e(a) {
              return (a << 1) - (a > 4 ? 9 : 0);
            }
            function f(a) {
              for (var b = a.length; --b >= 0; ) a[b] = 0;
            }
            function g(a) {
              var b = a.state, c = b.pending;
              c > a.avail_out && (c = a.avail_out), 0 !== c && (E.arraySet(a.output, b.pending_buf, b.pending_out, c, a.next_out), 
              a.next_out += c, b.pending_out += c, a.total_out += c, a.avail_out -= c, b.pending -= c, 
              0 === b.pending && (b.pending_out = 0));
            }
            function h(a, b) {
              F._tr_flush_block(a, a.block_start >= 0 ? a.block_start : -1, a.strstart - a.block_start, b), 
              a.block_start = a.strstart, g(a.strm);
            }
            function i(a, b) {
              a.pending_buf[a.pending++] = b;
            }
            function j(a, b) {
              a.pending_buf[a.pending++] = b >>> 8 & 255, a.pending_buf[a.pending++] = 255 & b;
            }
            function k(a, b, c, d) {
              var e = a.avail_in;
              return e > d && (e = d), 0 === e ? 0 : (a.avail_in -= e, E.arraySet(b, a.input, a.next_in, e, c), 
              1 === a.state.wrap ? a.adler = G(a.adler, b, e, c) : 2 === a.state.wrap && (a.adler = H(a.adler, b, e, c)), 
              a.next_in += e, a.total_in += e, e);
            }
            function l(a, b) {
              var c, d, e = a.max_chain_length, f = a.strstart, g = a.prev_length, h = a.nice_match, i = a.strstart > a.w_size - la ? a.strstart - (a.w_size - la) : 0, j = a.window, k = a.w_mask, l = a.prev, m = a.strstart + ka, n = j[f + g - 1], o = j[f + g];
              a.prev_length >= a.good_match && (e >>= 2), h > a.lookahead && (h = a.lookahead);
              do {
                if (c = b, j[c + g] === o && j[c + g - 1] === n && j[c] === j[f] && j[++c] === j[f + 1]) {
                  f += 2, c++;
                  do {} while (j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && f < m);
                  if (d = ka - (m - f), f = m - ka, d > g) {
                    if (a.match_start = b, g = d, d >= h) break;
                    n = j[f + g - 1], o = j[f + g];
                  }
                }
              } while ((b = l[b & k]) > i && 0 !== --e);
              return g <= a.lookahead ? g : a.lookahead;
            }
            function m(a) {
              var b, c, d, e, f, g = a.w_size;
              do {
                if (e = a.window_size - a.lookahead - a.strstart, a.strstart >= g + (g - la)) {
                  E.arraySet(a.window, a.window, g, g, 0), a.match_start -= g, a.strstart -= g, a.block_start -= g, 
                  c = a.hash_size, b = c;
                  do {
                    d = a.head[--b], a.head[b] = d >= g ? d - g : 0;
                  } while (--c);
                  c = g, b = c;
                  do {
                    d = a.prev[--b], a.prev[b] = d >= g ? d - g : 0;
                  } while (--c);
                  e += g;
                }
                if (0 === a.strm.avail_in) break;
                if (c = k(a.strm, a.window, a.strstart + a.lookahead, e), a.lookahead += c, a.lookahead + a.insert >= ja) for (f = a.strstart - a.insert, 
                a.ins_h = a.window[f], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + 1]) & a.hash_mask; a.insert && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + ja - 1]) & a.hash_mask, 
                a.prev[f & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = f, f++, a.insert--, !(a.lookahead + a.insert < ja)); ) ;
              } while (a.lookahead < la && 0 !== a.strm.avail_in);
            }
            function n(a, b) {
              var c = 65535;
              for (c > a.pending_buf_size - 5 && (c = a.pending_buf_size - 5); ;) {
                if (a.lookahead <= 1) {
                  if (m(a), 0 === a.lookahead && b === J) return ua;
                  if (0 === a.lookahead) break;
                }
                a.strstart += a.lookahead, a.lookahead = 0;
                var d = a.block_start + c;
                if ((0 === a.strstart || a.strstart >= d) && (a.lookahead = a.strstart - d, a.strstart = d, 
                h(a, !1), 0 === a.strm.avail_out)) return ua;
                if (a.strstart - a.block_start >= a.w_size - la && (h(a, !1), 0 === a.strm.avail_out)) return ua;
              }
              return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : (a.strstart > a.block_start && (h(a, !1), 
              0 === a.strm.avail_out), ua);
            }
            function o(a, b) {
              for (var c, d; ;) {
                if (a.lookahead < la) {
                  if (m(a), a.lookahead < la && b === J) return ua;
                  if (0 === a.lookahead) break;
                }
                if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, 
                c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), 
                0 !== c && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c)), a.match_length >= ja) if (d = F._tr_tally(a, a.strstart - a.match_start, a.match_length - ja), 
                a.lookahead -= a.match_length, a.match_length <= a.max_lazy_match && a.lookahead >= ja) {
                  a.match_length--;
                  do {
                    a.strstart++, a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, 
                    c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart;
                  } while (0 !== --a.match_length);
                  a.strstart++;
                } else a.strstart += a.match_length, a.match_length = 0, a.ins_h = a.window[a.strstart], 
                a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + 1]) & a.hash_mask; else d = F._tr_tally(a, 0, a.window[a.strstart]), 
                a.lookahead--, a.strstart++;
                if (d && (h(a, !1), 0 === a.strm.avail_out)) return ua;
              }
              return a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 
              0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va;
            }
            function p(a, b) {
              for (var c, d, e; ;) {
                if (a.lookahead < la) {
                  if (m(a), a.lookahead < la && b === J) return ua;
                  if (0 === a.lookahead) break;
                }
                if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, 
                c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), 
                a.prev_length = a.match_length, a.prev_match = a.match_start, a.match_length = ja - 1, 
                0 !== c && a.prev_length < a.max_lazy_match && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c), 
                a.match_length <= 5 && (a.strategy === U || a.match_length === ja && a.strstart - a.match_start > 4096) && (a.match_length = ja - 1)), 
                a.prev_length >= ja && a.match_length <= a.prev_length) {
                  e = a.strstart + a.lookahead - ja, d = F._tr_tally(a, a.strstart - 1 - a.prev_match, a.prev_length - ja), 
                  a.lookahead -= a.prev_length - 1, a.prev_length -= 2;
                  do {
                    ++a.strstart <= e && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, 
                    c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart);
                  } while (0 !== --a.prev_length);
                  if (a.match_available = 0, a.match_length = ja - 1, a.strstart++, d && (h(a, !1), 
                  0 === a.strm.avail_out)) return ua;
                } else if (a.match_available) {
                  if (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), d && h(a, !1), a.strstart++, 
                  a.lookahead--, 0 === a.strm.avail_out) return ua;
                } else a.match_available = 1, a.strstart++, a.lookahead--;
              }
              return a.match_available && (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), a.match_available = 0), 
              a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 
              0 === a.strm.avail_out) ? ua : va;
            }
            function q(a, b) {
              for (var c, d, e, f, g = a.window; ;) {
                if (a.lookahead <= ka) {
                  if (m(a), a.lookahead <= ka && b === J) return ua;
                  if (0 === a.lookahead) break;
                }
                if (a.match_length = 0, a.lookahead >= ja && a.strstart > 0 && (e = a.strstart - 1, 
                d = g[e], d === g[++e] && d === g[++e] && d === g[++e])) {
                  f = a.strstart + ka;
                  do {} while (d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && e < f);
                  a.match_length = ka - (f - e), a.match_length > a.lookahead && (a.match_length = a.lookahead);
                }
                if (a.match_length >= ja ? (c = F._tr_tally(a, 1, a.match_length - ja), a.lookahead -= a.match_length, 
                a.strstart += a.match_length, a.match_length = 0) : (c = F._tr_tally(a, 0, a.window[a.strstart]), 
                a.lookahead--, a.strstart++), c && (h(a, !1), 0 === a.strm.avail_out)) return ua;
              }
              return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 
              0 === a.strm.avail_out) ? ua : va;
            }
            function r(a, b) {
              for (var c; ;) {
                if (0 === a.lookahead && (m(a), 0 === a.lookahead)) {
                  if (b === J) return ua;
                  break;
                }
                if (a.match_length = 0, c = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, 
                a.strstart++, c && (h(a, !1), 0 === a.strm.avail_out)) return ua;
              }
              return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 
              0 === a.strm.avail_out) ? ua : va;
            }
            function s(a, b, c, d, e) {
              this.good_length = a, this.max_lazy = b, this.nice_length = c, this.max_chain = d, 
              this.func = e;
            }
            function t(a) {
              a.window_size = 2 * a.w_size, f(a.head), a.max_lazy_match = D[a.level].max_lazy, 
              a.good_match = D[a.level].good_length, a.nice_match = D[a.level].nice_length, a.max_chain_length = D[a.level].max_chain, 
              a.strstart = 0, a.block_start = 0, a.lookahead = 0, a.insert = 0, a.match_length = a.prev_length = ja - 1, 
              a.match_available = 0, a.ins_h = 0;
            }
            function u() {
              this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, 
              this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, 
              this.method = $, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, 
              this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, 
              this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, 
              this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, 
              this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, 
              this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, 
              this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new E.Buf16(2 * ha), 
              this.dyn_dtree = new E.Buf16(2 * (2 * fa + 1)), this.bl_tree = new E.Buf16(2 * (2 * ga + 1)), 
              f(this.dyn_ltree), f(this.dyn_dtree), f(this.bl_tree), this.l_desc = null, this.d_desc = null, 
              this.bl_desc = null, this.bl_count = new E.Buf16(ia + 1), this.heap = new E.Buf16(2 * ea + 1), 
              f(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new E.Buf16(2 * ea + 1), 
              f(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, 
              this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, 
              this.bi_valid = 0;
            }
            function v(a) {
              var b;
              return a && a.state ? (a.total_in = a.total_out = 0, a.data_type = Z, b = a.state, 
              b.pending = 0, b.pending_out = 0, b.wrap < 0 && (b.wrap = -b.wrap), b.status = b.wrap ? na : sa, 
              a.adler = 2 === b.wrap ? 0 : 1, b.last_flush = J, F._tr_init(b), O) : d(a, Q);
            }
            function w(a) {
              var b = v(a);
              return b === O && t(a.state), b;
            }
            function x(a, b) {
              return a && a.state ? 2 !== a.state.wrap ? Q : (a.state.gzhead = b, O) : Q;
            }
            function y(a, b, c, e, f, g) {
              if (!a) return Q;
              var h = 1;
              if (b === T && (b = 6), e < 0 ? (h = 0, e = -e) : e > 15 && (h = 2, e -= 16), f < 1 || f > _ || c !== $ || e < 8 || e > 15 || b < 0 || b > 9 || g < 0 || g > X) return d(a, Q);
              8 === e && (e = 9);
              var i = new u();
              return a.state = i, i.strm = a, i.wrap = h, i.gzhead = null, i.w_bits = e, i.w_size = 1 << i.w_bits, 
              i.w_mask = i.w_size - 1, i.hash_bits = f + 7, i.hash_size = 1 << i.hash_bits, i.hash_mask = i.hash_size - 1, 
              i.hash_shift = ~~((i.hash_bits + ja - 1) / ja), i.window = new E.Buf8(2 * i.w_size), 
              i.head = new E.Buf16(i.hash_size), i.prev = new E.Buf16(i.w_size), i.lit_bufsize = 1 << f + 6, 
              i.pending_buf_size = 4 * i.lit_bufsize, i.pending_buf = new E.Buf8(i.pending_buf_size), 
              i.d_buf = 1 * i.lit_bufsize, i.l_buf = 3 * i.lit_bufsize, i.level = b, i.strategy = g, 
              i.method = c, w(a);
            }
            function z(a, b) {
              return y(a, b, $, aa, ba, Y);
            }
            function A(a, b) {
              var c, h, k, l;
              if (!a || !a.state || b > N || b < 0) return a ? d(a, Q) : Q;
              if (h = a.state, !a.output || !a.input && 0 !== a.avail_in || h.status === ta && b !== M) return d(a, 0 === a.avail_out ? S : Q);
              if (h.strm = a, c = h.last_flush, h.last_flush = b, h.status === na) if (2 === h.wrap) a.adler = 0, 
              i(h, 31), i(h, 139), i(h, 8), h.gzhead ? (i(h, (h.gzhead.text ? 1 : 0) + (h.gzhead.hcrc ? 2 : 0) + (h.gzhead.extra ? 4 : 0) + (h.gzhead.name ? 8 : 0) + (h.gzhead.comment ? 16 : 0)), 
              i(h, 255 & h.gzhead.time), i(h, h.gzhead.time >> 8 & 255), i(h, h.gzhead.time >> 16 & 255), 
              i(h, h.gzhead.time >> 24 & 255), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), 
              i(h, 255 & h.gzhead.os), h.gzhead.extra && h.gzhead.extra.length && (i(h, 255 & h.gzhead.extra.length), 
              i(h, h.gzhead.extra.length >> 8 & 255)), h.gzhead.hcrc && (a.adler = H(a.adler, h.pending_buf, h.pending, 0)), 
              h.gzindex = 0, h.status = oa) : (i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), 
              i(h, ya), h.status = sa); else {
                var m = $ + (h.w_bits - 8 << 4) << 8, n = -1;
                n = h.strategy >= V || h.level < 2 ? 0 : h.level < 6 ? 1 : 6 === h.level ? 2 : 3, 
                m |= n << 6, 0 !== h.strstart && (m |= ma), m += 31 - m % 31, h.status = sa, j(h, m), 
                0 !== h.strstart && (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), a.adler = 1;
              }
              if (h.status === oa) if (h.gzhead.extra) {
                for (k = h.pending; h.gzindex < (65535 & h.gzhead.extra.length) && (h.pending !== h.pending_buf_size || (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                g(a), k = h.pending, h.pending !== h.pending_buf_size)); ) i(h, 255 & h.gzhead.extra[h.gzindex]), 
                h.gzindex++;
                h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                h.gzindex === h.gzhead.extra.length && (h.gzindex = 0, h.status = pa);
              } else h.status = pa;
              if (h.status === pa) if (h.gzhead.name) {
                k = h.pending;
                do {
                  if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                  g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                    l = 1;
                    break;
                  }
                  l = h.gzindex < h.gzhead.name.length ? 255 & h.gzhead.name.charCodeAt(h.gzindex++) : 0, 
                  i(h, l);
                } while (0 !== l);
                h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                0 === l && (h.gzindex = 0, h.status = qa);
              } else h.status = qa;
              if (h.status === qa) if (h.gzhead.comment) {
                k = h.pending;
                do {
                  if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                  g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                    l = 1;
                    break;
                  }
                  l = h.gzindex < h.gzhead.comment.length ? 255 & h.gzhead.comment.charCodeAt(h.gzindex++) : 0, 
                  i(h, l);
                } while (0 !== l);
                h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 
                0 === l && (h.status = ra);
              } else h.status = ra;
              if (h.status === ra && (h.gzhead.hcrc ? (h.pending + 2 > h.pending_buf_size && g(a), 
              h.pending + 2 <= h.pending_buf_size && (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), 
              a.adler = 0, h.status = sa)) : h.status = sa), 0 !== h.pending) {
                if (g(a), 0 === a.avail_out) return h.last_flush = -1, O;
              } else if (0 === a.avail_in && e(b) <= e(c) && b !== M) return d(a, S);
              if (h.status === ta && 0 !== a.avail_in) return d(a, S);
              if (0 !== a.avail_in || 0 !== h.lookahead || b !== J && h.status !== ta) {
                var o = h.strategy === V ? r(h, b) : h.strategy === W ? q(h, b) : D[h.level].func(h, b);
                if (o !== wa && o !== xa || (h.status = ta), o === ua || o === wa) return 0 === a.avail_out && (h.last_flush = -1), 
                O;
                if (o === va && (b === K ? F._tr_align(h) : b !== N && (F._tr_stored_block(h, 0, 0, !1), 
                b === L && (f(h.head), 0 === h.lookahead && (h.strstart = 0, h.block_start = 0, 
                h.insert = 0))), g(a), 0 === a.avail_out)) return h.last_flush = -1, O;
              }
              return b !== M ? O : h.wrap <= 0 ? P : (2 === h.wrap ? (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), 
              i(h, a.adler >> 16 & 255), i(h, a.adler >> 24 & 255), i(h, 255 & a.total_in), i(h, a.total_in >> 8 & 255), 
              i(h, a.total_in >> 16 & 255), i(h, a.total_in >> 24 & 255)) : (j(h, a.adler >>> 16), 
              j(h, 65535 & a.adler)), g(a), h.wrap > 0 && (h.wrap = -h.wrap), 0 !== h.pending ? O : P);
            }
            function B(a) {
              var b;
              return a && a.state ? (b = a.state.status, b !== na && b !== oa && b !== pa && b !== qa && b !== ra && b !== sa && b !== ta ? d(a, Q) : (a.state = null, 
              b === sa ? d(a, R) : O)) : Q;
            }
            function C(a, b) {
              var c, d, e, g, h, i, j, k, l = b.length;
              if (!a || !a.state) return Q;
              if (c = a.state, g = c.wrap, 2 === g || 1 === g && c.status !== na || c.lookahead) return Q;
              for (1 === g && (a.adler = G(a.adler, b, l, 0)), c.wrap = 0, l >= c.w_size && (0 === g && (f(c.head), 
              c.strstart = 0, c.block_start = 0, c.insert = 0), k = new E.Buf8(c.w_size), E.arraySet(k, b, l - c.w_size, c.w_size, 0), 
              b = k, l = c.w_size), h = a.avail_in, i = a.next_in, j = a.input, a.avail_in = l, 
              a.next_in = 0, a.input = b, m(c); c.lookahead >= ja; ) {
                d = c.strstart, e = c.lookahead - (ja - 1);
                do {
                  c.ins_h = (c.ins_h << c.hash_shift ^ c.window[d + ja - 1]) & c.hash_mask, c.prev[d & c.w_mask] = c.head[c.ins_h], 
                  c.head[c.ins_h] = d, d++;
                } while (--e);
                c.strstart = d, c.lookahead = ja - 1, m(c);
              }
              return c.strstart += c.lookahead, c.block_start = c.strstart, c.insert = c.lookahead, 
              c.lookahead = 0, c.match_length = c.prev_length = ja - 1, c.match_available = 0, 
              a.next_in = i, a.input = j, a.avail_in = h, c.wrap = g, O;
            }
            var D, E = a("../utils/common"), F = a("./trees"), G = a("./adler32"), H = a("./crc32"), I = a("./messages"), J = 0, K = 1, L = 3, M = 4, N = 5, O = 0, P = 1, Q = -2, R = -3, S = -5, T = -1, U = 1, V = 2, W = 3, X = 4, Y = 0, Z = 2, $ = 8, _ = 9, aa = 15, ba = 8, ca = 29, da = 256, ea = da + 1 + ca, fa = 30, ga = 19, ha = 2 * ea + 1, ia = 15, ja = 3, ka = 258, la = ka + ja + 1, ma = 32, na = 42, oa = 69, pa = 73, qa = 91, ra = 103, sa = 113, ta = 666, ua = 1, va = 2, wa = 3, xa = 4, ya = 3;
            D = [ new s(0, 0, 0, 0, n), new s(4, 4, 8, 4, o), new s(4, 5, 16, 8, o), new s(4, 6, 32, 32, o), new s(4, 4, 16, 16, p), new s(8, 16, 32, 32, p), new s(8, 16, 128, 128, p), new s(8, 32, 128, 256, p), new s(32, 128, 258, 1024, p), new s(32, 258, 258, 4096, p) ], 
            c.deflateInit = z, c.deflateInit2 = y, c.deflateReset = w, c.deflateResetKeep = v, 
            c.deflateSetHeader = x, c.deflate = A, c.deflateEnd = B, c.deflateSetDictionary = C, 
            c.deflateInfo = "pako deflate (from Nodeca project)";
          }, {
            "../utils/common": 41,
            "./adler32": 43,
            "./crc32": 45,
            "./messages": 51,
            "./trees": 52
          } ],
          47: [ function(a, b, c) {
            function d() {
              this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, 
              this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
            }
            b.exports = d;
          }, {} ],
          48: [ function(a, b, c) {
            var d = 30, e = 12;
            b.exports = function(a, b) {
              var c, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C;
              c = a.state, f = a.next_in, B = a.input, g = f + (a.avail_in - 5), h = a.next_out, 
              C = a.output, i = h - (b - a.avail_out), j = h + (a.avail_out - 257), k = c.dmax, 
              l = c.wsize, m = c.whave, n = c.wnext, o = c.window, p = c.hold, q = c.bits, r = c.lencode, 
              s = c.distcode, t = (1 << c.lenbits) - 1, u = (1 << c.distbits) - 1;
              a: do {
                q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = r[p & t];
                b: for (;;) {
                  if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, 0 === w) C[h++] = 65535 & v; else {
                    if (!(16 & w)) {
                      if (0 === (64 & w)) {
                        v = r[(65535 & v) + (p & (1 << w) - 1)];
                        continue b;
                      }
                      if (32 & w) {
                        c.mode = e;
                        break a;
                      }
                      a.msg = "invalid literal/length code", c.mode = d;
                      break a;
                    }
                    x = 65535 & v, w &= 15, w && (q < w && (p += B[f++] << q, q += 8), x += p & (1 << w) - 1, 
                    p >>>= w, q -= w), q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), 
                    v = s[p & u];
                    c: for (;;) {
                      if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, !(16 & w)) {
                        if (0 === (64 & w)) {
                          v = s[(65535 & v) + (p & (1 << w) - 1)];
                          continue c;
                        }
                        a.msg = "invalid distance code", c.mode = d;
                        break a;
                      }
                      if (y = 65535 & v, w &= 15, q < w && (p += B[f++] << q, q += 8, q < w && (p += B[f++] << q, 
                      q += 8)), y += p & (1 << w) - 1, y > k) {
                        a.msg = "invalid distance too far back", c.mode = d;
                        break a;
                      }
                      if (p >>>= w, q -= w, w = h - i, y > w) {
                        if (w = y - w, w > m && c.sane) {
                          a.msg = "invalid distance too far back", c.mode = d;
                          break a;
                        }
                        if (z = 0, A = o, 0 === n) {
                          if (z += l - w, w < x) {
                            x -= w;
                            do {
                              C[h++] = o[z++];
                            } while (--w);
                            z = h - y, A = C;
                          }
                        } else if (n < w) {
                          if (z += l + n - w, w -= n, w < x) {
                            x -= w;
                            do {
                              C[h++] = o[z++];
                            } while (--w);
                            if (z = 0, n < x) {
                              w = n, x -= w;
                              do {
                                C[h++] = o[z++];
                              } while (--w);
                              z = h - y, A = C;
                            }
                          }
                        } else if (z += n - w, w < x) {
                          x -= w;
                          do {
                            C[h++] = o[z++];
                          } while (--w);
                          z = h - y, A = C;
                        }
                        for (;x > 2; ) C[h++] = A[z++], C[h++] = A[z++], C[h++] = A[z++], x -= 3;
                        x && (C[h++] = A[z++], x > 1 && (C[h++] = A[z++]));
                      } else {
                        z = h - y;
                        do {
                          C[h++] = C[z++], C[h++] = C[z++], C[h++] = C[z++], x -= 3;
                        } while (x > 2);
                        x && (C[h++] = C[z++], x > 1 && (C[h++] = C[z++]));
                      }
                      break;
                    }
                  }
                  break;
                }
              } while (f < g && h < j);
              x = q >> 3, f -= x, q -= x << 3, p &= (1 << q) - 1, a.next_in = f, a.next_out = h, 
              a.avail_in = f < g ? g - f + 5 : 5 - (f - g), a.avail_out = h < j ? j - h + 257 : 257 - (h - j), 
              c.hold = p, c.bits = q;
            };
          }, {} ],
          49: [ function(a, b, c) {
            function d(a) {
              return (a >>> 24 & 255) + (a >>> 8 & 65280) + ((65280 & a) << 8) + ((255 & a) << 24);
            }
            function e() {
              this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, 
              this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, 
              this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, 
              this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, 
              this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, 
              this.ndist = 0, this.have = 0, this.next = null, this.lens = new s.Buf16(320), this.work = new s.Buf16(288), 
              this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
            }
            function f(a) {
              var b;
              return a && a.state ? (b = a.state, a.total_in = a.total_out = b.total = 0, a.msg = "", 
              b.wrap && (a.adler = 1 & b.wrap), b.mode = L, b.last = 0, b.havedict = 0, b.dmax = 32768, 
              b.head = null, b.hold = 0, b.bits = 0, b.lencode = b.lendyn = new s.Buf32(pa), b.distcode = b.distdyn = new s.Buf32(qa), 
              b.sane = 1, b.back = -1, D) : G;
            }
            function g(a) {
              var b;
              return a && a.state ? (b = a.state, b.wsize = 0, b.whave = 0, b.wnext = 0, f(a)) : G;
            }
            function h(a, b) {
              var c, d;
              return a && a.state ? (d = a.state, b < 0 ? (c = 0, b = -b) : (c = 1 + (b >> 4), 
              b < 48 && (b &= 15)), b && (b < 8 || b > 15) ? G : (null !== d.window && d.wbits !== b && (d.window = null), 
              d.wrap = c, d.wbits = b, g(a))) : G;
            }
            function i(a, b) {
              var c, d;
              return a ? (d = new e(), a.state = d, d.window = null, c = h(a, b), c !== D && (a.state = null), 
              c) : G;
            }
            function j(a) {
              return i(a, sa);
            }
            function k(a) {
              if (ta) {
                var b;
                for (q = new s.Buf32(512), r = new s.Buf32(32), b = 0; b < 144; ) a.lens[b++] = 8;
                for (;b < 256; ) a.lens[b++] = 9;
                for (;b < 280; ) a.lens[b++] = 7;
                for (;b < 288; ) a.lens[b++] = 8;
                for (w(y, a.lens, 0, 288, q, 0, a.work, {
                  bits: 9
                }), b = 0; b < 32; ) a.lens[b++] = 5;
                w(z, a.lens, 0, 32, r, 0, a.work, {
                  bits: 5
                }), ta = !1;
              }
              a.lencode = q, a.lenbits = 9, a.distcode = r, a.distbits = 5;
            }
            function l(a, b, c, d) {
              var e, f = a.state;
              return null === f.window && (f.wsize = 1 << f.wbits, f.wnext = 0, f.whave = 0, f.window = new s.Buf8(f.wsize)), 
              d >= f.wsize ? (s.arraySet(f.window, b, c - f.wsize, f.wsize, 0), f.wnext = 0, f.whave = f.wsize) : (e = f.wsize - f.wnext, 
              e > d && (e = d), s.arraySet(f.window, b, c - d, e, f.wnext), d -= e, d ? (s.arraySet(f.window, b, c - d, d, 0), 
              f.wnext = d, f.whave = f.wsize) : (f.wnext += e, f.wnext === f.wsize && (f.wnext = 0), 
              f.whave < f.wsize && (f.whave += e))), 0;
            }
            function m(a, b) {
              var c, e, f, g, h, i, j, m, n, o, p, q, r, pa, qa, ra, sa, ta, ua, va, wa, xa, ya, za, Aa = 0, Ba = new s.Buf8(4), Ca = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];
              if (!a || !a.state || !a.output || !a.input && 0 !== a.avail_in) return G;
              c = a.state, c.mode === W && (c.mode = X), h = a.next_out, f = a.output, j = a.avail_out, 
              g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, o = i, p = j, 
              xa = D;
              a: for (;;) switch (c.mode) {
               case L:
                if (0 === c.wrap) {
                  c.mode = X;
                  break;
                }
                for (;n < 16; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if (2 & c.wrap && 35615 === m) {
                  c.check = 0, Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0), 
                  m = 0, n = 0, c.mode = M;
                  break;
                }
                if (c.flags = 0, c.head && (c.head.done = !1), !(1 & c.wrap) || (((255 & m) << 8) + (m >> 8)) % 31) {
                  a.msg = "incorrect header check", c.mode = ma;
                  break;
                }
                if ((15 & m) !== K) {
                  a.msg = "unknown compression method", c.mode = ma;
                  break;
                }
                if (m >>>= 4, n -= 4, wa = 8 + (15 & m), 0 === c.wbits) c.wbits = wa; else if (wa > c.wbits) {
                  a.msg = "invalid window size", c.mode = ma;
                  break;
                }
                c.dmax = 1 << wa, a.adler = c.check = 1, c.mode = 512 & m ? U : W, m = 0, n = 0;
                break;

               case M:
                for (;n < 16; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if (c.flags = m, (255 & c.flags) !== K) {
                  a.msg = "unknown compression method", c.mode = ma;
                  break;
                }
                if (57344 & c.flags) {
                  a.msg = "unknown header flags set", c.mode = ma;
                  break;
                }
                c.head && (c.head.text = m >> 8 & 1), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, 
                c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = N;

               case N:
                for (;n < 32; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                c.head && (c.head.time = m), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, 
                Ba[2] = m >>> 16 & 255, Ba[3] = m >>> 24 & 255, c.check = u(c.check, Ba, 4, 0)), 
                m = 0, n = 0, c.mode = O;

               case O:
                for (;n < 16; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                c.head && (c.head.xflags = 255 & m, c.head.os = m >> 8), 512 & c.flags && (Ba[0] = 255 & m, 
                Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = P;

               case P:
                if (1024 & c.flags) {
                  for (;n < 16; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  c.length = m, c.head && (c.head.extra_len = m), 512 & c.flags && (Ba[0] = 255 & m, 
                  Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0;
                } else c.head && (c.head.extra = null);
                c.mode = Q;

               case Q:
                if (1024 & c.flags && (q = c.length, q > i && (q = i), q && (c.head && (wa = c.head.extra_len - c.length, 
                c.head.extra || (c.head.extra = new Array(c.head.extra_len)), s.arraySet(c.head.extra, e, g, q, wa)), 
                512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, c.length -= q), 
                c.length)) break a;
                c.length = 0, c.mode = R;

               case R:
                if (2048 & c.flags) {
                  if (0 === i) break a;
                  q = 0;
                  do {
                    wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.name += String.fromCharCode(wa));
                  } while (wa && q < i);
                  if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a;
                } else c.head && (c.head.name = null);
                c.length = 0, c.mode = S;

               case S:
                if (4096 & c.flags) {
                  if (0 === i) break a;
                  q = 0;
                  do {
                    wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.comment += String.fromCharCode(wa));
                  } while (wa && q < i);
                  if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a;
                } else c.head && (c.head.comment = null);
                c.mode = T;

               case T:
                if (512 & c.flags) {
                  for (;n < 16; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  if (m !== (65535 & c.check)) {
                    a.msg = "header crc mismatch", c.mode = ma;
                    break;
                  }
                  m = 0, n = 0;
                }
                c.head && (c.head.hcrc = c.flags >> 9 & 1, c.head.done = !0), a.adler = c.check = 0, 
                c.mode = W;
                break;

               case U:
                for (;n < 32; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                a.adler = c.check = d(m), m = 0, n = 0, c.mode = V;

               case V:
                if (0 === c.havedict) return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, 
                c.hold = m, c.bits = n, F;
                a.adler = c.check = 1, c.mode = W;

               case W:
                if (b === B || b === C) break a;

               case X:
                if (c.last) {
                  m >>>= 7 & n, n -= 7 & n, c.mode = ja;
                  break;
                }
                for (;n < 3; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                switch (c.last = 1 & m, m >>>= 1, n -= 1, 3 & m) {
                 case 0:
                  c.mode = Y;
                  break;

                 case 1:
                  if (k(c), c.mode = ca, b === C) {
                    m >>>= 2, n -= 2;
                    break a;
                  }
                  break;

                 case 2:
                  c.mode = _;
                  break;

                 case 3:
                  a.msg = "invalid block type", c.mode = ma;
                }
                m >>>= 2, n -= 2;
                break;

               case Y:
                for (m >>>= 7 & n, n -= 7 & n; n < 32; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if ((65535 & m) !== (m >>> 16 ^ 65535)) {
                  a.msg = "invalid stored block lengths", c.mode = ma;
                  break;
                }
                if (c.length = 65535 & m, m = 0, n = 0, c.mode = Z, b === C) break a;

               case Z:
                c.mode = $;

               case $:
                if (q = c.length) {
                  if (q > i && (q = i), q > j && (q = j), 0 === q) break a;
                  s.arraySet(f, e, g, q, h), i -= q, g += q, j -= q, h += q, c.length -= q;
                  break;
                }
                c.mode = W;
                break;

               case _:
                for (;n < 14; ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if (c.nlen = 257 + (31 & m), m >>>= 5, n -= 5, c.ndist = 1 + (31 & m), m >>>= 5, 
                n -= 5, c.ncode = 4 + (15 & m), m >>>= 4, n -= 4, c.nlen > 286 || c.ndist > 30) {
                  a.msg = "too many length or distance symbols", c.mode = ma;
                  break;
                }
                c.have = 0, c.mode = aa;

               case aa:
                for (;c.have < c.ncode; ) {
                  for (;n < 3; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  c.lens[Ca[c.have++]] = 7 & m, m >>>= 3, n -= 3;
                }
                for (;c.have < 19; ) c.lens[Ca[c.have++]] = 0;
                if (c.lencode = c.lendyn, c.lenbits = 7, ya = {
                  bits: c.lenbits
                }, xa = w(x, c.lens, 0, 19, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, xa) {
                  a.msg = "invalid code lengths set", c.mode = ma;
                  break;
                }
                c.have = 0, c.mode = ba;

               case ba:
                for (;c.have < c.nlen + c.ndist; ) {
                  for (;Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, 
                  sa = 65535 & Aa, !(qa <= n); ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  if (sa < 16) m >>>= qa, n -= qa, c.lens[c.have++] = sa; else {
                    if (16 === sa) {
                      for (za = qa + 2; n < za; ) {
                        if (0 === i) break a;
                        i--, m += e[g++] << n, n += 8;
                      }
                      if (m >>>= qa, n -= qa, 0 === c.have) {
                        a.msg = "invalid bit length repeat", c.mode = ma;
                        break;
                      }
                      wa = c.lens[c.have - 1], q = 3 + (3 & m), m >>>= 2, n -= 2;
                    } else if (17 === sa) {
                      for (za = qa + 3; n < za; ) {
                        if (0 === i) break a;
                        i--, m += e[g++] << n, n += 8;
                      }
                      m >>>= qa, n -= qa, wa = 0, q = 3 + (7 & m), m >>>= 3, n -= 3;
                    } else {
                      for (za = qa + 7; n < za; ) {
                        if (0 === i) break a;
                        i--, m += e[g++] << n, n += 8;
                      }
                      m >>>= qa, n -= qa, wa = 0, q = 11 + (127 & m), m >>>= 7, n -= 7;
                    }
                    if (c.have + q > c.nlen + c.ndist) {
                      a.msg = "invalid bit length repeat", c.mode = ma;
                      break;
                    }
                    for (;q--; ) c.lens[c.have++] = wa;
                  }
                }
                if (c.mode === ma) break;
                if (0 === c.lens[256]) {
                  a.msg = "invalid code -- missing end-of-block", c.mode = ma;
                  break;
                }
                if (c.lenbits = 9, ya = {
                  bits: c.lenbits
                }, xa = w(y, c.lens, 0, c.nlen, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, 
                xa) {
                  a.msg = "invalid literal/lengths set", c.mode = ma;
                  break;
                }
                if (c.distbits = 6, c.distcode = c.distdyn, ya = {
                  bits: c.distbits
                }, xa = w(z, c.lens, c.nlen, c.ndist, c.distcode, 0, c.work, ya), c.distbits = ya.bits, 
                xa) {
                  a.msg = "invalid distances set", c.mode = ma;
                  break;
                }
                if (c.mode = ca, b === C) break a;

               case ca:
                c.mode = da;

               case da:
                if (i >= 6 && j >= 258) {
                  a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, 
                  v(a, p), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, 
                  i = a.avail_in, m = c.hold, n = c.bits, c.mode === W && (c.back = -1);
                  break;
                }
                for (c.back = 0; Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, 
                sa = 65535 & Aa, !(qa <= n); ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if (ra && 0 === (240 & ra)) {
                  for (ta = qa, ua = ra, va = sa; Aa = c.lencode[va + ((m & (1 << ta + ua) - 1) >> ta)], 
                  qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n); ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  m >>>= ta, n -= ta, c.back += ta;
                }
                if (m >>>= qa, n -= qa, c.back += qa, c.length = sa, 0 === ra) {
                  c.mode = ia;
                  break;
                }
                if (32 & ra) {
                  c.back = -1, c.mode = W;
                  break;
                }
                if (64 & ra) {
                  a.msg = "invalid literal/length code", c.mode = ma;
                  break;
                }
                c.extra = 15 & ra, c.mode = ea;

               case ea:
                if (c.extra) {
                  for (za = c.extra; n < za; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  c.length += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra;
                }
                c.was = c.length, c.mode = fa;

               case fa:
                for (;Aa = c.distcode[m & (1 << c.distbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, 
                sa = 65535 & Aa, !(qa <= n); ) {
                  if (0 === i) break a;
                  i--, m += e[g++] << n, n += 8;
                }
                if (0 === (240 & ra)) {
                  for (ta = qa, ua = ra, va = sa; Aa = c.distcode[va + ((m & (1 << ta + ua) - 1) >> ta)], 
                  qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n); ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  m >>>= ta, n -= ta, c.back += ta;
                }
                if (m >>>= qa, n -= qa, c.back += qa, 64 & ra) {
                  a.msg = "invalid distance code", c.mode = ma;
                  break;
                }
                c.offset = sa, c.extra = 15 & ra, c.mode = ga;

               case ga:
                if (c.extra) {
                  for (za = c.extra; n < za; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  c.offset += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra;
                }
                if (c.offset > c.dmax) {
                  a.msg = "invalid distance too far back", c.mode = ma;
                  break;
                }
                c.mode = ha;

               case ha:
                if (0 === j) break a;
                if (q = p - j, c.offset > q) {
                  if (q = c.offset - q, q > c.whave && c.sane) {
                    a.msg = "invalid distance too far back", c.mode = ma;
                    break;
                  }
                  q > c.wnext ? (q -= c.wnext, r = c.wsize - q) : r = c.wnext - q, q > c.length && (q = c.length), 
                  pa = c.window;
                } else pa = f, r = h - c.offset, q = c.length;
                q > j && (q = j), j -= q, c.length -= q;
                do {
                  f[h++] = pa[r++];
                } while (--q);
                0 === c.length && (c.mode = da);
                break;

               case ia:
                if (0 === j) break a;
                f[h++] = c.length, j--, c.mode = da;
                break;

               case ja:
                if (c.wrap) {
                  for (;n < 32; ) {
                    if (0 === i) break a;
                    i--, m |= e[g++] << n, n += 8;
                  }
                  if (p -= j, a.total_out += p, c.total += p, p && (a.adler = c.check = c.flags ? u(c.check, f, p, h - p) : t(c.check, f, p, h - p)), 
                  p = j, (c.flags ? m : d(m)) !== c.check) {
                    a.msg = "incorrect data check", c.mode = ma;
                    break;
                  }
                  m = 0, n = 0;
                }
                c.mode = ka;

               case ka:
                if (c.wrap && c.flags) {
                  for (;n < 32; ) {
                    if (0 === i) break a;
                    i--, m += e[g++] << n, n += 8;
                  }
                  if (m !== (4294967295 & c.total)) {
                    a.msg = "incorrect length check", c.mode = ma;
                    break;
                  }
                  m = 0, n = 0;
                }
                c.mode = la;

               case la:
                xa = E;
                break a;

               case ma:
                xa = H;
                break a;

               case na:
                return I;

               case oa:
               default:
                return G;
              }
              return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, 
              c.bits = n, (c.wsize || p !== a.avail_out && c.mode < ma && (c.mode < ja || b !== A)) && l(a, a.output, a.next_out, p - a.avail_out) ? (c.mode = na, 
              I) : (o -= a.avail_in, p -= a.avail_out, a.total_in += o, a.total_out += p, c.total += p, 
              c.wrap && p && (a.adler = c.check = c.flags ? u(c.check, f, p, a.next_out - p) : t(c.check, f, p, a.next_out - p)), 
              a.data_type = c.bits + (c.last ? 64 : 0) + (c.mode === W ? 128 : 0) + (c.mode === ca || c.mode === Z ? 256 : 0), 
              (0 === o && 0 === p || b === A) && xa === D && (xa = J), xa);
            }
            function n(a) {
              if (!a || !a.state) return G;
              var b = a.state;
              return b.window && (b.window = null), a.state = null, D;
            }
            function o(a, b) {
              var c;
              return a && a.state ? (c = a.state, 0 === (2 & c.wrap) ? G : (c.head = b, b.done = !1, 
              D)) : G;
            }
            function p(a, b) {
              var c, d, e, f = b.length;
              return a && a.state ? (c = a.state, 0 !== c.wrap && c.mode !== V ? G : c.mode === V && (d = 1, 
              d = t(d, b, f, 0), d !== c.check) ? H : (e = l(a, b, f, f)) ? (c.mode = na, I) : (c.havedict = 1, 
              D)) : G;
            }
            var q, r, s = a("../utils/common"), t = a("./adler32"), u = a("./crc32"), v = a("./inffast"), w = a("./inftrees"), x = 0, y = 1, z = 2, A = 4, B = 5, C = 6, D = 0, E = 1, F = 2, G = -2, H = -3, I = -4, J = -5, K = 8, L = 1, M = 2, N = 3, O = 4, P = 5, Q = 6, R = 7, S = 8, T = 9, U = 10, V = 11, W = 12, X = 13, Y = 14, Z = 15, $ = 16, _ = 17, aa = 18, ba = 19, ca = 20, da = 21, ea = 22, fa = 23, ga = 24, ha = 25, ia = 26, ja = 27, ka = 28, la = 29, ma = 30, na = 31, oa = 32, pa = 852, qa = 592, ra = 15, sa = ra, ta = !0;
            c.inflateReset = g, c.inflateReset2 = h, c.inflateResetKeep = f, c.inflateInit = j, 
            c.inflateInit2 = i, c.inflate = m, c.inflateEnd = n, c.inflateGetHeader = o, c.inflateSetDictionary = p, 
            c.inflateInfo = "pako inflate (from Nodeca project)";
          }, {
            "../utils/common": 41,
            "./adler32": 43,
            "./crc32": 45,
            "./inffast": 48,
            "./inftrees": 50
          } ],
          50: [ function(a, b, c) {
            var d = a("../utils/common"), e = 15, f = 852, g = 592, h = 0, i = 1, j = 2, k = [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0 ], l = [ 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78 ], m = [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0 ], n = [ 16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64 ];
            b.exports = function(a, b, c, o, p, q, r, s) {
              var t, u, v, w, x, y, z, A, B, C = s.bits, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = null, O = 0, P = new d.Buf16(e + 1), Q = new d.Buf16(e + 1), R = null, S = 0;
              for (D = 0; D <= e; D++) P[D] = 0;
              for (E = 0; E < o; E++) P[b[c + E]]++;
              for (H = C, G = e; G >= 1 && 0 === P[G]; G--) ;
              if (H > G && (H = G), 0 === G) return p[q++] = 20971520, p[q++] = 20971520, s.bits = 1, 
              0;
              for (F = 1; F < G && 0 === P[F]; F++) ;
              for (H < F && (H = F), K = 1, D = 1; D <= e; D++) if (K <<= 1, K -= P[D], K < 0) return -1;
              if (K > 0 && (a === h || 1 !== G)) return -1;
              for (Q[1] = 0, D = 1; D < e; D++) Q[D + 1] = Q[D] + P[D];
              for (E = 0; E < o; E++) 0 !== b[c + E] && (r[Q[b[c + E]]++] = E);
              if (a === h ? (N = R = r, y = 19) : a === i ? (N = k, O -= 257, R = l, S -= 257, 
              y = 256) : (N = m, R = n, y = -1), M = 0, E = 0, D = F, x = q, I = H, J = 0, v = -1, 
              L = 1 << H, w = L - 1, a === i && L > f || a === j && L > g) return 1;
              for (;;) {
                z = D - J, r[E] < y ? (A = 0, B = r[E]) : r[E] > y ? (A = R[S + r[E]], B = N[O + r[E]]) : (A = 96, 
                B = 0), t = 1 << D - J, u = 1 << I, F = u;
                do {
                  u -= t, p[x + (M >> J) + u] = z << 24 | A << 16 | B | 0;
                } while (0 !== u);
                for (t = 1 << D - 1; M & t; ) t >>= 1;
                if (0 !== t ? (M &= t - 1, M += t) : M = 0, E++, 0 === --P[D]) {
                  if (D === G) break;
                  D = b[c + r[E]];
                }
                if (D > H && (M & w) !== v) {
                  for (0 === J && (J = H), x += F, I = D - J, K = 1 << I; I + J < G && (K -= P[I + J], 
                  !(K <= 0)); ) I++, K <<= 1;
                  if (L += 1 << I, a === i && L > f || a === j && L > g) return 1;
                  v = M & w, p[v] = H << 24 | I << 16 | x - q | 0;
                }
              }
              return 0 !== M && (p[x + M] = D - J << 24 | 64 << 16 | 0), s.bits = H, 0;
            };
          }, {
            "../utils/common": 41
          } ],
          51: [ function(a, b, c) {
            b.exports = {
              2: "need dictionary",
              1: "stream end",
              0: "",
              "-1": "file error",
              "-2": "stream error",
              "-3": "data error",
              "-4": "insufficient memory",
              "-5": "buffer error",
              "-6": "incompatible version"
            };
          }, {} ],
          52: [ function(a, b, c) {
            function d(a) {
              for (var b = a.length; --b >= 0; ) a[b] = 0;
            }
            function e(a, b, c, d, e) {
              this.static_tree = a, this.extra_bits = b, this.extra_base = c, this.elems = d, 
              this.max_length = e, this.has_stree = a && a.length;
            }
            function f(a, b) {
              this.dyn_tree = a, this.max_code = 0, this.stat_desc = b;
            }
            function g(a) {
              return a < 256 ? ia[a] : ia[256 + (a >>> 7)];
            }
            function h(a, b) {
              a.pending_buf[a.pending++] = 255 & b, a.pending_buf[a.pending++] = b >>> 8 & 255;
            }
            function i(a, b, c) {
              a.bi_valid > X - c ? (a.bi_buf |= b << a.bi_valid & 65535, h(a, a.bi_buf), a.bi_buf = b >> X - a.bi_valid, 
              a.bi_valid += c - X) : (a.bi_buf |= b << a.bi_valid & 65535, a.bi_valid += c);
            }
            function j(a, b, c) {
              i(a, c[2 * b], c[2 * b + 1]);
            }
            function k(a, b) {
              var c = 0;
              do {
                c |= 1 & a, a >>>= 1, c <<= 1;
              } while (--b > 0);
              return c >>> 1;
            }
            function l(a) {
              16 === a.bi_valid ? (h(a, a.bi_buf), a.bi_buf = 0, a.bi_valid = 0) : a.bi_valid >= 8 && (a.pending_buf[a.pending++] = 255 & a.bi_buf, 
              a.bi_buf >>= 8, a.bi_valid -= 8);
            }
            function m(a, b) {
              var c, d, e, f, g, h, i = b.dyn_tree, j = b.max_code, k = b.stat_desc.static_tree, l = b.stat_desc.has_stree, m = b.stat_desc.extra_bits, n = b.stat_desc.extra_base, o = b.stat_desc.max_length, p = 0;
              for (f = 0; f <= W; f++) a.bl_count[f] = 0;
              for (i[2 * a.heap[a.heap_max] + 1] = 0, c = a.heap_max + 1; c < V; c++) d = a.heap[c], 
              f = i[2 * i[2 * d + 1] + 1] + 1, f > o && (f = o, p++), i[2 * d + 1] = f, d > j || (a.bl_count[f]++, 
              g = 0, d >= n && (g = m[d - n]), h = i[2 * d], a.opt_len += h * (f + g), l && (a.static_len += h * (k[2 * d + 1] + g)));
              if (0 !== p) {
                do {
                  for (f = o - 1; 0 === a.bl_count[f]; ) f--;
                  a.bl_count[f]--, a.bl_count[f + 1] += 2, a.bl_count[o]--, p -= 2;
                } while (p > 0);
                for (f = o; 0 !== f; f--) for (d = a.bl_count[f]; 0 !== d; ) e = a.heap[--c], e > j || (i[2 * e + 1] !== f && (a.opt_len += (f - i[2 * e + 1]) * i[2 * e], 
                i[2 * e + 1] = f), d--);
              }
            }
            function n(a, b, c) {
              var d, e, f = new Array(W + 1), g = 0;
              for (d = 1; d <= W; d++) f[d] = g = g + c[d - 1] << 1;
              for (e = 0; e <= b; e++) {
                var h = a[2 * e + 1];
                0 !== h && (a[2 * e] = k(f[h]++, h));
              }
            }
            function o() {
              var a, b, c, d, f, g = new Array(W + 1);
              for (c = 0, d = 0; d < Q - 1; d++) for (ka[d] = c, a = 0; a < 1 << ba[d]; a++) ja[c++] = d;
              for (ja[c - 1] = d, f = 0, d = 0; d < 16; d++) for (la[d] = f, a = 0; a < 1 << ca[d]; a++) ia[f++] = d;
              for (f >>= 7; d < T; d++) for (la[d] = f << 7, a = 0; a < 1 << ca[d] - 7; a++) ia[256 + f++] = d;
              for (b = 0; b <= W; b++) g[b] = 0;
              for (a = 0; a <= 143; ) ga[2 * a + 1] = 8, a++, g[8]++;
              for (;a <= 255; ) ga[2 * a + 1] = 9, a++, g[9]++;
              for (;a <= 279; ) ga[2 * a + 1] = 7, a++, g[7]++;
              for (;a <= 287; ) ga[2 * a + 1] = 8, a++, g[8]++;
              for (n(ga, S + 1, g), a = 0; a < T; a++) ha[2 * a + 1] = 5, ha[2 * a] = k(a, 5);
              ma = new e(ga, ba, R + 1, S, W), na = new e(ha, ca, 0, T, W), oa = new e(new Array(0), da, 0, U, Y);
            }
            function p(a) {
              var b;
              for (b = 0; b < S; b++) a.dyn_ltree[2 * b] = 0;
              for (b = 0; b < T; b++) a.dyn_dtree[2 * b] = 0;
              for (b = 0; b < U; b++) a.bl_tree[2 * b] = 0;
              a.dyn_ltree[2 * Z] = 1, a.opt_len = a.static_len = 0, a.last_lit = a.matches = 0;
            }
            function q(a) {
              a.bi_valid > 8 ? h(a, a.bi_buf) : a.bi_valid > 0 && (a.pending_buf[a.pending++] = a.bi_buf), 
              a.bi_buf = 0, a.bi_valid = 0;
            }
            function r(a, b, c, d) {
              q(a), d && (h(a, c), h(a, ~c)), G.arraySet(a.pending_buf, a.window, b, c, a.pending), 
              a.pending += c;
            }
            function s(a, b, c, d) {
              var e = 2 * b, f = 2 * c;
              return a[e] < a[f] || a[e] === a[f] && d[b] <= d[c];
            }
            function t(a, b, c) {
              for (var d = a.heap[c], e = c << 1; e <= a.heap_len && (e < a.heap_len && s(b, a.heap[e + 1], a.heap[e], a.depth) && e++, 
              !s(b, d, a.heap[e], a.depth)); ) a.heap[c] = a.heap[e], c = e, e <<= 1;
              a.heap[c] = d;
            }
            function u(a, b, c) {
              var d, e, f, h, k = 0;
              if (0 !== a.last_lit) do {
                d = a.pending_buf[a.d_buf + 2 * k] << 8 | a.pending_buf[a.d_buf + 2 * k + 1], e = a.pending_buf[a.l_buf + k], 
                k++, 0 === d ? j(a, e, b) : (f = ja[e], j(a, f + R + 1, b), h = ba[f], 0 !== h && (e -= ka[f], 
                i(a, e, h)), d--, f = g(d), j(a, f, c), h = ca[f], 0 !== h && (d -= la[f], i(a, d, h)));
              } while (k < a.last_lit);
              j(a, Z, b);
            }
            function v(a, b) {
              var c, d, e, f = b.dyn_tree, g = b.stat_desc.static_tree, h = b.stat_desc.has_stree, i = b.stat_desc.elems, j = -1;
              for (a.heap_len = 0, a.heap_max = V, c = 0; c < i; c++) 0 !== f[2 * c] ? (a.heap[++a.heap_len] = j = c, 
              a.depth[c] = 0) : f[2 * c + 1] = 0;
              for (;a.heap_len < 2; ) e = a.heap[++a.heap_len] = j < 2 ? ++j : 0, f[2 * e] = 1, 
              a.depth[e] = 0, a.opt_len--, h && (a.static_len -= g[2 * e + 1]);
              for (b.max_code = j, c = a.heap_len >> 1; c >= 1; c--) t(a, f, c);
              e = i;
              do {
                c = a.heap[1], a.heap[1] = a.heap[a.heap_len--], t(a, f, 1), d = a.heap[1], a.heap[--a.heap_max] = c, 
                a.heap[--a.heap_max] = d, f[2 * e] = f[2 * c] + f[2 * d], a.depth[e] = (a.depth[c] >= a.depth[d] ? a.depth[c] : a.depth[d]) + 1, 
                f[2 * c + 1] = f[2 * d + 1] = e, a.heap[1] = e++, t(a, f, 1);
              } while (a.heap_len >= 2);
              a.heap[--a.heap_max] = a.heap[1], m(a, b), n(f, j, a.bl_count);
            }
            function w(a, b, c) {
              var d, e, f = -1, g = b[1], h = 0, i = 7, j = 4;
              for (0 === g && (i = 138, j = 3), b[2 * (c + 1) + 1] = 65535, d = 0; d <= c; d++) e = g, 
              g = b[2 * (d + 1) + 1], ++h < i && e === g || (h < j ? a.bl_tree[2 * e] += h : 0 !== e ? (e !== f && a.bl_tree[2 * e]++, 
              a.bl_tree[2 * $]++) : h <= 10 ? a.bl_tree[2 * _]++ : a.bl_tree[2 * aa]++, h = 0, 
              f = e, 0 === g ? (i = 138, j = 3) : e === g ? (i = 6, j = 3) : (i = 7, j = 4));
            }
            function x(a, b, c) {
              var d, e, f = -1, g = b[1], h = 0, k = 7, l = 4;
              for (0 === g && (k = 138, l = 3), d = 0; d <= c; d++) if (e = g, g = b[2 * (d + 1) + 1], 
              !(++h < k && e === g)) {
                if (h < l) do {
                  j(a, e, a.bl_tree);
                } while (0 !== --h); else 0 !== e ? (e !== f && (j(a, e, a.bl_tree), h--), j(a, $, a.bl_tree), 
                i(a, h - 3, 2)) : h <= 10 ? (j(a, _, a.bl_tree), i(a, h - 3, 3)) : (j(a, aa, a.bl_tree), 
                i(a, h - 11, 7));
                h = 0, f = e, 0 === g ? (k = 138, l = 3) : e === g ? (k = 6, l = 3) : (k = 7, l = 4);
              }
            }
            function y(a) {
              var b;
              for (w(a, a.dyn_ltree, a.l_desc.max_code), w(a, a.dyn_dtree, a.d_desc.max_code), 
              v(a, a.bl_desc), b = U - 1; b >= 3 && 0 === a.bl_tree[2 * ea[b] + 1]; b--) ;
              return a.opt_len += 3 * (b + 1) + 5 + 5 + 4, b;
            }
            function z(a, b, c, d) {
              var e;
              for (i(a, b - 257, 5), i(a, c - 1, 5), i(a, d - 4, 4), e = 0; e < d; e++) i(a, a.bl_tree[2 * ea[e] + 1], 3);
              x(a, a.dyn_ltree, b - 1), x(a, a.dyn_dtree, c - 1);
            }
            function A(a) {
              var b, c = 4093624447;
              for (b = 0; b <= 31; b++, c >>>= 1) if (1 & c && 0 !== a.dyn_ltree[2 * b]) return I;
              if (0 !== a.dyn_ltree[18] || 0 !== a.dyn_ltree[20] || 0 !== a.dyn_ltree[26]) return J;
              for (b = 32; b < R; b++) if (0 !== a.dyn_ltree[2 * b]) return J;
              return I;
            }
            function B(a) {
              pa || (o(), pa = !0), a.l_desc = new f(a.dyn_ltree, ma), a.d_desc = new f(a.dyn_dtree, na), 
              a.bl_desc = new f(a.bl_tree, oa), a.bi_buf = 0, a.bi_valid = 0, p(a);
            }
            function C(a, b, c, d) {
              i(a, (L << 1) + (d ? 1 : 0), 3), r(a, b, c, !0);
            }
            function D(a) {
              i(a, M << 1, 3), j(a, Z, ga), l(a);
            }
            function E(a, b, c, d) {
              var e, f, g = 0;
              a.level > 0 ? (a.strm.data_type === K && (a.strm.data_type = A(a)), v(a, a.l_desc), 
              v(a, a.d_desc), g = y(a), e = a.opt_len + 3 + 7 >>> 3, f = a.static_len + 3 + 7 >>> 3, 
              f <= e && (e = f)) : e = f = c + 5, c + 4 <= e && -1 !== b ? C(a, b, c, d) : a.strategy === H || f === e ? (i(a, (M << 1) + (d ? 1 : 0), 3), 
              u(a, ga, ha)) : (i(a, (N << 1) + (d ? 1 : 0), 3), z(a, a.l_desc.max_code + 1, a.d_desc.max_code + 1, g + 1), 
              u(a, a.dyn_ltree, a.dyn_dtree)), p(a), d && q(a);
            }
            function F(a, b, c) {
              return a.pending_buf[a.d_buf + 2 * a.last_lit] = b >>> 8 & 255, a.pending_buf[a.d_buf + 2 * a.last_lit + 1] = 255 & b, 
              a.pending_buf[a.l_buf + a.last_lit] = 255 & c, a.last_lit++, 0 === b ? a.dyn_ltree[2 * c]++ : (a.matches++, 
              b--, a.dyn_ltree[2 * (ja[c] + R + 1)]++, a.dyn_dtree[2 * g(b)]++), a.last_lit === a.lit_bufsize - 1;
            }
            var G = a("../utils/common"), H = 4, I = 0, J = 1, K = 2, L = 0, M = 1, N = 2, O = 3, P = 258, Q = 29, R = 256, S = R + 1 + Q, T = 30, U = 19, V = 2 * S + 1, W = 15, X = 16, Y = 7, Z = 256, $ = 16, _ = 17, aa = 18, ba = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0 ], ca = [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13 ], da = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7 ], ea = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], fa = 512, ga = new Array(2 * (S + 2));
            d(ga);
            var ha = new Array(2 * T);
            d(ha);
            var ia = new Array(fa);
            d(ia);
            var ja = new Array(P - O + 1);
            d(ja);
            var ka = new Array(Q);
            d(ka);
            var la = new Array(T);
            d(la);
            var ma, na, oa, pa = !1;
            c._tr_init = B, c._tr_stored_block = C, c._tr_flush_block = E, c._tr_tally = F, 
            c._tr_align = D;
          }, {
            "../utils/common": 41
          } ],
          53: [ function(a, b, c) {
            function d() {
              this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, 
              this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, 
              this.data_type = 2, this.adler = 0;
            }
            b.exports = d;
          }, {} ],
          54: [ function(a, b, c) {
            b.exports = "function" == typeof setImmediate ? setImmediate : function() {
              var a = [].slice.apply(arguments);
              a.splice(1, 0, 0), setTimeout.apply(null, a);
            };
          }, {} ]
        }, {}, [ 10 ])(10);
      });
      cc._RF.pop();
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {}, require("buffer").Buffer);
  }, {
    buffer: 2
  } ],
  lobby_framework: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e998aIEwWZFK5mEYFWTvTBF", "lobby_framework");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lobby_framework = exports.LobbyFrameworkState = void 0;
    const typestate_1 = require("../thirdparty/typestate");
    const init_state_1 = require("./state/init_state");
    const logon_state_1 = require("./state/logon_state");
    const lobby_state_1 = require("./state/lobby_state");
    const game_state_1 = require("./state/game_state");
    const global_data_1 = require("./global_data");
    const utils_1 = require("../common/utils");
    const platform_1 = require("./platform/platform");
    const global_define_1 = require("./global_define");
    const lobby_types_1 = require("./lobby_types");
    const game_auxi_1 = require("./game/game_auxi");
    const sound_manager_1 = require("./sound_manager");
    const room_controller_1 = require("./game/room_controller");
    const game_controller_1 = require("./game/game_controller");
    const custom_lobby_1 = require("./custom_lobby");
    var LobbyFrameworkState;
    (function(LobbyFrameworkState) {
      LobbyFrameworkState[LobbyFrameworkState["Init"] = 0] = "Init";
      LobbyFrameworkState[LobbyFrameworkState["Logon"] = 1] = "Logon";
      LobbyFrameworkState[LobbyFrameworkState["Lobby"] = 2] = "Lobby";
      LobbyFrameworkState[LobbyFrameworkState["Game"] = 3] = "Game";
    })(LobbyFrameworkState = exports.LobbyFrameworkState || (exports.LobbyFrameworkState = {}));
    var lobby_framework;
    (function(lobby_framework) {
      lobby_framework.statesMap = null;
      lobby_framework.fsm = null;
      function init() {
        lobby_framework.fsm = new typestate_1.TypeState.FiniteStateMachine(LobbyFrameworkState.Init);
        lobby_framework.fsm.from(LobbyFrameworkState.Init).to(LobbyFrameworkState.Logon);
        lobby_framework.fsm.from(LobbyFrameworkState.Logon).to(LobbyFrameworkState.Lobby);
        lobby_framework.fsm.from(LobbyFrameworkState.Logon).to(LobbyFrameworkState.Game);
        lobby_framework.fsm.from(LobbyFrameworkState.Logon).to(LobbyFrameworkState.Logon);
        lobby_framework.fsm.from(LobbyFrameworkState.Lobby).to(LobbyFrameworkState.Game);
        lobby_framework.fsm.from(LobbyFrameworkState.Lobby).to(LobbyFrameworkState.Logon);
        lobby_framework.fsm.from(LobbyFrameworkState.Lobby).to(LobbyFrameworkState.Lobby);
        lobby_framework.fsm.from(LobbyFrameworkState.Game).to(LobbyFrameworkState.Lobby);
        lobby_framework.fsm.from(LobbyFrameworkState.Game).to(LobbyFrameworkState.Game);
        lobby_framework.fsm.from(LobbyFrameworkState.Game).to(LobbyFrameworkState.Logon);
        lobby_framework.fsm.onTransition = (from, to, event) => {
          lobby_framework.statesMap.has(from) && lobby_framework.statesMap.get(from).onExit(to, event);
          lobby_framework.statesMap.has(to) && lobby_framework.statesMap.get(to).onEnter(from, event);
        };
        lobby_framework.statesMap = new Map();
        lobby_framework.statesMap.set(LobbyFrameworkState.Init, new init_state_1.init_state(LobbyFrameworkState.Init, lobby_framework.fsm));
        lobby_framework.statesMap.set(LobbyFrameworkState.Logon, new logon_state_1.logon_state(LobbyFrameworkState.Logon, lobby_framework.fsm));
        lobby_framework.statesMap.set(LobbyFrameworkState.Lobby, new lobby_state_1.lobby_state(LobbyFrameworkState.Lobby, lobby_framework.fsm));
        lobby_framework.statesMap.set(LobbyFrameworkState.Game, new game_state_1.game_state(LobbyFrameworkState.Game, lobby_framework.fsm));
        lobby_framework.statesMap.get(LobbyFrameworkState.Init).onEnter(null);
      }
      lobby_framework.init = init;
      function set_last_active_time() {
        utils_1.utils.setLocalStorage("lastActiveTime", new Date().getTime().toString());
      }
      lobby_framework.set_last_active_time = set_last_active_time;
      var post_error_md5_cache = [];
      function should_post_error(error_message) {
        if (!global_data_1.global_data.is_online) return false;
        let error_md5 = utils_1.utils.md5(error_message);
        if (-1 != post_error_md5_cache.indexOf(error_md5)) return false;
        post_error_md5_cache.push(error_md5);
        return true;
      }
      function onError(error) {
        if (should_post_error(error.message)) {
          let gameid = global_data_1.global_data.current_room_data ? global_data_1.global_data.current_room_data._int_game_id : 999;
          write_online_logs(gameid + 1e4, error.message);
        }
      }
      lobby_framework.onError = onError;
      function onHide(res) {
        platform_1.platform.inst.onHideCallback(res);
        if (res && res.mode) {
          global_data_1.global_data.hide_mode = res.mode;
          "back" == global_data_1.global_data.hide_mode || "hide" == global_data_1.global_data.hide_mode;
        }
        utils_1.utils.setLocalStorage("lastActiveTime", new Date().getTime().toString());
      }
      lobby_framework.onHide = onHide;
      function onShow(res) {
        console.log("onShow", res);
        let strTime = utils_1.utils.getLocalStorage("lastActiveTime");
        let lastActiveTime = parseInt(strTime, 10);
        let currentTime = new Date().getTime();
        platform_1.platform.inst.onShowCallback(res);
        if (global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME) {
          if (currentTime - lastActiveTime > 3e4) if (utils_1.utils.is_wechat()) {
            if ("hide" == global_data_1.global_data.hide_mode) {
              console.log("mark request_relogon in game");
              global_data_1.global_data.request_relogon = true;
            }
          } else {
            console.log("mark request_relogon in game");
            global_data_1.global_data.request_relogon = true;
          }
        } else currentTime - lastActiveTime > 3e5 && (global_data_1.global_data.request_relogon = true);
        check_launch_options(res);
        do_launch_options(false);
      }
      lobby_framework.onShow = onShow;
      function onNetworkStatusChange(res) {
        global_data_1.global_data.is_wifi = "wifi" == res.networkType;
        utils_1.utils.send("NetworkStatusChange", res);
      }
      lobby_framework.onNetworkStatusChange = onNetworkStatusChange;
      function apply_server_by_type(js, type) {
        let sv = js.logon_config.filter(x => x.type == type)[0];
        global_data_1.global_data.server_protocol = sv.protocol;
        global_data_1.global_data.logon_server = sv.addr;
        global_data_1.global_data.game_server = "";
        global_data_1.global_data.push_server = "slg1.bookse.cn";
        global_data_1.global_data.push_port = 9004;
        global_data_1.global_data.nav_pay_appid = sv.nav_pay_appid;
        global_data_1.global_data.nav_pay_env = sv.nav_pay_env;
        if ("Online" != type) {
          js.custom_game_server.enable && (global_data_1.global_data.game_server = js.custom_game_server.addr);
          js.custom_logon_server.enable && (global_data_1.global_data.logon_server = js.custom_logon_server.addr);
          if (js.custom_push_server && js.custom_push_server.enable) {
            global_data_1.global_data.push_server = js.custom_push_server.addr;
            global_data_1.global_data.push_port = js.custom_push_server.port;
          }
          global_data_1.global_data.is_online = false;
          global_data_1.global_data.force_startup_scene = js.force_startup_scene;
          global_data_1.global_data.force_use_http = js.force_use_http;
          global_data_1.global_data.force_use_https = js.force_use_https;
          global_data_1.global_data.force_launch_options = null;
        } else {
          global_data_1.global_data.is_online = true;
          global_data_1.global_data.force_startup_scene = "";
          global_data_1.global_data.force_use_http = false;
          global_data_1.global_data.force_use_https = false;
        }
      }
      lobby_framework.apply_server_by_type = apply_server_by_type;
      function get_wechat_openid() {
        if (!global_data_1.global_data.is_online) return;
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WECHAT_OPENID);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: function(res) {
            res.openid ? global_data_1.global_data.wechat_openId = res.openid : global_data_1.global_data.wechat_openId = "";
            console.log(`get wechat openid success: ${res}`);
          },
          fail: function(err) {
            global_data_1.global_data.wechat_openId = "";
            console.log(`get wechat openid fail: ${err}`);
          }
        });
      }
      lobby_framework.get_wechat_openid = get_wechat_openid;
      function refresh_wechat_session_key() {
        return;
      }
      lobby_framework.refresh_wechat_session_key = refresh_wechat_session_key;
      function refresh_wechat_session_key_addone(obj) {
        utils_1.utils.is_wechat() && wx.login({
          success: res => {
            platform_1.platform.inst.code = res.code;
            let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_WECHAT_SESSION);
            url = utils_1.utils.string_replace_any(url, "{WECHATID}", global_data_1.global_data.appid);
            url = utils_1.utils.string_replace_any(url, "{WECHATCODE}", res.code);
            utils_1.utils.send_http_request({
              url: url,
              hint: false,
              success: function(d, m) {
                console.log(`refresh_wechat_session_key success: ${d} ${m}`);
                obj.success && obj.success();
              },
              fail: function(err) {
                console.log(`refresh_wechat_session_key fail: ${err}`);
                obj.fail && obj.fail();
              }
            });
          },
          fail: res => {
            console.log(`refresh_wechat_session_key fail: ${res.errMsg}`);
          }
        });
      }
      lobby_framework.refresh_wechat_session_key_addone = refresh_wechat_session_key_addone;
      var writing_online_logs = false;
      function write_online_logs(id, log) {
        if (writing_online_logs) return;
        writing_online_logs = true;
        log = `[${global_data_1.global_data.kind_id}][${platform_1.platform.inst.getPlatformStringSync()}][${global_data_1.global_data.version}]` + log;
        log = encodeURIComponent(log);
        let url = "https://data.bookse.cn:8081/mobile/statistics.php?id={ID}&msg={MSG}";
        url = utils_1.utils.string_replace_key_with_integer(url, "{ID}", id);
        url = utils_1.utils.string_replace_key(url, "{MSG}", log);
        url.length > 2048 && (url = url.slice(0, 2046));
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          complete: function() {
            writing_online_logs = false;
          }
        });
      }
      lobby_framework.write_online_logs = write_online_logs;
      function clear_launch_options() {
        global_data_1.global_data.pay_result = null;
        global_data_1.global_data.request_relogon = false;
        global_data_1.global_data.just_share_sign = false;
        global_data_1.global_data.share_sign = null;
        global_data_1.global_data.invite_by_user_id = null;
        global_data_1.global_data.private_result = null;
        global_data_1.global_data.private_code = null;
        global_data_1.global_data.nav_guid = "";
        global_data_1.global_data.invite_by = null;
        global_data_1.global_data.is_match_invite = false;
      }
      lobby_framework.clear_launch_options = clear_launch_options;
      function do_launch_options(is_logon) {
        if (global_data_1.global_data.request_relogon) {
          global_data_1.global_data.request_relogon = false;
          clear_launch_options();
          global_data_1.global_data.logon_param = null;
          lobby_framework.fsm.go(LobbyFrameworkState.Logon);
          return;
        }
        if (global_data_1.global_data.pay_result) {
          global_data_1.global_data.pay_result.success && global_data_1.global_data.request_user_data();
          utils_1.utils.show_hint("\u652f\u4ed8\u6210\u529f\uff01");
          global_data_1.global_data.pay_result = null;
        }
        if (global_data_1.global_data.just_share_sign) {
          global_data_1.global_data.just_share_sign = false;
          utils_1.utils.show_message_box({
            content: "\u8bf7\u4ece\u5206\u4eab\u94fe\u63a5\u8fdb\u5165\u6e38\u620f\uff0c\u5373\u53ef\u6210\u529f\u7b7e\u5230\uff01",
            button_count: 1
          });
        }
        if (global_data_1.global_data.share_sign) {
          let signTime = global_data_1.global_data.share_sign;
          global_data_1.global_data.share_sign = null;
          check_send_sign_reward(signTime);
        }
        if (global_data_1.global_data.send_share_reward) {
          global_data_1.global_data.send_share_reward = false;
          request_share_reward();
        }
        if (null != global_data_1.global_data.invite_by_user_id) {
          send_invite_by_other_user(global_data_1.global_data.invite_by_user_id);
          global_data_1.global_data.invite_by_user_id = null;
        }
        if (null != global_data_1.global_data.private_result) {
          let data = utils_1.utils.from_json(decodeURIComponent(global_data_1.global_data.private_result));
          utils_1.utils.send("ShowPrivateRoomResult", data, "");
          global_data_1.global_data.private_result = null;
        }
        utils_1.utils.send("OnShow");
        if (null != global_data_1.global_data.private_code) {
          game_auxi_1.game_auxi.enter_private_room(global_data_1.global_data.private_code);
          global_data_1.global_data.private_code = null;
        }
        if (is_logon) ; else if (global_data_1.global_data.have_module_activity() && global_data_1.global_data.lottery_popup) {
          utils_1.utils.send("ShowUI", "Lottery");
          request_share_lottery_reward(global_data_1.global_data.lottery_popup.invite_by);
          global_data_1.global_data.lottery_popup = null;
        }
        if (global_data_1.global_data.is_match_invite) {
          global_data_1.global_data.is_match_invite = false;
          let target_room_data = new global_data_1.global_data.struct_room_data();
          let gameId = 152;
          console.log("global_data._vector_room_data. : ", global_data_1.global_data._vector_room_data);
          let rooms = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == gameId && -1 != x._str_rule.indexOf("match_start"));
          rooms && rooms.length > 0 && (target_room_data = rooms[0]);
          console.log("target_room_data : ", target_room_data);
          lobby_framework.fsm.go(LobbyFrameworkState.Game, {
            room: target_room_data
          });
        }
        clear_launch_options();
      }
      lobby_framework.do_launch_options = do_launch_options;
      function check_launch_options(res) {
        if (res && 1038 == res.scene && res.referrerInfo && res.referrerInfo.appId == global_data_1.global_data.nav_pay_appid) {
          let paydata = res.referrerInfo.extraData;
          console.log("PayData:", paydata);
          paydata && (0 == paydata.code ? global_data_1.global_data.nav_guid == paydata.resdata.conversation && (global_data_1.global_data.pay_result = {
            success: true,
            msg: "\u652f\u4ed8\u6210\u529f\uff01"
          }) : global_data_1.global_data.pay_result = {
            success: false,
            msg: paydata.resdata.msg
          });
        }
        utils_1.utils.is_wechat() ? !res || 1104 != res.scene && 1089 != res.scene || lobby_framework.set_local_task(lobby_types_1.lobby_types.RewardWebType.AddFavorite, true) : (utils_1.utils.is_oppo() || utils_1.utils.is_mi()) && platform_1.platform.inst.getShortCutInfo({
          success: () => {
            lobby_framework.set_local_task(lobby_types_1.lobby_types.RewardWebType.AddFavorite, true);
          }
        });
        if (res && res.query) {
          null != res.query.privateCode ? global_data_1.global_data.private_code = res.query.privateCode : global_data_1.global_data.private_code = null;
          if (null != res.query.inviteBy) {
            global_data_1.global_data.invite_by_user_id = res.query.inviteBy;
            global_data_1.global_data.invite_by = Number(res.query.inviteBy);
            global_data_1.global_data.invite_by_other = true;
          } else {
            global_data_1.global_data.invite_by_user_id = null;
            global_data_1.global_data.invite_by_other = false;
          }
          if (null != res.query.matchInviteBy) {
            global_data_1.global_data.is_match_invite = true;
            global_data_1.global_data.match_invite_id = Number(res.query.matchInviteBy);
          } else global_data_1.global_data.match_invite_id = null;
          res.query.lottery && (global_data_1.global_data.lottery_popup = {
            lottery: res.query.lottery,
            invite_by: res.query.inviteBy
          });
          global_data_1.global_data.share_ticket = res.shareTicket;
          res.query.shareSign ? global_data_1.global_data.share_sign = Number(res.query.shareSign) : global_data_1.global_data.share_sign = null;
          res.query.privateResult ? global_data_1.global_data.private_result = res.query.privateResult : global_data_1.global_data.private_result = null;
        }
      }
      lobby_framework.check_launch_options = check_launch_options;
      function request_share_reward() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_CLIENT_AWARD);
        url = utils_1.utils.string_replace_key_with_integer(url, "{TYPEID}", global_define_1.CONST.ID_REWARD_WECHAT);
        utils_1.utils.send_http_request_old({
          url: url,
          success: () => {},
          fail: res => {
            "\u60a8\u7684\u5956\u52b1\u5df2\u7ecf\u9886\u53d6\u8fc7\u4e86" == res.Result_msg;
          },
          complete: () => {
            global_data_1.global_data.request_user_data();
          },
          progress: timeLeft => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u9886\u53d6\u5956\u52b1...(${timeLeft}s)`);
          }
        });
      }
      lobby_framework.request_share_reward = request_share_reward;
      function check_send_sign_reward(time) {
        let shareDate = new Date(time).toDateString();
        let currentDate = new Date().toDateString();
        if (shareDate != currentDate) return;
        if (global_data_1.global_data.get_the_user_data()._int_user_id != global_data_1.global_data.invite_by) return;
        if (utils_1.utils.is_wechat() && !global_data_1.global_data.share_ticket) {
          platform_1.platform.inst.showModal({
            title: "\u7cfb\u7edf\u63d0\u793a",
            content: "\u9886\u53d6\u5931\u8d25\uff0c\u8bf7\u5c06\u5c0f\u6e38\u620f\u5206\u4eab\u5230\u597d\u53cb\u7fa4\u4e2d\uff0c\u70b9\u51fb\u518d\u8fdb\u5165",
            showCancel: true,
            confirmText: "\u7ee7\u7eed\u5206\u4eab",
            success: res => {
              res.confirm && share_to_sign();
            }
          });
          return;
        }
        send_daily_sign_reward(true);
      }
      lobby_framework.check_send_sign_reward = check_send_sign_reward;
      function send_daily_sign_reward(shareSign) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_SIGN_REWARD_GET);
        url = utils_1.utils.string_replace_key_with_integer(url, "{SIGNTYPE}", shareSign ? 2 : 1);
        console.log(`\u53d1\u8d77\u6bcf\u65e5\u7b7e\u5230\u9886\u53d6\u5956\u52b1 ${shareSign ? "\u5206\u4eab\u7b7e\u5230" : "\u666e\u901a\u7b7e\u5230"}`);
        utils_1.utils.show_loading("\u6b63\u5728\u9886\u53d6\u5956\u52b1...", true);
        utils_1.utils.send_http_request({
          url: url,
          success: function(data, message) {
            console.log("\u6bcf\u65e5\u7b7e\u5230\u9886\u53d6\u5956\u52b1", data, message);
            utils_1.utils.show_hint("\u6bcf\u65e5\u7b7e\u5230\u9886\u53d6\u5956\u52b1\u6210\u529f\uff01");
            if (data && data.fundchange) {
              utils_1.utils.send("RefreshDailySign");
              utils_1.utils.show_get_reward([ {
                fund_id: data.fundchange.id,
                fund_count: data.fundchange.cnt
              } ]);
              global_data_1.global_data.request_user_data();
            }
          },
          fail: function(err) {
            console.log(err);
            utils_1.utils.show_hint("\u6bcf\u65e5\u7b7e\u5230\u9886\u53d6\u5956\u52b1\u5931\u8d25(1)");
          },
          complete: function() {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.send_daily_sign_reward = send_daily_sign_reward;
      function send_invite_by_other_user(userid) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_INVITE_REWARD_REQUEST);
        url = utils_1.utils.string_replace_key_with_integer(url, "{INVITECODE}", userid);
        console.log("sendInviteByOtherUser", url);
        utils_1.utils.send_http_request({
          url: url
        });
      }
      lobby_framework.send_invite_by_other_user = send_invite_by_other_user;
      function share_to_invite_friend() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_invite_reward_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_invite_reward_share_img_url),
          query: "inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
          fail: () => {
            utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
          }
        });
      }
      lobby_framework.share_to_invite_friend = share_to_invite_friend;
      function share_to_match_invite() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_invite_reward_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_invite_reward_share_img_url),
          query: "matchInviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
          fail: () => {
            utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
          }
        });
      }
      lobby_framework.share_to_match_invite = share_to_match_invite;
      function share_to_enter_private(message, code, img) {
        if (code && 6 == code.length) {
          let imageUrl = img || global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url);
          platform_1.platform.inst.share({
            title: message || "",
            imageUrl: imageUrl,
            query: "privateCode=" + code + "&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
            fail: () => {
              utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
            }
          });
        }
      }
      lobby_framework.share_to_enter_private = share_to_enter_private;
      function share_lobby_button() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_relief_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url),
          query: "fromShare=2&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
          success: () => {
            global_data_1.global_data.send_share_reward = true;
          },
          fail: () => {}
        });
      }
      lobby_framework.share_lobby_button = share_lobby_button;
      function show_share_fail() {
        0 == utils_1.utils.random_int(0, 1) ? platform_1.platform.inst.showModal({
          title: "\u7cfb\u7edf\u63d0\u793a",
          content: "\u5206\u4eab\u5931\u8d25\uff0c\u8bf7\u6362\u4e2a\u7fa4\u8bd5\u8bd5\uff01",
          showCancel: false,
          confirmText: "\u786e\u5b9a"
        }) : platform_1.platform.inst.showModal({
          title: "\u7cfb\u7edf\u63d0\u793a",
          content: "\u8be5\u7fa4/\u597d\u53cb\u5df2\u7ecf\u5206\u4eab\u8fc7\u5566\uff0c\u8bf7\u6362\u4e2a\u7fa4\uff01",
          showCancel: false,
          confirmText: "\u786e\u5b9a"
        });
      }
      lobby_framework.show_share_fail = show_share_fail;
      function share_to_sign() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_daily_gold_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_daily_gold_share_img_url),
          query: `inviteBy=${global_data_1.global_data.get_the_user_data()._int_user_id}&shareSign=${new Date().getTime()}`,
          success: function() {
            console.log("share success");
            global_data_1.global_data.just_share_sign = true;
          },
          fail: function() {
            console.log("share fail");
            utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
          }
        });
      }
      lobby_framework.share_to_sign = share_to_sign;
      function video_to_sign() {
        let ret = platform_1.platform.inst.checkRewardedVideoAdSync();
        if (!ret.available) {
          utils_1.utils.show_hint(ret.reason);
          return;
        }
        platform_1.platform.inst.playRewardedVideoAd({
          success: () => {
            lobby_framework.send_daily_sign_reward(true);
          },
          fail: res => {
            utils_1.utils.show_hint(res.errMsg);
          }
        });
      }
      lobby_framework.video_to_sign = video_to_sign;
      function video_to_task() {
        let ret = platform_1.platform.inst.checkRewardedVideoAdSync();
        if (!ret.available) {
          utils_1.utils.show_hint(ret.reason);
          return;
        }
        platform_1.platform.inst.playRewardedVideoAd({
          success: () => {
            lobby_framework.set_local_task(lobby_types_1.lobby_types.RewardWebType.Video, true);
            try {
              let d = global_data_1.global_data.get_taskboard_item_data(lobby_types_1.lobby_types.RewardWebType.Video);
              let times = d.webData.last_times;
              let t = new Date().getTime() + 15 * (3 - times + 1) * 60 * 1e3;
              utils_1.utils.setLocalStorage("nextVideoAvailableTime", String(t));
            } catch (e) {
              console.warn(e);
            }
            utils_1.utils.send("TaskboardDataUpdated");
          },
          fail: res => {
            utils_1.utils.show_hint(res.errMsg);
          }
        });
      }
      lobby_framework.video_to_task = video_to_task;
      function set_local_task(id, done) {
        global_data_1.global_data.local_task.set(id, done);
      }
      lobby_framework.set_local_task = set_local_task;
      function get_local_task(id) {
        if (global_data_1.global_data.local_task.has(id)) return global_data_1.global_data.local_task.get(id);
        return false;
      }
      lobby_framework.get_local_task = get_local_task;
      function clear_local_task() {
        global_data_1.global_data.local_task.clear();
      }
      lobby_framework.clear_local_task = clear_local_task;
      function do_task(type) {
        switch (type) {
         case lobby_types_1.lobby_types.RewardWebType.AddFavorite:
          utils_1.utils.is_wechat() ? utils_1.utils.send("ShowUI", "AddFavoritePanel") : utils_1.utils.is_oppo() || utils_1.utils.is_mi() ? check_create_shortcut() : console.log("no AddFavorite");
          break;

         case lobby_types_1.lobby_types.RewardWebType.Invite:
          utils_1.utils.send("ShowUI", "InviteReward");
          break;

         case lobby_types_1.lobby_types.RewardWebType.Share:
          utils_1.utils.send("ShowUI", "DailySign", false);
          utils_1.utils.send("HideUI", "TaskBoard", false);
          break;

         case lobby_types_1.lobby_types.RewardWebType.Video:
          video_to_task();
          break;

         case lobby_types_1.lobby_types.RewardWebType.BindWechat:
          utils_1.utils.send("ShowUI", "BindWechat");
          utils_1.utils.send("HideUI", "TaskBoard", false);
        }
      }
      lobby_framework.do_task = do_task;
      var auto_popup_list = global_data_1.global_data.is_online ? [ "Lottery", "Sign", "Notice", "Mail", "FreeCoin" ] : [ "Lottery", "Sign", "Notice", "Mail" ];
      var auto_popup_current = "";
      function pop_next_if_have() {
        let next = null;
        if ("" == auto_popup_current) next = auto_popup_list[0]; else {
          let cur_index = auto_popup_list.indexOf(auto_popup_current);
          cur_index < auto_popup_list.length - 1 && (next = auto_popup_list[cur_index + 1]);
        }
        console.log(`auto popup ${next}`);
        auto_popup_current = next;
        if (null == next) return false;
        if (popup(next)) return true;
        return pop_next_if_have();
      }
      lobby_framework.pop_next_if_have = pop_next_if_have;
      function popup(name) {
        if (global_data_1.global_data.single_game_mode()) return false;
        if ("Lottery" == name) return auto_popup_lottery();
        if ("Sign" == name) return auto_popup_sign();
        if ("Notice" == name) return auto_popup_notice();
        if ("Mail" == name) return auto_popup_mail();
        if ("FreeCoin" == name) return auto_popup_taskboard();
        return false;
      }
      lobby_framework.popup = popup;
      function auto_popup_lottery() {
        if (global_data_1.global_data.have_module_activity() && global_data_1.global_data.lottery_popup) {
          utils_1.utils.send("ShowUI", "Lottery", true);
          request_share_lottery_reward(global_data_1.global_data.lottery_popup.invite_by);
          global_data_1.global_data.lottery_popup = null;
          return true;
        }
        return false;
      }
      lobby_framework.auto_popup_lottery = auto_popup_lottery;
      function auto_popup_mail() {
        let has_new_mail = global_data_1.global_data.mail_data.some(function(value) {
          return false == value.read || value.items.length > 0 && false == value.received;
        });
        if (has_new_mail) {
          utils_1.utils.send("ShowUI", "Mail", true);
          return true;
        }
        return false;
      }
      lobby_framework.auto_popup_mail = auto_popup_mail;
      function auto_popup_notice() {
        return false;
      }
      lobby_framework.auto_popup_notice = auto_popup_notice;
      function auto_popup_sign() {
        if (global_data_1.global_data.have_module_sign() && global_data_1.global_data.have_module_auto_sign()) {
          let last_data_str = utils_1.utils.getLocalStorage("lastSignPopupDate");
          let date = new Date();
          if (!last_data_str) {
            utils_1.utils.send("ShowUI", "DailySign", true);
            utils_1.utils.setLocalStorage("lastSignPopupDate", `${100 * date.getMonth() + date.getDate()}`);
            return true;
          }
          {
            let m = Math.floor(Number(last_data_str) / 100);
            let d = Number(last_data_str) % 100;
            if (m != date.getMonth() && d != date.getDate()) {
              utils_1.utils.send("ShowUI", "DailySign", true);
              utils_1.utils.setLocalStorage("lastSignPopupDate", `${100 * date.getMonth() + date.getDate()}`);
              return true;
            }
          }
        }
        return false;
      }
      lobby_framework.auto_popup_sign = auto_popup_sign;
      function auto_popup_taskboard() {
        if (global_data_1.global_data.have_module_auto_activity()) {
          let last_data_str = utils_1.utils.getLocalStorage("lastFreeGoldPopupDate");
          let date = new Date();
          if (!last_data_str) {
            utils_1.utils.send("ShowUI", "TaskBoard", true);
            utils_1.utils.setLocalStorage("lastFreeGoldPopupDate", `${100 * date.getMonth() + date.getDate()}`);
            return true;
          }
          {
            let m = Number(last_data_str) / 100;
            let d = Number(last_data_str) % 100;
            if (m != date.getMonth() && d != date.getDate()) {
              utils_1.utils.send("ShowUI", "TaskBoard", true);
              utils_1.utils.setLocalStorage("lastFreeGoldPopupDate", `${100 * date.getMonth() + date.getDate()}`);
              return true;
            }
          }
        }
        return false;
      }
      lobby_framework.auto_popup_taskboard = auto_popup_taskboard;
      function launchGame(param) {
        let rooms = global_data_1.global_data._vector_room_data.filter(x => x._int_game_id == param.gameId);
        let target_room_data = null;
        if (param.isRedPackageGame) {
          let f = rooms.filter(x => x._int_room_kind == param.kindId);
          f.length > 0 && (target_room_data = f[0]);
        } else {
          rooms = rooms.filter(r => {
            if (param.siteId == lobby_types_1.lobby_types.RoomButtonBgType.Beginner) return r._int_room_id >= 100 && r._int_room_id < 200;
            if (param.siteId == lobby_types_1.lobby_types.RoomButtonBgType.Medium) return r._int_room_id >= 200 && r._int_room_id < 300;
            if (param.siteId == lobby_types_1.lobby_types.RoomButtonBgType.Expert) return r._int_room_id >= 300 && r._int_room_id < 400;
            if (param.siteId == lobby_types_1.lobby_types.RoomButtonBgType.Master) return r._int_room_id >= 400 && r._int_room_id < 500;
            return false;
          });
          if (rooms.length > 0) if (1 == rooms.length) target_room_data = rooms[0]; else {
            let r = utils_1.utils.random_int(0, rooms.length - 1);
            r < rooms.length && (target_room_data = rooms[r]);
          }
        }
        if (target_room_data) {
          let user_data = global_data_1.global_data.get_the_user_data();
          if (user_data._long_bank_gold + user_data._long_gold < 500) {
            show_need_gold(target_room_data._int_game_id);
            return;
          }
          if (param.isRedPackageGame) {
            if (user_data._int_golden_beans < param.limit_min) {
              utils_1.utils.show_hint("\u91d1\u8c46\u4e0d\u8db3\uff0c\u65e0\u6cd5\u52a0\u5165\u6e38\u620f");
              return;
            }
          } else {
            if (target_room_data._int_limit_mask & global_define_1.CONST.ROOM_LIMIT_GOLD_MIN && user_data._long_gold < target_room_data._int_min_gold) {
              global_data_1.global_data.have_module_shop() ? utils_1.utils.send("ShowSimpleShopOrHint", target_room_data._int_game_id) : utils_1.utils.show_hint("\u91d1\u5e01\u4e0d\u8db3\uff0c\u65e0\u6cd5\u52a0\u5165\u6e38\u620f");
              return;
            }
            if (target_room_data._int_limit_mask & global_define_1.CONST.ROOM_LIMIT_GOLD_MAX && user_data._long_gold > target_room_data._int_max_gold) {
              utils_1.utils.show_hint("\u91d1\u5e01\u8d85\u51fa\u6e38\u620f\u684c\u4e0a\u9650\uff0c\u65e0\u6cd5\u52a0\u5165\u6e38\u620f");
              return;
            }
          }
        }
        null != target_room_data ? lobby_framework.fsm.go(LobbyFrameworkState.Game, {
          room: target_room_data
        }) : console.log("\u672a\u627e\u5230\u5408\u9002\u623f\u95f4", param);
      }
      lobby_framework.launchGame = launchGame;
      function get_game_engine() {
        cc.isValid(global_data_1.global_data.game_engine) || (global_data_1.global_data.game_engine = null);
        return global_data_1.global_data.game_engine;
      }
      lobby_framework.get_game_engine = get_game_engine;
      function mark_notice_read(id) {
        let data = global_data_1.global_data.notice_data.filter(x => x.id == id);
        data.length > 0 && (data[0].read = true);
        let noticeReadStr = utils_1.utils.getLocalStorage("noticeRead");
        let noticeRead = noticeReadStr ? utils_1.utils.from_json(noticeReadStr) : [];
        if (!noticeRead.some(x => x == id)) {
          noticeRead.push(id);
          noticeReadStr = utils_1.utils.to_json(noticeRead);
          utils_1.utils.setLocalStorage("noticeRead", noticeReadStr);
        }
        utils_1.utils.send("NoticeDataRefresh");
      }
      lobby_framework.mark_notice_read = mark_notice_read;
      function auto_popup_notice_detail() {
        if (global_data_1.global_data.notice_data && global_data_1.global_data.notice_data.length > 0) {
          let data = global_data_1.global_data.notice_data.filter(x => !x.read && x.auto);
          if (data.length > 0) {
            mark_notice_read(data[0].id);
            utils_1.utils.send("ShowNoticeDetail", data[0].id, true);
            return true;
          }
        }
        return false;
      }
      lobby_framework.auto_popup_notice_detail = auto_popup_notice_detail;
      function do_command(command, param) {
        console.log("do_command", command, param);
        try {
          let ca = command.split(":");
          let action = ca[0];
          let arg = ca[1];
          if (arg && arg.includes("|")) {
            let arr = arg.split("|");
            if (arr.length > 1) {
              arg = arr[0];
              param = arr[1];
            }
          }
          if ("enter" == action) {
            let n = Number(arg);
            if (n < 1e3) {
              if (global_data_1.global_data.check_game_valid(n)) {
                quick_enter_game(n);
                utils_1.utils.send("HideUI", "NoticePanel");
                return true;
              }
              console.warn("no such game", n);
              return false;
            }
            {
              let int_game_id = Math.floor(n / 1e3);
              let int_site_id = n % 1e3;
              if (global_data_1.global_data.check_game_valid(int_game_id)) {
                quick_enter_game_with_room(int_game_id, int_site_id);
                return true;
              }
              console.warn("no such game", int_game_id, int_site_id);
              return false;
            }
          }
          if ("show" == action) {
            let n = Number(arg);
            if (n < 1e3) {
              if (global_data_1.global_data.check_game_valid(n)) {
                utils_1.utils.send("ToRoomLayout", n);
                utils_1.utils.send("HideUI", "NoticePanel");
                return true;
              }
              console.warn("no such game", n);
              return false;
            }
            console.warn("show with arg > 1000", n);
            return false;
          }
          if ("copy" == action) {
            if (null != arg && arg.length > 0) {
              platform_1.platform.inst.setClipboardData({
                data: arg
              });
              return true;
            }
            console.warn("invalid copy arg");
            return false;
          }
          if ("friend" == action) {
            if (null != arg) {
              game_auxi_1.game_auxi.enter_private_room(arg);
              return true;
            }
            console.warn("invalid private room");
            return false;
          }
          if ("open" == action) {
            if ("1" == arg) {
              if (global_data_1.global_data.have_module_shop()) {
                utils_1.utils.send("ShowUI", "ShopLayout", "Gold");
                return true;
              }
              console.warn("no shop");
              return false;
            }
            if ("2" == arg) {
              if (global_data_1.global_data.have_module_shop()) {
                utils_1.utils.send("ShowUI", "ShopLayout", "Item");
                return true;
              }
              console.warn("no shop");
              return false;
            }
            if ("3" == arg) {
              if (global_data_1.global_data.have_module_shop()) {
                utils_1.utils.send("ShowUI", "ShopLayout", "Ingot");
                return true;
              }
              console.warn("no shop");
              return false;
            }
            if ("4" == arg) {
              if (global_data_1.global_data.have_module_activity() && "LuckyDraw" == param) {
                utils_1.utils.send("ShowUI", "Lottery");
                return true;
              }
              return false;
            }
            if ("5" == arg) {
              utils_1.utils.send("ShowUI", "Task");
              return true;
            }
            if ("6" == arg) {
              utils_1.utils.send("ShowUI", "ExchangePanel");
              return true;
            }
            if ("7" == arg) {
              utils_1.utils.send("ShowUI", "LobbyUserInfo");
              return true;
            }
            console.warn("no such arg");
            return false;
          }
          if ("openurl" == action) {
            console.warn("cannot open url in wx");
            return false;
          }
          if ("openservice" == action) {
            platform_1.platform.inst.openCustomerServiceConversation({});
            return true;
          }
          if ("enter_private_room" == action) {
            if (!arg) {
              console.warn("enter_private_room invalid argument", arg);
              return false;
            }
            let int_id = Number(arg);
            let int_game_id = Math.floor(int_id / 1e3);
            let int_site_id = int_id % 1e3;
            let str_room_code = param;
            enter_private_room(int_game_id, int_site_id, str_room_code);
            return true;
          }
          console.warn("no such command");
          return false;
        } catch (e) {
          console.log(e);
          return false;
        }
      }
      lobby_framework.do_command = do_command;
      function quick_enter_game(game_id) {
        let rooms = global_data_1.global_data._vector_room_data;
        rooms = rooms.filter((value, index, array) => value._int_game_id == game_id && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_FRIEND) && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_REDPACKET));
        rooms = rooms.sort((a, b) => {
          let a_min_gold = a._int_min_gold || 0;
          let b_min_gold = b._int_min_gold || 0;
          return b_min_gold - a_min_gold;
        });
        let target_room = null;
        let self_gold = global_data_1.global_data.get_the_user_data()._long_gold;
        for (let i = 0; i < rooms.length; ++i) if (self_gold > rooms[i]._int_min_gold) {
          target_room = rooms[i];
          break;
        }
        if (null == target_room) {
          if (global_data_1.global_data.have_module_shop()) {
            utils_1.utils.send("ShowSimpleShopOrHint", game_id);
            return;
          }
          check_relief() || utils_1.utils.show_hint("\u5feb\u901f\u52a0\u5165\u6e38\u620f\u5931\u8d25");
          return;
        }
        {
          let site_id = null;
          target_room._int_room_id >= 100 && target_room._int_room_id < 200 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Beginner : target_room._int_room_id >= 200 && target_room._int_room_id < 300 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Medium : target_room._int_room_id >= 300 && target_room._int_room_id < 400 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Expert : target_room._int_room_id >= 400 && target_room._int_room_id < 500 && (site_id = lobby_types_1.lobby_types.RoomButtonBgType.Master);
          if (null == site_id) {
            utils_1.utils.show_hint("\u5feb\u901f\u52a0\u5165\u6e38\u620f\u65f6\u53d1\u751f\u9519\u8bef(1)");
            return;
          }
          let param = new lobby_types_1.lobby_types.LaunchGameParams();
          param.isRedPackageGame = false;
          param.gameId = game_id;
          param.siteId = site_id;
          lobby_framework.launchGame(param);
        }
      }
      lobby_framework.quick_enter_game = quick_enter_game;
      function quick_enter_game_with_room(game_id, room_id) {
        let rooms = global_data_1.global_data._vector_room_data;
        rooms = rooms.filter((value, index, array) => value._int_game_id == game_id && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_FRIEND) && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_REDPACKET));
        let target_room = null;
        for (let i = 0; i < rooms.length; ++i) if (room_id == rooms[i]._int_room_id) {
          target_room = rooms[i];
          break;
        }
        if (null == target_room) {
          utils_1.utils.show_hint("\u627e\u4e0d\u5230\u8be5\u623f\u95f4\uff0c\u52a0\u5165\u6e38\u620f\u5931\u8d25");
          return;
        }
        {
          let site_id = null;
          target_room._int_room_id >= 100 && target_room._int_room_id < 200 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Beginner : target_room._int_room_id >= 200 && target_room._int_room_id < 300 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Medium : target_room._int_room_id >= 300 && target_room._int_room_id < 400 ? site_id = lobby_types_1.lobby_types.RoomButtonBgType.Expert : target_room._int_room_id >= 400 && target_room._int_room_id < 500 && (site_id = lobby_types_1.lobby_types.RoomButtonBgType.Master);
          if (null == site_id) {
            utils_1.utils.show_hint("\u52a0\u5165\u6307\u5b9a\u6e38\u620f\u65f6\u53d1\u751f\u9519\u8bef(1)");
            return;
          }
          let param = new lobby_types_1.lobby_types.LaunchGameParams();
          param.isRedPackageGame = false;
          param.gameId = game_id;
          param.siteId = site_id;
          lobby_framework.launchGame(param);
        }
      }
      lobby_framework.quick_enter_game_with_room = quick_enter_game_with_room;
      function enter_private_room(int_game_id, int_site_id, str_room_code) {
        console.log("enter_private_room", int_game_id, int_site_id, str_room_code);
        let the_curr_game_data = global_data_1.global_data.get_game_data(int_game_id);
        if (null == the_curr_game_data) {
          utils_1.utils.show_hint("\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u6e38\u620f");
          console.log("enter_private_room fail(1)");
          utils_1.utils.hide_loading();
          return;
        }
        let the_select_room_data = null;
        for (let i = 0; i < global_data_1.global_data._vector_games.length; i++) {
          let the_game_item = global_data_1.global_data._vector_games[i];
          for (let j = 0; j < the_game_item.the_vector_games.length; j++) {
            let int_sub_game_id = the_game_item.the_vector_games[j];
            if (int_sub_game_id != int_game_id) continue;
            for (let k = 0; k < global_data_1.global_data._vector_room_data.length; k++) {
              let the_room_data = global_data_1.global_data._vector_room_data[k];
              if (the_room_data._int_game_id == int_game_id && the_room_data._int_room_id == int_site_id) {
                if (150 == int_game_id && the_room_data._int_room_mode == global_define_1.CONST.ROOM_MODE_FRIEND) {
                  the_select_room_data = the_room_data;
                  break;
                }
                if (152 == int_game_id && the_room_data._int_room_mode == global_define_1.CONST.ROOM_MODE_MOBILE) {
                  the_select_room_data = the_room_data;
                  break;
                }
              }
            }
            if (the_select_room_data) break;
          }
          if (the_select_room_data) break;
        }
        if (the_select_room_data) lobby_framework.fsm.go(LobbyFrameworkState.Game, {
          room: the_select_room_data,
          game: the_curr_game_data,
          code: str_room_code
        }); else {
          console.log("enter_private_room fail(2)");
          utils_1.utils.hide_loading();
          custom_lobby_1.custom_lobby.booting_task_interrupt = false;
        }
      }
      lobby_framework.enter_private_room = enter_private_room;
      function get_current_room_data() {
        return room_controller_1.room_controller.get_room_data();
      }
      lobby_framework.get_current_room_data = get_current_room_data;
      function check_relief() {
        return false;
      }
      lobby_framework.check_relief = check_relief;
      function request_exchange(int_id) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_EXCHANGE_OPERATION);
        url = utils_1.utils.string_replace_key_with_integer(url, "{EXCHANGEID}", int_id);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d\u6570\u636e...");
        utils_1.utils.send_http_request({
          url: url,
          success: data => {
            utils_1.utils.send("ExchangeResultSuccess", data.exchange_id, data.left_num);
            global_data_1.global_data.request_user_data();
            utils_1.utils.send("ShowUI", "ExchangeSuccess", {
              is_red_package: false,
              quan: data.sharemsg,
              content: "",
              hint: "",
              code: ""
            });
          },
          complete: () => {
            utils_1.utils.hide_loading();
            utils_1.utils.send("HideUI", "ItemDetail");
          },
          progress: timeLeft => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u52a0\u8f7d\u6570\u636e...(${timeLeft}s)`);
          }
        });
      }
      lobby_framework.request_exchange = request_exchange;
      function check_create_shortcut() {
        platform_1.platform.inst.getShortCutInfo({
          success: () => {
            utils_1.utils.send("ShowUI", "TaskBoard", false);
          },
          fail: () => {
            utils_1.utils.is_oppo() ? utils_1.utils.show_message_box({
              content: "\u662f\u5426\u521b\u5efa\u684c\u9762\u56fe\u6807,\u514d\u8d39\u8d60\u90011000\u91d1\u5e01",
              button_count: 2,
              onClick: index => {
                0 == index && platform_1.platform.inst.createShortCut({
                  success: () => {
                    set_local_task(lobby_types_1.lobby_types.RewardWebType.AddFavorite, true);
                    check_get_local_task_reward(lobby_types_1.lobby_types.RewardWebType.AddFavorite);
                  }
                });
              }
            }) : utils_1.utils.is_mi() && platform_1.platform.inst.createShortCut({
              success: () => {
                set_local_task(lobby_types_1.lobby_types.RewardWebType.AddFavorite, true);
                check_get_local_task_reward(lobby_types_1.lobby_types.RewardWebType.AddFavorite);
              }
            });
          }
        });
      }
      lobby_framework.check_create_shortcut = check_create_shortcut;
      function check_get_local_task_reward(type) {
        if (lobby_framework.get_local_task(type)) {
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_DAILY_REWARD_GET);
          url = utils_1.utils.string_replace_key_with_integer(url, "{TYPE}", type);
          utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d", true);
          utils_1.utils.send_http_request({
            url: url,
            success: data => {
              if (data) {
                data = data[0];
                lobby_framework.set_local_task(type, false);
                utils_1.utils.show_get_reward([ {
                  fund_id: data.fund_id,
                  fund_count: data.fund_count
                } ]);
              }
              refresh_taskboard_data();
              global_data_1.global_data.request_user_data();
            },
            complete: () => {
              utils_1.utils.hide_loading();
            },
            progress: timeLeft => {
              utils_1.utils.show_loading_text(`\u6b63\u5728\u52a0\u8f7d...(${timeLeft}s)`);
            }
          });
        }
      }
      lobby_framework.check_get_local_task_reward = check_get_local_task_reward;
      function refresh_taskboard_data(show_loading = false) {
        show_loading && utils_1.utils.show_loading("", true);
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_DAILY_REWARD_STATUS);
        utils_1.utils.send_http_request({
          url: url,
          success: data => {
            console.log("refresh_taskboard_data", data);
            global_data_1.global_data.taskboard_data = new lobby_types_1.lobby_types.TaskBoardData();
            global_data_1.global_data.taskboard_data.items = [];
            data.forEach(r => {
              let itemData = new lobby_types_1.lobby_types.TaskBoardItemData();
              itemData.webData = new lobby_types_1.lobby_types.RewardWebData();
              itemData.webData.reward_type = r.reward_type;
              itemData.webData.reward_name = r.reward_name;
              itemData.webData.num_times = r.num_times;
              itemData.webData.reward_num = r.reward_num;
              itemData.webData.last_times = r.last_times;
              itemData.webData.status = r.status;
              itemData.webData.reward = utils_1.utils.from_json(r.reward);
              itemData.webData.unreceive = r.unreceive;
              global_data_1.global_data.taskboard_data.items.push(itemData);
            });
            utils_1.utils.send("TaskboardDataUpdated");
          },
          fail: res => {
            utils_1.utils.show_hint(`\u8bf7\u6c42\u4efb\u52a1\u4fe1\u606f\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5 ${res}`);
          },
          complete: () => {
            show_loading && utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.refresh_taskboard_data = refresh_taskboard_data;
      function find_good_data_by_gameid(game_id) {
        let rooms = global_data_1.global_data._vector_room_data.filter(value => value._int_game_id == game_id && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_FRIEND) && 0 == (value._int_room_mode & global_define_1.CONST.ROOM_MODE_REDPACKET));
        rooms = rooms.sort((a, b) => {
          let a_min_gold = a._int_min_gold || 0;
          let b_min_gold = b._int_min_gold || 0;
          return b_min_gold - a_min_gold;
        });
        let r = null != rooms && rooms.length > 0 ? rooms[rooms.length - 1]._str_rule : "gift=&quot;1000,2000,5000,1000,2000&quot;;";
        let rule = utils_1.utils.parse_lua_text(r);
        let s_price = rule.topup ? rule.topup : "0";
        let price = parseInt(s_price);
        let goodData = null;
        let shopData = global_data_1.global_data.game_json_data[global_data_1.global_data.keyword][global_data_1.global_data.area_id];
        if (0 == price) goodData = shopData.products[0]; else if (shopData.products && shopData.products.length > 0) for (let i = 0; i < shopData.products.length; ++i) if (shopData.products[i].price == price) {
          goodData = shopData.products[i];
          break;
        }
        return goodData;
      }
      lobby_framework.find_good_data_by_gameid = find_good_data_by_gameid;
      function show_simple_shop(goodData) {
        utils_1.utils.send("ShowUI", "SimpleShop", goodData);
      }
      lobby_framework.show_simple_shop = show_simple_shop;
      function hide_simple_shop() {
        utils_1.utils.send("HideUI", "SimpleShop");
      }
      lobby_framework.hide_simple_shop = hide_simple_shop;
      function show_need_gold(game_id) {
        let goodData = lobby_framework.find_good_data_by_gameid(game_id);
        if (goodData) {
          let showWatch = platform_1.platform.inst.checkRewardedVideoAdSync().available;
          let showShop = global_data_1.global_data.have_module_shop();
          if (!showWatch && showShop) {
            show_simple_shop(goodData);
            return true;
          }
          if (showWatch) {
            utils_1.utils.send("ShowUI", "NeedGold", {
              showShop: showShop,
              goodData: goodData,
              showWatch: showWatch
            });
            return true;
          }
          utils_1.utils.show_message_box({
            content: "\u91d1\u5e01\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5f00\u59cb\u6e38\u620f",
            button_count: 1
          });
          return true;
        }
        return false;
      }
      lobby_framework.show_need_gold = show_need_gold;
      function hide_need_gold() {
        utils_1.utils.send("HideUI", "NeedGold");
      }
      lobby_framework.hide_need_gold = hide_need_gold;
      function fetch_task_data() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_TASK_DATA);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: data => {
            global_data_1.global_data.task_data = data.filter(x => global_data_1.global_data.validate_task_item(x.task_id, x.complete_kindid)).sort((a, b) => {
              if (a.status != b.status) {
                if (2 == a.status) return -1;
                if (2 == b.status) return 1;
                if (1 == a.status) return -1;
                if (1 == b.status) return 1;
                if (4 == a.status) return -1;
                if (4 == b.status) return 1;
              }
              return a.sort - b.sort;
            });
            utils_1.utils.send("TaskDataUpdated");
            utils_1.utils.send("RefreshTaskButtonRedPoint");
          }
        });
      }
      lobby_framework.fetch_task_data = fetch_task_data;
      function get_task_reward(task_item_data) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_TASK_REWARD);
        url = utils_1.utils.string_replace_any(url, "{TASKID}", task_item_data.task_id);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: function(data) {
            utils_1.utils.show_get_reward(data.fundchange);
            let old_id = task_item_data.task_id;
            let new_id = old_id;
            let list = global_data_1.global_data.task_data.filter(x => x.task_id == old_id);
            let the_task_data = null;
            if (0 == list.length) {
              global_data_1.global_data.task_data.push(task_item_data);
              the_task_data = task_item_data;
            } else the_task_data = list[0];
            if (true == data.havenext && null != data.nexttask) {
              the_task_data.task_id = data.nexttask.task_id;
              the_task_data.task_logo = data.nexttask.task_logo;
              the_task_data.task_logo_url = data.nexttask.task_logo_url;
              the_task_data.status = data.nexttask.status;
              the_task_data.task_name = data.nexttask.task_name;
              the_task_data.task_desc = data.nexttask.task_desc;
              the_task_data.curr_count = data.nexttask.curr_count;
              the_task_data.complete_count = data.nexttask.complete_count;
              the_task_data.reward_name = data.nexttask.reward_name;
              the_task_data.reward_logo = data.nexttask.reward_logo;
              the_task_data.task_url = data.nexttask.task_url;
              the_task_data.units = data.nexttask.units || "";
              new_id = the_task_data.task_id;
            } else the_task_data.status = 4;
            utils_1.utils.send("TaskItemDataUpdated", old_id, new_id);
            global_data_1.global_data.request_user_data();
          },
          fail: function(data) {
            utils_1.utils.show_hint("\u9886\u53d6\u5956\u52b1\u5931\u8d25");
          }
        });
      }
      lobby_framework.get_task_reward = get_task_reward;
      function share_window_share() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_relief_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_relief_share_img_url),
          query: "fromShare=1&inviteBy=" + String(global_data_1.global_data.get_the_user_data()._int_user_id),
          success: () => {
            global_data_1.global_data.share_window_state = lobby_types_1.lobby_types.ShareState.Shared;
            utils_1.utils.send("RefreshShareWindowButton");
            utils_1.utils.show_hint("\u5206\u4eab\u6210\u529f");
          },
          fail: () => {
            utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
          }
        });
      }
      lobby_framework.share_window_share = share_window_share;
      function get_share_window_award() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_CLIENT_AWARD);
        url = utils_1.utils.string_replace_key_with_integer(url, "{TYPEID}", global_define_1.CONST.ID_REWARD_WECHAT);
        utils_1.utils.send_http_request_old({
          url: url,
          success: res => {
            global_data_1.global_data.share_window_state = lobby_types_1.lobby_types.ShareState.Rewarded;
            utils_1.utils.send("RefreshShareWindowButton");
          },
          fail: res => {
            if ("\u60a8\u7684\u5956\u52b1\u5df2\u7ecf\u9886\u53d6\u8fc7\u4e86" == res.Result_msg) {
              global_data_1.global_data.share_window_state = lobby_types_1.lobby_types.ShareState.Rewarded;
              utils_1.utils.send("RefreshShareWindowButton");
            }
          },
          complete: () => {
            global_data_1.global_data.request_user_data();
          },
          progress: timeLeft => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u9886\u53d6\u5956\u52b1...(${timeLeft}s)`);
          }
        });
      }
      lobby_framework.get_share_window_award = get_share_window_award;
      function request_red_package_exchange(id) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_EXCHANGE_REDPACKET);
        url = utils_1.utils.string_replace_key_with_integer(url, "{FUNDID}", id);
        utils_1.utils.show_loading("", true);
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          method: "GET",
          success: (data, message) => {
            utils_1.utils.show_hint(message);
            let order = data.orderno;
            let left = data.left_num;
            let name = data.fund_name;
            let count = data.count;
            utils_1.utils.send("RefreshRedPackageButton", count, left);
            global_data_1.global_data.get_the_user_data()._int_red_packet = data.redpacket;
            utils_1.utils.send("ShowUI", "ExchangeSuccess", {
              is_red_package: true,
              quan: "",
              content: "\u60a8\u5df2\u6210\u529f\u5151\u6362\u73b0\u91d1\u7ea2\u5305\uff1a" + name + "\n\u7ea2\u5305\u7801\u4e3a\uff1a" + order,
              hint: "\u590d\u5236\u7ea2\u5305\u7801\uff0c\u8bf7\u572824\u5c0f\u65f6\u5185\uff0c\u524d\u5f80\u5fae\u4fe1\u516c\u4f17\u53f7\n\u201c\u5927\u773c\u798f\u5229\u793e\u201d\u8fdb\u884c\u5151\u6362\uff0c\u8fc7\u671f\u5931\u6548\u54e6~",
              code: ""
            });
            global_data_1.global_data.request_user_data();
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.request_red_package_exchange = request_red_package_exchange;
      function request_bank_data() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_QUERY_GOLD);
        url = utils_1.utils.string_replace_key_with_integer(url, "{RANKTYPE}", 4);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
        utils_1.utils.send_http_request({
          url: url,
          success: data => {
            utils_1.utils.send("RefreshBankData", data);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.request_bank_data = request_bank_data;
      function get_music() {
        let s = utils_1.utils.getLocalStorage("Music");
        if ("off" != s) return true;
        return false;
      }
      lobby_framework.get_music = get_music;
      function get_sound() {
        let s = utils_1.utils.getLocalStorage("Sound");
        if ("off" != s) return true;
        return false;
      }
      lobby_framework.get_sound = get_sound;
      function set_music(on) {
        if (on) {
          console.log("music on");
          sound_manager_1.sound_manager.enable_music(true);
          utils_1.utils.setLocalStorage("Music", "on");
        } else {
          console.log("music off");
          sound_manager_1.sound_manager.enable_music(false);
          utils_1.utils.setLocalStorage("Music", "off");
        }
      }
      lobby_framework.set_music = set_music;
      function set_sound(on) {
        if (on) {
          console.log("sound on");
          sound_manager_1.sound_manager.enable_sound(true);
          utils_1.utils.setLocalStorage("Sound", "on");
        } else {
          console.log("sound off");
          sound_manager_1.sound_manager.enable_sound(false);
          utils_1.utils.setLocalStorage("Sound", "off");
        }
      }
      lobby_framework.set_sound = set_sound;
      function get_battery_level() {
        return platform_1.platform.inst.getBatteryInfoSync();
      }
      lobby_framework.get_battery_level = get_battery_level;
      function set_keep_screen_on(on) {
        platform_1.platform.inst.setKeepScreenOn({
          keepScreenOn: on
        });
      }
      lobby_framework.set_keep_screen_on = set_keep_screen_on;
      function refresh_invite_reward_data(silent = false) {
        silent || utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_INVITE_REWARD_STATUS);
        utils_1.utils.send_http_request({
          url: url,
          success: data => {
            let theData = new lobby_types_1.lobby_types.InviteRewardData();
            let list = data.invitelist;
            let mystic = data.mystic;
            theData.secret_got = 1 == mystic;
            theData.items = [];
            for (let i = 0; i < 5; ++i) {
              let itemData = new lobby_types_1.lobby_types.InviteRewardWebData();
              let r = list[i];
              itemData.accounts = r.accounts;
              itemData.userid = r.userid;
              itemData.faceid = r.faceid;
              itemData.gender = r.gender;
              itemData.status = r.status;
              itemData.type = r.type;
              itemData.fund_id = r.fund_id;
              itemData.fund_count = r.fund_count;
              theData.items.push(itemData);
            }
            global_data_1.global_data.invite_reward_data = theData;
            utils_1.utils.send("RefreshInviteRewardData");
          },
          fail: message => {
            silent || utils_1.utils.show_hint(message);
          },
          complete: () => {
            silent || utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.refresh_invite_reward_data = refresh_invite_reward_data;
      function purchase_item(id, price, name) {
        platform_1.platform.inst.purchaseItem({
          id: id,
          price: price,
          name: name,
          fail: res => {
            utils_1.utils.show_hint(res.errMsg);
          }
        });
      }
      lobby_framework.purchase_item = purchase_item;
      function use_prop(prop_id) {
        if (prop_id == global_define_1.CONST.ID_PROP_RECARD) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_RECARD_ONE) request_use_prop(prop_id, 1, ""); else {
          if (prop_id == global_define_1.CONST.ID_PROP_SMALL_BUGLE) {
            utils_1.utils.show_hint("\u6682\u4e0d\u652f\u6301\u5c0f\u5587\u53ed");
            return;
          }
          if (prop_id == global_define_1.CONST.ID_PROP_BIG_BUGLE) {
            utils_1.utils.show_hint("\u6682\u4e0d\u652f\u6301\u5927\u5587\u53ed");
            return;
          }
          if (prop_id == global_define_1.CONST.ID_PROP_VIP_1) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_VIP_2) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_VIP_3) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_VIP_4) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_SCOREDOUBLE) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_SCORESHIELD) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_PACKAGE) request_use_prop(prop_id, 1, ""); else if (prop_id == global_define_1.CONST.ID_PROP_CHARMCLEAR) {
            if (global_data_1.global_data.get_the_user_data()._long_charm >= 0) {
              utils_1.utils.show_hint("\u60a8\u7684\u9b45\u529b\u5927\u4e8e\u96f6\uff0c\u65e0\u9700\u6e05\u96f6");
              return;
            }
            request_use_prop(prop_id, 1, "");
          } else if (prop_id == global_define_1.CONST.ID_PROP_SCORECLEAR) {
            if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) {
              utils_1.utils.show_hint("\u8be5\u9053\u5177\u53ea\u80fd\u5728\u6e38\u620f\u623f\u95f4\u4e2d\u4f7f\u7528...");
              return;
            }
            if (game_controller_1.game_controller.get_self_user_data() && game_controller_1.game_controller.get_self_user_data().lScore > 0) {
              utils_1.utils.show_hint("\u60a8\u7684\u79ef\u5206\u5927\u4e8e\u96f6\uff0c\u65e0\u9700\u6e05\u96f6");
              return;
            }
            let room = lobby_framework.get_current_room_data();
            request_use_prop(prop_id, 1, room._int_game_id.toFixed(0));
          } else console.error("use prop exception: " + prop_id);
        }
      }
      lobby_framework.use_prop = use_prop;
      function request_use_prop(prop_id, count, param) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_USE_PROP);
        url = utils_1.utils.string_replace_key_with_integer(url, "{PROPID}", prop_id);
        url = utils_1.utils.string_replace_key(url, "{PARAM}", param);
        utils_1.utils.show_loading("\u6b63\u5728\u4f7f\u7528\u9053\u5177...");
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          method: "GET",
          success: () => {
            utils_1.utils.show_hint("\u4f7f\u7528\u9053\u5177\u6210\u529f\uff01");
            global_data_1.global_data.request_user_data();
            utils_1.utils.send("UsePropDone", true);
          },
          fail: res => {
            utils_1.utils.show_hint("\u4f7f\u7528\u9053\u5177\u5931\u8d25:" + res);
            utils_1.utils.send("UsePropDone", false);
          },
          progress: t => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u4f7f\u7528\u9053\u5177...(${t}s)`);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.request_use_prop = request_use_prop;
      function buy_prop(prop_id) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_PROP_SHOP);
        url = utils_1.utils.string_replace_key_with_integer(url, "{SHOPID}", prop_id);
        utils_1.utils.show_loading("\u6b63\u5728\u8d2d\u4e70...");
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          method: "GET",
          success: () => {
            utils_1.utils.show_hint("\u8d2d\u4e70\u6210\u529f\uff01");
            global_data_1.global_data.request_user_data();
          },
          progress: t => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8d2d\u4e70...(${t}s)`);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.buy_prop = buy_prop;
      function fetch_user_head_image(user_id, face_id, target_sprite) {
        if (utils_1.utils.is_window()) return;
        let url_head = global_data_1.global_data.make_url(global_define_1.CONST.HTTPS_GET_IMG_RESOURCES);
        url_head = utils_1.utils.string_replace_any(url_head, "{PNGNAME}", String(user_id) + "-" + String(face_id) + ".png");
        url_head = utils_1.utils.string_replace_any(url_head, "{STYLE}", "simplify");
        cc.assetManager.loadRemote(url_head, function(err, tex) {
          if (err) {
            console.error(err, tex);
            return;
          }
          cc.isValid(target_sprite) && (target_sprite.spriteFrame = new cc.SpriteFrame(tex));
        });
      }
      lobby_framework.fetch_user_head_image = fetch_user_head_image;
      function get_emotion_animation_clip(index) {
        if (!global_data_1.global_data.cached_emotion_clips.has(index)) {
          let emotion_sp = global_data_1.global_data.spriteFrameMap.get("Emotion-" + index);
          let tex = emotion_sp.getTexture();
          let isRotated = emotion_sp.isRotated();
          let config = global_data_1.global_data.emotion_clip_config[index];
          let size = cc.size(config.width, config.height);
          let sps = [];
          for (let t = 0; t < config.turn; ++t) {
            let rect = cc.rect(emotion_sp.getRect().x, emotion_sp.getRect().y, config.width, config.height);
            for (let i = 0; i < config.count; ++i) {
              let sp = new cc.SpriteFrame(tex, rect, isRotated, cc.Vec2.ZERO, size);
              isRotated ? rect.y += rect.width : rect.x += rect.width;
              sps.push(sp);
            }
          }
          let clip = cc.AnimationClip.createWithSpriteFrames(sps, config.turn * config.count / config.time);
          clip.name = "em" + index;
          clip.wrapMode = cc.WrapMode.Normal;
          global_data_1.global_data.cached_emotion_clips.set(index, clip);
        }
        return global_data_1.global_data.cached_emotion_clips.get(index);
      }
      lobby_framework.get_emotion_animation_clip = get_emotion_animation_clip;
      function check_task_board_item_available(type) {
        if (type == lobby_types_1.lobby_types.RewardWebType.Video) {
          if ((utils_1.utils.is_wechat() || utils_1.utils.is_oppo() || utils_1.utils.is_baidu() || utils_1.utils.is_huawei()) && !global_data_1.global_data.video_ad_id) return false;
        } else if (type == lobby_types_1.lobby_types.RewardWebType.AddFavorite) {
          if (utils_1.utils.is_oppo() || utils_1.utils.is_mi()) return true;
        } else if (type == lobby_types_1.lobby_types.RewardWebType.Share && !global_data_1.global_data.have_module_sign()) return false;
        return true;
      }
      lobby_framework.check_task_board_item_available = check_task_board_item_available;
      function fetch_mail_data(done) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MAIL_QUERY);
        utils_1.utils.show_loading(" ", true, true);
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          success: (data, message) => {
            let mails = data.mails || [];
            global_data_1.global_data.mail_data = [];
            let mail_str = utils_1.utils.getLocalStorage("mailRead");
            let mail_read = mail_str ? utils_1.utils.from_json(mail_str) : [];
            let all_mail = mails.map(x => x.mailid);
            mail_read = mail_read.filter(v => all_mail.indexOf(v) > -1);
            mail_str = utils_1.utils.to_json(mail_read);
            utils_1.utils.setLocalStorage("mailRead", mail_str);
            mails.forEach(m => {
              let mail = new lobby_types_1.lobby_types.MailItemData();
              mail.id = m.mailid;
              mail.title = decodeURIComponent(m.title);
              mail.date = m.logtime;
              mail.content = decodeURIComponent(m.message);
              mail.read = mail_read.some(x => x == m.mailid);
              mail.btn_action = m.btn_action;
              mail.btn_name = decodeURIComponent(m.btn_name);
              mail.items = [];
              m.prop_award && m.prop_award.forEach(p => {
                mail.items.push({
                  prop_id: p.id,
                  count: p.cnt
                });
              });
              m.status_award && m.status_award.forEach(s => {
                mail.items.push({
                  status_id: s.id,
                  count: s.cnt
                });
              });
              mail.received = "0" != m.status;
              global_data_1.global_data.mail_data.push(mail);
            });
            utils_1.utils.send("RefreshMailData", {
              action: "refresh"
            });
          },
          fail: errMsg => {
            console.log(errMsg);
          },
          complete: () => {
            utils_1.utils.hide_loading();
            done && done();
          }
        });
      }
      lobby_framework.fetch_mail_data = fetch_mail_data;
      function mark_mail_read(id) {
        let mails = global_data_1.global_data.mail_data.filter(x => x.id == id);
        if (mails.length > 0) {
          mails[0].read = true;
          let mail_str = utils_1.utils.getLocalStorage("mailRead");
          let mail_read = mail_str ? utils_1.utils.from_json(mail_str) : [];
          if (!mail_read.some(x => x == id)) {
            mail_read.push(id);
            mail_str = utils_1.utils.to_json(mail_read);
            utils_1.utils.setLocalStorage("mailRead", mail_str);
          }
          utils_1.utils.send("RefreshMailData", {
            action: "read",
            id: id
          });
        }
      }
      lobby_framework.mark_mail_read = mark_mail_read;
      function get_mail_item(id) {
        let mails = global_data_1.global_data.mail_data.filter(x => x.id == id);
        if (mails.length > 0) {
          if (mails[0].received) {
            utils_1.utils.show_hint("\u5956\u52b1\u5df2\u7ecf\u9886\u53d6");
            return;
          }
          let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MAIL_AWARD);
          url = utils_1.utils.string_replace_any(url, "{MAILID}", id);
          utils_1.utils.show_loading("\u6b63\u5728\u83b7\u53d6\u5956\u52b1");
          utils_1.utils.send_http_request({
            url: url,
            hint: true,
            success: (data, message) => {
              console.log("data:", data, "message:", message);
              mails[0].received = true;
              try {
                let reward_list = [];
                data.prop_award.forEach(x => {
                  reward_list.push({
                    fund_id: x.id,
                    fund_count: x.cnt
                  });
                });
                data.status_award.forEach(x => {
                  reward_list.push({
                    fund_id: x.id,
                    fund_count: x.cnt,
                    status: true
                  });
                });
                if (reward_list.length > 0) {
                  utils_1.utils.show_get_reward(reward_list);
                  global_data_1.global_data.request_user_data();
                }
              } catch (e) {}
              utils_1.utils.send("RefreshMailData", {
                action: "get",
                id: id
              });
            },
            fail: errMsg => {
              console.log(errMsg);
            },
            complete: () => {
              utils_1.utils.hide_loading();
            }
          });
        }
      }
      lobby_framework.get_mail_item = get_mail_item;
      function delete_mail(id) {
        let mails = global_data_1.global_data.mail_data.filter(x => x.id == id);
        if (0 == mails.length) {
          utils_1.utils.show_hint("\u90ae\u4ef6\u5df2\u7ecf\u5220\u9664");
          return;
        }
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MAIL_DEL);
        url = utils_1.utils.string_replace_any(url, "{MAILID}", id);
        utils_1.utils.show_loading("\u6b63\u5728\u5220\u9664\u90ae\u4ef6");
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          success: (data, message) => {
            console.log("data:", data, "message:", message);
            global_data_1.global_data.mail_data = global_data_1.global_data.mail_data.filter(x => x.id != id);
            utils_1.utils.send("RefreshMailData", {
              action: "delete",
              id: id
            });
          },
          fail: errMsg => {
            console.log(errMsg);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.delete_mail = delete_mail;
      function fetch_lottery_data(done) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_LOTTERY_QUERY);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d", true);
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          success: (data, message) => {
            console.log(data);
            let ld = new lobby_types_1.lobby_types.LotteryPanelData();
            ld.prop_id = data.today_award.id;
            ld.prop_name = data.today_award.name;
            ld.prop_count = data.today_award.cnt;
            ld.prop_id_yesterday = data.yesterday_award.id;
            ld.prop_name_yesterday = data.yesterday_award.name;
            ld.prop_count_yesterday = data.yesterday_award.cnt;
            ld.lotterys_today = [];
            data.my_num_today.forEach(num => {
              ld.lotterys_today.push({
                num: num,
                win: false
              });
            });
            ld.lotterys_yesterday = [];
            data.my_num_yesterday.forEach(num => {
              ld.lotterys_yesterday.push({
                num: num,
                win: data.winning_nums.some(x => x == num)
              });
            });
            ld.lotterys_win = [];
            data.winning_nums.forEach(num => {
              ld.lotterys_win.push({
                num: num,
                win: data.my_num_yesterday.some(x => x == num)
              });
            });
            ld.awards_yesterday = [];
            data.my_award && data.my_award.forEach(award => {
              ld.awards_yesterday.push({
                id: award.id,
                name: award.name,
                count: award.cnt
              });
            });
            if (data.receive_nums) {
              ld.task_1_total = data.receive_nums.total_num_1;
              ld.task_1_left = data.receive_nums.left_num_1;
              ld.task_2_total = data.receive_nums.total_num_2;
              ld.task_2_left = data.receive_nums.left_num_2;
            }
            global_data_1.global_data.lottery_data = ld;
            utils_1.utils.send("RefreshLotteryData");
          },
          fail: errMsg => {
            console.log(errMsg);
          },
          complete: () => {
            utils_1.utils.hide_loading();
            done && done();
          }
        });
      }
      lobby_framework.fetch_lottery_data = fetch_lottery_data;
      function share_to_lottery() {
        platform_1.platform.inst.share({
          title: global_data_1.global_data._str_lottery_share_img_text,
          imageUrl: global_data_1.global_data.fill_url(global_data_1.global_data._str_lottery_share_img_url),
          query: `inviteBy=${global_data_1.global_data.get_the_user_data()._int_user_id}&lottery=${new Date().getTime()}`,
          fail: () => {
            utils_1.utils.show_hint("\u5206\u4eab\u5931\u8d25");
          }
        });
      }
      lobby_framework.share_to_lottery = share_to_lottery;
      function has_subscribe() {
        return platform_1.platform.inst.hasSubscribeSync();
      }
      lobby_framework.has_subscribe = has_subscribe;
      function push_match_subscribe(starttime, name, descr) {
        let url = "https://webv2.73sy.com/api/user/wechat_session_key?userid={USERID}&session={SESSION}&appid={KINDID}&areaid={AREAID}&channel={CHANNELID}&version={VERSION}&weapp={WEBAPP}&tmplid={TMPLID}&&data={DATA}&&time={TIME}&&title={TITLE}&page={PAGE}";
        url = global_data_1.global_data.fill_url(url);
        url = utils_1.utils.string_replace_any(url, "{WEBAPP}", global_data_1.global_data.appid);
        url = utils_1.utils.string_replace_any(url, "{TMPLID}", "H6z6ji5Jp1uzEAVQ8m7_nG9l3CAZO-5EuoZ2omiJmQQ");
        url = utils_1.utils.string_replace_any(url, "{TIME}", starttime);
        url = utils_1.utils.string_replace_any(url, "{TITLE}", encodeURIComponent("\u8001\u5bb6\u6e38\u65b0\u5e74\u8d5b"));
        url = utils_1.utils.string_replace_any(url, "{PAGE}", encodeURIComponent("/"));
        let data = {};
        let match_name = {};
        match_name["value"] = name;
        let matchAward = {};
        matchAward["value"] = "\u6309\u6392\u540d\u53d1\u653e";
        let matchTime = {};
        matchTime["value"] = `${new Date().getFullYear()}\u5e74${new Date().getMonth() + 1}\u6708${new Date().getDay()}\u65e5 18:00`;
        let matchRule = {};
        matchRule["value"] = descr;
        data["thing1"] = match_name;
        data["thing2"] = matchAward;
        data["date3"] = matchTime;
        data["thing4"] = matchRule;
        url = utils_1.utils.string_replace_any(url, "{DATA}", encodeURIComponent(JSON.stringify(data)));
        utils_1.utils.send_http_request({
          url: url,
          success: (data, msg) => {
            console.log(msg);
          },
          fail: errmsg => {
            utils_1.utils.show_hint(errmsg);
          }
        });
      }
      lobby_framework.push_match_subscribe = push_match_subscribe;
      function check_subscribe() {
        platform_1.platform.inst.checkSubscribe({
          id: global_data_1.global_data.subscribe_lottery_id,
          success: () => {
            utils_1.utils.check_local_same_day("lastSubscribeReward") ? utils_1.utils.send("RefreshSubscribeState", "AlreadyGot") : utils_1.utils.send("RefreshSubscribeState", "CanGet");
          },
          fail: () => {
            utils_1.utils.check_local_same_day("lastSubscribeReward") ? utils_1.utils.send("RefreshSubscribeState", "AlreadyGot") : utils_1.utils.send("RefreshSubscribeState", "CanRequest");
          }
        });
      }
      lobby_framework.check_subscribe = check_subscribe;
      function request_subscribe() {
        platform_1.platform.inst.requestSubscribe({
          id: global_data_1.global_data.subscribe_lottery_id,
          success: () => {
            utils_1.utils.check_local_same_day("lastSubscribeReward") ? utils_1.utils.send("RefreshSubscribeState", "AlreadyGot") : utils_1.utils.send("RefreshSubscribeState", "CanGet");
          },
          fail: () => {
            utils_1.utils.check_local_same_day("lastSubscribeReward") ? utils_1.utils.send("RefreshSubscribeState", "AlreadyGot") : utils_1.utils.send("RefreshSubscribeState", "CanRequest");
          }
        });
      }
      lobby_framework.request_subscribe = request_subscribe;
      function request_subscribe_reward() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_LOTTERY_SUBSCRIBE);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
        utils_1.utils.send_http_request({
          url: url,
          hint: true,
          success: (data, message) => {
            console.log(data);
            utils_1.utils.send("ShowUI", "GetLotteryCode", data);
            utils_1.utils.set_local_with_now("lastSubscribeReward");
            utils_1.utils.send("RefreshSubscribeState", "AlreadyGot");
          },
          fail: errMsg => {
            console.log(errMsg);
            if ("\u62bd\u5956\u7801\u5df2\u751f\u6210(0)" == errMsg) {
              utils_1.utils.set_local_with_now("lastSubscribeReward");
              utils_1.utils.send("RefreshSubscribeState", "AlreadyGot");
            }
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.request_subscribe_reward = request_subscribe_reward;
      function request_share_lottery_reward(inviteBy) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_LOTTERY_SHARE);
        url = utils_1.utils.string_replace_any(url, "{INVITEBY}", inviteBy);
        utils_1.utils.show_loading("\u6b63\u5728\u52a0\u8f7d");
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: (data, message) => {
            console.log(data);
            data && utils_1.utils.send("ShowUI", "GetLotteryCode", data);
          },
          fail: errMsg => {
            console.log(errMsg);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      lobby_framework.request_share_lottery_reward = request_share_lottery_reward;
      function fetch_new_task_data() {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_TASK_DATA);
        url = global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME && room_controller_1.room_controller.get_room_data() ? utils_1.utils.string_replace_any(url, "{GAMEID}", room_controller_1.room_controller.get_room_data()._int_game_id) : utils_1.utils.string_replace_any(url, "{GAMEID}", 0);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: (data, message, res) => {
            global_data_1.global_data.new_task_data = new lobby_types_1.lobby_types.NewTaskData();
            console.log("fetch_new_task_data", res);
            parse_new_task_data(res);
            utils_1.utils.send("RefreshNewTaskData");
            utils_1.utils.send("RefreshTaskButtonRedPoint");
          }
        });
      }
      lobby_framework.fetch_new_task_data = fetch_new_task_data;
      function parse_new_task_data(data) {
        global_data_1.global_data.new_task_data.forever_tasks = data.forever_tasks.filter(t => global_data_1.global_data.validate_new_task_item(t));
        global_data_1.global_data.new_task_data.day_tasks = data.resdata.filter(t => global_data_1.global_data.validate_new_task_item(t));
        global_data_1.global_data.new_task_data.week_tasks = data.week_tasks.filter(t => global_data_1.global_data.validate_new_task_item(t));
      }
      lobby_framework.parse_new_task_data = parse_new_task_data;
      function get_new_task_reward(task_item_data) {
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_TASK_REWARD);
        url = utils_1.utils.string_replace_any(url, "{TASKID}", task_item_data.task_id);
        url = utils_1.utils.string_replace_any(url, "{MODULEID}", task_item_data.task_model);
        utils_1.utils.send_http_request({
          url: url,
          hint: false,
          success: function(data) {
            utils_1.utils.show_get_reward(data.fundchange);
            let look_for_task = x => x.task_id == task_item_data.task_id && x.task_model == task_item_data.task_model;
            global_data_1.global_data.new_task_data.day_tasks.filter(look_for_task).length > 0 && (global_data_1.global_data.new_task_data.day_tasks.filter(look_for_task)[0].status = data.status);
            global_data_1.global_data.new_task_data.forever_tasks.filter(look_for_task).length > 0 && (global_data_1.global_data.new_task_data.forever_tasks.filter(look_for_task)[0].status = data.status);
            global_data_1.global_data.new_task_data.week_tasks.filter(look_for_task).length > 0 && (global_data_1.global_data.new_task_data.week_tasks.filter(look_for_task)[0].status = data.status);
            for (let award of data.fundchange) {
              let id = award.fund_id;
              let cnt = award.fund_count;
              id < 1e3 ? 1 == id && (global_data_1.global_data.get_the_user_data()._long_gold += cnt) : global_data_1.global_data.set_prop_count_by_id(id, global_data_1.global_data.get_prop_count_by_id(id) + cnt);
            }
            utils_1.utils.send("RefreshNewTaskData");
            utils_1.utils.send("RefreshTaskButtonRedPoint");
            global_data_1.global_data.request_user_data();
          },
          fail: function(data) {
            utils_1.utils.show_hint("\u9886\u53d6\u5956\u52b1\u5931\u8d25");
          }
        });
      }
      lobby_framework.get_new_task_reward = get_new_task_reward;
    })(lobby_framework = exports.lobby_framework || (exports.lobby_framework = {}));
    cc._RF.pop();
  }, {
    "../common/utils": "utils",
    "../thirdparty/typestate": "typestate",
    "./custom_lobby": "custom_lobby",
    "./game/game_auxi": "game_auxi",
    "./game/game_controller": "game_controller",
    "./game/room_controller": "room_controller",
    "./global_data": "global_data",
    "./global_define": "global_define",
    "./lobby_types": "lobby_types",
    "./platform/platform": "platform",
    "./sound_manager": "sound_manager",
    "./state/game_state": "game_state",
    "./state/init_state": "init_state",
    "./state/lobby_state": "lobby_state",
    "./state/logon_state": "logon_state"
  } ],
  lobby_state: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "afabcFtmaRPdq6pggIx27S8", "lobby_state");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lobby_state = void 0;
    const lobby_framework_1 = require("../lobby_framework");
    const state_1 = require("./state");
    const global_data_1 = require("../global_data");
    const task_1 = require("../../common/task");
    const platform_1 = require("../platform/platform");
    const utils_1 = require("../../common/utils");
    const global_define_1 = require("../global_define");
    const lobby_types_1 = require("../lobby_types");
    const game_auxi_1 = require("../game/game_auxi");
    const push_controller_1 = require("../game/push_controller");
    const protocols_1 = require("../protocols");
    const room_controller_1 = require("../game/room_controller");
    const custom_lobby_1 = require("../custom_lobby");
    class lobby_state extends state_1.base_state {
      onEnter(from, event) {
        console.log("lobby_state entered", event);
        let scene_name = global_data_1.global_data.custom_lobby ? global_data_1.global_data.custom_lobby_scene_name : "lobby";
        console.log("scene_name : ", scene_name);
        global_data_1.global_data.have_module_push() && from == lobby_framework_1.LobbyFrameworkState.Logon && push_controller_1.push_controller.start_server();
        if (event && false == event.legal) {
          setTimeout(() => {
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Logon);
          }, 1);
          return;
        }
        if (cc.director.getScene().name == scene_name) {
          if (event && event.room) setTimeout(() => {
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Game, {
              room: event.room
            });
          }, 1); else if (event && (event.reason && 1012 == event.reason && game_auxi_1.game_auxi._private_room_type == game_auxi_1.game_auxi.PRI_ROOM_TYPE_SELECT || 1009 == event.reason)) {
            setTimeout(() => {
              console.log("\u8fdb\u5165\u623f\u95f4\u5931\u8d25,\u9000\u51fa\u4e86...");
              lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Logon);
            }, 1);
            return;
          }
        } else {
          let enter_lobby_task = new task_1.task("enter_lobby_task");
          enter_lobby_task.add_sub_task(new task_1.task("load_scene").do((done, fail) => {
            console.log("cc.director.getScene().name : ", cc.director.getScene().name);
            console.log("scene_name : ", scene_name);
            utils_1.utils.show_loading("", true, true);
            cc.director.getScene().name == scene_name ? done() : cc.director.loadScene(scene_name, () => {
              if (from == lobby_framework_1.LobbyFrameworkState.Logon) setTimeout(() => {
                push_controller_1.push_controller.send_location();
                push_controller_1.push_controller.send_action(protocols_1.protocols.PUSH_ACTION_LOGON, 0, 0, 0, 0);
              }, 1e3); else if (from == lobby_framework_1.LobbyFrameworkState.Game) {
                push_controller_1.push_controller.send_location();
                push_controller_1.push_controller.send_action(protocols_1.protocols.PUSH_ACTION_LEAVE_ROOM, room_controller_1.room_controller._last_game_id, room_controller_1.room_controller._last_room_id, 0, 0);
              }
              console.log("load finished customLobby");
              done();
            });
          }));
          enter_lobby_task.add_sub_task(new task_1.task("init_lobby").do((done, fail) => {
            this.init_lobby(done, fail);
          }));
          enter_lobby_task.add_sub_task(new task_1.task("init_platform").do((done, fail) => {
            this.init_platform(done, fail);
          }));
          enter_lobby_task.add_sub_task(new task_1.task("trigger_gc").do((done, fail) => {
            this.trigger_gc(done, fail);
          }));
          event && event.hint && enter_lobby_task.add_sub_task(new task_1.task("show_hint").do((done, fail) => {
            utils_1.utils.show_hint(event.hint);
            setTimeout(() => {
              done();
            }, 1);
          }));
          if (global_data_1.global_data.custom_lobby) custom_lobby_1.custom_lobby.set_lobby_task(enter_lobby_task, from == lobby_framework_1.LobbyFrameworkState.Logon, event); else {
            enter_lobby_task.add_sub_task(new task_1.task("request_user_data").do((done, fail) => {
              global_data_1.global_data.request_user_data(done, done);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("launch_options").do((done, fail) => {
              this.launch_options(done, fail, from == lobby_framework_1.LobbyFrameworkState.Logon);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("fetch_notice").do((done, fail) => {
              this.fetch_notice(done, fail);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("fetch_mail").do((done, fail) => {
              this.fetch_mail(done, fail);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("auto_popup").do((done, fail) => {
              this.auto_popup(done, fail);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("fetch_task_data").do((done, fail) => {
              this.fetch_task_data(done, fail);
            }));
            enter_lobby_task.add_sub_task(new task_1.task("refresh_taskboard_data").do((done, fail) => {
              this.refresh_taskboard_data(done, fail);
            }));
          }
          enter_lobby_task.run();
        }
      }
      onExit(to, event) {}
      init_lobby(done, fail) {
        game_auxi_1.game_auxi.init();
        done();
      }
      init_platform(done, fail) {
        platform_1.platform.inst.initLobby({
          complete: () => {
            done();
          }
        });
      }
      launch_options(done, fail, fromLogon) {
        let res = platform_1.platform.inst.getLaunchOptionsSync();
        if (fromLogon) {
          if (global_data_1.global_data.force_launch_options) {
            res = global_data_1.global_data.force_launch_options;
            global_data_1.global_data.force_launch_options = null;
          }
          lobby_framework_1.lobby_framework.check_launch_options(res);
          lobby_framework_1.lobby_framework.do_launch_options(true);
        }
        done();
      }
      trigger_gc(done, fail) {
        platform_1.platform.inst.triggerGC({});
        done();
      }
      fetch_notice(done, fail) {
        global_data_1.global_data.notice_data = [];
        utils_1.utils.send_http_request({
          url: global_data_1.global_data.make_url(global_define_1.CONST.HTTP_GET_NOTICE),
          hint: true,
          method: "GET",
          success: (data, message) => {
            let noticeReadStr = utils_1.utils.getLocalStorage("noticeRead");
            let noticeRead = noticeReadStr ? utils_1.utils.from_json(noticeReadStr) : [];
            let noticeItems = data;
            for (let i = 0; i < noticeItems.length; ++i) if (0 == global_data_1.global_data.notice_data.filter(x => x.id == noticeItems[i].id).length) {
              let data = new lobby_types_1.lobby_types.NoticeItemData();
              data.id = noticeItems[i].id || 0;
              data.title = noticeItems[i].title || "";
              data.content = noticeItems[i].content || "";
              data.date = noticeItems[i].create_time || "";
              data.btn_action = noticeItems[i].btn_action || "";
              data.btn_name = noticeItems[i].btn_name || "";
              data.read = noticeRead && noticeRead.some(x => x == data.id);
              data.auto = noticeItems[i].auto && 1 == noticeItems[i].auto || false;
              global_data_1.global_data.notice_data.push(data);
            }
          },
          fail: errMsg => {
            utils_1.utils.show_hint("\u83b7\u53d6\u516c\u544a\u6570\u636e\u5931\u8d25:" + errMsg);
          },
          complete: () => {
            utils_1.utils.send("NoticeDataRefresh");
            console.log("\u83b7\u53d6\u516c\u544a\u6570\u636e\u7ed3\u675f");
            done();
          }
        });
      }
      fetch_mail(done, fail) {
        lobby_framework_1.lobby_framework.fetch_mail_data(done);
      }
      auto_popup(done, fail) {
        lobby_framework_1.lobby_framework.pop_next_if_have();
        done();
      }
      fetch_task_data(done, fail) {
        done();
      }
      refresh_taskboard_data(done, fail) {
        lobby_framework_1.lobby_framework.refresh_taskboard_data();
        done();
      }
    }
    exports.lobby_state = lobby_state;
    cc._RF.pop();
  }, {
    "../../common/task": "task",
    "../../common/utils": "utils",
    "../custom_lobby": "custom_lobby",
    "../game/game_auxi": "game_auxi",
    "../game/push_controller": "push_controller",
    "../game/room_controller": "room_controller",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../lobby_framework": "lobby_framework",
    "../lobby_types": "lobby_types",
    "../platform/platform": "platform",
    "../protocols": "protocols",
    "./state": "state"
  } ],
  lobby_types: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1d208ndy01OUJRmN1nyJlV7", "lobby_types");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lobby_types = void 0;
    var lobby_types;
    (function(lobby_types) {
      let LogonType;
      (function(LogonType) {
        LogonType["Register"] = "Register";
        LogonType["Passport"] = "Passport";
        LogonType["Wechat"] = "Wechat";
        LogonType["Channel"] = "Channel";
      })(LogonType = lobby_types.LogonType || (lobby_types.LogonType = {}));
      let RewardWebType;
      (function(RewardWebType) {
        RewardWebType[RewardWebType["Invite"] = 1] = "Invite";
        RewardWebType[RewardWebType["AddFavorite"] = 2] = "AddFavorite";
        RewardWebType[RewardWebType["Video"] = 3] = "Video";
        RewardWebType[RewardWebType["Share"] = 4] = "Share";
        RewardWebType[RewardWebType["BindWechat"] = 5] = "BindWechat";
      })(RewardWebType = lobby_types.RewardWebType || (lobby_types.RewardWebType = {}));
      let ShareState;
      (function(ShareState) {
        ShareState[ShareState["Available"] = 0] = "Available";
        ShareState[ShareState["Shared"] = 1] = "Shared";
        ShareState[ShareState["Rewarded"] = 2] = "Rewarded";
      })(ShareState = lobby_types.ShareState || (lobby_types.ShareState = {}));
      class ShareData {
        constructor() {
          this.state = ShareState.Available;
          this.text = "";
        }
      }
      lobby_types.ShareData = ShareData;
      class RewardWebData {
        constructor() {
          this.reward_type = -1;
          this.reward_name = "";
          this.reward = [];
          this.num_times = -1;
          this.reward_num = -1;
          this.last_times = -1;
          this.status = -1;
          this.mask = -1;
          this.unreceive = -1;
        }
      }
      lobby_types.RewardWebData = RewardWebData;
      class TaskBoardData {
        constructor() {
          this.items = [];
        }
      }
      lobby_types.TaskBoardData = TaskBoardData;
      class TaskBoardItemData {
        constructor() {
          this.type = 0;
          this.titleImage = "";
          this.image = "";
          this.jumpOther = false;
          this.webData = null;
        }
      }
      lobby_types.TaskBoardItemData = TaskBoardItemData;
      class TaskItemData {
        constructor() {
          this.complete_count = 0;
          this.complete_kindid = 0;
          this.curr_count = 0;
          this.reward_logo = 0;
          this.reward_name = "";
          this.sort = 0;
          this.status = 0;
          this.task_desc = "";
          this.task_id = 0;
          this.task_logo = 0;
          this.task_logo_url = "";
          this.task_name = "";
          this.task_type = "";
          this.task_url = "";
          this.units = "";
        }
      }
      lobby_types.TaskItemData = TaskItemData;
      class InviteRewardWebData {
        constructor() {
          this.accounts = "";
          this.userid = 0;
          this.faceid = 0;
          this.gender = 0;
          this.fund_id = 0;
          this.fund_count = 0;
          this.status = -1;
          this.type = 0;
        }
      }
      lobby_types.InviteRewardWebData = InviteRewardWebData;
      class InviteRewardData {
        constructor() {
          this.secret_got = false;
          this.items = [];
        }
      }
      lobby_types.InviteRewardData = InviteRewardData;
      let RoomButtonIconType;
      (function(RoomButtonIconType) {
        RoomButtonIconType[RoomButtonIconType["Gold"] = 0] = "Gold";
        RoomButtonIconType[RoomButtonIconType["Bean"] = 1] = "Bean";
      })(RoomButtonIconType = lobby_types.RoomButtonIconType || (lobby_types.RoomButtonIconType = {}));
      let RoomButtonBgType;
      (function(RoomButtonBgType) {
        RoomButtonBgType[RoomButtonBgType["RedPackage"] = 0] = "RedPackage";
        RoomButtonBgType[RoomButtonBgType["Beginner"] = 1] = "Beginner";
        RoomButtonBgType[RoomButtonBgType["Medium"] = 2] = "Medium";
        RoomButtonBgType[RoomButtonBgType["Expert"] = 3] = "Expert";
        RoomButtonBgType[RoomButtonBgType["Master"] = 4] = "Master";
        RoomButtonBgType[RoomButtonBgType["Friend"] = 5] = "Friend";
      })(RoomButtonBgType = lobby_types.RoomButtonBgType || (lobby_types.RoomButtonBgType = {}));
      class LogonParams {
        constructor() {
          this.user_decide = false;
          this.auto_logon = false;
          this.type = LogonType.Passport;
          this.account = "";
          this.password = "";
        }
      }
      lobby_types.LogonParams = LogonParams;
      class LaunchGameParams {
        constructor() {
          this.isRedPackageGame = false;
          this.gameId = null;
          this.kindId = null;
          this.limit_min = null;
          this.siteId = null;
        }
      }
      lobby_types.LaunchGameParams = LaunchGameParams;
      class NoticeItemData {
        constructor() {
          this.id = 0;
          this.title = "";
          this.date = "";
          this.content = "";
          this.read = false;
          this.auto = false;
          this.btn_action = "";
          this.btn_name = "";
        }
      }
      lobby_types.NoticeItemData = NoticeItemData;
      class MailItemData {
        constructor() {
          this.id = 0;
          this.title = "";
          this.date = "";
          this.content = "";
          this.read = false;
          this.btn_action = "";
          this.btn_name = "";
          this.items = [];
          this.received = false;
        }
      }
      lobby_types.MailItemData = MailItemData;
      class LotteryPanelData {
        constructor() {
          this.prop_id = 0;
          this.prop_name = "";
          this.prop_count = 0;
          this.prop_id_yesterday = 0;
          this.prop_name_yesterday = "";
          this.prop_count_yesterday = 0;
          this.lotterys_today = [];
          this.lotterys_yesterday = [];
          this.lotterys_win = [];
          this.awards_yesterday = [];
          this.task_1_total = 0;
          this.task_1_left = 0;
          this.task_2_total = 0;
          this.task_2_left = 0;
        }
      }
      lobby_types.LotteryPanelData = LotteryPanelData;
      class NewTaskData {
        constructor() {
          this.forever_tasks = [];
          this.day_tasks = [];
          this.week_tasks = [];
        }
      }
      lobby_types.NewTaskData = NewTaskData;
      class NewTaskItemData {
        constructor() {
          this.gameid = 0;
          this.complete_count = 0;
          this.complete_kindid = 0;
          this.curr_count = 0;
          this.reward_name = "";
          this.status = 0;
          this.task_desc = "";
          this.task_id = 0;
          this.task_logo = 0;
          this.task_logo_url = "";
          this.task_name = "";
          this.task_url = "";
          this.btn_name = "";
          this.task_model = 0;
          this.authmask = 0;
          this.paymask = 0;
          this.modulemask1 = 0;
          this.modulemask2 = 0;
        }
      }
      lobby_types.NewTaskItemData = NewTaskItemData;
    })(lobby_types = exports.lobby_types || (exports.lobby_types = {}));
    cc._RF.pop();
  }, {} ],
  logon_state: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "30575Qcu5NJ7oP3nAGZFAuz", "logon_state");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.logon_state = void 0;
    const lobby_framework_1 = require("../lobby_framework");
    const state_1 = require("./state");
    const global_data_1 = require("../global_data");
    const utils_1 = require("../../common/utils");
    const task_1 = require("../../common/task");
    const websocket_1 = require("../../common/websocket");
    const protocols_1 = require("../protocols");
    const lobby_types_1 = require("../lobby_types");
    const platform_1 = require("../platform/platform");
    const push_controller_1 = require("../game/push_controller");
    class logon_state extends state_1.base_state {
      constructor() {
        super(...arguments);
        this.pre_logon_task = null;
        this.logon_task = null;
        this.fetch_auth_socket = null;
        this.available_logon_types = [];
        this._logonSocket = null;
        this.listen_event_list = [];
        this.file_md5 = null;
        this.file_update_buffer = null;
      }
      onEnter(from, event) {
        console.log("logon_state enter!", event);
        if (global_data_1.global_data.force_startup_scene) {
          cc.director.loadScene(global_data_1.global_data.force_startup_scene);
          return;
        }
        global_data_1.global_data.have_module_push() && push_controller_1.push_controller.stop_server(true);
        this.CreateSocket();
        utils_1.utils.on("DecideLogonType", this, this.onEventDecideLogonType);
        this.listen_event_list = [];
        this.pre_logon_task = new task_1.strict_task("pre_logon main");
        this.pre_logon_task.add_sub_task(new task_1.task("load_scene").do(done => {
          this.load_scene(done);
        }));
        this.pre_logon_task.add_sub_task(new task_1.task("fetch_auth").do((done, fail) => {
          this.fetch_auth(done, fail);
        }));
        this.pre_logon_task.add_sub_task(new task_1.task("init_logon").do(done => {
          this.init_logon(done);
        }));
        this.pre_logon_task.run();
        this.logon_task = new task_1.strict_task("logon_task");
        this.logon_task.add_sub_task(new task_1.task("connect").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .1, "\u6b63\u5728\u8fde\u63a5");
          this.connect(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("send_logon").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .2, "\u6b63\u5728\u767b\u9646");
          this.send_logon(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("send_module_mask").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .3, "\u6b63\u5728\u8bf7\u6c42\u534f\u8bae");
          this.send_module_mask(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("send_pay_mask").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .4, "\u6b63\u5728\u8bf7\u6c42\u534f\u8bae");
          this.send_pay_mask(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("read_file_md5").do(done => {
          utils_1.utils.send("SetLoadingProgress", .5, "\u6b63\u5728\u66f4\u65b0\u6587\u4ef6");
          if (utils_1.utils.is_wechat()) {
            console.log("nzp ---\x3e is_wechat");
            this.read_file_md5(done);
          } else if (utils_1.utils.is_window()) {
            console.log("nzp ---\x3e is_window");
            done();
          }
        }));
        this.logon_task.add_sub_task(new task_1.task("send_file_update").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .6, "\u6b63\u5728\u66f4\u65b0\u6587\u4ef6");
          this.send_file_update(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("delete_old_file").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .6, "\u6b63\u5728\u66f4\u65b0\u6587\u4ef6");
          utils_1.utils.is_wechat() ? this.delete_old_file(done, fail) : utils_1.utils.is_window() && done();
        }));
        this.logon_task.add_sub_task(new task_1.task("write_new_file").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .6, "\u6b63\u5728\u66f4\u65b0\u6587\u4ef6");
          utils_1.utils.is_wechat() ? this.write_new_file(done, fail) : utils_1.utils.is_window() && this.write_new_file_window(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("read_json_config").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .7, "\u6b63\u5728\u8bfb\u53d6\u914d\u7f6e");
          utils_1.utils.is_wechat() ? this.read_json_config(done, fail) : utils_1.utils.is_window() && done();
        }));
        this.logon_task.add_sub_task(new task_1.task("apply_json_config").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .8, "\u6b63\u5728\u5e94\u7528\u914d\u7f6e");
          this.apply_json_config(done, fail);
        }));
        this.logon_task.add_sub_task(new task_1.task("finish_logon").do((done, fail) => {
          utils_1.utils.send("SetLoadingProgress", .9, "\u6b63\u5728\u8fdb\u5165\u5927\u5385");
          this.finish_logon(done, fail);
        }));
        this.logon_task.on({
          success: () => {
            utils_1.utils.send("SetLoadingProgress", 1, "\u6b63\u5728\u8fdb\u5165\u5927\u5385");
            lobby_framework_1.lobby_framework.fsm.go(lobby_framework_1.LobbyFrameworkState.Lobby, {
              reason: 0,
              legal: true
            });
          },
          fail: () => {
            console.log("logon_task fail");
          }
        });
      }
      onExit(to, event) {
        console.log("logon_state exit!");
        utils_1.utils.off("DecideLogonType", this, this.onEventDecideLogonType);
        this.listen_event_list.forEach(event => {
          utils_1.utils.off(event, null);
        });
        this.DestroySocket();
      }
      canExit(to) {
        let this_state = lobby_framework_1.lobby_framework.statesMap.get(lobby_framework_1.LobbyFrameworkState.Logon);
        if (to == lobby_framework_1.LobbyFrameworkState.Lobby) return !(!this_state.pre_logon_task.finished || !this_state.logon_task.finished);
        return true;
      }
      onEventDecideLogonType(param) {
        console.log("DecideLogonType", param);
        global_data_1.global_data.logon_param = param;
        this.logon_task.run();
      }
      load_scene(done) {
        this.listen_event("StartMainLoadDone", done);
        cc.director.loadScene("logon", () => {});
      }
      fetch_auth(done, fail) {
        utils_1.utils.send("SetLoadingProgress", .05, "\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90");
        let that = this;
        this.fetch_auth_socket = new websocket_1.websocket();
        this.fetch_auth_socket.onSocketOpen = () => {
          let the_data = new protocols_1.protocols.CMD_LOGON_MASK();
          let base = global_data_1.global_data.get_lobby_base_info2();
          the_data.base = base;
          the_data.code |= protocols_1.protocols.MASK_VERSION_FULL;
          let ab = the_data.toBuffer();
          console.log("\u53d1\u9001\u767b\u9646\u65b9\u5f0f\u8bf7\u6c42\u534f\u8bae: ", utils_1.utils.to_json(the_data));
          that.fetch_auth_socket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_AUTH_MASK, ab);
        };
        this.fetch_auth_socket.onSocketMessage = (mainCmdID, subCmdID, data) => {
          if (mainCmdID == protocols_1.protocols.MDM_LOGON) if (subCmdID == protocols_1.protocols.SUB_LOGON_AUTH_MASK_RET) {
            let theData = new protocols_1.protocols.CMD_LOGON_MASK_RET();
            theData.fromBuffer(data);
            console.log("\u767b\u9646\u65b9\u5f0f\u8fd4\u56de:", theData.mask);
            global_data_1.global_data._uint_auth_mask = theData.mask;
            that.fetch_auth_socket.close();
            done();
          } else if (subCmdID == protocols_1.protocols.SUB_LOGON_ERROR) {
            let logonData = new protocols_1.protocols.CMD_LOGON_ERROR();
            logonData.fromBuffer(data);
            that.fetch_auth_socket.close();
            console.log(utils_1.utils.to_json(logonData));
            utils_1.utils.send("LogonErrorMsg", "\u83b7\u53d6\u767b\u9646\u4fe1\u606f\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5...");
            fail();
          }
        };
        this.fetch_auth_socket.onSocketError = event => {
          console.log("fetch_auth_socket.onSocketError", event);
          that.fetch_auth_socket.close();
          utils_1.utils.send("LogonErrorMsg", "\u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5...");
          fail();
        };
        this.fetch_auth_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9002);
      }
      init_logon(done) {
        this.available_logon_types = [];
        global_data_1.global_data.have_auth_register() && this.available_logon_types.push(lobby_types_1.lobby_types.LogonType.Register);
        global_data_1.global_data.have_auth_wechat() && this.available_logon_types.push(lobby_types_1.lobby_types.LogonType.Wechat);
        this.available_logon_types.push(lobby_types_1.lobby_types.LogonType.Channel);
        this.available_logon_types.push(lobby_types_1.lobby_types.LogonType.Passport);
        let visible_logon_types = [];
        visible_logon_types = utils_1.utils.is_wechat() ? this.available_logon_types.filter(x => x == lobby_types_1.lobby_types.LogonType.Wechat || x == lobby_types_1.lobby_types.LogonType.Register) : this.available_logon_types.filter(x => x == lobby_types_1.lobby_types.LogonType.Channel);
        if (!global_data_1.global_data.logon_param) {
          global_data_1.global_data.logon_param = new lobby_types_1.lobby_types.LogonParams();
          global_data_1.global_data.logon_param.user_decide = false;
          if (utils_1.utils.is_wechat()) {
            global_data_1.global_data.logon_param.auto_logon = false;
            global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Passport;
          } else if (utils_1.utils.is_huawei()) {
            global_data_1.global_data.logon_param.auto_logon = false;
            global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Channel;
          } else {
            global_data_1.global_data.logon_param.auto_logon = true;
            global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Channel;
          }
          if (!global_data_1.global_data.is_online) {
            global_data_1.global_data.logon_param.user_decide = true;
            global_data_1.global_data.logon_param.type = lobby_types_1.lobby_types.LogonType.Passport;
            global_data_1.global_data.logon_param.account = global_data_1.global_data.default_passport.account;
            global_data_1.global_data.logon_param.password = global_data_1.global_data.default_passport.password;
          }
        }
        false;
        if (global_data_1.global_data.logon_param.user_decide) {
          console.log("sending DecideLogonType");
          utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param);
        } else if (global_data_1.global_data.logon_param.auto_logon) global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Channel ? platform_1.platform.inst.login({
          success: () => {
            utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param);
          },
          fail: err => {
            if (err.errMsg) {
              console.warn(err.errMsg);
              utils_1.utils.send("LogonErrorMsg", err.errMsg);
            } else {
              utils_1.utils.send("SetLoadingProgress", 0, "");
              utils_1.utils.send("ShowAuthButtons", visible_logon_types);
            }
          }
        }) : utils_1.utils.send("DecideLogonType", global_data_1.global_data.logon_param); else {
          utils_1.utils.send("SetLoadingProgress", 0, "");
          utils_1.utils.send("ShowAuthButtons", visible_logon_types);
        }
        done();
      }
      read_file_md5(done) {
        this.file_md5 = new Map();
        let that = this;
        let read_files_task = new task_1.parallel_task("read_files_task");
        let read_single_file_md5 = (index, done) => {
          let path = platform_1.platform.inst.getUserPathSync() + "/" + String(index) + ".zip";
          platform_1.platform.inst.getFileMD5({
            filePath: path,
            success: res => {
              console.log(`file ${index} md5: ${res.md5Data}`);
              that.file_md5.set(index, res.md5Data);
              done();
            }
          });
        };
        read_files_task.add_sub_task(new task_1.task("read_0_zip").do(done => {
          read_single_file_md5(0, done);
        }));
        read_files_task.add_sub_task(new task_1.task("read_1_zip").do(done => {
          read_single_file_md5(1, done);
        }));
        read_files_task.add_sub_task(new task_1.task("read_2_zip").do(done => {
          read_single_file_md5(2, done);
        }));
        read_files_task.on({
          success: () => {
            console.log("read_file_md5 success.");
            done();
          }
        });
        read_files_task.run();
      }
      listen_event(event_name, done) {
        let func = () => {
          utils_1.utils.off(event_name, null, func);
          done();
        };
        utils_1.utils.on(event_name, null, func);
        this.listen_event_list.push(event_name);
      }
      connect(done, fail) {
        this._logonSocket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.logon_server, 9002);
        this.listen_event("LogonSocketConnected", done);
        this.listen_event("LogonSocketError", fail);
      }
      send_logon(done, fail) {
        global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Register ? this.logonByRegister() : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Passport ? this.send_logon_account(global_data_1.global_data.logon_param.account, global_data_1.global_data.logon_param.password) : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Wechat ? this.send_logon_wechat() : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Channel && this.send_logon_channel();
        this.listen_event("LogonSocketLogonSuccess", done);
        this.listen_event("LogonSocketLogonFail", fail);
        this.listen_event("LogonSocketError", fail);
      }
      CreateSocket() {
        this._logonSocket = new websocket_1.websocket();
        this._logonSocket.onSocketOpen = () => {
          this.onLogonSocketOpen();
        };
        this._logonSocket.onSocketMessage = (mainCmdID, subCmdID, data) => {
          this.onLogonSocketMessage(mainCmdID, subCmdID, data);
        };
        this._logonSocket.onSocketClose = event => {
          this.onLogonSocketClose(event);
        };
        this._logonSocket.onSocketError = event => {
          this.onLogonSocketError(event);
          console.log("logonSocket.onSocketError", event);
        };
      }
      DestroySocket() {
        this._logonSocket && this._logonSocket.close();
        delete this._logonSocket;
        this._logonSocket = null;
      }
      onLogonSocketOpen() {
        utils_1.utils.send("LogonSocketConnected");
      }
      sendLogon() {
        global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Register ? this.logonByRegister() : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Passport ? this.send_logon_account(global_data_1.global_data.logon_param.account, global_data_1.global_data.logon_param.password) : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Wechat ? this.send_logon_wechat() : global_data_1.global_data.logon_param.type == lobby_types_1.lobby_types.LogonType.Channel && this.send_logon_channel();
      }
      onLogonSocketMessage(mainCmdID, subCmdID, data) {
        console.log("onLogonSocketMessage", mainCmdID, subCmdID);
        if (mainCmdID == protocols_1.protocols.MDM_LOGON) if (subCmdID == protocols_1.protocols.SUB_LOGON_SUCCESS) {
          console.log("LOGON SUCCESS");
          let logonData = new protocols_1.protocols.CMD_LOGON_SUCCESS();
          logonData.fromBuffer(data);
          console.log(logonData);
          global_data_1.global_data.get_the_user_data()._int_face_id = logonData.face;
          global_data_1.global_data.get_the_user_data()._int_sex = logonData.sex;
          global_data_1.global_data.get_the_user_data()._int_user_id = logonData.userid;
          global_data_1.global_data.get_the_user_data()._int_user_right = logonData.userright;
          global_data_1.global_data.get_the_user_data()._int_logon_count = logonData.logoncount;
          global_data_1.global_data.get_the_user_data()._long_ingot = logonData.ingot;
          global_data_1.global_data.get_the_user_data()._long_gold = logonData.gold;
          global_data_1.global_data.get_the_user_data()._int_pay_count = logonData.pay;
          global_data_1.global_data.get_the_user_data()._str_account = logonData.account;
          global_data_1.global_data.get_the_user_data()._str_nick_name = utils_1.utils.gbk_2_utf8(logonData.nickname);
          global_data_1.global_data.get_the_user_data()._str_password_md5 = utils_1.utils.md5(logonData.password);
          global_data_1.global_data.get_the_user_data()._str_password = logonData.password;
          global_data_1.global_data.get_the_user_data()._str_phone = logonData.phone;
          global_data_1.global_data.get_the_user_data()._int_master_right = logonData.masterright;
          global_data_1.global_data.get_the_user_data()._int_game_time = logonData.gametime;
          global_data_1.global_data.get_the_user_data()._int_golden_beans = logonData.beans;
          global_data_1.global_data.get_the_user_data()._int_red_packet = logonData.redpacket;
          global_data_1.global_data.get_the_user_data()._int_relief_gold = logonData.relief_gold;
          global_data_1.global_data.get_the_user_data()._int_relief_beans = logonData.relief_beans;
          global_data_1.global_data.get_the_user_data()._int_experience = logonData.experience;
          global_data_1.global_data.get_the_user_data()._int_praise = logonData.praise;
          global_data_1.global_data.get_the_user_data()._long_charm = logonData.charm;
          global_data_1.global_data.get_the_user_data()._str_session = logonData.session;
          global_data_1.global_data.get_the_user_data()._int_ingame = logonData.ingame;
          global_data_1.global_data._int_server_time = logonData.servertime;
          console.log("SERVER TIME:" + global_data_1.global_data._int_server_time);
          global_data_1.global_data._int_local_time = Math.floor(Date.now() / 1e3);
          console.log("LOCAL TIME:" + global_data_1.global_data._int_local_time);
          console.log(global_data_1.global_data.get_the_user_data());
          if (utils_1.utils.is_wechat()) {
            utils_1.utils.setLocalStorage("wechatLocalAccount", logonData.account);
            utils_1.utils.setLocalStorage("wechatLocalPassword", logonData.password);
          }
          global_data_1.global_data.map_self_prop_data.clear();
          let props = utils_1.utils.from_json(logonData.ext);
          props && props["prop"] && props["prop"].forEach(element => {
            global_data_1.global_data.map_self_prop_data[element.id] = element.cnt;
          });
          global_data_1.global_data.map_self_status_data.clear();
          props && props["status"] && props["status"].forEach(element => {
            global_data_1.global_data.map_self_status_data[element.id] = element.time;
          });
          utils_1.utils.send("LogonSocketLogonSuccess");
          lobby_framework_1.lobby_framework.clear_local_task();
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_ERROR) {
          let logonData = new protocols_1.protocols.CMD_LOGON_ERROR();
          logonData.fromBuffer(data);
          utils_1.utils.send("LogonSocketLogonFail");
          utils_1.utils.send("LogonErrorMsg", logonData.error);
          if (utils_1.utils.is_wechat()) {
            utils_1.utils.setLocalStorage("wechatLocalAccount", "");
            utils_1.utils.setLocalStorage("wechatLocalPassword", "");
          }
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_FILE_START) {
          let theData = new protocols_1.protocols.CMD_LOGON_FILE_START();
          theData.fromBuffer(data);
          let i = theData.file;
          this.file_update_buffer.set(i, new Uint8Array(0));
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_FILE_RET) {
          let theData = new protocols_1.protocols.CMD_LOGON_FILE_RET();
          theData.fromBuffer(data);
          let buffer1 = this.file_update_buffer.get(theData.file);
          let buffer2 = theData.data;
          let new_buffer = new Uint8Array(buffer1.byteLength + buffer2.byteLength);
          new_buffer.set(new Uint8Array(buffer1), 0);
          new_buffer.set(new Uint8Array(buffer2), buffer1.byteLength);
          this.file_update_buffer.set(theData.file, new_buffer);
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_FILE_END) {
          let theData = new protocols_1.protocols.CMD_LOGON_FILE_END();
          theData.fromBuffer(data);
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_FILE_FINISH) utils_1.utils.send("LogonSocketUpdateFileSuccess"); else if (subCmdID == protocols_1.protocols.SUB_LOGON_VERSION_RET) {
          let theData = new protocols_1.protocols.CMD_LOGON_VERSION_RET();
          theData.fromBuffer(data);
          console.log("\u7248\u672c\u8fd4\u56de:", theData);
          global_data_1.global_data._int_server_min_version = theData.min;
          global_data_1.global_data._int_server_cur_version = theData.cur;
          global_data_1.global_data._int_server_max_version = theData.max;
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_MODULE_MASK_RET) {
          let theData = new protocols_1.protocols.CMD_LOGON_MASK_RET();
          theData.fromBuffer(data);
          console.log("\u6a21\u7248\u65b9\u5f0f\u8fd4\u56de:", theData.mask);
          global_data_1.global_data._uint_module_mask = theData.mask;
          utils_1.utils.send("LogonSocketModuleMaskSuccess");
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_PAY_MASK_RET) {
          let theData = new protocols_1.protocols.CMD_LOGON_MASK_RET();
          theData.fromBuffer(data);
          console.log("\u652f\u4ed8\u65b9\u5f0f\u8fd4\u56de:", theData.mask);
          global_data_1.global_data._uint_payment_mask = theData.mask;
          utils_1.utils.send("LogonSocketPayMaskSuccess");
        } else if (subCmdID == protocols_1.protocols.SUB_LOGON_GAMELIST_RET) {
          let parser = new protocols_1.protocols.ab_parser(new DataView(data));
          let game_json = parser.nextString(2018);
          global_data_1.global_data.gamelist_from_server = utils_1.utils.from_json(game_json);
          console.log("game_list:", global_data_1.global_data.gamelist_from_server.game);
        }
      }
      onLogonSocketClose(event) {
        console.log("onLogonSocketClose", event);
      }
      onLogonSocketError(event) {
        utils_1.utils.send("LogonErrorMsg", "\u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5...");
        utils_1.utils.send("LogonSocketError");
      }
      send_logon_account(account, password) {
        let the_data = new protocols_1.protocols.CMD_LOGON_ACCOUNT();
        let base = global_data_1.global_data.get_lobby_base_info2();
        the_data.base = base;
        the_data.mac = global_data_1.global_data.get_mac();
        the_data.account = account;
        the_data.password = password;
        console.log(`send_logon_account:\n        base.area:${base.area},\n        base.channel:${base.channel},\n        base.clienttype:${base.clienttype},\n        base.app:${base.app},\n        base.keyword:${base.keyword},\n        base.package:${base.package},\n        base.version:${base.version},\n        the_data.mac:${the_data.mac},\n        the_data.account:${the_data.account},\n        the_data.password:${the_data.password},\n        `);
        let ab = the_data.toBuffer();
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_ACCOUNT, ab);
      }
      send_logon_wechat() {
        if (!utils_1.utils.is_wechat()) {
          this.send_logon_channel();
          return;
        }
        let the_data = new protocols_1.protocols.CMD_LOGON_MINIWECHAT();
        the_data.base = global_data_1.global_data.get_lobby_base_info2();
        the_data.mac = global_data_1.global_data.get_mac();
        the_data.appid = global_data_1.global_data.appid;
        let code = {
          code: platform_1.platform.inst.code,
          encryptedData: platform_1.platform.inst.encryptedData,
          signature: platform_1.platform.inst.signature,
          iv: platform_1.platform.inst.iv,
          latitude: 0,
          longitude: 0
        };
        the_data.code = utils_1.utils.to_json(code);
        the_data.code.length > 1024 && console.error("CMD_LOGON_MINIWECHAT code.length is overflow, maxium is 1024");
        let ab = the_data.toBuffer();
        console.log("send_logon_wechat, code: ", code);
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_MINIWECHAT, ab);
      }
      send_logon_baidu() {
        let the_data = new protocols_1.protocols.CMD_LOGON_CHANNEL();
        let base = global_data_1.global_data.get_lobby_base_info2();
        the_data.base = base;
        the_data.mac = global_data_1.global_data.get_mac();
        the_data.appid = global_data_1.global_data.appid;
        the_data.account = "";
        the_data.password = "";
        the_data.code = platform_1.platform.inst.getLoginCodeSync();
        let ab = the_data.toBuffer();
        console.log(`send_logon_channel:\n        base.area:${base.area},\n        base.channel:${base.channel},\n        base.clienttype:${base.clienttype},\n        base.app:${base.app},\n        base.keyword:${base.keyword},\n        base.package:${base.package},\n        base.version:${base.version},\n        the_data.mac:${the_data.mac},\n        the_data.appid:${the_data.appid},\n        the_data.account:${the_data.account},\n        the_data.password:${the_data.password},\n        the_data.code:${the_data.code}\n        `);
        console.log(`ab: ${ab.byteLength} ${ab}`);
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_CHANNEL, ab);
      }
      send_logon_channel() {
        if (utils_1.utils.is_wechat()) {
          this.send_logon_wechat();
          return;
        }
        let the_data = new protocols_1.protocols.CMD_LOGON_CHANNEL();
        let base = global_data_1.global_data.get_lobby_base_info2();
        the_data.base = base;
        the_data.mac = global_data_1.global_data.get_mac();
        the_data.appid = global_data_1.global_data.appid;
        the_data.account = "";
        the_data.password = "";
        the_data.code = platform_1.platform.inst.getLoginCodeSync();
        let ab = the_data.toBuffer();
        console.log(`send_logon_channel:\n        base.area:${base.area},\n        base.channel:${base.channel},\n        base.clienttype:${base.clienttype},\n        base.app:${base.app},\n        base.keyword:${base.keyword},\n        base.package:${base.package},\n        base.version:${base.version},\n        the_data.mac:${the_data.mac},\n        the_data.appid:${the_data.appid},\n        the_data.account:${the_data.account},\n        the_data.password:${the_data.password},\n        the_data.code:${the_data.code}\n        `);
        console.log(`ab: ${ab.byteLength} ${ab}`);
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_CHANNEL, ab);
      }
      logonByRegister() {
        let the_data = new protocols_1.protocols.CMD_LOGON_REGISTER();
        let base = global_data_1.global_data.get_lobby_base_info2();
        the_data.base = base;
        the_data.mac = global_data_1.global_data.get_mac();
        console.log(`logonByRegister:\n        base.area:${base.area},\n        base.channel:${base.channel},\n        base.clienttype:${base.clienttype},\n        base.app:${base.app},\n        base.keyword:${base.keyword},\n        base.package:${base.package},\n        base.version:${base.version},\n        the_data.mac:${the_data.mac},\n        `);
        let ab = the_data.toBuffer();
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_REGISTER, ab);
      }
      send_lobby_by_version() {
        let the_data = new protocols_1.protocols.CMD_LOGON_VERSION();
        the_data.base = global_data_1.global_data.get_lobby_base_info2();
        let ab = the_data.toBuffer();
        console.log("\u53d1\u9001\u7248\u672c\u53f7\u8bf7\u6c42\u534f\u8bae");
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_VERSION, ab);
      }
      send_module_mask(done, fail) {
        let the_data = new protocols_1.protocols.CMD_LOGON_MASK();
        the_data.base = global_data_1.global_data.get_lobby_base_info2();
        global_data_1.global_data.get_the_user_data()._int_user_right & protocols_1.protocols.UR_RIGHT_FULLGAME && (the_data.code |= protocols_1.protocols.MASK_VERSION_FULL);
        let ab = the_data.toBuffer();
        console.log("\u53d1\u9001\u6a21\u7248\u65b9\u5f0f\u8bf7\u6c42\u534f\u8bae code:", the_data.code);
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_MODULE_MASK, ab);
        this.listen_event("LogonSocketModuleMaskSuccess", done);
        this.listen_event("LogonSocketError", fail);
      }
      send_pay_mask(done, fail) {
        let the_data = new protocols_1.protocols.CMD_LOGON_MASK();
        the_data.base = global_data_1.global_data.get_lobby_base_info2();
        global_data_1.global_data.get_the_user_data()._int_user_right & protocols_1.protocols.UR_RIGHT_FULLGAME && (the_data.code |= protocols_1.protocols.MASK_VERSION_FULL);
        let ab = the_data.toBuffer();
        console.log("\u53d1\u9001\u652f\u4ed8\u65b9\u5f0f\u8bf7\u6c42\u534f\u8bae code:", the_data.code);
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_PAY_MASK, ab);
        this.listen_event("LogonSocketPayMaskSuccess", done);
        this.listen_event("LogonSocketError", fail);
      }
      send_file_update(done, fail) {
        let fileData = new protocols_1.protocols.CMD_LOGON_FILE();
        fileData.base = global_data_1.global_data.get_lobby_base_info2();
        fileData.md5 = [];
        if (utils_1.utils.is_wechat()) for (let i = 0; i < 3; ++i) fileData.md5.push(this.file_md5.get(i)); else utils_1.utils.is_window() && fileData.md5.push(null);
        this.file_update_buffer = new Map();
        utils_1.utils.print_object(fileData, "fileData");
        let ab = fileData.toBuffer();
        this._logonSocket.sendData(protocols_1.protocols.MDM_LOGON, protocols_1.protocols.SUB_LOGON_FILE, ab);
        this.listen_event("LogonSocketUpdateFileSuccess", done);
        this.listen_event("LogonSocketUpdateFileFail", fail);
        this.listen_event("LogonSocketError", fail);
      }
      delete_old_file(done, fail) {
        let delete_task = new task_1.parallel_task("delete_old_files");
        this.file_update_buffer.forEach((v, k) => {
          delete_task.add_sub_task(new task_1.task(String(k)).do((done, fail) => {
            let path = platform_1.platform.inst.getUserPathSync() + "/" + String(k) + ".zip";
            platform_1.platform.inst.deleteFile({
              filePath: path,
              success: () => {
                done();
              },
              fail: () => {
                done();
              }
            });
          }));
        });
        delete_task.on({
          success: () => {
            done();
          },
          fail: () => {
            utils_1.utils.send("LogonErrorMsg", "\u79fb\u9664\u914d\u7f6e\u6587\u4ef6\u5931\u8d25");
            fail();
          }
        });
        delete_task.run();
      }
      write_new_file(done, fail) {
        let write_task = new task_1.parallel_task("write_new_files");
        this.file_update_buffer.forEach((v, k) => {
          write_task.add_sub_task(new task_1.task(String(k)).do((done, fail) => {
            let path = platform_1.platform.inst.getUserPathSync() + "/" + String(k) + ".zip";
            platform_1.platform.inst.writeFile({
              filePath: path,
              data: v.buffer,
              encoding: "binary",
              success: () => {
                done();
              },
              fail: () => {
                fail();
              }
            });
          }));
        });
        write_task.on({
          success: () => {
            done();
          },
          fail: () => {
            utils_1.utils.send("LogonErrorMsg", "\u5199\u5165\u914d\u7f6e\u6587\u4ef6\u5931\u8d25");
            fail();
          }
        });
        write_task.run();
      }
      write_new_file_window(done, fail) {
        console.log("write_new_file_window start");
        let write_task = new task_1.parallel_task("write_new_files");
        this.file_update_buffer.forEach((v, k) => {
          write_task.add_sub_task(new task_1.task(String(k)).do((done, fail) => {
            let path = String(k);
            platform_1.platform.inst.writeFile({
              filePath: path,
              data: v.buffer,
              encoding: "binary",
              success: () => {
                done();
              },
              fail: () => {
                fail();
              }
            });
          }));
        });
        write_task.on({
          success: () => {
            done();
          },
          fail: () => {
            utils_1.utils.send("LogonErrorMsg", "\u5199\u5165\u914d\u7f6e\u6587\u4ef6\u5931\u8d25");
            fail();
          }
        });
        write_task.run();
      }
      read_json_config(done, fail) {
        global_data_1.global_data.common_json_data = null;
        global_data_1.global_data.game_json_data = null;
        global_data_1.global_data.gamelist_json_data = null;
        let read_json_task = new task_1.parallel_task("read_json_task");
        read_json_task.add_sub_task(new task_1.task("0.zip").do((done, fail) => {
          platform_1.platform.inst.readZipFile({
            path: platform_1.platform.inst.getUserPathSync() + "/",
            zipFileName: "0.zip",
            innerFileName: "1.json",
            success: res => {
              global_data_1.global_data.common_json_data = utils_1.utils.from_json(res.data);
              global_data_1.global_data.common_json_data ? done() : fail();
            },
            fail: res => {
              fail();
            }
          });
        }));
        read_json_task.add_sub_task(new task_1.task("1.zip").do((done, fail) => {
          platform_1.platform.inst.readZipFile({
            path: platform_1.platform.inst.getUserPathSync() + "/",
            zipFileName: "1.zip",
            innerFileName: global_data_1.global_data.kind_id + ".json",
            success: res => {
              global_data_1.global_data.game_json_data = utils_1.utils.from_json(res.data);
              if (global_data_1.global_data.game_json_data) {
                done();
                console.log(global_data_1.global_data.game_json_data);
              } else fail();
            },
            fail: res => {
              fail();
            }
          });
        }));
        read_json_task.add_sub_task(new task_1.task("2.zip").do((done, fail) => {
          platform_1.platform.inst.readZipFile({
            path: platform_1.platform.inst.getUserPathSync() + "/",
            zipFileName: "2.zip",
            innerFileName: "gamelist.json",
            success: res => {
              global_data_1.global_data.gamelist_json_data = utils_1.utils.from_json(res.data);
              global_data_1.global_data.gamelist_json_data ? done() : fail();
            },
            fail: res => {
              fail();
            }
          });
        }));
        read_json_task.on({
          success: () => {
            done();
          },
          fail: () => {
            utils_1.utils.send("LogonErrorMsg", "\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u9519\u8bef");
            fail();
          }
        });
        read_json_task.run();
      }
      apply_json_config(done, fail) {
        let data = global_data_1.global_data.common_json_data;
        data.http_address.forEach(element => {
          element.address = utils_1.utils.string_replace_quot(element.address);
        });
        global_data_1.global_data.vector_prop_data = [];
        data.prop_data && data.prop_data.forEach(element => {
          let the_prop_data = new global_data_1.global_data.struct_prop_data();
          the_prop_data._int_id = element.id;
          the_prop_data._int_type = element.type;
          the_prop_data._str_name = element.name;
          the_prop_data._str_caption = element.desc;
          the_prop_data._bool_can_sale = element.sale;
          the_prop_data._bool_can_use = element.use;
          the_prop_data._int_mask = element.mask ? element.mask : 0;
          global_data_1.global_data.vector_prop_data.push(the_prop_data);
        });
        global_data_1.global_data.vector_status_data = [];
        data.status_data && data.status_data.forEach(element => {
          let the_status_data = new global_data_1.global_data.struct_status_data();
          the_status_data._int_id = element.id;
          the_status_data._str_name = element.name;
          the_status_data._str_caption = element.desc;
          the_status_data._bool_show = element.show;
          the_status_data._int_mask = element.mask ? element.mask : 0;
          global_data_1.global_data.vector_status_data.push(the_status_data);
        });
        data = global_data_1.global_data.game_json_data;
        global_data_1.global_data.game_json_data.wechatgame_newlobby && (global_data_1.global_data.game_json_data.wechatgame = global_data_1.global_data.game_json_data.wechatgame_newlobby);
        global_data_1.global_data.gamelist_from_server && global_data_1.global_data.gamelist_from_server.game && (global_data_1.global_data.game_json_data.wechatgame = global_data_1.global_data.gamelist_from_server.game);
        global_data_1.global_data._int_relief_gold_threshold = data.relief_gold || 500;
        let game_name = global_data_1.global_data.keyword;
        let area_id = global_data_1.global_data.area_id;
        let areaData = data[game_name][area_id];
        global_data_1.global_data._str_relief_share_img_url = areaData.relief_share_img_url || "";
        global_data_1.global_data._str_relief_share_img_text = areaData.relief_share_img_text || "\u4f4e\u4fdd\u5206\u4eab\u6587\u6848\u672a\u8bbe\u7f6e";
        global_data_1.global_data._str_daily_gold_share_img_url = areaData.daily_gold_share_img_url || "";
        global_data_1.global_data._str_daily_gold_share_img_text = areaData.daily_gold_share_img_text || "\u5206\u4eab\u9886\u6bcf\u65e5\u91d1\u5e01\u6587\u6848\u672a\u8bbe\u7f6e";
        global_data_1.global_data._str_invite_reward_share_img_url = areaData.invite_reward_share_img_url || "";
        global_data_1.global_data._str_invite_reward_share_img_text = areaData.invite_reward_share_img_text || "\u9080\u8bf7\u6709\u5956\u5206\u4eab\u6587\u6848\u672a\u8bbe\u7f6e";
        global_data_1.global_data._str_lottery_share_img_url = areaData.lottery_share_img_url || "https://user.73sy.com/share/lottery.png";
        global_data_1.global_data._str_lottery_share_img_text = areaData.lottery_share_img_text || "\u8fd9\u91cc\u53ef\u4ee5\u514d\u8d39\u62bd\u5956\uff0c\u5feb\u6765\u5feb\u6765~";
        global_data_1.global_data._int_invite_reward_gold = areaData.invite_reward_gold || 2e3;
        global_data_1.global_data._int_show_privilege = areaData.show_privilege || 0;
        if (utils_1.utils.is_wechat()) {
          global_data_1.global_data.video_ad_id = areaData.video_ad_id || "";
          global_data_1.global_data.subscribe_lottery_id = areaData.subscribe_lottery_id || "";
        } else utils_1.utils.is_oppo() ? global_data_1.global_data.video_ad_id = areaData.oppo_video_ad_id || "" : utils_1.utils.is_mi() ? global_data_1.global_data.video_ad_id = areaData.mi_video_ad_id || "" : utils_1.utils.is_baidu() ? global_data_1.global_data.video_ad_id = areaData.baidu_video_ad_id || "" : utils_1.utils.is_huawei() && (global_data_1.global_data.video_ad_id = areaData.hw_video_ad_id || "");
        global_data_1.global_data.notices = areaData.notices;
        if (areaData.push_config) {
          global_data_1.global_data.push_server = areaData.push_config.server;
          global_data_1.global_data.push_port = areaData.push_config.port;
        }
        global_data_1.global_data._vector_relief_game = [];
        data.relief_game && data.relief_game.forEach(game_id => {
          global_data_1.global_data._vector_relief_game.push(game_id);
        });
        global_data_1.global_data._vector_games = [];
        let games = data.wechatgame;
        games.forEach(game => {
          let the_game_item = new global_data_1.global_data.struct_game_item();
          the_game_item.int_game_id = game.id;
          game.list.forEach(item => {
            the_game_item.the_vector_games.push(item);
          });
          global_data_1.global_data._vector_games.push(the_game_item);
        });
        data = global_data_1.global_data.gamelist_json_data;
        global_data_1.global_data.vector_game_data = [];
        let game_datas = data.game;
        let vector_games = global_data_1.global_data._vector_games;
        game_datas.forEach(game_data => {
          let int_game_id = game_data.id;
          let bool_found = false;
          for (let the_game_item of vector_games) {
            for (let id of the_game_item.the_vector_games) if (int_game_id == id) {
              bool_found = true;
              break;
            }
            if (bool_found) break;
          }
          if (bool_found) {
            let the_game_data = new global_data_1.global_data.struct_game_data();
            the_game_data._int_game_id = int_game_id;
            the_game_data._str_name = game_data.name;
            the_game_data._str_desc = game_data.desc;
            global_data_1.global_data.vector_game_data.push(the_game_data);
          }
        });
        global_data_1.global_data._vector_room_data = [];
        let room_datas = data.room;
        room_datas.forEach(room_data => {
          let the_room = new global_data_1.global_data.struct_room_data();
          the_room._int_id = room_data.id;
          the_room._int_room_id = room_data.roomid;
          the_room._str_name = room_data.name;
          the_room._str_address = room_data.wxaddress;
          the_room._int_port = room_data.port;
          the_room._int_game_id = room_data.gameid;
          the_room._int_room_mode = room_data.mode;
          the_room._str_rule = room_data.rule;
          the_room._int_chair_count = room_data.chaircount;
          the_room._int_limit_mask = room_data.limit;
          the_room._int_max_gold = room_data.maxgold;
          void 0 == the_room._int_max_gold && (the_room._int_max_gold = 0);
          the_room._int_min_gold = room_data.mingold;
          void 0 == the_room._int_min_gold && (the_room._int_min_gold = 0);
          the_room._int_table_count = room_data.tablecount;
          the_room._int_room_kind = room_data.type;
          the_room._int_game_genre = room_data.type;
          global_data_1.global_data.vector_game_data.forEach(game_data => {
            the_room._int_game_id == game_data._int_game_id && null == global_data_1.global_data.get_room_data(the_room._int_game_id, the_room._int_room_id) && global_data_1.global_data._vector_room_data.push(the_room);
          });
        });
        global_data_1.global_data._vector_red_packet = [];
        let red_package = data.red_packet;
        red_package && red_package.length > 0 && red_package.forEach(element => {
          let the_red_packet = new global_data_1.global_data.struct_red_packet();
          the_red_packet._int_game_id = element.id;
          the_red_packet._int_expire = element.expire;
          the_red_packet._str_name = element.name;
          element.items && element.items.forEach(item => {
            let the_items = new global_data_1.global_data.struct_packet_item();
            the_items._int_game_id = the_red_packet._int_game_id;
            the_items._int_base = item.base;
            the_items._int_kind = item.kind;
            the_items._int_limit = item.limit;
            the_items._int_tax = item.tax;
            the_items._int_count = item.count;
            if (item.red) {
              let the_list_red = item.red;
              let l_int_cout = the_items._int_count < 5 ? the_items._int_count : 5;
              for (let l_red = 0; l_red < l_int_cout; l_red++) the_items._int_money[l_red] = the_list_red[l_red];
            }
            the_items._str_desc = item.desc;
            the_items._str_name = item.name;
            the_items._str_base_desc = item.base_desc;
            the_items._str_tax_desc = item.tax_desc;
            the_red_packet._vector_main_item.push(the_items);
          });
          global_data_1.global_data._vector_red_packet.push(the_red_packet);
        });
        let gamedata = global_data_1.global_data.game_json_data.wechatgame;
        global_data_1.global_data.gameCount = 0;
        for (let i = 0; i < gamedata.length; ++i) {
          let id = gamedata[i].id;
          global_data_1.global_data.check_game_available(id) && (global_data_1.global_data.gameCount += 1);
        }
        console.log("common_json", global_data_1.global_data.common_json_data);
        console.log("game_json", global_data_1.global_data.game_json_data);
        console.log("gamelist_json", global_data_1.global_data.gamelist_json_data);
        console.log("game count:", global_data_1.global_data.gameCount);
        done();
      }
      finish_logon(done, fail) {
        lobby_framework_1.lobby_framework.refresh_wechat_session_key();
        lobby_framework_1.lobby_framework.get_wechat_openid();
        lobby_framework_1.lobby_framework.clear_local_task();
        done();
      }
    }
    exports.logon_state = logon_state;
    cc._RF.pop();
  }, {
    "../../common/task": "task",
    "../../common/utils": "utils",
    "../../common/websocket": "websocket",
    "../game/push_controller": "push_controller",
    "../global_data": "global_data",
    "../lobby_framework": "lobby_framework",
    "../lobby_types": "lobby_types",
    "../platform/platform": "platform",
    "../protocols": "protocols",
    "./state": "state"
  } ],
  md5: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "12928Ml4AVBh7fCrpofry2l", "md5");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.md5 = void 0;
    exports.md5 = string => {
      function RotateLeft(lValue, iShiftBits) {
        return lValue << iShiftBits | lValue >>> 32 - iShiftBits;
      }
      function AddUnsigned(lX, lY) {
        var lX4, lY4, lX8, lY8, lResult;
        lX8 = 2147483648 & lX;
        lY8 = 2147483648 & lY;
        lX4 = 1073741824 & lX;
        lY4 = 1073741824 & lY;
        lResult = (1073741823 & lX) + (1073741823 & lY);
        if (lX4 & lY4) return 2147483648 ^ lResult ^ lX8 ^ lY8;
        return lX4 | lY4 ? 1073741824 & lResult ? 3221225472 ^ lResult ^ lX8 ^ lY8 : 1073741824 ^ lResult ^ lX8 ^ lY8 : lResult ^ lX8 ^ lY8;
      }
      function F(x, y, z) {
        return x & y | ~x & z;
      }
      function G(x, y, z) {
        return x & z | y & ~z;
      }
      function H(x, y, z) {
        return x ^ y ^ z;
      }
      function I(x, y, z) {
        return y ^ (x | ~z);
      }
      function FF(a, b, c, d, x, s, ac) {
        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
        return AddUnsigned(RotateLeft(a, s), b);
      }
      function GG(a, b, c, d, x, s, ac) {
        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
        return AddUnsigned(RotateLeft(a, s), b);
      }
      function HH(a, b, c, d, x, s, ac) {
        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
        return AddUnsigned(RotateLeft(a, s), b);
      }
      function II(a, b, c, d, x, s, ac) {
        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
        return AddUnsigned(RotateLeft(a, s), b);
      }
      function ConvertToWordArray(string) {
        var lWordCount;
        var lMessageLength = string.length;
        var lNumberOfWords_temp1 = lMessageLength + 8;
        var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;
        var lNumberOfWords = 16 * (lNumberOfWords_temp2 + 1);
        var lWordArray = Array(lNumberOfWords - 1);
        var lBytePosition = 0;
        var lByteCount = 0;
        while (lByteCount < lMessageLength) {
          lWordCount = (lByteCount - lByteCount % 4) / 4;
          lBytePosition = lByteCount % 4 * 8;
          lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;
          lByteCount++;
        }
        lWordCount = (lByteCount - lByteCount % 4) / 4;
        lBytePosition = lByteCount % 4 * 8;
        lWordArray[lWordCount] = lWordArray[lWordCount] | 128 << lBytePosition;
        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
        return lWordArray;
      }
      function WordToHex(lValue) {
        var WordToHexValue = "", WordToHexValue_temp = "", lByte, lCount;
        for (lCount = 0; lCount <= 3; lCount++) {
          lByte = lValue >>> 8 * lCount & 255;
          WordToHexValue_temp = "0" + lByte.toString(16);
          WordToHexValue += WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
        }
        return WordToHexValue;
      }
      function Utf8Encode(string) {
        string = string.replace(/\r\n/g, "\n");
        var utftext = "";
        for (var n = 0; n < string.length; n++) {
          var c = string.charCodeAt(n);
          if (c < 128) utftext += String.fromCharCode(c); else if (c > 127 && c < 2048) {
            utftext += String.fromCharCode(c >> 6 | 192);
            utftext += String.fromCharCode(63 & c | 128);
          } else {
            utftext += String.fromCharCode(c >> 12 | 224);
            utftext += String.fromCharCode(c >> 6 & 63 | 128);
            utftext += String.fromCharCode(63 & c | 128);
          }
        }
        return utftext;
      }
      var x = Array();
      var k, AA, BB, CC, DD, a, b, c, d;
      var S11 = 7, S12 = 12, S13 = 17, S14 = 22;
      var S21 = 5, S22 = 9, S23 = 14, S24 = 20;
      var S31 = 4, S32 = 11, S33 = 16, S34 = 23;
      var S41 = 6, S42 = 10, S43 = 15, S44 = 21;
      x = ConvertToWordArray(string);
      a = 1732584193;
      b = 4023233417;
      c = 2562383102;
      d = 271733878;
      for (k = 0; k < x.length; k += 16) {
        AA = a;
        BB = b;
        CC = c;
        DD = d;
        a = FF(a, b, c, d, x[k + 0], S11, 3614090360);
        d = FF(d, a, b, c, x[k + 1], S12, 3905402710);
        c = FF(c, d, a, b, x[k + 2], S13, 606105819);
        b = FF(b, c, d, a, x[k + 3], S14, 3250441966);
        a = FF(a, b, c, d, x[k + 4], S11, 4118548399);
        d = FF(d, a, b, c, x[k + 5], S12, 1200080426);
        c = FF(c, d, a, b, x[k + 6], S13, 2821735955);
        b = FF(b, c, d, a, x[k + 7], S14, 4249261313);
        a = FF(a, b, c, d, x[k + 8], S11, 1770035416);
        d = FF(d, a, b, c, x[k + 9], S12, 2336552879);
        c = FF(c, d, a, b, x[k + 10], S13, 4294925233);
        b = FF(b, c, d, a, x[k + 11], S14, 2304563134);
        a = FF(a, b, c, d, x[k + 12], S11, 1804603682);
        d = FF(d, a, b, c, x[k + 13], S12, 4254626195);
        c = FF(c, d, a, b, x[k + 14], S13, 2792965006);
        b = FF(b, c, d, a, x[k + 15], S14, 1236535329);
        a = GG(a, b, c, d, x[k + 1], S21, 4129170786);
        d = GG(d, a, b, c, x[k + 6], S22, 3225465664);
        c = GG(c, d, a, b, x[k + 11], S23, 643717713);
        b = GG(b, c, d, a, x[k + 0], S24, 3921069994);
        a = GG(a, b, c, d, x[k + 5], S21, 3593408605);
        d = GG(d, a, b, c, x[k + 10], S22, 38016083);
        c = GG(c, d, a, b, x[k + 15], S23, 3634488961);
        b = GG(b, c, d, a, x[k + 4], S24, 3889429448);
        a = GG(a, b, c, d, x[k + 9], S21, 568446438);
        d = GG(d, a, b, c, x[k + 14], S22, 3275163606);
        c = GG(c, d, a, b, x[k + 3], S23, 4107603335);
        b = GG(b, c, d, a, x[k + 8], S24, 1163531501);
        a = GG(a, b, c, d, x[k + 13], S21, 2850285829);
        d = GG(d, a, b, c, x[k + 2], S22, 4243563512);
        c = GG(c, d, a, b, x[k + 7], S23, 1735328473);
        b = GG(b, c, d, a, x[k + 12], S24, 2368359562);
        a = HH(a, b, c, d, x[k + 5], S31, 4294588738);
        d = HH(d, a, b, c, x[k + 8], S32, 2272392833);
        c = HH(c, d, a, b, x[k + 11], S33, 1839030562);
        b = HH(b, c, d, a, x[k + 14], S34, 4259657740);
        a = HH(a, b, c, d, x[k + 1], S31, 2763975236);
        d = HH(d, a, b, c, x[k + 4], S32, 1272893353);
        c = HH(c, d, a, b, x[k + 7], S33, 4139469664);
        b = HH(b, c, d, a, x[k + 10], S34, 3200236656);
        a = HH(a, b, c, d, x[k + 13], S31, 681279174);
        d = HH(d, a, b, c, x[k + 0], S32, 3936430074);
        c = HH(c, d, a, b, x[k + 3], S33, 3572445317);
        b = HH(b, c, d, a, x[k + 6], S34, 76029189);
        a = HH(a, b, c, d, x[k + 9], S31, 3654602809);
        d = HH(d, a, b, c, x[k + 12], S32, 3873151461);
        c = HH(c, d, a, b, x[k + 15], S33, 530742520);
        b = HH(b, c, d, a, x[k + 2], S34, 3299628645);
        a = II(a, b, c, d, x[k + 0], S41, 4096336452);
        d = II(d, a, b, c, x[k + 7], S42, 1126891415);
        c = II(c, d, a, b, x[k + 14], S43, 2878612391);
        b = II(b, c, d, a, x[k + 5], S44, 4237533241);
        a = II(a, b, c, d, x[k + 12], S41, 1700485571);
        d = II(d, a, b, c, x[k + 3], S42, 2399980690);
        c = II(c, d, a, b, x[k + 10], S43, 4293915773);
        b = II(b, c, d, a, x[k + 1], S44, 2240044497);
        a = II(a, b, c, d, x[k + 8], S41, 1873313359);
        d = II(d, a, b, c, x[k + 15], S42, 4264355552);
        c = II(c, d, a, b, x[k + 6], S43, 2734768916);
        b = II(b, c, d, a, x[k + 13], S44, 1309151649);
        a = II(a, b, c, d, x[k + 4], S41, 4149444226);
        d = II(d, a, b, c, x[k + 11], S42, 3174756917);
        c = II(c, d, a, b, x[k + 2], S43, 718787259);
        b = II(b, c, d, a, x[k + 9], S44, 3951481745);
        a = AddUnsigned(a, AA);
        b = AddUnsigned(b, BB);
        c = AddUnsigned(c, CC);
        d = AddUnsigned(d, DD);
      }
      var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);
      return temp.toLowerCase();
    };
    cc._RF.pop();
  }, {} ],
  platform_baidu: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fa889c0JCdBPJvxvhpDkyOd", "platform_baidu");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_baidu = void 0;
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    const platform_base_1 = require("./platform_base");
    const global_define_1 = require("../global_define");
    let fs = null;
    let inst = null;
    class platform_baidu extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.userinfo_button = null;
        this.code = null;
        this.systemInfo = null;
      }
      init() {
        console.log("platform_baidu init");
        fs = swan.getFileSystemManager();
        inst = this;
      }
      initLobby(obj) {
        swan.showFavoriteGuide && swan.showFavoriteGuide({
          type: "tip",
          content: "\u6dfb\u52a0\u5230\u6211\u7684\u5c0f\u7a0b\u5e8f\uff0c\u4e0b\u6b21\u4f7f\u7528\u66f4\u65b9\u4fbf",
          success(res) {
            console.log("\u6dfb\u52a0\u6210\u529f\uff1a", res);
          },
          fail(err) {
            console.log("\u6dfb\u52a0\u5931\u8d25\uff1a", err);
          }
        });
        swan.showShareMenu && swan.showShareMenu();
        swan.onShareAppMessage && swan.onShareAppMessage(function() {
          return {
            title: global_data_1.global_data._str_relief_share_img_text,
            imageUrl: global_data_1.global_data._str_relief_share_img_url
          };
        });
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        inst.baiduForceLogin({
          success: () => {
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("baiduForceLogin fail", res.errMsg);
            swan.exit();
          }
        });
      }
      baiduForceLogin(obj) {
        swan.login({
          success: res => {
            console.log("login success", res);
            inst.code = res.code;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("login fail", res);
            swan.showModal({
              title: "\u767b\u5f55\u5931\u8d25",
              content: "\u662f\u5426\u91cd\u65b0\u767b\u5f55\uff1f",
              cancelText: "\u9000\u51fa\u6e38\u620f",
              success: res => {
                if (res.confirm) inst.baiduForceLogin(obj); else if (res.cancel) {
                  obj.fail && obj.fail({
                    errMsg: ""
                  });
                  obj.complete && obj.complete();
                }
              }
            });
          }
        });
      }
      share(obj) {
        swan.shareAppMessage({
          title: obj.title,
          imageUrl: obj.imageUrl,
          query: obj.query,
          success: res => {
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        fs.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          success: res => {
            setTimeout(() => {
              fs.readFile({
                filePath: obj.path + obj.innerFileName,
                success: res => {
                  console.log("readFile", obj.path + obj.innerFileName, res);
                  let out = utils_1.utils.gbk_2_utf8(res.data);
                  obj.success && obj.success({
                    data: out
                  });
                  obj.complete && obj.complete();
                },
                fail: res => {
                  console.log("readFile fail", res.errMsg);
                  obj.fail && obj.fail(res);
                  obj.complete && obj.complete();
                }
              });
            }, 10);
          },
          fail: res => {
            console.log(`unzip fail: ${res.errMsg}`);
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      getNetworkType(obj) {
        swan.getNetworkType(obj);
      }
      checkRewardedVideoAdSync() {
        if (!global_data_1.global_data.video_ad_id) return {
          available: false,
          reason: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08-1\uff09"
        };
        return {
          available: true,
          reason: ""
        };
      }
      playRewardedVideoAd(obj) {
        obj.fail && obj.fail({
          errMsg: "\u6682\u672a\u63d0\u4f9b\u5e7f\u544a"
        });
        obj.complete && obj.complete();
      }
      setClipboardData(obj) {
        swan.setClipboardData(obj);
      }
      openCustomerServiceConversation(obj) {
        inst.checkVersionSync("1.0.12") ? swan.openCustomerServiceConversation(obj) : utils_1.utils.show_message_box({
          content: "\u6e38\u620f\u95ee\u9898\uff0c\u53ef\u6dfb\u52a0\u201cbpgame008\u201d\u5fae\u4fe1\u5ba2\u670d\u8fdb\u884c\u53cd\u9988\uff01\u70b9\u51fb\u786e\u5b9a\u590d\u5236\u5fae\u4fe1\u53f7",
          button_count: 1,
          onClick: index => {
            inst.setClipboardData({
              data: "bpgame008"
            });
          }
        });
      }
      showModal(obj) {
        swan.showModal(obj);
      }
      purchaseItem(obj) {
        utils_1.utils.is_ios() ? obj.fail && obj.fail({
          errMsg: "\u6839\u636e\u82f9\u679c\u516c\u53f8\u8981\u6c42\uff0c\u6682\u4e0d\u63d0\u4f9b\u652f\u4ed8\u529f\u80fd"
        }) : global_data_1.global_data.have_channel_pay() ? inst.purchase(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchase(obj) {
        console.log(`\u83b7\u53d6\u8ba2\u5355\u53f7 ${obj.id} ${obj.price}`);
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_CREATEORDER);
        url = utils_1.utils.string_replace_any(url, "{MONEY}", obj.price);
        url = utils_1.utils.string_replace_any(url, "{PAYTYPE}", global_define_1.CONST.PAY_TYPE_BAIDU);
        url = utils_1.utils.string_replace_any(url, "{FUNDTYPE}", 0);
        url = utils_1.utils.string_replace_any(url, "{LOCATION}", utils_1.utils.get_last_game_location());
        url = utils_1.utils.string_replace_any(url, "{PRODUCT}", obj.id);
        url = utils_1.utils.string_replace_any(url, "{PAYCHANNEL}", global_define_1.CONST.PAY_TYPE_BAIDU);
        utils_1.utils.show_loading("\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...");
        utils_1.utils.send_http_request({
          url: url,
          success: (orderno, message) => {
            console.log(`\u83b7\u53d6\u8ba2\u5355\u53f7\u8fd4\u56de ${orderno} ${message}`);
            let orderInfo = {
              dealId: global_data_1.global_data.dealid,
              appKey: global_data_1.global_data.cpkey,
              tpOrderId: orderno,
              totalAmount: `${Math.floor(obj.price)}00`
            };
            let str = utils_1.utils.to_json(orderInfo);
            utils_1.utils.show_loading("\u6b63\u5728\u652f\u4ed8...");
            utils_1.utils.send_http_request({
              url: `${global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_PAY)}/sign_baidu.php`,
              method: "POST",
              data: str,
              success: res => {
                console.log(`sign success ${res}`);
                orderInfo["rsaSign"] = res;
                orderInfo["dealTitle"] = obj.name;
                orderInfo["signFieldsRange"] = 1;
                console.log(`orderInfo plain ${utils_1.utils.to_json(orderInfo)}`);
                swan.requestPolymerPayment({
                  orderInfo: orderInfo,
                  bannedChannels: [ "ApplePay" ],
                  success: ret => {
                    console.log("Pay success", ret);
                    utils_1.utils.show_hint("\u8d2d\u4e70\u6210\u529f!");
                    global_data_1.global_data.request_user_data();
                  },
                  fail: error => {
                    console.log("Pay fail", error.errCode, error.errMsg);
                    obj.fail && obj.fail({
                      errMsg: "\u8d2d\u4e70\u5931\u8d25"
                    });
                  },
                  complete: () => {
                    utils_1.utils.hide_loading();
                  }
                });
              },
              fail: res => {
                console.log(`sign fail ${res}`);
                obj.fail && obj.fail({
                  errMsg: "\u7b7e\u540d\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"
                });
                utils_1.utils.hide_loading();
              },
              complete: () => {
                console.log("sign complete");
              },
              progress: function(timeLeft) {
                utils_1.utils.show_loading_text(`\u6b63\u5728\u652f\u4ed8...(${timeLeft}s)`);
              }
            });
          },
          fail: res => {
            console.log("order fail", res);
            obj.fail && obj.fail({
              errMsg: "\u8bf7\u6c42\u8ba2\u5355\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"
            });
          },
          complete: function() {
            utils_1.utils.hide_loading();
          },
          progress: function(timeLeft) {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...(${timeLeft}s)`);
          }
        });
      }
      getSystemInfo(obj) {
        swan.getSystemInfo({
          success: res => {
            inst.systemInfo = res;
            obj.success && obj.success();
          },
          fail: res => {
            obj.fail && obj.fail(res);
          },
          complete: () => {
            obj.complete && obj.complete();
          }
        });
      }
      exitMiniProgram(obj) {
        swan.exit(obj);
      }
      setKeepScreenOn(obj) {
        swan.setKeepScreenOn && swan.setKeepScreenOn(obj);
      }
      getBatteryInfo(obj) {
        if (utils_1.utils.compare_version(swan.getSystemInfoSync().SDKVersion, "3.30.2") < 0) {
          obj.success && obj.success({
            level: "80",
            isCharging: false
          });
          obj.complete && obj.complete();
        } else swan.getBatteryInfo(obj);
      }
      getBatteryInfoSync() {
        return utils_1.utils.compare_version(swan.getSystemInfoSync().SDKVersion, "3.30.2") < 0 ? {
          level: "80",
          isCharging: false
        } : swan.getBatteryInfoSync();
      }
      getShortCutInfo(obj) {
        obj.fail && obj.fail({
          errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(0)"
        });
        obj.complete && obj.complete();
      }
      createShortCut(obj) {
        obj.fail && obj.fail({
          errMsg: "\u521b\u5efa\u684c\u9762\u56fe\u6807\u5931\u8d25(0)"
        });
        obj.complete && obj.complete();
      }
      getLaunchOptionsSync() {
        return swan.getLaunchOptionsSync();
      }
      triggerGC(obj) {
        swan.triggerGC();
      }
      cleanAllCachesByUrl(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data = res.data;
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "Baidu";
      }
      getLoginCodeSync() {
        return inst.code;
      }
      getUserPathSync() {
        return swan.env.USER_DATA_PATH;
      }
      onError(func) {
        swan.onError(func);
      }
      onHide(func) {
        swan.onHide(func);
      }
      onShow(func) {
        swan.onShow(func);
      }
      onShowCallback(res) {}
      onHideCallback(res) {}
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        swan.onNetworkStatusChange(func);
      }
      writeFile(obj) {
        try {
          "binary" == obj.encoding ? fs.writeFileSync(obj.filePath, obj.data) : fs.writeFileSync(obj.filePath, obj.data, obj.encoding);
          obj.success && obj.success();
        } catch (e) {
          obj.fail && obj.fail({
            errMsg: String(e)
          });
        }
        obj.complete && obj.complete();
      }
      deleteFile(obj) {
        fs.unlink(obj);
      }
    }
    exports.platform_baidu = platform_baidu;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "./platform_base": "platform_base"
  } ],
  platform_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fb493sRLsdIBY/F3aYg5ou3", "platform_base");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_base = void 0;
    const platform_1 = require("./platform");
    class platform_base {
      init() {
        console.log("Platform function missing: init");
      }
      initLobby(obj) {
        console.log("Platform function missing: initLobby");
      }
      login(obj) {
        try {
          platform_1.platform.g.login(obj);
        } catch (e) {
          console.log("Platform function missing: login");
        }
      }
      createUserInfoButton(obj) {
        try {
          platform_1.platform.g.createUserInfoButton(obj);
        } catch (e) {
          console.log("Platform function missing: createUserInfoButton");
        }
      }
      share(obj) {
        try {
          platform_1.platform.g.share(obj);
        } catch (e) {
          console.log("Platform function missing: share");
        }
      }
      checkVersionSync(ver) {
        try {
          platform_1.platform.g.checkVersionSync(ver);
        } catch (e) {
          console.log("Platform function missing: checkVersionSync");
        }
        return false;
      }
      readZipFile(obj) {
        try {
          platform_1.platform.g.readZipFile(obj);
        } catch (e) {
          console.log("Platform function missing: readZipFile");
        }
      }
      getNetworkType(obj) {
        try {
          platform_1.platform.g.getNetworkType(obj);
        } catch (e) {
          console.log("Platform function missing: getNetworkType");
        }
      }
      checkRewardedVideoAdSync() {
        try {
          return platform_1.platform.g.checkRewardedVideoAdSync();
        } catch (e) {
          console.log("Platform function missing: checkRewardedVideoAdSync");
        }
        return {
          available: false,
          reason: ""
        };
      }
      playRewardedVideoAd(obj) {
        try {
          platform_1.platform.g.playRewardedVideoAd(obj);
        } catch (e) {
          console.log("Platform function missing: playRewardedVideoAd");
        }
      }
      setClipboardData(obj) {
        try {
          platform_1.platform.g.setClipboardData(obj);
        } catch (e) {
          console.log("Platform function missing: setClipboardData");
        }
      }
      openCustomerServiceConversation(obj) {
        try {
          platform_1.platform.g.openCustomerServiceConversation(obj);
        } catch (e) {
          console.log("Platform function missing: openCustomerServiceConversation");
        }
      }
      showModal(obj) {
        try {
          platform_1.platform.g.showModal(obj);
        } catch (e) {
          console.log("Platform function missing: showModal");
        }
      }
      purchaseItem(obj) {
        try {
          platform_1.platform.g.purchaseItem(obj);
        } catch (e) {
          console.log("Platform function missing: purchaseItem");
        }
      }
      getSystemInfo(obj) {
        try {
          platform_1.platform.g.getSystemInfo(obj);
        } catch (e) {
          console.log("Platform function missing: getSystemInfo");
        }
      }
      exitMiniProgram(obj) {
        try {
          platform_1.platform.g.exitMiniProgram(obj);
        } catch (e) {
          console.log("Platform function missing: exitMiniProgram");
        }
      }
      setKeepScreenOn(obj) {
        try {
          platform_1.platform.g.setKeepScreenOn(obj);
        } catch (e) {
          console.log("Platform function missing: setKeepScreenOn");
        }
      }
      getBatteryInfo(obj) {
        try {
          platform_1.platform.g.getBatteryInfo(obj);
        } catch (e) {
          console.log("Platform function missing: getBatteryInfo");
        }
      }
      getBatteryInfoSync() {
        try {
          return platform_1.platform.g.getBatteryInfoSync();
        } catch (e) {
          console.log("Platform function missing: getBatteryInfoSync");
        }
      }
      getShortCutInfo(obj) {
        try {
          platform_1.platform.g.getShortCutInfo(obj);
        } catch (e) {
          console.log("Platform function missing: getShortCutInfo");
        }
      }
      createShortCut(obj) {
        console.log("Platform function missing: createShortCut");
      }
      getLaunchOptionsSync() {
        try {
          return platform_1.platform.g.getLaunchOptionsSync();
        } catch (e) {
          console.log("Platform function missing: getLaunchOptionsSync");
        }
        return {
          scene: "",
          query: null,
          shareTicket: "",
          referrerInfo: {
            appId: "",
            extraData: null
          }
        };
      }
      triggerGC(obj) {
        try {
          platform_1.platform.g.triggerGC(obj);
        } catch (e) {
          console.log("Platform function missing: triggerGC");
        }
      }
      cleanAllCachesByUrl(obj) {
        try {
          platform_1.platform.g.cleanAllCachesByUrl(obj);
        } catch (e) {
          console.log("Platform function missing: cleanAllCachesByUrl");
        }
      }
      cleanAllCaches(obj) {
        try {
          platform_1.platform.g.cleanAllCaches(obj);
        } catch (e) {
          console.log("Platform function missing: cleanAllCaches");
        }
      }
      getFileMD5(obj) {
        try {
          platform_1.platform.g.getFileMD5(obj);
        } catch (e) {
          console.log("Platform function missing: getFileMD5");
        }
      }
      getPlatformStringSync() {
        try {
          return platform_1.platform.g.getPlatformStringSync();
        } catch (e) {
          console.log("Platform function missing: getPlatformStringSync");
        }
        return "";
      }
      getLoginCodeSync() {
        try {
          return platform_1.platform.g.getLoginCodeSync();
        } catch (e) {
          console.log("Platform function missing: getLoginCodeSync");
        }
        return "";
      }
      getUserPathSync() {
        console.log("Platform function missing: getUserPathSync");
        return "";
      }
      onError(func) {
        try {
          platform_1.platform.g.onError(func);
        } catch (e) {
          console.log("Platform function missing: onError");
        }
      }
      onHide(func) {
        try {
          platform_1.platform.g.onHide(func);
        } catch (e) {
          console.log("Platform function missing: onHide");
        }
      }
      onShow(func) {
        try {
          platform_1.platform.g.onShow(func);
        } catch (e) {
          console.log("Platform function missing: onShow");
        }
      }
      onShowCallback(res) {
        try {
          platform_1.platform.g.onShowCallback(res);
        } catch (e) {
          console.log("Platform function missing: onShowCallback");
        }
      }
      onHideCallback(res) {
        try {
          platform_1.platform.g.onHideCallback(res);
        } catch (e) {
          console.log("Platform function missing: onHideCallback");
        }
      }
      onErrorCallback(res) {
        try {
          platform_1.platform.g.onErrorCallback(res);
        } catch (e) {
          console.log("Platform function missing: onErrorCallback");
        }
      }
      onNetworkStatusChange(func) {
        try {
          platform_1.platform.g.onNetworkStatusChange(func);
        } catch (e) {
          console.log("Platform function missing: onNetworkStatusChange");
        }
      }
      writeFile(obj) {
        try {
          platform_1.platform.g.writeFile(obj);
        } catch (e) {
          console.log("Platform function missing: writeFile");
        }
      }
      deleteFile(obj) {
        try {
          platform_1.platform.g.unlink(obj);
        } catch (e) {
          console.log("Platform function missing: deleteFile");
        }
      }
      hasSubscribeSync() {
        return false;
      }
      requestSubscribe(obj) {
        console.log("Platform function missing: requestSubscribe");
      }
      checkSubscribe(obj) {
        console.log("Platform function missing: checkSubscribe");
      }
      joinVluPChat(obj) {
        console.log("Platform function missing: joinVluPChat");
      }
      exitVoIPChat(obj) {
        console.log("Platform function missing: exitVoIPChat");
      }
      updateVoIPChatMuteConfig(obj) {
        console.log("Platform function missing: updateVoIPChatMuteConfig");
      }
      onVoIPChatMembersChanged(callback) {
        callback && callback();
        console.log("Platform function missing: onVoIPChatMembersChanged");
      }
      offVoIPChatMembersChanged(callback) {
        callback && callback();
        console.log("Platform function missing: offVoIPChatMembersChanged");
      }
      onVoIPChatSpeakersChanged(callback) {
        callback && callback();
        console.log("Platform function missing: onVoIPChatSpeakersChanged");
      }
      offVoIPChatSpeakersChanged(callback) {
        callback && callback();
        console.log("Platform function missing: offVoIPChatSpeakersChanged");
      }
      onVoIPChatInterrupted(callback) {
        callback && callback();
        console.log("Platform function missing: onVoIPChatInterrupted");
      }
      offVoIPChatInterrupted(callback) {
        callback && callback();
        console.log("Platform function missing: offVoIPChatInterrupted");
      }
      checkMicrophone(obj, isShowHint) {
        console.log("Platform function missing: checkMicrophone");
      }
      checkSession(obj) {
        console.log("Platform function missing: checkSession");
      }
      checkAndGetLocation(obj) {
        console.log("Platform function missing: getLocation");
      }
      vibrateShort(obj) {
        console.log("Platform function missing: vibrateShort");
      }
      toTempFilePath(callback) {
        console.log("Platform function missing: toTempFilePath");
      }
    }
    exports.platform_base = platform_base;
    cc._RF.pop();
  }, {
    "./platform": "platform"
  } ],
  platform_huawei: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a63b9uwRdtDCYENBql4hdcj", "platform_huawei");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_huawei = void 0;
    const platform_base_1 = require("./platform_base");
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    const global_define_1 = require("../global_define");
    const JSZip = require("../../thirdparty/jszip.min");
    let fs = null;
    let inst = null;
    class platform_huawei extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.loginData = null;
        this.systemInfo = null;
        this.batteryInfo = {
          level: "80",
          isCharging: false
        };
      }
      init() {
        console.log("platform_huawei init");
        fs = hbs.getFileSystemManager();
        inst = this;
        setInterval(function() {
          hbs.getBatteryInfo({
            success: res => {
              inst.batteryInfo = {
                level: res.level,
                isCharging: false
              };
            }
          });
        }, 3e4);
      }
      initLobby(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        hbs.gameLogin({
          forceLogin: 1,
          appid: global_data_1.global_data.appid,
          success: data => {
            console.log(`hbs.gameLogin success:${data}`);
            inst.loginData = data;
            hbs.showFloatWindow({
              appid: global_data_1.global_data.appid
            });
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: (data, code) => {
            console.log(`hbs.gameLogin fail: (${code})`, data);
            obj.fail && obj.fail({
              errMsg: ""
            });
            obj.complete && obj.complete();
          }
        });
      }
      createUserInfoButton(obj) {
        console.log("Platform function missing: createUserInfoButton");
      }
      share(obj) {
        console.log("Platform function missing: share");
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        inst.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          innerFileName: obj.innerFileName,
          success: () => {
            fs.readFile({
              filePath: obj.path + obj.innerFileName,
              encoding: "utf8",
              success: res => {
                console.log(`read_file success ${obj.innerFileName} ${res}`);
                obj.success && obj.success({
                  data: res.data
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                console.log("read_file fail");
                obj.fail && obj.fail(res);
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      unzip(obj) {
        fs.readFile({
          filePath: obj.zipFilePath,
          encoding: "binary",
          success: res => {
            let data = res.data;
            let new_zip = new JSZip();
            new_zip.loadAsync(data).then(function(zip) {
              return new_zip.file(obj.innerFileName).async("binarystring");
            }).then(data => {
              data = utils_1.utils.gbk_2_utf8(data);
              try {
                fs.writeFile({
                  filePath: `${obj.targetPath}${obj.innerFileName}`,
                  data: data,
                  encoding: "utf8",
                  success: res => {
                    obj.success && obj.success();
                  },
                  fail: res => {
                    obj.fail && obj.fail(res);
                  }
                });
              } catch (e) {
                obj.fail && obj.fail({
                  errMsg: String(e)
                });
              }
            }).catch(res => {
              obj.fail && obj.fail(res);
            });
          },
          fail: (errCode, errMsg) => {
            obj.fail && obj.fail({
              errMsg: errMsg
            });
          }
        });
      }
      getNetworkType(obj) {
        hbs.getNetworkType(obj);
      }
      checkRewardedVideoAdSync() {
        return {
          available: false,
          reason: "\u6682\u672a\u63d0\u4f9b\u5e7f\u544a"
        };
      }
      playRewardedVideoAd(obj) {
        obj.fail && obj.fail({
          errMsg: "\u6682\u672a\u63d0\u4f9b\u5e7f\u544a"
        });
        obj.complete && obj.complete();
      }
      setClipboardData(obj) {
        hbs.setClipboardData({
          data: obj.data,
          success: () => {
            utils_1.utils.show_hint("\u590d\u5236\u6210\u529f\uff01");
          }
        });
      }
      openCustomerServiceConversation(obj) {
        utils_1.utils.show_message_box({
          content: "\u6e38\u620f\u95ee\u9898\uff0c\u53ef\u6dfb\u52a0\u201cbpgame008\u201d\u5fae\u4fe1\u5ba2\u670d\u8fdb\u884c\u53cd\u9988\uff01\u70b9\u51fb\u786e\u5b9a\u590d\u5236\u5fae\u4fe1\u53f7",
          button_count: 1,
          onClick: index => {
            inst.setClipboardData({
              data: "bpgame008"
            });
          }
        });
      }
      showModal(obj) {
        console.log("Platform function missing: showModal");
      }
      purchaseItem(obj) {
        utils_1.utils.is_ios() ? obj.fail && obj.fail({
          errMsg: "\u6839\u636e\u82f9\u679c\u516c\u53f8\u8981\u6c42\uff0c\u6682\u4e0d\u63d0\u4f9b\u652f\u4ed8\u529f\u80fd"
        }) : global_data_1.global_data.have_channel_pay() ? inst.purchase(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchase(obj) {
        console.log(`\u83b7\u53d6\u8ba2\u5355\u53f7 ${obj.id} ${obj.price}`);
        let url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_CREATEORDER);
        url = utils_1.utils.string_replace_any(url, "{MONEY}", obj.price);
        url = utils_1.utils.string_replace_any(url, "{PAYTYPE}", global_define_1.CONST.PAY_TYPE_HUAWEI);
        url = utils_1.utils.string_replace_any(url, "{FUNDTYPE}", 0);
        url = utils_1.utils.string_replace_any(url, "{LOCATION}", utils_1.utils.get_last_game_location());
        url = utils_1.utils.string_replace_any(url, "{PRODUCT}", obj.id);
        url = utils_1.utils.string_replace_any(url, "{PAYCHANNEL}", global_define_1.CONST.PAY_TYPE_HUAWEI);
        utils_1.utils.show_loading("\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...");
        utils_1.utils.send_http_request({
          url: url,
          success: (orderno, message) => {
            utils_1.utils.hide_loading();
            console.log(`\u83b7\u53d6\u8ba2\u5355\u53f7\u8fd4\u56de ${orderno} ${message}`);
            let orderInfo = {
              amount: obj.price.toFixed(2),
              applicationID: global_data_1.global_data.appid,
              merchantId: global_data_1.global_data.cpid,
              productDesc: obj.name,
              productName: obj.name,
              requestId: orderno,
              sdkChannel: 3
            };
            let str = utils_1.utils.to_json(orderInfo);
            utils_1.utils.show_loading("\u6b63\u5728\u652f\u4ed8...");
            utils_1.utils.send_http_request({
              url: `${global_data_1.global_data.make_url(global_define_1.CONST.HTTP_MINIGAME_PAY)}/huawei.php`,
              method: "POST",
              data: str,
              success: res => {
                console.log(`sign success ${res}`);
                orderInfo["serviceCatalog"] = "X6";
                orderInfo["merchantName"] = "\u676d\u5dde\u51b0\u9b44\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8";
                orderInfo["sign"] = res;
                orderInfo["urlver"] = "2";
                orderInfo["publicKey"] = global_data_1.global_data.pay_pkey;
                hbs.hwPay({
                  orderInfo: orderInfo,
                  success: ret => {
                    console.log(`Pay success ${ret}`);
                    setTimeout(() => {
                      utils_1.utils.show_hint("\u8d2d\u4e70\u6210\u529f!");
                    }, 500);
                    global_data_1.global_data.request_user_data();
                    utils_1.utils.hide_loading();
                  },
                  fail: (erromsg, errocode) => {
                    console.log(`Pay fail ${erromsg} ${errocode}`);
                    setTimeout(() => {
                      obj.fail && obj.fail({
                        errMsg: `\u8d2d\u4e70\u5931\u8d25 ${erromsg} (${errocode})`
                      });
                      global_data_1.global_data.request_user_data();
                    }, 500);
                    utils_1.utils.hide_loading();
                  }
                });
              },
              fail: res => {
                console.log(`sign fail ${res}`);
                obj.fail && obj.fail({
                  errMsg: "\u7b7e\u540d\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"
                });
                utils_1.utils.hide_loading();
              },
              complete: () => {
                console.log("sign complete");
              },
              progress: function(timeLeft) {
                utils_1.utils.show_loading_text(`\u6b63\u5728\u652f\u4ed8...(${timeLeft}s)`);
              }
            });
          },
          fail: res => {
            console.log(`\u8bf7\u6c42\u8ba2\u5355\u5931\u8d25 ${res}`);
            obj.fail && obj.fail({
              errMsg: "\u8bf7\u6c42\u8ba2\u5355\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"
            });
            utils_1.utils.hide_loading();
          },
          complete: () => {},
          progress: timeLeft => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...(${timeLeft}s)`);
          }
        });
      }
      getSystemInfo(obj) {
        hbs.getSystemInfo({
          success: res => {
            inst.systemInfo = res;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      exitMiniProgram(obj) {
        hbs.exitApplication(obj);
      }
      setKeepScreenOn(obj) {
        hbs.setKeepScreenOn(obj);
      }
      getBatteryInfo(obj) {
        hbs.getBatteryInfo(obj);
      }
      getBatteryInfoSync() {
        return inst.batteryInfo;
      }
      getShortCutInfo(obj) {
        obj.fail && obj.fail({
          errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(1)(0)"
        });
        obj.complete && obj.complete();
      }
      createShortCut(obj) {
        obj.fail && obj.fail({
          errMsg: "\u521b\u5efa\u684c\u9762\u56fe\u6807\u5931\u8d25(0)"
        });
        obj.complete && obj.complete();
      }
      getLaunchOptionsSync() {
        let res = hbs.getLaunchOptionsSync();
        return {
          scene: "-1",
          query: {},
          shareTicket: "",
          referrerInfo: {
            appId: "",
            extraData: res
          }
        };
      }
      triggerGC(obj) {
        hbs.triggerGC();
      }
      cleanAllCachesByUrl(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data = res.data;
                data = utils_1.utils.ab2str(data, true);
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "Huawei";
      }
      getLoginCodeSync() {
        if (!inst.loginData) return "NONE";
        let code = {
          appid: global_data_1.global_data.appid,
          cpid: global_data_1.global_data.cpid,
          level: `${inst.loginData.playerLevel}`,
          uid: inst.loginData.playerId,
          ts: inst.loginData.ts,
          sign: inst.loginData.gameAuthSign
        };
        return utils_1.utils.to_json(code);
      }
      getUserPathSync() {
        return hbs.env.USER_DATA_PATH;
      }
      onError(func) {
        hbs.onError(func);
      }
      onHide(func) {
        hbs.onHide(func);
      }
      onShow(func) {
        hbs.onShow(func);
      }
      onShowCallback(res) {
        inst.loginData && hbs.showFloatWindow({
          appid: global_data_1.global_data.appid
        });
      }
      onHideCallback(res) {
        hbs.hideFloatWindow({
          appid: global_data_1.global_data.appid
        });
      }
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        hbs.onNetworkStatusChange(func);
      }
      writeFile(obj) {
        console.log(obj);
        fs.writeFile(obj);
      }
      deleteFile(obj) {
        fs.unlink(obj);
      }
    }
    exports.platform_huawei = platform_huawei;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../thirdparty/jszip.min": "jszip.min",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "./platform_base": "platform_base"
  } ],
  platform_mi: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b5707H2f5JHqJ2b/HDd/2Jf", "platform_mi");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_mi = void 0;
    const platform_base_1 = require("./platform_base");
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    let fs = null;
    let inst = null;
    class platform_mi extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.appAccountId = "";
        this.session = "";
        this.systemInfo = null;
      }
      init() {
        console.log("platform_mi init");
        fs = qg.getFileSystemManager();
        inst = this;
      }
      initLobby(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        qg.login({
          success: res => {
            inst.appAccountId = res.data.appAccountId;
            inst.session = res.data.session;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail({
              errMsg: "\u5c0f\u7c73\u8d26\u53f7\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u73af\u5883\u540e\u91cd\u8bd5\u3002"
            });
            obj.complete && obj.complete();
          }
        });
      }
      createUserInfoButton(obj) {
        console.log("Platform function missing: createUserInfoButton");
      }
      share(obj) {
        console.log("Platform function missing: share");
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        fs.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          innerFileName: obj.innerFileName,
          success: res => {
            fs.readFile({
              filePath: obj.path + obj.innerFileName,
              encoding: "binary",
              success: res => {
                let out = utils_1.utils.gbk_2_utf8(res.data);
                obj.success && obj.success({
                  data: out
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                console.log("read_file fail", res.errMsg);
                obj.fail && obj.fail(res);
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            console.log(`unzip fail: ${res.errMsg}`);
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      getNetworkType(obj) {
        qg.getNetworkType(obj);
      }
      checkRewardedVideoAdSync() {
        if (!global_data_1.global_data.video_ad_id) return {
          available: false,
          reason: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08-1\uff09"
        };
        if (qg.getSystemInfoSync().platformVersion < 1050) return {
          available: false,
          reason: "\u5feb\u5e94\u7528\u7248\u672c\u8fc7\u4f4e\uff0c\u4e0d\u652f\u6301\u64ad\u653e\u89c6\u9891\uff0c\u8bf7\u5347\u7ea7\u3002"
        };
        return {
          available: true,
          reason: ""
        };
      }
      playRewardedVideoAd(obj) {
        let videoAd = qg.createRewardedVideoAd({
          adUnitId: global_data_1.global_data.video_ad_id
        });
        let onLoad = function() {
          videoAd.offLoad(onLoad);
          videoAd.show();
        };
        let onClose = res => {
          videoAd.offClose(onLoad);
          if (res && res.isEnded) {
            obj.success && obj.success();
            obj.complete && obj.complete();
          } else {
            obj.fail && obj.fail({
              errMsg: "\u6fc0\u52b1\u89c6\u9891\u5e7f\u544a\u53d6\u6d88\u5173\u95ed\uff0c\u4e0d\u53d1\u653e\u5956\u52b1"
            });
            obj.complete && obj.complete();
          }
        };
        let onError = res => {
          videoAd.offError(onLoad);
          obj.fail && obj.fail({
            errMsg: `${res.errMsg} (${res.errCode})`
          });
          obj.complete && obj.complete();
        };
        videoAd.onLoad(onLoad);
        videoAd.onClose(onClose);
        videoAd.onError(onError);
        videoAd.load();
      }
      setClipboardData(obj) {
        qg.setClipboardData(obj);
      }
      openCustomerServiceConversation(obj) {
        utils_1.utils.show_message_box({
          content: "\u6e38\u620f\u95ee\u9898\uff0c\u53ef\u6dfb\u52a0\u201cbpgame008\u201d\u5fae\u4fe1\u5ba2\u670d\u8fdb\u884c\u53cd\u9988\uff01\u70b9\u51fb\u786e\u5b9a\u590d\u5236\u5fae\u4fe1\u53f7",
          button_count: 1,
          onClick: index => {
            inst.setClipboardData({
              data: "bpgame008"
            });
            utils_1.utils.show_hint("\u60a8\u5df2\u6210\u529f\u590d\u5236 bpgame008 \u5fae\u4fe1\u53f7");
          }
        });
      }
      showModal(obj) {
        console.log("Platform function missing: showModal");
      }
      purchaseItem(obj) {
        global_data_1.global_data.have_channel_pay() ? inst.purchase(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchase(obj) {
        let url_sign = "https://open.bookse.cn/api.svc/api";
        let data = {
          head: {
            FunctionCode: "CreateOrder",
            session: global_data_1.global_data.get_the_user_data()._str_session
          },
          reqdata: {
            userid: global_data_1.global_data.get_the_user_data()._int_user_id,
            areaid: global_data_1.global_data.area_id,
            kindid: global_data_1.global_data.kind_id,
            money: obj.price,
            paytypeid: 3005,
            product: obj.id,
            order_serialid: "",
            pay_sceneid: 3,
            paychannel: 0,
            keyword: global_data_1.global_data.keyword,
            version: global_data_1.global_data.version
          }
        };
        let post_data = utils_1.utils.to_json(data);
        utils_1.utils.show_loading("\u6b63\u5728\u83b7\u53d6\u7b7e\u540d...");
        utils_1.utils.send_http_request({
          url: url_sign,
          hint: true,
          method: "POST",
          data: post_data,
          success: data => {
            let orderno = data;
            let xiaomiInfo = {
              appId: global_data_1.global_data.appid,
              appAccountId: inst.appAccountId,
              session: inst.session,
              cpOrderId: orderno,
              cpUserInfo: orderno,
              displayName: name,
              feeValue: String(100 * obj.price)
            };
            console.log(`xiaomiInfo plain ${utils_1.utils.to_json(xiaomiInfo)}`);
            let str = utils_1.utils.to_json(xiaomiInfo);
            let url = "https://open.73sy.com/pay/sign_xiaomi.php";
            utils_1.utils.show_loading("\u6b63\u5728\u8bf7\u6c42\u652f\u4ed8...");
            utils_1.utils.send_http_request({
              url: url,
              method: "POST",
              data: str,
              success: res => {
                console.log("xiaomi_http_post_request success :" + res);
                qg.pay({
                  orderInfo: {
                    appId: global_data_1.global_data.appid,
                    appAccountId: inst.appAccountId,
                    session: inst.session,
                    cpOrderId: orderno,
                    cpUserInfo: orderno,
                    displayName: name,
                    feeValue: (100 * obj.price).toString(),
                    sign: res
                  },
                  success: res => {
                    console.log(`Pay success ${utils_1.utils.to_json(res.data)}`);
                    setTimeout(() => {
                      utils_1.utils.show_hint("\u8d2d\u4e70\u6210\u529f!");
                    }, 500);
                    global_data_1.global_data.request_user_data();
                  },
                  fail: erromsg => {
                    console.log(`Pay fail erromsg ${utils_1.utils.to_json(erromsg)}`);
                    setTimeout(() => {
                      obj.fail && obj.fail({
                        errMsg: `\u8d2d\u4e70\u5931\u8d25 ${utils_1.utils.to_json(erromsg.memo)}`
                      });
                    }, 500);
                  },
                  complete: () => {
                    utils_1.utils.hide_loading();
                  }
                });
              },
              fail: res => {
                console.log(`request pay fail ${res}`);
                obj.fail && obj.fail({
                  errMsg: `\u652f\u4ed8\u5931\u8d25...${res}`
                });
                utils_1.utils.hide_loading();
              },
              complete: () => {
                console.log("request pay complete");
              },
              progress: t => {
                utils_1.utils.show_loading_text(`\u6b63\u5728\u652f\u4ed8...(${t}s)`);
              }
            });
          },
          fail: res => {
            console.log("sign fail ", res);
            obj.fail && obj.fail({
              errMsg: "\u83b7\u53d6\u7b7e\u540d\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\u3002"
            });
          },
          progress: t => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u83b7\u53d6\u7b7e\u540d...(${t}s)`);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      getSystemInfo(obj) {
        qg.getSystemInfo({
          success: res => {
            inst.systemInfo = res;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      exitMiniProgram(obj) {
        qg.exitApplication(obj);
      }
      setKeepScreenOn(obj) {
        qg.setKeepScreenOn(obj);
      }
      getBatteryInfo(obj) {
        qg.getBatteryInfo({
          success: res => {
            obj.success && obj.success({
              level: String(Math.floor(100 * res.level)),
              isCharging: false
            });
            obj.complete && obj.complete();
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "qg.getBatteryInfo fail"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getBatteryInfoSync() {
        return {
          level: "80",
          isCharging: false
        };
      }
      getShortCutInfo(obj) {
        qg.getShortcut().hasInstalled({
          success: res => {
            if (res) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(2)"
              });
              obj.complete && obj.complete();
            }
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(1)"
            });
            obj.complete && obj.complete();
          }
        });
      }
      createShortCut(obj) {
        qg.getShortcut().install({
          message: "\u521b\u5efa\u684c\u9762\u56fe\u6807\u5956\u52b11000\u91d1\u5e01",
          success: () => {
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u521b\u5efa\u684c\u9762\u56fe\u6807(1)"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getLaunchOptionsSync() {
        return qg.getLaunchOptionsSync();
      }
      triggerGC(obj) {
        qg.triggerGC();
      }
      cleanAllCachesByUrl(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data = res.data;
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "Xiaomi";
      }
      getLoginCodeSync() {
        let code = {
          uid: String(inst.appAccountId),
          session: inst.session
        };
        return utils_1.utils.to_json(code);
      }
      getUserPathSync() {
        return qg.env.USER_DATA_PATH;
      }
      onError(func) {}
      onHide(func) {
        qg.onHide(func);
      }
      onShow(func) {
        qg.onShow(func);
      }
      onShowCallback(res) {}
      onHideCallback(res) {}
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        qg.onNetworkStatusChange(func);
      }
      writeFile(obj) {
        console.log(obj);
        fs.writeFile(obj);
      }
      deleteFile(obj) {
        fs.unlink(obj);
      }
    }
    exports.platform_mi = platform_mi;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "./platform_base": "platform_base"
  } ],
  platform_oppo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "338bfZYhfVHJ5sMzWddCUDt", "platform_oppo");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_oppo = void 0;
    const platform_base_1 = require("./platform_base");
    const global_data_1 = require("../global_data");
    const utils_1 = require("../../common/utils");
    const global_define_1 = require("../global_define");
    const lobby_framework_1 = require("../lobby_framework");
    let fs = null;
    let inst = null;
    class platform_oppo extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.systemInfo = null;
        this.initAdService = false;
        this.engine_version = "";
        this.code = null;
      }
      init() {
        console.log("platform_oppo init");
        fs = qg.getFileSystemManager();
        inst = this;
      }
      initLobby(obj) {
        qg.initAdService({
          appId: global_data_1.global_data.appid,
          isDebug: false,
          success: () => {
            inst.initAdService = true;
          },
          fail: () => {
            inst.initAdService = false;
          },
          complete: () => {}
        });
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        qg.login({
          success: res => {
            inst.code = res.data.token;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail({
              errMsg: "OPPO\u8d26\u53f7\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u73af\u5883\u540e\u91cd\u8bd5\u3002"
            });
            obj.complete && obj.complete();
          }
        });
      }
      createUserInfoButton(obj) {}
      share(obj) {
        console.log("Platform function missing: share");
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        fs.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          innerFileName: obj.innerFileName,
          success: res => {
            fs.readFile({
              filePath: obj.path + obj.innerFileName,
              encoding: "binary",
              success: res => {
                let out = utils_1.utils.gbk_2_utf8(res.data);
                obj.success && obj.success({
                  data: out
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                console.log("read_file fail", res.errMsg);
                obj.fail && obj.fail(res);
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            console.log(`unzip fail: ${res.errMsg}`);
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      getNetworkType(obj) {
        qg.getNetworkType(obj);
      }
      checkRewardedVideoAdSync() {
        if (!global_data_1.global_data.video_ad_id) return {
          available: false,
          reason: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08-1\uff09"
        };
        if (qg.getSystemInfoSync().platformVersion < 1040) return {
          available: false,
          reason: "\u5feb\u5e94\u7528\u7248\u672c\u8fc7\u4f4e\uff0c\u4e0d\u652f\u6301\u64ad\u653e\u89c6\u9891\uff0c\u8bf7\u5347\u7ea7\u3002"
        };
        return {
          available: true,
          reason: ""
        };
      }
      playRewardedVideoAd(obj) {
        if (inst.initAdService) {
          let videoAd = qg.createRewardedVideoAd({
            posId: global_data_1.global_data.video_ad_id
          });
          videoAd.load();
          videoAd.onLoad(function() {
            videoAd.show();
          });
          videoAd.onVideoStart(() => {
            console.log("oppo videoAd start ");
          });
          videoAd.onClose(res => {
            if (res && res.isEnded) {
              obj.success();
              obj.complete();
            } else {
              obj.fail({
                errMsg: "\u6fc0\u52b1\u89c6\u9891\u5e7f\u544a\u53d6\u6d88\u5173\u95ed\uff0c\u4e0d\u53d1\u653e\u5956\u52b1"
              });
              obj.complete();
            }
          });
          videoAd.onError(err => {
            obj.fail({
              errMsg: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08" + (err.errCode ? err.errCode : 0) + "\uff09\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002"
            });
            obj.complete();
          });
        } else {
          obj.fail({
            errMsg: "\u6fc0\u52b1\u89c6\u9891\u5e7f\u544a\u521d\u59cb\u5316\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5"
          });
          obj.complete();
        }
      }
      setClipboardData(obj) {
        qg.setClipboardData(obj);
      }
      openCustomerServiceConversation(obj) {
        utils_1.utils.show_message_box({
          content: "\u6e38\u620f\u95ee\u9898\uff0c\u53ef\u6dfb\u52a0\u201cbpgame008\u201d\u5fae\u4fe1\u5ba2\u670d\u8fdb\u884c\u53cd\u9988\uff01\u70b9\u51fb\u786e\u5b9a\u590d\u5236\u5fae\u4fe1\u53f7",
          button_count: 1,
          onClick: index => {
            inst.setClipboardData({
              data: "bpgame008"
            });
            utils_1.utils.show_hint("\u60a8\u5df2\u6210\u529f\u590d\u5236 bpgame008 \u5fae\u4fe1\u53f7");
          }
        });
      }
      showModal(obj) {
        console.log("Platform function missing: showModal");
      }
      purchaseItem(obj) {
        utils_1.utils.is_ios() ? obj.fail && obj.fail({
          errMsg: "\u6839\u636e\u82f9\u679c\u516c\u53f8\u8981\u6c42\uff0c\u6682\u4e0d\u63d0\u4f9b\u652f\u4ed8\u529f\u80fd"
        }) : global_data_1.global_data.have_channel_pay() ? inst.purchase(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchase(obj) {
        let source_str = "";
        source_str = global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME ? global_data_1.global_data.kind_id + "0" : global_data_1.global_data.kind_id + "" + lobby_framework_1.lobby_framework.get_current_room_data()._int_room_id;
        let user_id = String(global_data_1.global_data.get_the_user_data()._int_user_id);
        let kind_id = String(global_data_1.global_data.kind_id);
        let oppoInfo = {
          appId: global_data_1.global_data.appid,
          openId: inst.code,
          userid: user_id,
          productid: obj.id,
          appid: kind_id,
          source: source_str,
          appVersion: global_data_1.global_data.version_name,
          engineVersion: inst.engine_version,
          session: global_data_1.global_data.get_the_user_data()._str_session
        };
        console.log(`oppoInfo plain ${utils_1.utils.to_json(oppoInfo)}`);
        let str = utils_1.utils.to_json(oppoInfo);
        utils_1.utils.show_loading("\u6b63\u5728\u8bf7\u6c42\u652f\u4ed8...");
        let url = "https://open.73sy.com/pay/oppo_pay_order.php";
        utils_1.utils.send_http_request({
          url: url,
          method: "POST",
          data: str,
          success: res => {
            console.log("oppo_http_post_request success" + res);
            qg.pay({
              orderNo: res.orderNo,
              appId: global_data_1.global_data.appid,
              token: inst.code,
              timestamp: res.timestamp,
              paySign: res.paySign,
              success: res => {
                console.log(`Pay success ${utils_1.utils.to_json(res.data)}`);
                setTimeout(() => {
                  utils_1.utils.show_hint("\u8d2d\u4e70\u6210\u529f!");
                }, 500);
                global_data_1.global_data.request_user_data();
              },
              fail: erromsg => {
                console.log(`Pay fail erromsg ${utils_1.utils.to_json(erromsg)}`);
                setTimeout(() => {
                  obj.fail && obj.fail({
                    errMsg: `\u8d2d\u4e70\u5931\u8d25 ${utils_1.utils.to_json(erromsg.code)}`
                  });
                }, 500);
              },
              complete: () => {
                utils_1.utils.hide_loading();
              }
            });
          },
          fail: res => {
            console.log(`request pay fail ${res}`);
            obj.fail && obj.fail({
              errMsg: `\u652f\u4ed8\u5931\u8d25...${res}`
            });
            utils_1.utils.hide_loading();
          },
          complete: () => {
            console.log("request pay complete");
          },
          progress: function(timeLeft) {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u652f\u4ed8...(${timeLeft}s)`);
          }
        });
      }
      getSystemInfo(obj) {
        qg.getSystemInfo({
          success: res => {
            inst.systemInfo = res;
            inst.engine_version = res.platformVersion;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      exitMiniProgram(obj) {
        qg.exitQuickGame(obj);
      }
      setKeepScreenOn(obj) {
        qg.setKeepScreenOn(obj);
      }
      getBatteryInfo(obj) {
        qg.getBatteryInfo(obj);
      }
      getBatteryInfoSync() {
        return qg.getBatteryInfoSync();
      }
      getShortCutInfo(obj) {
        qg.hasShortcutInstalled({
          success: res => {
            if (res) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(2)"
              });
              obj.complete && obj.complete();
            }
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(1)"
            });
            obj.complete && obj.complete();
          }
        });
      }
      createShortCut(obj) {
        qg.installShortcut({
          success: () => {
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u521b\u5efa\u56fe\u6807\u5931\u8d25"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getLaunchOptionsSync() {
        return qg.getLaunchOptionsSync();
      }
      triggerGC(obj) {
        qg.triggerGC();
      }
      cleanAllCachesByUrl(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data_buffer = res.data;
                let data = utils_1.utils.ab2str(data_buffer, true);
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "Oppo";
      }
      getLoginCodeSync() {
        let code = {
          token: inst.code
        };
        return utils_1.utils.to_json(code);
      }
      getUserPathSync() {
        return qg.env.USER_DATA_PATH;
      }
      onError(func) {
        qg.onError(func);
      }
      onHide(func) {
        qg.onHide(func);
      }
      onShow(func) {
        qg.onShow(func);
      }
      onShowCallback(res) {}
      onHideCallback(res) {}
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        qg.onNetworkStatusChange(func);
      }
      writeFile(obj) {
        console.log(obj);
        fs.writeFile(obj);
      }
      deleteFile(obj) {
        fs.unlink(obj);
      }
    }
    exports.platform_oppo = platform_oppo;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../lobby_framework": "lobby_framework",
    "./platform_base": "platform_base"
  } ],
  platform_qq: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b9774VcLpFHeb6xOgoOgMRI", "platform_qq");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_qq = void 0;
    const platform_base_1 = require("./platform_base");
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    let fs = null;
    let inst = null;
    class platform_qq extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.loginData = null;
        this.systemInfo = null;
      }
      init() {
        console.log("platform_qq init");
        fs = BK.fileSystem;
        inst = this;
      }
      initLobby(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        BK.QQ.fetchOpenKey((errCode, cmd, data) => {
          if (0 == errCode) {
            inst.loginData = {};
            inst.loginData.gameId = global_data_1.global_data.qqgameid;
            inst.loginData.openKey = data.openKey;
            Platform.loginData.openId = GameStatusInfo.openId;
            console.log("login => QQ " + utils_1.utils.to_json(inst.loginData));
            obj.success && obj.success();
            obj.complete && obj.complete();
          } else {
            obj.fail && obj.fail({
              errMsg: "QQ\u767b\u9646\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\u3002"
            });
            obj.complete && obj.complete();
          }
        });
      }
      createUserInfoButton(obj) {}
      share(obj) {
        BK.Share.share({
          qqImgUrl: obj.imageUrl,
          isToFriend: true,
          summary: obj.title,
          extendInfo: "",
          success: succObj => {
            console.log("\u5206\u4eab\u6210\u529f", succObj.code, JSON.stringify(succObj.data));
            obj.success && obj.success();
          },
          fail: function(failObj) {
            console.log("\u5206\u4eab\u5931\u8d25", failObj.code, JSON.stringify(failObj.msg));
            obj.fail && obj.fail({
              errMsg: "\u5206\u4eab\u5931\u8d25"
            });
          },
          complete: () => {
            console.log("\u5206\u4eab\u5b8c\u6210");
            obj.complete && obj.complete();
          }
        });
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        inst.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          innerFileName: obj.innerFileName,
          success: () => {
            fs.readFile({
              filePath: obj.path + obj.innerFileName,
              encoding: "binary",
              success: res => {
                let out = utils_1.utils.gbk_2_utf8(res.data);
                obj.success && obj.success({
                  data: out
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                console.log("read_file fail");
                obj.fail && obj.fail(res);
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      unzip(obj) {
        let files = [];
        files.push({
          path: obj.targetPath,
          zipPath: obj.zipFilePath
        });
        BK.fileSystem.unzip({
          file: files,
          success: res => {
            for (var i = 0; i < res.length; i++) if (0 == res[i].errcode) {
              console.log("unzip \u89e3\u538b\u6210\u529f " + res[i].zipPath);
              obj.success && obj.success();
            } else {
              console.log("unzip \u89e3\u538b\u5931\u8d25 " + res[i].zipPath);
              obj.fail && obj.fail({
                errMsg: "\u89e3\u538b\u5931\u8d25"
              });
            }
          },
          fail: res => {
            console.log("\u5f02\u6b65\u89e3\u538b\u8c03\u7528\u5931\u8d25 errcode:" + res.errcode + " msg:" + res.msg);
            obj.fail && obj.fail({
              errMsg: "\u89e3\u538b\u5931\u8d25"
            });
          }
        });
      }
      getNetworkType(obj) {
        let type = BK.getSystemInfoSync().networkType;
        if (type > 0) {
          obj.success && obj.success({
            networkType: "4g"
          });
          obj.complete && obj.complete();
        } else {
          obj.success && obj.success({
            networkType: "wifi"
          });
          obj.complete && obj.complete();
        }
      }
      checkRewardedVideoAdSync() {
        return {
          available: false,
          reason: "\u6682\u672a\u63d0\u4f9b\u5e7f\u544a"
        };
      }
      playRewardedVideoAd(obj) {
        obj.fail && obj.fail({
          errMsg: "\u6682\u672a\u63d0\u4f9b\u5e7f\u544a"
        });
        obj.complete && obj.complete();
      }
      setClipboardData(obj) {
        console.log("Platform function missing: setClipboardData");
        utils_1.utils.show_hint("QQ\u8f7b\u6e38\u620f\u6682\u4e0d\u652f\u6301\u590d\u5236\u526a\u8d34\u677f\uff0c\u8bf7\u624b\u52a8\u8f93\u5165\u3002");
      }
      openCustomerServiceConversation(obj) {
        utils_1.utils.show_message_box({
          content: "\u6e38\u620f\u95ee\u9898\uff0c\u53ef\u6dfb\u52a0\u201cbpgame008\u201d\u5fae\u4fe1\u5ba2\u670d\u8fdb\u884c\u53cd\u9988\uff01\u70b9\u51fb\u786e\u5b9a\u5173\u95ed",
          button_count: 1,
          onClick: index => {}
        });
      }
      showModal(obj) {
        BK.UI.showAlert({
          title: obj.title,
          content: obj.content,
          success: succObj => {
            if (succObj.confirm) {
              BK.Script.log(0, 0, "click confirm");
              obj.success && obj.success(succObj);
            } else if (succObj.cancel) {
              BK.Script.log(0, 0, "click cancel");
              obj.success && obj.success(succObj);
            }
          },
          complete: () => {
            BK.Script.log(0, 0, "complete show");
            obj.complete && obj.complete();
          }
        });
      }
      purchaseItem(obj) {
        global_data_1.global_data.have_channel_pay() ? inst.purchase(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchase(obj) {
        obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u672a\u63a5\u5165"
        });
      }
      getSystemInfo(obj) {
        try {
          inst.systemInfo = BK.getSystemInfoSync();
          obj.success && obj.success();
          obj.complete && obj.complete();
        } catch (e) {
          obj.fail && obj.fail({
            errMsg: String(e)
          });
          obj.complete && obj.complete();
        }
      }
      exitMiniProgram(obj) {
        utils_1.utils.show_hint("\u8bf7\u70b9\u51fb\u7cfb\u7edf\u6309\u94ae\u9000\u51fa\u6e38\u620f\u3002");
      }
      setKeepScreenOn(obj) {
        BK.Device.keepScreenOn({
          isKeepOn: obj.keepScreenOn
        });
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getBatteryInfo(obj) {
        obj.success && obj.success({
          level: "80",
          isCharging: false
        });
        obj.complete && obj.complete();
      }
      getBatteryInfoSync() {
        return {
          level: "80",
          isCharging: false
        };
      }
      getShortCutInfo(obj) {
        obj.fail && obj.fail({
          errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(0)"
        });
        obj.complete && obj.complete();
      }
      createShortCut(obj) {
        obj.fail && obj.fail({
          errMsg: "\u521b\u5efa\u684c\u9762\u56fe\u6807\u5931\u8d25(0)"
        });
        obj.complete && obj.complete();
      }
      getLaunchOptionsSync() {
        let scene = GameStatusInfo.src;
        let query = GameStatusInfo.gameParam;
        return {
          scene: scene,
          query: query,
          shareTicket: "",
          referrerInfo: {
            appId: "",
            extraData: {}
          }
        };
      }
      triggerGC(obj) {
        console.log("QQ\u8f7b\u6e38\u620f\u6ca1\u6709\u4e3b\u52a8\u5783\u573e\u56de\u6536\u63a5\u53e3");
      }
      cleanAllCachesByUrl(obj) {
        console.log("cleanAllCachesByUrl skip");
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data = res.data;
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "QQ";
      }
      getLoginCodeSync() {
        return inst.loginData ? utils_1.utils.to_json(inst.loginData) : "";
      }
      getUserPathSync() {
        return "GameSandBox://user";
      }
      onError(func) {}
      onHide(func) {
        BK.onEnterBackground(func);
      }
      onShow(func) {
        BK.onEnterForeground(func);
      }
      onShowCallback(res) {}
      onHideCallback(res) {}
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        BK.onNetworkChange(data => {
          if (data.state == BK.NetworkState.NoneToMobileNetwork) {
            BK.Script.log(0, 0, "\u4ece\u65e0\u7f51\u7edc\u5230\u79fb\u52a8\u7f51\u7edc");
            func({
              isConnected: true,
              networkType: "4g"
            });
          } else if (data.state == BK.NetworkState.NoneToWifi) {
            BK.Script.log(0, 0, "\u65e0\u7f51\u7edc\u5230WiFi\u7f51\u7edc");
            func({
              isConnected: true,
              networkType: "wifi"
            });
          } else if (data.state == BK.NetworkState.MobileNetworkToWifi) {
            BK.Script.log(0, 0, "\u79fb\u52a8\u7f51\u7edc\u5230WiFi\u7f51\u7edc");
            func({
              isConnected: true,
              networkType: "wifi"
            });
          } else if (data.state == BK.NetworkState.MobileNetworkToNone) {
            BK.Script.log(0, 0, "\u79fb\u52a8\u7f51\u7edc\u5230\u65e0\u7f51\u7edc");
            func({
              isConnected: false,
              networkType: "none"
            });
          } else if (data.state == BK.NetworkState.WifiToNone) {
            BK.Script.log(0, 0, "WiFi\u5230\u65e0\u7f51\u7edc");
            func({
              isConnected: false,
              networkType: "none"
            });
          } else if (data.state == BK.NetworkState.WifiToMobileNetwork) {
            BK.Script.log(0, 0, "WiFi\u5230\u79fb\u52a8\u7f51\u7edc");
            func({
              isConnected: true,
              networkType: "4g"
            });
          }
        });
      }
      writeFile(obj) {
        let files = [];
        files.push({
          path: obj.filePath,
          data: obj.data
        });
        BK.fileSystem.writeFile({
          file: files,
          success: function(res) {
            BK.Script.log(0, 0, "write call back");
            for (var i = 0; i < res.length; i++) if (0 == res[i].errcode) {
              var str = "\u5f02\u6b65\u5199\u6587\u4ef6 \u6210\u529f:" + res[i].path;
              BK.Script.log(1, 1, str);
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              var str = "\u5f02\u6b65\u5199\u6587\u4ef6 \u5931\u8d25:" + res[i].path;
              BK.Script.log(1, 1, str);
              obj.fail && obj.fail({
                errMsg: "\u5f02\u6b65\u5199\u6587\u4ef6\u5931\u8d25"
              });
              obj.complete && obj.complete();
            }
          },
          fail: function(obj) {
            BK.Script.log(1, 1, "\u5f02\u6b65\u5199\u6587\u4ef6\u8c03\u7528\u5931\u8d25 errcode:" + obj.errcode + " msg:" + obj.msg);
            obj.fail && obj.fail({
              errMsg: "\u5f02\u6b65\u5199\u6587\u4ef6\u5931\u8d25"
            });
            obj.complete && obj.complete();
          },
          complete: function() {
            BK.Script.log(1, 1, "\u5f02\u6b65\u5199\u6587\u4ef6\u8c03\u7528\u5b8c\u6210 ");
          }
        });
      }
      deleteFile(obj) {
        try {
          BK.fileSystem.unlinkSync(obj.filePath);
          obj.success && obj.success();
        } catch (e) {
          obj.fail && obj.fail({
            errMsg: "\u5220\u9664\u6587\u4ef6\u5931\u8d25"
          });
        }
        obj.complete && obj.complete();
      }
    }
    exports.platform_qq = platform_qq;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../global_data": "global_data",
    "./platform_base": "platform_base"
  } ],
  platform_types: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6e95dManmZB8IN8fXJPjM2w", "platform_types");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_types = void 0;
    var platform_types;
    (function(platform_types) {
      class CommonFailParameters {}
      platform_types.CommonFailParameters = CommonFailParameters;
      class GetNetworkTypeSuccessParameters {}
      platform_types.GetNetworkTypeSuccessParameters = GetNetworkTypeSuccessParameters;
      class ReadZipFileSuccessParameters {}
      platform_types.ReadZipFileSuccessParameters = ReadZipFileSuccessParameters;
      class ShowModalSuccessParameters {}
      platform_types.ShowModalSuccessParameters = ShowModalSuccessParameters;
      class GetBatteryInfoSuccessParameters {}
      platform_types.GetBatteryInfoSuccessParameters = GetBatteryInfoSuccessParameters;
      class GetFileMD5SuccessParameters {}
      platform_types.GetFileMD5SuccessParameters = GetFileMD5SuccessParameters;
      class onShareAppMessageRet {}
      platform_types.onShareAppMessageRet = onShareAppMessageRet;
      class onErrorParameters {}
      platform_types.onErrorParameters = onErrorParameters;
      class onShowParameters {}
      platform_types.onShowParameters = onShowParameters;
      class onNetworkStatusChangeParameters {}
      platform_types.onNetworkStatusChangeParameters = onNetworkStatusChangeParameters;
      class onHideParameters {}
      platform_types.onHideParameters = onHideParameters;
      class onCheckRewardedVideoAdRet {}
      platform_types.onCheckRewardedVideoAdRet = onCheckRewardedVideoAdRet;
    })(platform_types = exports.platform_types || (exports.platform_types = {}));
    cc._RF.pop();
  }, {} ],
  platform_wechat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cddf7ddGB1InIHblUARw+5H", "platform_wechat");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_wechat = void 0;
    const platform_base_1 = require("./platform_base");
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    const global_define_1 = require("../global_define");
    const qqmapsdk = require("../../thirdparty/qqmap-wx-jssdk");
    let fs = null;
    let inst = null;
    let qqmap = null;
    class platform_wechat extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.userinfo_button = null;
        this.wx_video_ad_inst = null;
        this.code = null;
        this.userInfo = null;
        this.encryptedData = null;
        this.iv = null;
        this.signature = null;
        this.systemInfo = null;
        this.latitude = null;
        this.longitude = null;
        this.orderno = "";
        this.prod_price = "";
      }
      init() {
        console.log("platform_wechat init");
        fs = wx.getFileSystemManager();
        qqmap = new qqmapsdk({
          key: "HCUBZ-RHJ3U-DPHV6-2T6X7-MJMT2-ZFF72"
        });
        inst = this;
      }
      initLobby(obj) {
        wx.showShareMenu();
        wx.onShareAppMessage(function() {
          return {
            title: global_data_1.global_data._str_relief_share_img_text,
            imageUrl: global_data_1.global_data._str_relief_share_img_url
          };
        });
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        wx.login({
          success: res => {
            console.log("wx.login code: " + res.code);
            inst.code = res.code;
            wx.getSetting({
              success: res => {
                var authSetting = res.authSetting;
                if (true === authSetting["scope.userInfo"]) inst.getUserInfo({
                  success: () => {
                    obj.success && obj.success();
                    obj.complete && obj.complete();
                  },
                  fail: () => {
                    obj.fail && obj.fail({
                      errMsg: ""
                    });
                    obj.complete && obj.complete();
                  }
                }); else if (false === authSetting["scope.userInfo"]) inst.showGoToSettingMessagebox(obj); else {
                  obj.fail && obj.fail({
                    errMsg: ""
                  });
                  obj.complete && obj.complete();
                }
              },
              fail: () => {
                console.log("wx.getSetting fail: " + res);
                obj.fail && obj.fail({
                  errMsg: ""
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            console.log("wx.login fail: " + res);
            obj.fail && obj.fail({
              errMsg: res.errMsg
            });
            obj.complete && obj.complete();
          }
        });
      }
      getUserInfo(obj) {
        wx.getUserInfo({
          success: res => {
            console.log("wx.getUserInfo successed.");
            inst.userInfo = res.userInfo;
            inst.encryptedData = encodeURIComponent(res.encryptedData);
            inst.iv = res.iv;
            inst.signature = res.signature;
            console.log("res", res);
            console.log("encryptedData", inst.encryptedData);
            console.log("code", inst.code);
            obj.success && obj.success();
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: ""
            });
          },
          complete: () => {
            obj.complete && obj.complete();
          }
        });
      }
      showGoToSettingMessagebox(obj) {
        wx.showModal({
          title: "\u63d0\u793a",
          content: "\u9700\u8981\u60a8\u5141\u8bb8\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\n\u201c\u786e\u5b9a\u201d\u5c06\u7ee7\u7eed\u8bbe\u7f6e\uff0c\n\u201c\u53d6\u6d88\u201d\u5c06\u8fd4\u56de\u3002",
          showCancel: true,
          cancelText: "\u53d6\u6d88",
          confirmText: "\u786e\u5b9a",
          success: res => {
            res.cancel ? console.log("\u60a8\u70b9\u51fb\u4e86\u53d6\u6d88") : res.confirm && wx.openSetting({
              success: res => {
                false === res.authSetting["scope.userInfo"] ? inst.showGoToSettingMessagebox(obj) : inst.getUserInfo({
                  success: () => {
                    obj.success && obj.success();
                    obj.complete && obj.complete();
                  },
                  fail: () => {
                    obj.fail && obj.fail({
                      errMsg: ""
                    });
                    obj.complete && obj.complete();
                  }
                });
              }
            });
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: ""
            });
            obj.complete && obj.complete();
          }
        });
      }
      showGoToSettingMicrophoneMessagebox(obj) {
        wx.showModal({
          title: "\u63d0\u793a",
          content: "\u9700\u8981\u60a8\u5141\u8bb8\u4f7f\u7528\u9ea6\u514b\u98ce\uff0c\u5c31\u80fd\u8ddf\u597d\u53cb\u8bed\u97f3\u804a\u5929\u4e86~\n\u201c\u786e\u5b9a\u201d\u5c06\u7ee7\u7eed\u8bbe\u7f6e\u3002",
          showCancel: true,
          cancelText: "\u53d6\u6d88",
          confirmText: "\u786e\u5b9a",
          success: res => {
            if (res.cancel) {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
              console.log("\u60a8\u70b9\u51fb\u4e86\u53d6\u6d88");
            } else res.confirm && wx.openSetting({
              success: res => {
                if (false === res.authSetting["scope.record"]) ; else {
                  obj.success && obj.success();
                  obj.complete && obj.complete();
                }
              }
            });
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: ""
            });
            obj.complete && obj.complete();
          }
        });
      }
      createUserInfoButton(obj) {
        wx.login({
          success: res => {
            inst.code = res.code;
            let p = obj.node.convertToWorldSpaceAR(cc.v2(obj.node.width / 2, obj.node.height / 2));
            let s = this.systemInfo.screenHeight / 750;
            let left_ratio = p.x / cc.Canvas.instance.node.width;
            let top_ratio = p.y / cc.Canvas.instance.node.height;
            let target_left = left_ratio * this.systemInfo.screenWidth - obj.node.width * s;
            let target_top = (1 - top_ratio) * this.systemInfo.screenHeight;
            let target_width = obj.node.width * s;
            let target_height = obj.node.height * s;
            console.log("create userinfo button", target_left, target_top, target_width, target_height);
            inst.userinfo_button = wx.createUserInfoButton({
              type: "text",
              text: "",
              withCredentials: true,
              style: {
                left: target_left,
                top: target_top,
                width: target_width,
                height: target_height,
                lineHeight: 12,
                backgroundColor: "#ffffff00",
                color: "#000000",
                textAlign: "center",
                fontSize: 16,
                borderRadius: 4
              }
            });
            inst.userinfo_button.show();
            let onUserInfoButtonTapped = res => {
              if (inst.userinfo_button) if (res && "getUserInfo:ok" == res.errMsg) {
                inst.userInfo = res.userInfo;
                inst.encryptedData = encodeURIComponent(res.encryptedData);
                inst.iv = res.iv;
                inst.signature = res.signature;
                console.log("code:", inst.code, "encryptedData: ", inst.encryptedData, "iv: ", inst.iv);
                console.log("UserInfo res : ", res);
                inst.userinfo_button.offTap(onUserInfoButtonTapped);
                inst.userinfo_button.hide();
                inst.userinfo_button.destroy();
                inst.userinfo_button = null;
                obj.onAccept();
              } else obj.onReject();
            };
            inst.userinfo_button.onTap(onUserInfoButtonTapped);
          }
        });
      }
      share(obj) {
        wx.showShareMenu({
          withShareTicket: true,
          success: () => {
            wx.shareAppMessage({
              title: obj.title,
              imageUrl: obj.imageUrl,
              query: obj.query
            });
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      checkVersionSync(requiredVersion) {
        return utils_1.utils.compare_version(inst.systemInfo.SDKVersion, requiredVersion) >= 0;
      }
      readZipFile(obj) {
        fs.unzip({
          zipFilePath: obj.path + obj.zipFileName,
          targetPath: obj.path,
          innerFileName: obj.innerFileName,
          success: res => {
            fs.readFile({
              filePath: obj.path + obj.innerFileName,
              encoding: "binary",
              success: res => {
                let out = utils_1.utils.gbk_2_utf8(res.data);
                obj.success && obj.success({
                  data: out
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                console.log("read_file fail", res.errMsg);
                obj.fail && obj.fail(res);
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            console.log(`unzip fail: ${res.errMsg}`);
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      getNetworkType(obj) {
        wx.getNetworkType(obj);
      }
      checkRewardedVideoAdSync() {
        if (!global_data_1.global_data.video_ad_id) return {
          available: false,
          reason: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08-1\uff09"
        };
        if (utils_1.utils.compare_version(wx.getSystemInfoSync().SDKVersion, "2.0.4") < 0) return {
          available: false,
          reason: "\u5fae\u4fe1\u7248\u672c\u8fc7\u4f4e\uff0c\u4e0d\u652f\u6301\u64ad\u653e\u89c6\u9891\uff0c\u8bf7\u5347\u7ea7\u5fae\u4fe1\u3002"
        };
        return {
          available: true,
          reason: ""
        };
      }
      playRewardedVideoAd(obj) {
        if (!inst.wx_video_ad_inst) {
          inst.wx_video_ad_inst = wx.createRewardedVideoAd({
            adUnitId: global_data_1.global_data.video_ad_id
          });
          inst.wx_video_ad_inst.onClose(res => {
            if (res && res.isEnded || void 0 === res) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: "\u64ad\u653e\u7ec8\u6b62"
              });
              obj.complete && obj.complete();
            }
          });
          inst.wx_video_ad_inst.onError(err => {
            obj.fail && obj.fail({
              errMsg: "\u65e0\u6cd5\u64ad\u653e\u5e7f\u544a\uff08" + (err.errCode ? err.errCode : 0) + "\uff09\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002"
            });
            obj.complete && obj.complete();
          });
        }
        inst.wx_video_ad_inst.load().then(() => inst.wx_video_ad_inst.show()).catch(err => console.log("exception catch =>", err.errMsg));
      }
      setClipboardData(obj) {
        wx.setClipboardData(obj);
      }
      openCustomerServiceConversation(obj) {
        wx.openCustomerServiceConversation(obj);
      }
      showModal(obj) {
        wx.showModal(obj);
      }
      purchaseItem(obj) {
        utils_1.utils.is_ios() ? global_data_1.global_data.have_wechat_pay() ? inst.purchaseItemNavigation(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        }) : global_data_1.global_data.have_midas_pay() ? inst.purchaseItemMidas(obj) : global_data_1.global_data.have_wechat_pay() ? inst.purchaseItemNavigation(obj) : obj.fail && obj.fail({
          errMsg: "\u652f\u4ed8\u53d7\u9650"
        });
      }
      purchaseItemNavigation(obj) {
        let purchase_app_id = global_data_1.global_data.nav_pay_appid;
        let purchase_path = "pages/gameExChange/gameExChange";
        let purchase_env = global_data_1.global_data.nav_pay_env;
        global_data_1.global_data.nav_guid = utils_1.utils.getGUID();
        let purchase_data = {
          userid: global_data_1.global_data.get_the_user_data()._int_user_id,
          productid: obj.id,
          typeid: 1,
          kindid: global_data_1.global_data.kind_id,
          version: global_data_1.global_data.version,
          areaid: global_data_1.global_data.area_id,
          channel: global_data_1.global_data.channel_id,
          conversation: global_data_1.global_data.nav_guid,
          source: Number(utils_1.utils.get_last_game_location())
        };
        wx.navigateToMiniProgram({
          appId: purchase_app_id,
          path: purchase_path,
          extraData: purchase_data,
          envVersion: purchase_env,
          fail: res => {
            console.log("navigateToMiniProgram fail", res);
            obj.fail && obj.fail({
              errMsg: "\u8d2d\u4e70\u5931\u8d25(4)"
            });
          }
        });
      }
      purchaseItemMidas(obj) {
        let data = {
          head: {
            FunctionCode: "MidasOrder",
            token: "{REQDATA_MD5}"
          },
          reqdata: {
            userid: global_data_1.global_data.get_the_user_data()._int_user_id,
            session: global_data_1.global_data.get_the_user_data()._str_session,
            productid: obj.id,
            areaid: global_data_1.global_data.area_id,
            kindid: global_data_1.global_data.kind_id,
            channel: global_data_1.global_data.channel_id,
            source: Number(utils_1.utils.get_last_game_location())
          }
        };
        let reqdata_md5 = utils_1.utils.req_data_md5(data.reqdata);
        let post_data = utils_1.utils.to_json(data);
        post_data = post_data.replace("{REQDATA_MD5}", reqdata_md5);
        utils_1.utils.show_loading("\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...");
        utils_1.utils.send_http_request({
          url: global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WECHATMINIGAME_PAY),
          hint: true,
          method: "POST",
          data: post_data,
          success: data => {
            inst.orderno = data.orderno;
            inst.prod_price = data.prod_price;
            let balance = data.balance;
            balance < obj.price ? inst.refill(obj) : inst.purchase(obj);
          },
          fail: res => {
            obj.fail && obj.fail({
              errMsg: "\u8bf7\u6c42\u8ba2\u5355\u5931\u8d25"
            });
          },
          progress: t => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...(${t}s)`);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      refill(obj) {
        let quantity = 10 * obj.price;
        let validQuantityArray = [ 10, 30, 60, 80, 120, 180, 250, 300, 400, 450, 500, 600, 680, 730, 780, 880, 980, 1080, 1180, 1280, 1480, 1680, 1880, 1980, 3280, 6480 ];
        if (-1 == validQuantityArray.indexOf(quantity)) {
          console.error("Payment quantity is invalid.");
          obj.fail && obj.fail({
            errMsg: "\u53c2\u6570\u9519\u8bef(1)"
          });
        } else wx.requestMidasPayment({
          mode: "game",
          env: global_data_1.global_data.midas_env,
          offerId: global_data_1.global_data.midas_offer_id,
          currencyType: "CNY",
          platform: wx.getSystemInfoSync().platform,
          buyQuantity: quantity,
          zoneId: "1",
          success: () => {
            inst.purchase(obj);
          },
          fail: res => {
            res.errCode ? 1 == res.errCode ? obj.fail && obj.fail({
              errMsg: "\u8d2d\u4e70\u88ab\u53d6\u6d88"
            }) : obj.fail && obj.fail({
              errMsg: "\u8d2d\u4e70\u5931\u8d25(2)"
            }) : obj.fail && obj.fail({
              errMsg: "\u8d2d\u4e70\u5931\u8d25(1)"
            });
          }
        });
      }
      purchase(obj) {
        let str = "orderno={ORDERNO}&prod_price={PROD_PRICE}";
        str = str.replace("{ORDERNO}", inst.orderno);
        str = str.replace("{PROD_PRICE}", inst.prod_price);
        str += "&key=6457e32211c529f907345c15dd357bab";
        let sign = utils_1.utils.md5(str);
        let data = {
          head: {
            FunctionCode: "MidasPay",
            token: "{REQDATA_MD5}"
          },
          reqdata: {
            sign: sign,
            orderno: inst.orderno,
            prod_price: inst.prod_price
          }
        };
        let reqdata_md5 = utils_1.utils.req_data_md5(data.reqdata);
        let post_data = utils_1.utils.to_json(data);
        post_data = post_data.replace("{REQDATA_MD5}", reqdata_md5);
        utils_1.utils.show_loading("\u6b63\u5728\u8d2d\u4e70...");
        utils_1.utils.send_http_request({
          url: global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WECHATMINIGAME_PAY),
          hint: true,
          method: "POST",
          data: post_data,
          success: () => {
            global_data_1.global_data.request_user_data();
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u8d2d\u4e70\u5931\u8d25(3)"
            });
          },
          progress: t => {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8d2d\u4e70...(${t}s)`);
          },
          complete: () => {
            utils_1.utils.hide_loading();
          }
        });
      }
      getSystemInfo(obj) {
        wx.getSystemInfo({
          success: res => {
            inst.systemInfo = res;
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        });
      }
      exitMiniProgram(obj) {
        wx.exitMiniProgram(obj);
      }
      setKeepScreenOn(obj) {
        wx.setKeepScreenOn(obj);
      }
      getBatteryInfo(obj) {
        wx.getBatteryInfo(obj);
      }
      getBatteryInfoSync() {
        return wx.getBatteryInfoSync();
      }
      getShortCutInfo(obj) {
        obj.fail && obj.fail({
          errMsg: "\u684c\u9762\u56fe\u6807\u672a\u521b\u5efa(0)"
        });
        obj.complete && obj.complete();
      }
      createShortCut(obj) {
        obj.fail && obj.fail({
          errMsg: "\u521b\u5efa\u684c\u9762\u56fe\u6807\u5931\u8d25(0)"
        });
        obj.complete && obj.complete();
      }
      getLaunchOptionsSync() {
        return wx.getLaunchOptionsSync();
      }
      triggerGC(obj) {
        wx.triggerGC();
      }
      cleanAllCachesByUrl(obj) {
        cc.assetManager.cacheManager.clearCache();
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {
        cc.assetManager.cacheManager.clearCache();
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getFileMD5(obj) {
        fs.access({
          path: obj.filePath,
          success: res => {
            fs.readFile({
              filePath: obj.filePath,
              encoding: "binary",
              success: res => {
                let data = res.data;
                if (!data) {
                  obj.success && obj.success({
                    md5Data: "null"
                  });
                  obj.complete && obj.complete();
                  return;
                }
                let ret = utils_1.utils.md5(data);
                obj.success && obj.success({
                  md5Data: ret
                });
                obj.complete && obj.complete();
              },
              fail: res => {
                obj.success && obj.success({
                  md5Data: "null"
                });
                obj.complete && obj.complete();
              }
            });
          },
          fail: res => {
            obj.success && obj.success({
              md5Data: "null"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getPlatformStringSync() {
        return "WXGame";
      }
      getLoginCodeSync() {
        return "NONE";
      }
      getUserPathSync() {
        return wx.env.USER_DATA_PATH;
      }
      onError(func) {
        wx.onError(func);
      }
      onHide(func) {
        wx.onHide(func);
      }
      onShow(func) {
        wx.onShow(func);
      }
      onShowCallback(res) {
        setTimeout(() => {
          if (global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME) {
            let strTime = utils_1.utils.getLocalStorage("lastActiveTime");
            let lastActiveTime = parseInt(strTime, 10);
            let currentTime = new Date().getTime();
            currentTime - lastActiveTime < 3e4 && utils_1.utils.is_wechat() && global_data_1.global_data.game_engine && global_data_1.global_data.game_engine.m_game_id && 150 == global_data_1.global_data.game_engine.m_game_id && console.log("onShowCallback 150");
          }
        }, 1e3);
      }
      onHideCallback(res) {
        if (global_data_1.global_data.get_curr_scene() == global_define_1.CONST.SCENE_GAME && global_data_1.global_data.game_engine && global_data_1.global_data.game_engine.m_game_id && 150 == global_data_1.global_data.game_engine.m_game_id) {
          console.log("onHideCallback 150");
          global_data_1.global_data.game_engine.exitVoIPChat();
          global_data_1.global_data.game_engine.forceMarkDone();
        }
      }
      onErrorCallback(res) {}
      onNetworkStatusChange(func) {
        wx.onNetworkStatusChange(func);
      }
      writeFile(obj) {
        fs.writeFile(obj);
      }
      deleteFile(obj) {
        fs.unlink(obj);
      }
      hasSubscribeSync() {
        return this.checkVersionSync("2.10.1");
      }
      requestSubscribe(obj) {
        wx.requestSubscribeMessage({
          tmplIds: [ obj.id ],
          success: res => {
            console.log("wx.requestSubscribeMessage success", res);
            if (res && "accept" == res[obj.id]) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: "\u8ba2\u9605\u5931\u8d25"
              });
              obj.complete && obj.complete();
            }
          },
          fail: res => {
            console.log("wx.requestSubscribeMessage fail", res);
            obj.fail && obj.fail({
              errMsg: `${res.errMsg}(${res.errCode})`
            });
            obj.complete && obj.complete();
          }
        });
      }
      checkSubscribe(obj) {
        wx.getSetting({
          withSubscriptions: true,
          success: res => {
            console.log("getSetting success", res);
            if (!res || !res.subscriptionsSetting) {
              obj.fail && obj.fail({
                errMsg: "\u672a\u8ba2\u9605"
              });
              obj.complete && obj.complete();
              return;
            }
            if (!res.subscriptionsSetting.mainSwitch) {
              obj.fail && obj.fail({
                errMsg: "\u672a\u8ba2\u9605"
              });
              obj.complete && obj.complete();
              return;
            }
            if (!res.subscriptionsSetting.itemSettings) {
              obj.fail && obj.fail({
                errMsg: "\u672a\u8ba2\u9605"
              });
              obj.complete && obj.complete();
              return;
            }
            if ("accept" == res.subscriptionsSetting.itemSettings[obj.id]) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: "\u672a\u8ba2\u9605"
              });
              obj.complete && obj.complete();
            }
          },
          fail: res => {
            console.log("getSetting fail", res);
            obj.fail && obj.fail({
              errMsg: "\u67e5\u8be2\u8ba2\u9605\u72b6\u6001\u5931\u8d25"
            });
            obj.complete && obj.complete();
          }
        });
      }
      joinVluPChat(obj) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.joinVoIPChat({
          roomType: "voice",
          signature: obj.signature,
          nonceStr: obj.nonceStr,
          timeStamp: Number(obj.timeStamp),
          groupId: obj.groupId,
          muteConfig: {
            muteMicrophone: obj.muteMicrophone,
            muteEarphone: obj.muteEarphone
          },
          success: res => {
            console.log("joinVluPChat success : ", res);
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("joinVluPChat fail", res);
            obj.fail && obj.fail({
              errMsg: res.errMsg
            });
            obj.complete && obj.complete();
          },
          complete: () => {
            console.log("joinVluPChat complete");
          }
        });
      }
      exitVoIPChat(obj) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.exitVoIPChat(obj);
      }
      updateVoIPChatMuteConfig(obj) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.updateVoIPChatMuteConfig({
          muteConfig: {
            muteMicrophone: obj.muteMicrophone,
            muteEarphone: obj.muteEarphone
          },
          success: res => {
            console.log("updateVoIPChatMuteConfig success : ", res);
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("updateVoIPChatMuteConfig fail", res);
            obj.fail && obj.fail({
              errMsg: "\u66f4\u65b0\u8bed\u97f3\u8bbe\u7f6e\u5931\u8d25"
            });
            obj.complete && obj.complete();
          },
          complete: () => {
            console.log("updateVoIPChatMuteConfig complete");
          }
        });
      }
      onVoIPChatMembersChanged(callback) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.onVoIPChatMembersChanged(callback);
      }
      offVoIPChatMembersChanged(callback) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.offVoIPChatMembersChanged(callback);
      }
      onVoIPChatSpeakersChanged(callback) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.onVoIPChatSpeakersChanged(callback);
      }
      offVoIPChatSpeakersChanged(callback) {
        if (!this.checkVersionSync("2.7.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.offVoIPChatSpeakersChanged(callback);
      }
      onVoIPChatInterrupted(callback) {
        if (!this.checkVersionSync("2.9.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.onVoIPChatInterrupted(callback);
      }
      offVoIPChatInterrupted(callback) {
        if (!this.checkVersionSync("2.9.0")) {
          utils_1.utils.show_hint("\u57fa\u7840\u7248\u672c\u5e93\u8fc7\u4f4e,\u8bf7\u5347\u7ea7\u5fae\u4fe1!");
          return;
        }
        wx.offVoIPChatInterrupted(callback);
      }
      checkMicrophone(obj, isShowHint) {
        wx.getSetting({
          success: res => {
            console.log("getSetting : ", res);
            var authSetting = res.authSetting;
            if (true === authSetting["scope.record"]) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else if (false === authSetting["scope.record"]) {
              null == isShowHint && (isShowHint = true);
              if (isShowHint) inst.showGoToSettingMicrophoneMessagebox(obj); else {
                obj.fail && obj.fail({
                  errMsg: ""
                });
                obj.complete && obj.complete();
              }
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: ""
            });
            obj.complete && obj.complete();
          }
        });
      }
      checkSession(obj) {
        wx.checkSession(obj);
      }
      checkAndGetLocation(obj) {
        this.latitude = null;
        this.longitude = null;
        wx.getSetting({
          success: res => {
            console.log("getSetting--\x3egetLocation : ", res);
            var authSetting = res.authSetting;
            true === authSetting["scope.userLocation"] ? this.getUserLocation(obj) : false === authSetting["scope.userLocation"] ? inst.showGoToSettingLocationMessagebox({
              success: () => {
                this.getUserLocation(obj);
              },
              fail: () => {
                obj.fail && obj.fail({
                  errMsg: "\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f\u5931\u8d25,\u8bf7\u91cd\u65b0\u767b\u5f55(3)"
                });
                obj.complete && obj.complete();
              }
            }) : this.getUserLocation(obj);
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f\u5931\u8d25,\u8bf7\u91cd\u65b0\u767b\u5f55(1)"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getUserLocation(obj) {
        this.getLocation({
          success: () => {
            this.exchangeRealLocation(obj);
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: "\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f\u5931\u8d25,\u8bf7\u91cd\u65b0\u767b\u5f55(2)"
            });
            obj.complete && obj.complete();
          }
        });
      }
      getLocation(obj) {
        wx.getLocation({
          type: "wgs84",
          success: res => {
            this.latitude = res.latitude;
            this.longitude = res.longitude;
            console.log("getLocation success");
            console.log(`getLocation:\n latitude : ${this.latitude} longitude : ${this.longitude}`);
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("getLocation fail  : ", res);
            obj.fail && obj.fail({
              errMsg: "\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f\u5931\u8d25,\u8bf7\u91cd\u65b0\u767b\u5f55"
            });
            obj.complete && obj.complete();
          }
        });
      }
      exchangeRealLocation(obj) {
        qqmap.reverseGeocoder({
          location: {
            latitude: this.latitude,
            longitude: this.longitude
          },
          success: res => {
            if (res.result.ad_info.name) {
              console.log("\u56fd\u5185\u5730\u7406\u4f4d\u7f6e: ", res.result.ad_info.name);
              global_data_1.global_data.user_location = res.result.ad_info.name;
            } else {
              console.log("\u56fd\u5916\u5730\u7406\u4f4d\u7f6e: ", res);
              global_data_1.global_data.user_location = "";
            }
            obj.success && obj.success();
            obj.complete && obj.complete();
          },
          fail: res => {
            console.log("fail : ", res);
            global_data_1.global_data.user_location = "";
            obj.fail && obj.fail({
              errMsg: "\u5151\u6362\u4f4d\u7f6e\u4fe1\u606f\u5931\u8d25"
            });
            obj.complete && obj.complete();
          }
        });
      }
      showGoToSettingLocationMessagebox(obj) {
        wx.showModal({
          title: "\u63d0\u793a",
          content: "\u9700\u8981\u83b7\u53d6\u60a8\u7684\u5730\u7406\u4f4d\u7f6e~\n\u201c\u786e\u5b9a\u201d\u5c06\u7ee7\u7eed\u8bbe\u7f6e\u3002",
          showCancel: true,
          cancelText: "\u53d6\u6d88",
          confirmText: "\u786e\u5b9a",
          success: res => {
            if (res.cancel) {
              console.log("\u60a8\u70b9\u51fb\u4e86\u53d6\u6d88");
              obj.complete && obj.complete();
              obj.fail && obj.fail({
                errMsg: "\u60a8\u70b9\u51fb\u4e86\u53d6\u6d88"
              });
            } else res.confirm && wx.openSetting({
              success: res => {
                if (false === res.authSetting["scope.userLocation"]) {
                  obj.complete && obj.complete();
                  obj.fail && obj.fail({
                    errMsg: "\u6ca1\u6709\u540c\u610f\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f"
                  });
                  console.log("\u60a8\u6ca1\u6709\u540c\u610f\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f");
                } else {
                  obj.success && obj.success();
                  obj.complete && obj.complete();
                }
              }
            });
          },
          fail: () => {
            obj.fail && obj.fail({
              errMsg: ""
            });
            obj.complete && obj.complete();
          }
        });
      }
      vibrateShort(obj) {
        obj.degree < 1 && (obj.degree = 1);
        obj.degree > 3 && (obj.degree = 3);
        let type = null;
        1 == obj.degree && (type = "heavy");
        2 == obj.degree && (type = "medium");
        3 == obj.degree && (type = "healightvy");
        wx.vibrateShort(obj);
      }
      toTempFilePath(callback) {
        console.log("cc.game.canvas.width  : ", cc.game.canvas.width);
        console.log("cc.game.canvas.height  : ", cc.game.canvas.height);
        let scale = cc.game.canvas.height / 1080;
        cc.game.canvas.toTempFilePath({
          x: cc.game.canvas.width / 2 - 360 * scale,
          y: cc.game.canvas.height / 2 - 286 * scale,
          width: 720 * scale,
          height: 574 * scale,
          destWidth: 500,
          destHeight: 400,
          fileType: "jpg",
          success: res => {
            console.log("toTempFilePath success :", res.tempFilePath);
            callback && callback(res.tempFilePath);
          },
          fail(res) {
            console.log("fail : ", res);
          }
        });
        console.log("cc.winSize.width / cc.winSize.height :  ", cc.winSize.width / cc.winSize.height);
      }
    }
    exports.platform_wechat = platform_wechat;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../thirdparty/qqmap-wx-jssdk": "qqmap-wx-jssdk",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "./platform_base": "platform_base"
  } ],
  platform_window: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5b0a4h6/PtK9K0AO8HPy6w8", "platform_window");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform_window = void 0;
    const platform_base_1 = require("./platform_base");
    const utils_1 = require("../../common/utils");
    const global_data_1 = require("../global_data");
    const global_define_1 = require("../global_define");
    const JSZip = require("../../thirdparty/jszip.min");
    let inst = null;
    class platform_window extends platform_base_1.platform_base {
      constructor() {
        super(...arguments);
        this.userinfo_button = null;
        this.code = null;
        this.userInfo = null;
        this.encryptedData = null;
        this.iv = null;
        this.signature = null;
        this.systemInfo = null;
        this.orderno = "";
        this.prod_price = "";
      }
      init() {
        console.log("platform_window init");
        inst = this;
      }
      initLobby(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      login(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      getUserInfo(obj) {}
      createUserInfoButton(obj) {}
      share(obj) {}
      checkVersionSync(requiredVersion) {
        return false;
      }
      readZipFile(obj) {
        let zipFilePath = obj.path + obj.zipFileName;
        let str_data = jsb.fileUtils.getDataFromFile(zipFilePath);
        let data = str_data.buffer;
        let new_zip = new JSZip();
        new_zip.loadAsync(data).then(function(zip) {
          return new_zip.file(obj.innerFileName).async("binarystring");
        }).then(data => {
          data = utils_1.utils.gbk_2_utf8(data);
          console.log("jszip readzip success : ", zipFilePath);
          obj.success && obj.success({
            data: data
          });
        }).catch(res => {
          console.log("jszip readzip fail : ", zipFilePath);
          obj.fail && obj.fail(res);
        });
      }
      setClipboardData(obj) {}
      showModal(obj) {}
      purchaseItem(obj) {
        this.create_order(obj);
      }
      create_order(obj) {
        let id = 3011;
        let str_url = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_CREATEORDER);
        str_url = utils_1.utils.string_replace_key_with_integer(str_url, "{MONEY}", obj.price);
        str_url = utils_1.utils.string_replace_key_with_integer(str_url, "{PAYTYPE}", id);
        str_url = utils_1.utils.string_replace_key_with_integer(str_url, "{FUNDTYPE}", obj.type);
        str_url = utils_1.utils.string_replace_key(str_url, "{LOCATION}", "0");
        str_url = utils_1.utils.string_replace_any(str_url, "{PRODUCT}", obj.id);
        str_url = utils_1.utils.string_replace_any(str_url, "{PAYCHANNEL}", "0");
        console.log("str_url 1111 : ", str_url);
        if (str_url.includes("open.bookse.cn/api.svc/api?{")) {
          let [host, query] = str_url.split("?", 2);
          str_url = `${host}?${encodeURIComponent(query)}`;
        }
        console.log("str_url 2222 : ", str_url);
        utils_1.utils.show_loading("\u6b63\u5728\u521b\u5efa\u8ba2\u5355...");
        utils_1.utils.send_http_request({
          url: str_url,
          method: "GET",
          success: (orderno, message) => {},
          fail: res => {
            console.log("order fail", res);
            obj.fail && obj.fail({
              errMsg: "\u8bf7\u6c42\u8ba2\u5355\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"
            });
            utils_1.utils.hide_loading();
          },
          complete: function() {},
          progress: function(timeLeft) {
            utils_1.utils.show_loading_text(`\u6b63\u5728\u8bf7\u6c42\u8ba2\u5355...(${timeLeft}s)`);
          }
        });
      }
      getSystemInfo(obj) {}
      setKeepScreenOn(obj) {}
      getBatteryInfo(obj) {}
      getBatteryInfoSync() {
        return null;
      }
      getShortCutInfo(obj) {}
      createShortCut(obj) {}
      getLaunchOptionsSync() {
        return null;
      }
      triggerGC(obj) {}
      cleanAllCachesByUrl(obj) {
        obj.success && obj.success();
        obj.complete && obj.complete();
      }
      cleanAllCaches(obj) {}
      getFileMD5(obj) {
        console.log("getFileMD5 fail ...");
        return;
        var str_data;
      }
      getPlatformStringSync() {
        return "";
      }
      getLoginCodeSync() {
        return "";
      }
      getUserPathSync() {
        return jsb.fileUtils.getWritablePath();
      }
      onError() {}
      onHide(func) {}
      onShow(func) {}
      onShowCallback(res) {}
      onHideCallback(res) {}
      onErrorCallback(res) {}
      writeFile(obj) {
        let data = obj.data;
        let new_zip = new JSZip();
        let filepath = obj.filePath + ".json";
        new_zip.loadAsync(data).then(function(zip) {
          let path = "";
          "0" == obj.filePath ? path = "1.json" : "1" == obj.filePath ? path = "150.json" : "2" == obj.filePath && (path = "gamelist.json");
          return new_zip.file(path).async("binarystring");
        }).then(data => {
          var l_str = utils_1.utils.gbk_2_utf8(data);
          if ("0" == obj.filePath) {
            global_data_1.global_data.common_json_data = utils_1.utils.from_json(l_str);
            console.log("global_data.common_json_data : ", global_data_1.global_data.common_json_data);
            if (global_data_1.global_data.common_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          } else if ("1" == obj.filePath) {
            global_data_1.global_data.game_json_data = utils_1.utils.from_json(l_str);
            console.log("global_data.game_json_data : ", global_data_1.global_data.game_json_data);
            if (global_data_1.global_data.game_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          } else if ("2" == obj.filePath) {
            global_data_1.global_data.gamelist_json_data = utils_1.utils.from_json(l_str);
            console.log("global_data.gamelist_json_data : ", global_data_1.global_data.gamelist_json_data);
            if (global_data_1.global_data.gamelist_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          }
        }).catch(res => {
          console.log("hjjlog>>test3:readzip  fail");
        });
      }
      writeFileNew(obj) {
        console.log("writeFileNew  1111111111");
        this.test(obj);
        console.log("writeFileNew  2222222222");
      }
      test(obj) {
        let data = obj.data;
        let new_zip = new JSZip();
        let filepath = obj.filePath + ".json";
        new_zip.loadAsync(data).then(function(zip) {
          console.log("hjjlog>>test3:loadasync : ", obj.filePath + ".json");
          return new_zip.file("1.json").async("binarystring");
        }).then(data => {
          var l_str = utils_1.utils.gbk_2_utf8(data);
          if ("0" == obj.filePath) {
            global_data_1.global_data.common_json_data = l_str;
            console.log("global_data.common_json_data : ", global_data_1.global_data.common_json_data);
            if (global_data_1.global_data.common_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          } else if ("1" == obj.filePath) {
            global_data_1.global_data.game_json_data = l_str;
            console.log("global_data.game_json_data : ", global_data_1.global_data.game_json_data);
            if (global_data_1.global_data.game_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          } else if ("2" == obj.filePath) {
            global_data_1.global_data.gamelist_json_data = l_str;
            console.log("global_data.gamelist_json_data : ", global_data_1.global_data.gamelist_json_data);
            if (global_data_1.global_data.gamelist_json_data) {
              obj.success && obj.success();
              obj.complete && obj.complete();
            } else {
              obj.fail && obj.fail({
                errMsg: ""
              });
              obj.complete && obj.complete();
            }
          }
        }).catch(res => {
          console.log("hjjlog>>test3:readzip  fail");
        });
      }
      deleteFile(obj) {
        console.log("deleteFile fail  ... ");
        return;
      }
    }
    exports.platform_window = platform_window;
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../thirdparty/jszip.min": "jszip.min",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "./platform_base": "platform_base"
  } ],
  platform: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7a14c9bHXJOR5rKaG+AQgS2", "platform");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.platform = void 0;
    const utils_1 = require("../../common/utils");
    const platform_wechat_1 = require("./platform_wechat");
    const platform_oppo_1 = require("./platform_oppo");
    const platform_baidu_1 = require("./platform_baidu");
    const platform_huawei_1 = require("./platform_huawei");
    const platform_mi_1 = require("./platform_mi");
    const platform_qq_1 = require("./platform_qq");
    const platform_window_1 = require("./platform_window");
    var platform;
    (function(platform) {
      platform.inst = null;
      platform.g = null;
      function init() {
        if (utils_1.utils.is_wechat()) {
          platform.inst = new platform_wechat_1.platform_wechat();
          platform.g = wx;
        } else if (utils_1.utils.is_oppo()) {
          platform.inst = new platform_oppo_1.platform_oppo();
          platform.g = qg;
        } else if (utils_1.utils.is_vivo()) platform.g = qg; else if (utils_1.utils.is_baidu()) {
          platform.inst = new platform_baidu_1.platform_baidu();
          platform.g = swan;
        } else if (utils_1.utils.is_huawei()) {
          platform.inst = new platform_huawei_1.platform_huawei();
          platform.g = hbs;
        } else if (utils_1.utils.is_mi()) {
          platform.inst = new platform_mi_1.platform_mi();
          platform.g = qg;
        } else if (utils_1.utils.is_qq()) {
          platform.inst = new platform_qq_1.platform_qq();
          platform.g = BK;
        } else utils_1.utils.is_window() && (platform.inst = new platform_window_1.platform_window());
        platform.inst.init();
      }
      platform.init = init;
    })(platform = exports.platform || (exports.platform = {}));
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "./platform_baidu": "platform_baidu",
    "./platform_huawei": "platform_huawei",
    "./platform_mi": "platform_mi",
    "./platform_oppo": "platform_oppo",
    "./platform_qq": "platform_qq",
    "./platform_wechat": "platform_wechat",
    "./platform_window": "platform_window"
  } ],
  protocols: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b892faYEvVHD6pFfpE/UfpY", "protocols");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.protocols = void 0;
    const utils_1 = require("../common/utils");
    const global_define_1 = require("./global_define");
    var protocols;
    (function(protocols) {
      let CppType;
      (function(CppType) {
        CppType[CppType["INT8"] = 1] = "INT8";
        CppType[CppType["INT16"] = 2] = "INT16";
        CppType[CppType["INT32"] = 4] = "INT32";
        CppType[CppType["UINT8"] = 1] = "UINT8";
        CppType[CppType["UINT16"] = 2] = "UINT16";
        CppType[CppType["UINT32"] = 4] = "UINT32";
        CppType[CppType["FLOAT32"] = 4] = "FLOAT32";
        CppType[CppType["FLOAT64"] = 8] = "FLOAT64";
      })(CppType = protocols.CppType || (protocols.CppType = {}));
      class ab_parser {
        constructor(dv) {
          this._index = 0;
          this._dv = null;
          this._index = 0;
          this._dv = dv;
        }
        getIndex() {
          return this._index;
        }
        nextNumber8() {
          return this.nextNumber(CppType.INT8);
        }
        nextNumber16() {
          return this.nextNumber(CppType.INT16);
        }
        nextNumber32() {
          return this.nextNumber(CppType.INT32);
        }
        nextNumberU8() {
          return this.nextNumber(CppType.UINT8);
        }
        nextNumberU16() {
          return this.nextNumber(CppType.UINT16);
        }
        nextNumberU32() {
          return this.nextNumber(CppType.UINT32);
        }
        nextNumberF32() {
          return this.nextNumber(CppType.FLOAT32);
        }
        nextNumberF64() {
          return this.nextNumber(CppType.FLOAT64);
        }
        nextNumber(type) {
          if (this._index + type > this._dv.byteLength) {
            console.error("Read ArrayBuffer out of bounds.");
            return 0;
          }
          var ret = 0;
          switch (type) {
           case CppType.INT8:
            ret = this._dv.getInt8(this._index);
            break;

           case CppType.INT16:
            ret = this._dv.getInt16(this._index, true);
            break;

           case CppType.INT32:
            ret = this._dv.getInt32(this._index, true);
            break;

           case CppType.UINT8:
            ret = this._dv.getUint8(this._index);
            break;

           case CppType.UINT16:
            ret = this._dv.getUint16(this._index, true);
            break;

           case CppType.UINT32:
            ret = this._dv.getUint32(this._index, true);
            break;

           case CppType.FLOAT32:
            ret = this._dv.getFloat32(this._index, true);
            break;

           case CppType.FLOAT64:
            ret = this._dv.getFloat64(this._index, true);
          }
          this._index += type;
          return ret;
        }
        next64Number() {
          if (this._index + 8 > this._dv.byteLength) {
            console.error("Read ArrayBuffer out of bounds.");
            return null;
          }
          var array = new Uint8Array(this._dv.buffer);
          var bf = Array.prototype.slice.call(array.slice(this._index, this._index + 8));
          var i64 = utils_1.utils.int64LE_to_number(bf);
          this._index += 8;
          return i64;
        }
        nextString(length) {
          this._index + length > this._dv.byteLength && (length = this._dv.byteLength - this._index);
          var array = new Uint8Array(this._dv.buffer, this._index, length);
          array = array.subarray(0, array.indexOf(0));
          var ret = String.fromCharCode.apply(null, array);
          this._index += length;
          return ret;
        }
        nextByteArray(length) {
          var array = new Uint8Array(this._dv.buffer);
          var ab = array.slice(this._index, this._index + length);
          return ab;
        }
        nextBoolean() {
          if (this._index + 4 > this._dv.byteLength) {
            console.error("Read ArrayBuffer out of bounds.");
            return null;
          }
          var n = this._dv.getUint32(this._index, true);
          this._index += 4;
          return 0 != n;
        }
        nextClass(obj) {
          var dv = this._dv.buffer.slice(this._index);
          var length = obj.fromBuffer(dv);
          this._index += length;
          return obj;
        }
      }
      protocols.ab_parser = ab_parser;
      class ab_builder {
        constructor(byteLength) {
          this._index = 0;
          this._ab = null;
          this._byteLength = 0;
          this._dv = null;
          this._index = 0;
          this._byteLength = byteLength;
          this._ab = new ArrayBuffer(byteLength);
          this._dv = new DataView(this._ab);
        }
        getBuffer() {
          return this._ab;
        }
        getIndex() {
          return this._index;
        }
        appendNumber(value, type) {
          if (this._index + type > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          switch (type) {
           case CppType.INT8:
            this._dv.setInt8(this._index, value);
            break;

           case CppType.INT16:
            this._dv.setInt16(this._index, value, true);
            break;

           case CppType.INT32:
            this._dv.setInt32(this._index, value, true);
            break;

           case CppType.UINT8:
            this._dv.setUint8(this._index, value);
            break;

           case CppType.UINT16:
            this._dv.setUint16(this._index, value, true);
            break;

           case CppType.UINT32:
            this._dv.setUint32(this._index, value, true);
            break;

           case CppType.FLOAT32:
            this._dv.setFloat32(this._index, value, true);
            break;

           case CppType.FLOAT64:
            this._dv.setFloat64(this._index, value, true);
          }
          this._index += type;
        }
        append64Number(value) {
          if (this._index + 8 > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          var bf = utils_1.utils.number_to_Int64LE(value);
          for (var i = 0; i < 8; ++i) this._dv.setUint8(this._index + i, bf[i]);
          this._index += 8;
        }
        appendString(value, length) {
          if (this._index + length > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          if (value) for (var i = 0; i < length; ++i) value.length > i ? this._dv.setUint8(this._index + i, value.charCodeAt(i)) : this._dv.setUint8(this._index + i, 0);
          this._index += length;
        }
        appendByteArray(value, length) {
          if (this._index + length > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          for (var i = 0; i < length; ++i) this._dv.setUint8(this._index + i, value[i]);
          this._index += length;
        }
        appendClass(obj) {
          var length = obj.byteLength();
          if (this._index + length > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          var array = new Uint8Array(obj.toBuffer());
          for (var i = 0; i < length; ++i) this._dv.setUint8(this._index + i, array[i]);
          this._index += length;
        }
        appendArrayBuffer(value) {
          if (this._index + value.byteLength > this._byteLength) {
            console.error("Write ArrayBuffer out of bounds.");
            return;
          }
          let dv = new DataView(value);
          for (var i = 0; i < value.byteLength; ++i) this._dv.setUint8(this._index + i, dv.getUint8(i));
          this._index += value.byteLength;
        }
      }
      protocols.ab_builder = ab_builder;
      class CMD_BASE_INFO {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.int_client_type = parser.nextNumber(CppType.INT32);
          this.int_area_id = parser.nextNumber(CppType.INT32);
          this.int_channel_id = parser.nextNumber(CppType.INT32);
          this.int_kind_id = parser.nextNumber(CppType.INT32);
          this.int_version = parser.nextNumber(CppType.INT32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.int_client_type, CppType.INT32);
          builder.appendNumber(this.int_area_id, CppType.INT32);
          builder.appendNumber(this.int_channel_id, CppType.INT32);
          builder.appendNumber(this.int_kind_id, CppType.INT32);
          builder.appendNumber(this.int_version, CppType.INT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 20;
        }
      }
      protocols.CMD_BASE_INFO = CMD_BASE_INFO;
      class CMD_BASE_INFO2 {
        constructor() {
          this.clienttype = 0;
          this.area = 0;
          this.channel = 0;
          this.app = 0;
          this.version = 0;
          this.package = 0;
          this.keyword = "";
        }
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.clienttype = parser.nextNumber(CppType.INT32);
          this.area = parser.nextNumber(CppType.INT32);
          this.channel = parser.nextNumber(CppType.INT32);
          this.app = parser.nextNumber(CppType.INT32);
          this.version = parser.nextNumber(CppType.INT32);
          this.package = parser.nextNumber(CppType.INT32);
          this.keyword = parser.nextString(32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.clienttype, CppType.INT32);
          builder.appendNumber(this.area, CppType.INT32);
          builder.appendNumber(this.channel, CppType.INT32);
          builder.appendNumber(this.app, CppType.INT32);
          builder.appendNumber(this.version, CppType.INT32);
          builder.appendNumber(this.package, CppType.INT32);
          builder.appendString(this.keyword, 32);
          return builder.getBuffer();
        }
        byteLength() {
          return 56;
        }
      }
      protocols.CMD_BASE_INFO2 = CMD_BASE_INFO2;
      class CMD_BASE_EXT {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.int_id = parser.nextNumber(CppType.INT32);
          this.int_data = parser.nextNumber(CppType.INT32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.int_id, CppType.INT32);
          builder.appendNumber(this.int_data, CppType.INT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 8;
        }
      }
      protocols.CMD_BASE_EXT = CMD_BASE_EXT;
      class tagUserScore {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.lGold = parser.next64Number();
          this.lScore = parser.nextNumber(CppType.INT32);
          this.lWinCount = parser.nextNumber(CppType.INT32);
          this.lLostCount = parser.nextNumber(CppType.INT32);
          this.lDrawCount = parser.nextNumber(CppType.INT32);
          this.lFleeCount = parser.nextNumber(CppType.INT32);
          this.lExperience = parser.nextNumber(CppType.INT32);
          this.reserved = parser.nextString(76);
          this.dwGameTime = parser.nextNumber(CppType.UINT32);
          this.nCharm = parser.nextNumber(CppType.INT32);
          this.nLogonCount = parser.nextNumber(CppType.INT32);
          this.nPraise = parser.nextNumber(CppType.INT32);
          this.reservedbyte = parser.nextString(4);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.append64Number(this.lGold);
          builder.appendNumber(this.lScore, CppType.INT32);
          builder.appendNumber(this.lWinCount, CppType.INT32);
          builder.appendNumber(this.lLostCount, CppType.INT32);
          builder.appendNumber(this.lDrawCount, CppType.INT32);
          builder.appendNumber(this.lFleeCount, CppType.INT32);
          builder.appendNumber(this.lExperience, CppType.INT32);
          builder.appendString(this.reserved, 76);
          builder.appendNumber(this.dwGameTime, CppType.UINT32);
          builder.appendNumber(this.nCharm, CppType.INT32);
          builder.appendNumber(this.nLogonCount, CppType.INT32);
          builder.appendNumber(this.nPraise, CppType.INT32);
          builder.appendString(this.reservedbyte, 4);
          return builder.getBuffer();
        }
        byteLength() {
          return 128;
        }
      }
      protocols.tagUserScore = tagUserScore;
      class CMD_USER_SCORE_DATA {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.lGold = parser.next64Number();
          this.lScore = parser.nextNumber(CppType.INT32);
          this.lWinCount = parser.nextNumber(CppType.INT32);
          this.lLostCount = parser.nextNumber(CppType.INT32);
          this.lDrawCount = parser.nextNumber(CppType.INT32);
          this.lFleeCount = parser.nextNumber(CppType.INT32);
          this.lExperience = parser.nextNumber(CppType.INT32);
          this.dwGameTime = parser.nextNumber(CppType.UINT32);
          this.nCharm = parser.nextNumber(CppType.INT32);
          this.nPraise = parser.nextNumber(CppType.INT32);
          this.nIngot = parser.nextNumber(CppType.INT32);
          this.nLogonCount = parser.nextNumber(CppType.INT32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.append64Number(this.lGold);
          builder.appendNumber(this.lScore, CppType.INT32);
          builder.appendNumber(this.lWinCount, CppType.INT32);
          builder.appendNumber(this.lLostCount, CppType.INT32);
          builder.appendNumber(this.lDrawCount, CppType.INT32);
          builder.appendNumber(this.lFleeCount, CppType.INT32);
          builder.appendNumber(this.lExperience, CppType.INT32);
          builder.appendNumber(this.dwGameTime, CppType.UINT32);
          builder.appendNumber(this.nCharm, CppType.INT32);
          builder.appendNumber(this.nPraise, CppType.INT32);
          builder.appendNumber(this.nIngot, CppType.INT32);
          builder.appendNumber(this.nLogonCount, CppType.INT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 52;
        }
      }
      protocols.CMD_USER_SCORE_DATA = CMD_USER_SCORE_DATA;
      class tagUserInfoHead {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.wFaceID = parser.nextNumberU16();
          this.cbGender = parser.nextNumberU8();
          this.cbMember = parser.nextNumberU8();
          this.dwUserID = parser.nextNumberU32();
          this.dwGroupID = parser.nextNumberU32();
          this.dwUserRight = parser.nextNumberU32();
          this.dwMasterRight = parser.nextNumberU32();
          this.wTableID = parser.nextNumberU16();
          this.wChairID = parser.nextNumberU16();
          this.wNetDelay = parser.nextNumberU16();
          this.cbUserStatus = parser.nextNumberU8();
          let l_reserved1 = parser.nextString(5);
          this.UserScoreInfo = parser.nextClass(new tagUserScore());
          this.gametime = parser.nextNumberU32();
          let l_reserved2 = parser.nextString(4);
          this.szMemberOverTime = parser.nextNumberF64();
          this.reserved1 = parser.nextString(60);
          this.cbCameraStatus = parser.nextNumberU8();
          this.cbFaceEnable = parser.nextNumberU8();
          let l_reserved3 = parser.nextString(2);
          this.lCharm = parser.nextNumber32();
          this.lPraise = parser.nextNumber32();
          let int_left = arrayBuffer.byteLength - 248;
          while (int_left > 4) {
            let l_buffer_1 = parser.nextNumberU16();
            let l_reserved4 = parser.nextNumberU16();
            if (l_reserved4 = 10) {
              this.szname = parser.nextString(l_buffer_1);
              break;
            }
            let l_reserved5 = parser.nextString(l_buffer_1);
            int_left -= l_buffer_1;
          }
          return this.byteLength();
        }
        toBuffer() {
          console.error("tagUserInfoHead.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 248;
        }
      }
      protocols.tagUserInfoHead = tagUserInfoHead;
      class tagUserData {
        constructor() {
          this.wFaceID = 0;
          this.cbGender = 0;
          this.cbMember = 0;
          this.dwUserID = 0;
          this.dwGroupID = 0;
          this.dwUserRight = 0;
          this.dwMasterRight = 0;
          this.szName = "";
          this.szGroupName = "";
          this.lGold = 0;
          this.lScore = 0;
          this.lWinCount = 0;
          this.lLostCount = 0;
          this.lDrawCount = 0;
          this.lFleeCount = 0;
          this.lExperience = 0;
          this.wTableID = 0;
          this.wChairID = 0;
          this.wNetDelay = 0;
          this.cbUserStatus = 0;
          this.cbCameraStatus = 0;
          this.cbCompanion = 0;
          this.cbFaceEnable = 0;
          this.gametime = 0;
          this.lCharm = 0;
          this.lPraise = 0;
        }
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          return this.byteLength();
        }
        toBuffer() {
          console.error("tagUserData.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 144;
        }
      }
      protocols.tagUserData = tagUserData;
      class struct_frame_message {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.struct_frame_message = struct_frame_message;
      protocols.IPC_MAIN_SOCKET = 1;
      protocols.IPC_SUB_SOCKET_SEND = 1;
      protocols.IPC_SUB_SOCKET_RECV = 2;
      class IPC_SocketPackage {
        constructor() {
          this.wMainCmdID = -1;
          this.wSubCmdID = -1;
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.IPC_SocketPackage = IPC_SocketPackage;
      protocols.IPC_MAIN_CONFIG = 2;
      protocols.IPC_SUB_SERVER_INFO = 1;
      protocols.IPC_SUB_COLUMN_INFO = 2;
      protocols.IPC_SUB_USER_MEMBER = 7;
      class IPC_GF_ServerInfo {
        constructor() {
          this.dwUserID = 0;
          this.wTableID = 0;
          this.wChairID = 0;
          this.wKindID = 0;
          this.wServerID = 0;
          this.wGameGenre = 0;
          this.wChairCount = 0;
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.IPC_GF_ServerInfo = IPC_GF_ServerInfo;
      protocols.IPC_MAIN_USER = 3;
      protocols.IPC_SUB_USER_COME = 1;
      protocols.IPC_SUB_USER_STATUS = 2;
      protocols.IPC_SUB_USER_SCORE = 3;
      protocols.IPC_SUB_GAME_START = 4;
      protocols.IPC_SUB_GAME_FINISH = 5;
      protocols.IPC_SUB_REDPACKET_INFO = 6;
      class IPC_UserStatus {
        constructor() {
          this.dwUserID = -1;
          this.wNetDelay = -1;
          this.cbUserStatus = -1;
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.IPC_UserStatus = IPC_UserStatus;
      protocols.IPC_MAIN_CONCTROL = 4;
      protocols.IPC_SUB_START_FINISH = 1;
      protocols.IPC_SUB_CLOSE_FRAME = 2;
      protocols.IPC_SUB_NOTICT_FRAME = 3;
      class CMD_GF_Option {
        constructor() {
          this.bGameStatus = 0;
          this.bAllowLookon = 0;
        }
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.bGameStatus = parser.nextNumber8();
          this.bAllowLookon = parser.nextNumber8();
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_GF_Option = CMD_GF_Option;
      protocols.UR_CANNOT_PLAY = 1;
      protocols.UR_CANNOT_LOOKON = 2;
      protocols.UR_CANNOT_WISPER = 4;
      protocols.UR_CANNOT_ROOM_CHAT = 8;
      protocols.UR_CANNOT_GAME_CHAT = 16;
      protocols.UR_RIGHT_PAY = 32;
      protocols.UR_MASK_VIP = 64;
      protocols.UR_MASK_PAY = 128;
      protocols.UR_MASK_ALIPAY = 256;
      protocols.UR_MASK_APPLEPAY = 512;
      protocols.UR_MASK_SMSPAY = 1024;
      protocols.UR_MASK_WXPAY = 2048;
      protocols.UR_MASK_TASK = 4096;
      protocols.UR_MASK_ACTIVE = 8192;
      protocols.UR_MASK_SLIGHT_PAY = 16384;
      protocols.UR_MASK_MODERATE_PAY = 32768;
      protocols.UR_MASK_SEVERE_PAY = 65536;
      protocols.UR_RIGHT_FULLGAME = 131072;
      protocols.UR_MASK_BETA = 262144;
      protocols.UR_MASK_CERTIFICATION = 524288;
      protocols.UR_MASK_ADULT = 1048576;
      protocols.UR_MASK_INTRODUCER = 2097152;
      protocols.UR_MASK_CHECK_PHONE = 4194304;
      protocols.UR_MASK_CHECK_WECHAT = 8388608;
      protocols.UR_MASK_CHANGE_NAME = 16777216;
      protocols.UR_MASK_FORMAL_USER = 268435456;
      protocols.UR_MASK_CHECK = 536870912;
      protocols.UR_MASK_ROBOT = 1073741824;
      protocols.MDM_LOGON = 9e3;
      protocols.SUB_LOGON_FILE = protocols.MDM_LOGON + 1;
      protocols.SUB_LOGON_VERSION = protocols.MDM_LOGON + 2;
      protocols.SUB_LOGON_AUTH_MASK = protocols.MDM_LOGON + 3;
      protocols.SUB_LOGON_MODULE_MASK = protocols.MDM_LOGON + 4;
      protocols.SUB_LOGON_PAY_MASK = protocols.MDM_LOGON + 5;
      protocols.SUB_LOGON_REGISTER = protocols.MDM_LOGON + 10;
      protocols.SUB_LOGON_ACCOUNT = protocols.MDM_LOGON + 11;
      protocols.SUB_LOGON_PHONE = protocols.MDM_LOGON + 12;
      protocols.SUB_LOGON_WECHAT = protocols.MDM_LOGON + 13;
      protocols.SUB_LOGON_CHANNEL = protocols.MDM_LOGON + 14;
      protocols.SUB_LOGON_MINIWECHAT = protocols.MDM_LOGON + 15;
      protocols.SUB_LOGON_FILE_RET = protocols.MDM_LOGON + 101;
      protocols.SUB_LOGON_FILE_START = protocols.MDM_LOGON + 102;
      protocols.SUB_LOGON_FILE_END = protocols.MDM_LOGON + 103;
      protocols.SUB_LOGON_FILE_FINISH = protocols.MDM_LOGON + 104;
      protocols.SUB_LOGON_VERSION_RET = protocols.MDM_LOGON + 201;
      protocols.SUB_LOGON_AUTH_MASK_RET = protocols.MDM_LOGON + 202;
      protocols.SUB_LOGON_MODULE_MASK_RET = protocols.MDM_LOGON + 203;
      protocols.SUB_LOGON_PAY_MASK_RET = protocols.MDM_LOGON + 204;
      protocols.SUB_LOGON_GAMELIST_RET = protocols.MDM_LOGON + 205;
      protocols.SUB_LOGON_SUCCESS = protocols.MDM_LOGON + 301;
      protocols.SUB_LOGON_ERROR = protocols.MDM_LOGON + 302;
      protocols.SUB_LOGON_FINISH = protocols.MDM_LOGON + 303;
      protocols.ID_LOGON_FILE_COMMON = 0;
      protocols.ID_LOGON_FILE_CHANNEL = 1;
      protocols.ID_LOGON_FILE_GAMELIST = 2;
      class CMD_LOGON_FILE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.base = parser.nextClass(new CMD_BASE_INFO2());
          this.md5 = new Array(3);
          this.md5[0] = parser.nextString(global_define_1.CONST.MD5_LEN);
          this.md5[1] = parser.nextString(global_define_1.CONST.MD5_LEN);
          this.md5[2] = parser.nextString(global_define_1.CONST.MD5_LEN);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.md5[0], global_define_1.CONST.MD5_LEN);
          builder.appendString(this.md5[1], global_define_1.CONST.MD5_LEN);
          builder.appendString(this.md5[2], global_define_1.CONST.MD5_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 155;
        }
      }
      protocols.CMD_LOGON_FILE = CMD_LOGON_FILE;
      class CMD_LOGON_FILE_START {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.file = parser.nextNumber(CppType.UINT32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.file, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 4;
        }
      }
      protocols.CMD_LOGON_FILE_START = CMD_LOGON_FILE_START;
      class CMD_LOGON_FILE_END {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.file = parser.nextNumber(CppType.UINT32);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.file, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 4;
        }
      }
      protocols.CMD_LOGON_FILE_END = CMD_LOGON_FILE_END;
      class CMD_LOGON_FILE_RET {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.file = parser.nextNumber(CppType.UINT32);
          this.len = parser.nextNumber(CppType.UINT32);
          this.data = parser.nextByteArray(this.len);
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_FILE_RET.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 1032;
        }
      }
      protocols.CMD_LOGON_FILE_RET = CMD_LOGON_FILE_RET;
      class CMD_LOGON_VERSION {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          return builder.getBuffer();
        }
        byteLength() {
          return 56;
        }
      }
      protocols.CMD_LOGON_VERSION = CMD_LOGON_VERSION;
      class CMD_LOGON_VERSION_RET {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.min = parser.nextNumber32();
          this.cur = parser.nextNumber32();
          this.max = parser.nextNumber32();
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_MASK_RET.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 12;
        }
      }
      protocols.CMD_LOGON_VERSION_RET = CMD_LOGON_VERSION_RET;
      protocols.MASK_VERSION_CHECK = 1;
      protocols.MASK_VERSION_NEW = 2;
      protocols.MASK_VERSION_OLD = 4;
      protocols.MASK_VERSION_PLUGINS = 1;
      protocols.MASK_VERSION_FULL = 2;
      protocols.MASK_AUTH_REGISTER = 1;
      protocols.MASK_AUTH_ACCOUNT = 2;
      protocols.MASK_AUTH_PHONE = 4;
      protocols.MASK_AUTH_WECHAT = 8;
      protocols.MASK_AUTH_CHANNEL = 16;
      protocols.MASK_MODULE_BIND_PHONE = 1;
      protocols.MASK_MODULE_BIND_WECHAT = 2;
      protocols.MASK_MODULE_SHARE_WECHAT = 4;
      protocols.MASK_MODULE_AUCTION = 8;
      protocols.MASK_MODULE_PUSH = 16;
      protocols.MASK_MODULE_GAMELIST = 32;
      protocols.MASK_MODULE_MINIGAME = 64;
      protocols.MASK_MODULE_RANKING = 128;
      protocols.MASK_MODULE_EXCHANGE = 256;
      protocols.MASK_MODULE_MOREGAME = 512;
      protocols.MASK_MODULE_SHOP = 1024;
      protocols.MASK_MODULE_NOTICE = 2048;
      protocols.MASK_MODULE_SIGN = 4096;
      protocols.MASK_MODULE_ACTIVITY = 8192;
      protocols.MASK_MODULE_INTRODUCER = 16384;
      protocols.MASK_MODULE_CUSTOMER = 32768;
      protocols.MASK_MODULE_TASKS = 65536;
      protocols.MASK_MODULE_BANK = 131072;
      protocols.MASK_MODULE_UPDATE_GUIDE = 262144;
      protocols.MASK_MODULE_ASSESS_GUIDE = 524288;
      protocols.MASK_MODULE_AUTHENTICATION = 1048576;
      protocols.MASK_MODULE_SYSTEM_PUSH = 2097152;
      protocols.MASK_MODULE_VIP = 4194304;
      protocols.MASK_MODULE_NEWPLAYER_PACK = 8388608;
      protocols.MASK_MODULE_BEANS = 16777216;
      protocols.MASK_MODULE_REDPACKET = 33554432;
      protocols.MASK_MODULE_ABANDONED = 67108864;
      protocols.MASK_MODULE_GUIDE = 134217728;
      protocols.MASK_MODULE_AUTO_ACTIVITY = 268435456;
      protocols.MASK_MODULE_AUTO_LUCK = 536870912;
      protocols.MASK_MODULE_PROPSHOP = 1073741824;
      protocols.MASK_PAY_ALIPAY = 2;
      protocols.MASK_PAY_MANUALPAY = 8;
      protocols.MASK_PAY_WEIXINPAY = 512;
      protocols.MASK_PAY_HEEPAY = 32768;
      protocols.MASK_PAY_CHANNELPAY = 268435456;
      class CMD_LOGON_MASK {
        constructor() {
          this.code = 0;
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendNumber(this.code, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 60;
        }
      }
      protocols.CMD_LOGON_MASK = CMD_LOGON_MASK;
      class CMD_LOGON_MASK_RET {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.mask = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_MASK_RET.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 4;
        }
      }
      protocols.CMD_LOGON_MASK_RET = CMD_LOGON_MASK_RET;
      class CMD_LOGON_REGISTER {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.base = parser.nextClass(new CMD_BASE_INFO2());
          this.mac = parser.nextString(global_define_1.CONST.MAC_LEN);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 89;
        }
      }
      protocols.CMD_LOGON_REGISTER = CMD_LOGON_REGISTER;
      class CMD_LOGON_ACCOUNT {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.base = parser.nextClass(new CMD_BASE_INFO2());
          this.account = parser.nextString(global_define_1.CONST.NAME_LEN);
          this.password = parser.nextString(global_define_1.CONST.PASS_LEN);
          this.mac = parser.nextString(global_define_1.CONST.MAC_LEN);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.account, global_define_1.CONST.NAME_LEN);
          builder.appendString(this.password, global_define_1.CONST.PASS_LEN);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 154;
        }
      }
      protocols.CMD_LOGON_ACCOUNT = CMD_LOGON_ACCOUNT;
      class CMD_LOGON_WECHAT {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.appid, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.code, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 155;
        }
      }
      protocols.CMD_LOGON_WECHAT = CMD_LOGON_WECHAT;
      class CMD_LOGON_MINIWECHAT {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.appid, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          builder.appendString(this.code, this.code.length + 1);
          return builder.getBuffer().slice(0, builder.getIndex());
        }
        byteLength() {
          return 2048;
        }
      }
      protocols.CMD_LOGON_MINIWECHAT = CMD_LOGON_MINIWECHAT;
      class CMD_LOGON_CHANNEL {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.appid, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.account, global_define_1.CONST.NAME_LEN);
          builder.appendString(this.password, global_define_1.CONST.PASS_LEN);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          builder.appendString(this.code, this.code.length + 1);
          return builder.getBuffer().slice(0, builder.getIndex());
        }
        byteLength() {
          return 2048;
        }
      }
      protocols.CMD_LOGON_CHANNEL = CMD_LOGON_CHANNEL;
      class CMD_LOGON_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.sex = parser.nextNumber(CppType.UINT8);
          this.member = parser.nextNumber(CppType.UINT8);
          this.face = parser.nextNumber(CppType.UINT16);
          this.userid = parser.nextNumber(CppType.UINT32);
          this.account = parser.nextString(global_define_1.CONST.NAME_LEN);
          this.password = parser.nextString(global_define_1.CONST.PASS_LEN);
          this.nickname = parser.nextString(global_define_1.CONST.NAME_LEN);
          this.session = parser.nextString(global_define_1.CONST.SESSION_LEN);
          this.phone = parser.nextString(global_define_1.CONST.MOBILE_LEN);
          this.ingame = parser.nextNumber(CppType.UINT32);
          this.experience = parser.nextNumber(CppType.UINT32);
          this.userright = parser.nextNumber(CppType.UINT32);
          this.masterright = parser.nextNumber(CppType.UINT32);
          this.gold = parser.next64Number();
          this.ingot = parser.nextNumber(CppType.UINT32);
          this.charm = parser.nextNumber(CppType.UINT32);
          this.praise = parser.next64Number();
          this.pay = parser.nextNumber(CppType.UINT16);
          this.servertime = parser.nextNumber(CppType.UINT32);
          this.logoncount = parser.nextNumber(CppType.UINT32);
          this.gametime = parser.nextNumber(CppType.UINT32);
          this.beans = parser.nextNumber(CppType.UINT32);
          this.redpacket = parser.nextNumber(CppType.UINT32);
          this.relief_gold = parser.nextNumber(CppType.UINT32);
          this.relief_beans = parser.nextNumber(CppType.UINT32);
          this.llBankGold = parser.next64Number();
          this.reserve = parser.nextString(16);
          this.ext = parser.nextString(2048);
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_SUCCESS.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 2296;
        }
      }
      protocols.CMD_LOGON_SUCCESS = CMD_LOGON_SUCCESS;
      class CMD_LOGON_ERROR {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.INT32);
          this.error = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_ERROR.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 132;
        }
      }
      protocols.CMD_LOGON_ERROR = CMD_LOGON_ERROR;
      protocols.MDM_GAME_LOGON = 1;
      protocols.SUB_GAME_LOGON = 2;
      protocols.SUB_GAME_LOGON2 = 3;
      protocols.SUB_GAME_LOGON3 = 4;
      protocols.SUB_GAME_LOGON_SUCCESS = 100;
      protocols.SUB_GAME_LOGON_ERROR = 101;
      protocols.SUB_GAME_LOGON_FINISH = 102;
      protocols.MDM_USER = 2;
      protocols.SUB_USER_SIT = 1;
      protocols.SUB_USER_LOOKON = 2;
      protocols.SUB_USER_STANDUP = 3;
      protocols.SUB_USER_LEFT = 4;
      protocols.SUB_USER_SITTO = 5;
      protocols.SUB_USER_COME = 100;
      protocols.SUB_USER_STATUS = 101;
      protocols.SUB_USER_SCORE = 102;
      protocols.SUB_USER_SITFAILED = 103;
      protocols.SUB_USER_PROP = 105;
      protocols.SUB_USER_CHAT = 200;
      protocols.SUB_USER_MEMBER = 203;
      protocols.SUB_USER_ACCESS_GOLD = 300;
      protocols.SUB_USER_ACCESS_GOLD_RET = 301;
      protocols.SUB_USER_ACCESS_GOLD_ERROR = 302;
      protocols.SUB_USER_QUERY_GOLD = 303;
      protocols.SUB_USER_QUERY_GOLD_RET = 304;
      protocols.SUB_USER_RECONNECT_TABLE = 305;
      protocols.SUB_USER_REDPACKET_INFO = 310;
      protocols.SUB_USER_REDPACK = 312;
      protocols.MDM_CONFIG = 3;
      protocols.SUB_CONFIG_INFO = 100;
      protocols.SUB_CONFIG_COLUMN = 103;
      protocols.SUB_CONFIG_FINISH = 104;
      protocols.SUB_CONFIG_LUA_RULE = 105;
      protocols.MDM_TABLE = 4;
      protocols.SUB_TABLE_INFO = 100;
      protocols.SUB_TABLE_STATUS = 101;
      protocols.MDM_SYSTEM = 10;
      protocols.SUB_SYSTEM_MESSAGE = 100;
      protocols.MDM_GAME = 100;
      protocols.MDM_FRAME = 101;
      protocols.SUB_FRAME_INFO = 1;
      protocols.SUB_FRAME_READY = 2;
      protocols.SUB_FRAME_OPTION = 100;
      protocols.SUB_FRAME_SCENE = 101;
      protocols.SUB_FRAME_CHAT = 200;
      protocols.SUB_FRAME_MESSAGE = 300;
      protocols.SUB_FRAME_REPORT = 600;
      protocols.SUB_FRAME_REPORT_RET = 601;
      protocols.SUB_FRAME_KICKOUT = 602;
      protocols.SUB_FRAME_KICKOUT_RET = 603;
      protocols.SUB_FRAME_KICKOUT_NOTICE = 604;
      protocols.SUB_FRAME_PRAISE = 605;
      protocols.SUB_FRAME_PRAISE_RET = 606;
      protocols.SUB_FRAME_PRAISE_NOTICE = 607;
      protocols.SUB_FRAME_GIFT = 608;
      protocols.SUB_FRAME_GIFT_RET = 609;
      protocols.SUB_FRAME_GIFT_NOTICE = 610;
      protocols.SUB_FRAME_READY_ERROR = 611;
      protocols.SUB_FRAME_REDPACKET_GAMEC = 612;
      protocols.SUB_FRAME_OPEN_MINI_GAME = 613;
      protocols.SUB_FRAME_OPEN_MINI_GAME_RET = 614;
      protocols.SUB_FRAME_MINI_GAME_ERR = 615;
      protocols.SUB_FRAME_PLAY_MINI_GAME = 616;
      protocols.SUB_FRAME_MINI_GAME_RESULT = 617;
      class CMD_GAME_LOGON_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.userid, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 4;
        }
      }
      protocols.CMD_GAME_LOGON_SUCCESS = CMD_GAME_LOGON_SUCCESS;
      class CMD_GAME_LOGON_ERROR {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber32();
          this.error = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.flag, CppType.INT32);
          builder.appendString(this.error, 128);
          return builder.getBuffer();
        }
        byteLength() {
          return 132;
        }
      }
      protocols.CMD_GAME_LOGON_ERROR = CMD_GAME_LOGON_ERROR;
      class CMD_GAME_LOGON {
        constructor() {
          this.code = 0;
          this.gameversion = 0;
          this.userid = 0;
          this.paseword = "";
          this.session = "";
        }
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.code = parser.nextNumber(CppType.UINT32);
          this.gameversion = parser.nextNumber(CppType.UINT32);
          this.userid = parser.nextNumber(CppType.UINT32);
          this.paseword = parser.nextString(global_define_1.CONST.PASS_LEN);
          var temp = parser.nextString(1);
          this.session = parser.nextString(global_define_1.CONST.SESSION_LEN);
          var temp = parser.nextString(1);
          this.base = parser.nextClass(new CMD_BASE_INFO());
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.code, CppType.UINT32);
          builder.appendNumber(this.gameversion, CppType.UINT32);
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendString(this.paseword, global_define_1.CONST.PASS_LEN);
          builder.appendNumber(0, CppType.INT8);
          builder.appendString(this.session, global_define_1.CONST.SESSION_LEN);
          builder.appendNumber(0, CppType.INT8);
          builder.appendClass(this.base);
          return builder.getBuffer();
        }
        byteLength() {
          return 100;
        }
      }
      protocols.CMD_GAME_LOGON = CMD_GAME_LOGON;
      class CMD_FRAME_REPORT {
        constructor() {
          this.userid = new Array(8);
          this.count = 0;
          this.kind = 0;
        }
        fromBuffer(arrayBuffer) {
          console.error("CMD_FRAME_REPORT.fromBuffer has not implemented yet.");
          return 0;
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          for (let i = 0; i < 8; ++i) builder.appendNumber(this.userid[i], CppType.UINT32);
          builder.appendNumber(this.count, CppType.UINT16);
          builder.appendNumber(0, CppType.UINT16);
          builder.appendNumber(this.kind, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 40;
        }
      }
      protocols.CMD_FRAME_REPORT = CMD_FRAME_REPORT;
      class CMD_USER_CHAT {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.len = parser.nextNumberU16();
          let test = parser.nextNumber16();
          this.color = parser.nextNumber(CppType.UINT32);
          this.userid = parser.nextNumber(CppType.UINT32);
          this.touserid = parser.nextNumberU32();
          this.chat = parser.nextString(512);
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(16 + this.len);
          builder.appendNumber(this.len, CppType.UINT16);
          builder.appendNumber(0, CppType.UINT16);
          builder.appendNumber(this.color, CppType.UINT32);
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendNumber(this.touserid, CppType.UINT32);
          builder.appendArrayBuffer(utils_1.utils.utf8_2_gbk(this.chat));
          return builder.getBuffer();
        }
        byteLength() {
          return 528;
        }
      }
      protocols.CMD_USER_CHAT = CMD_USER_CHAT;
      class CMD_FRAME_MESSAGE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.type = parser.nextNumberU16();
          this.len = parser.nextNumberU16();
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(1024));
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_FRAME_MESSAGE.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 1028;
        }
      }
      protocols.CMD_FRAME_MESSAGE = CMD_FRAME_MESSAGE;
      class CMD_USER_SIT_FAIL {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.error = utils_1.utils.gbk_2_utf8(parser.nextString(256));
          this.tableid = parser.nextNumberU16();
          this.reserve1 = parser.nextNumberU8();
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_USER_SIT_FAIL.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 260;
        }
      }
      protocols.CMD_USER_SIT_FAIL = CMD_USER_SIT_FAIL;
      class CMD_USER_SIT {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.tableid, CppType.UINT16);
          builder.appendNumber(this.chairid, CppType.UINT16);
          builder.appendNumber(this.delay, CppType.UINT16);
          builder.appendNumber(this.len, CppType.UINT8);
          return builder.getBuffer();
        }
        byteLength() {
          return 7;
        }
      }
      protocols.CMD_USER_SIT = CMD_USER_SIT;
      class CMD_USER_STATUS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumber32();
          this.tableid = parser.nextNumberU16();
          this.chairid = parser.nextNumberU16();
          this.delay = parser.nextNumberU16();
          this.status = parser.nextNumberU8();
          this.reserve1 = parser.nextNumberU8();
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_SUCCESS.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 12;
        }
      }
      protocols.CMD_USER_STATUS = CMD_USER_STATUS;
      class CMD_USER_SCORE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumberU32();
          let reserved = parser.nextNumberU32();
          this.data = parser.nextClass(new tagUserScore());
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_SUCCESS.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 136;
        }
      }
      protocols.CMD_USER_SCORE = CMD_USER_SCORE;
      class CMD_REDPACKET_INFO {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumberU32();
          this.finish_count = parser.nextNumberU32();
          this.totle_count = parser.nextNumberU32();
          this.pass_time = parser.nextNumberU32();
          this.interval = parser.nextNumberU32();
          this.sendtime = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_SUCCESS.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 24;
        }
      }
      protocols.CMD_REDPACKET_INFO = CMD_REDPACKET_INFO;
      class CMD_FRAME_REDPACK {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumberU32();
          this.redpack = parser.nextNumberU32();
          this.reserve = parser.nextString(16);
          this.message = parser.nextString(1024);
          return this.byteLength();
        }
        toBuffer() {
          console.error("CMD_LOGON_SUCCESS.toBuffer has not implemented yet.");
          return null;
        }
        byteLength() {
          return 1048;
        }
      }
      protocols.CMD_FRAME_REDPACK = CMD_FRAME_REDPACK;
      class CMD_CONFIG_INFO {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.gameid = parser.nextNumberU16();
          this.type = parser.nextNumberU16();
          this.tablecout = parser.nextNumberU16();
          this.chaircout = parser.nextNumberU16();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.gameid, CppType.UINT16);
          builder.appendNumber(this.type, CppType.UINT16);
          builder.appendNumber(this.tablecout, CppType.UINT16);
          builder.appendNumber(this.chaircout, CppType.UINT16);
          return builder.getBuffer();
        }
        byteLength() {
          return 8;
        }
      }
      protocols.CMD_CONFIG_INFO = CMD_CONFIG_INFO;
      class CMD_TABLE_STATUS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.tableid = parser.nextNumberU16();
          this.start = parser.nextNumberU8();
          this.lock = parser.nextNumberU8();
          this.reserve1 = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          return builder.getBuffer();
        }
        byteLength() {
          return 8;
        }
      }
      protocols.CMD_TABLE_STATUS = CMD_TABLE_STATUS;
      class CMD_SYSTEM_MESSAGE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.type = parser.nextNumberU16();
          this.len = parser.nextNumberU16();
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(1024));
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          return builder.getBuffer();
        }
        byteLength() {
          return 1028;
        }
      }
      protocols.CMD_SYSTEM_MESSAGE = CMD_SYSTEM_MESSAGE;
      class CMD_FRAME_INFO {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.allowlookon = parser.nextNumber8();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.allowlookon, CppType.INT8);
          return builder.getBuffer();
        }
        byteLength() {
          return 1;
        }
      }
      protocols.CMD_FRAME_INFO = CMD_FRAME_INFO;
      class CMD_FRAME_KICKOUT {
        fromBuffer(arrayBuffer) {
          console.error("CMD_FRAME_KICKOUT.fromBuffer has not implemented yet.");
          return 0;
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendNumber(this.touserid, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 8;
        }
      }
      protocols.CMD_FRAME_KICKOUT = CMD_FRAME_KICKOUT;
      class CMD_FRAME_KICKOUT_RET {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumberU32();
          this.userid = parser.nextNumberU32();
          this.touserid = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          return builder.getBuffer();
        }
        byteLength() {
          return 12;
        }
      }
      protocols.CMD_FRAME_KICKOUT_RET = CMD_FRAME_KICKOUT_RET;
      class CMD_FRAME_KICKOUT_NOTICE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumberU32();
          this.touserid = parser.nextNumberU32();
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          return builder.getBuffer();
        }
        byteLength() {
          return 8;
        }
      }
      protocols.CMD_FRAME_KICKOUT_NOTICE = CMD_FRAME_KICKOUT_NOTICE;
      protocols.MDM_AUXI = 1e4;
      protocols.SUB_AUXI_CREATE_TABLE = protocols.MDM_AUXI + 1;
      protocols.SUB_AUXI_DISMISS_TABLE = protocols.MDM_AUXI + 2;
      protocols.SUB_AUXI_JOIN_TABLE = protocols.MDM_AUXI + 3;
      protocols.SUB_AUXI_QUERY_TABLE = protocols.MDM_AUXI + 4;
      protocols.SUB_AUXI_CREATE_TABLE_SUCCESS = protocols.MDM_AUXI + 11;
      protocols.SUB_AUXI_CREATE_TABLE_FAIL = protocols.MDM_AUXI + 12;
      protocols.SUB_AUXI_DISMISS_TABLE_SUCCESS = protocols.MDM_AUXI + 13;
      protocols.SUB_AUXI_DISMISS_TABLE_FAIL = protocols.MDM_AUXI + 14;
      protocols.SUB_AUXI_JOIN_TABLE_SUCCESS = protocols.MDM_AUXI + 15;
      protocols.SUB_AUXI_JOIN_TABLE_FAIL = protocols.MDM_AUXI + 16;
      protocols.SUB_AUXI_QUERY_TABLE_SUCCESS = protocols.MDM_AUXI + 17;
      protocols.SUB_AUXI_QUERY_TABLE_FAIL = protocols.MDM_AUXI + 18;
      class CMD_AUXI_CREATE_TABLE {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendString(this.session, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.mac, global_define_1.CONST.MAC_LEN);
          builder.appendNumber(this.gameid, CppType.UINT32);
          builder.appendNumber(this.ruleitem, CppType.UINT32);
          builder.appendNumber(this.tallykind, CppType.UINT32);
          builder.appendArrayBuffer(utils_1.utils.utf8_2_gbk(this.rule));
          return builder.getBuffer();
        }
        byteLength() {
          return 1162;
        }
      }
      protocols.CMD_AUXI_CREATE_TABLE = CMD_AUXI_CREATE_TABLE;
      class CMD_AUXI_CREATE_TABLE_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.gameid = parser.nextNumber(CppType.UINT32);
          this.roomid = parser.nextNumber(CppType.UINT32);
          this.code = parser.nextString(global_define_1.CONST.CODE_LEN);
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_CREATE_TABLE_SUCCESS = CMD_AUXI_CREATE_TABLE_SUCCESS;
      class CMD_AUXI_CREATE_TABLE_FAIL {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.UINT32);
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_CREATE_TABLE_FAIL = CMD_AUXI_CREATE_TABLE_FAIL;
      class CMD_AUXI_DISMISS_TABLE {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendString(this.session, global_define_1.CONST.SESSION_LEN);
          builder.appendString(this.code, global_define_1.CONST.CODE_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 105;
        }
      }
      protocols.CMD_AUXI_DISMISS_TABLE = CMD_AUXI_DISMISS_TABLE;
      class CMD_AUXI_DISMISS_TABLE_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.UINT32);
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_DISMISS_TABLE_SUCCESS = CMD_AUXI_DISMISS_TABLE_SUCCESS;
      class CMD_AUXI_DISMISS_TABLE_FAIL {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.UINT32);
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_DISMISS_TABLE_FAIL = CMD_AUXI_DISMISS_TABLE_FAIL;
      class CMD_AUXI_JOIN_TABLE {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendString(this.code, global_define_1.CONST.CODE_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 68;
        }
      }
      protocols.CMD_AUXI_JOIN_TABLE = CMD_AUXI_JOIN_TABLE;
      class CMD_AUXI_JOIN_TABLE_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.userid = parser.nextNumber(CppType.INT32);
          this.nickname = parser.nextString(global_define_1.CONST.NAME_LEN);
          this.gameid = parser.nextNumber(CppType.INT32);
          this.roomid = parser.nextNumber(CppType.INT32);
          this.kind = parser.nextNumber(CppType.INT32);
          this.totalcount = parser.nextNumber(CppType.INT32);
          this.currcount = parser.nextNumber(CppType.INT32);
          this.tallykind = parser.nextNumber(CppType.UINT32);
          this.tallyname = utils_1.utils.gbk_2_utf8(parser.nextString(global_define_1.CONST.NAME_LEN));
          this.rule = parser.nextString(256);
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_JOIN_TABLE_SUCCESS = CMD_AUXI_JOIN_TABLE_SUCCESS;
      class CMD_AUXI_JOIN_TABLE_FAIL {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.UINT32);
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_JOIN_TABLE_FAIL = CMD_AUXI_JOIN_TABLE_FAIL;
      class CMD_AUXI_QUERY_TABLE {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendClass(this.base);
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendString(this.session, global_define_1.CONST.SESSION_LEN);
          return builder.getBuffer();
        }
        byteLength() {
          return 93;
        }
      }
      protocols.CMD_AUXI_QUERY_TABLE = CMD_AUXI_QUERY_TABLE;
      class auxi_query_table {}
      protocols.auxi_query_table = auxi_query_table;
      class CMD_AUXI_QUERY_TABLE_SUCCESS {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          let count = arrayBuffer.byteLength / 68;
          this.auxi_query_table = [];
          for (let i = 0; i < count; ++i) {
            let table = new auxi_query_table();
            table.code = parser.nextString(global_define_1.CONST.CODE_LEN);
            table.gameid = parser.nextNumber(CppType.INT32);
            table.roomid = parser.nextNumber(CppType.INT32);
            table.kind = parser.nextNumber(CppType.INT32);
            table.totalcount = parser.nextNumber(CppType.INT32);
            table.currcount = parser.nextNumber(CppType.INT32);
            table.tallykind = parser.nextNumber(CppType.UINT32);
            table.tallyname = utils_1.utils.gbk_2_utf8(parser.nextString(global_define_1.CONST.NAME_LEN));
            this.auxi_query_table.push(table);
          }
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_QUERY_TABLE_SUCCESS = CMD_AUXI_QUERY_TABLE_SUCCESS;
      class CMD_AUXI_QUERY_TABLE_FAIL {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.flag = parser.nextNumber(CppType.UINT32);
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(128));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_AUXI_QUERY_TABLE_FAIL = CMD_AUXI_QUERY_TABLE_FAIL;
      protocols.PUSH_ACTION_LOGON = 1;
      protocols.PUSH_ACTION_ENTER_ROOM = 2;
      protocols.PUSH_ACTION_LEAVE_ROOM = 4;
      protocols.PUSH_ACTION_MIN_ROOM = 8;
      protocols.PUSH_ACTION_MAX_ROOM = 16;
      protocols.PUSH_ACTION_LOSE = 32;
      protocols.PUSH_ACTION_CHANGE_TABLE = 64;
      protocols.PUSH_FUNNEL_GOLD_SHOP = 11001;
      protocols.PUSH_FUNNEL_INGOT_SHOP = 11002;
      protocols.PUSH_FUNNEL_PROP_SHOP = 11003;
      protocols.PUSH_FUNNEL_SIMPLE_SHOP = 11004;
      protocols.PUSH_FUNNEL_ACTIVITY = 11005;
      protocols.PUSH_FUNNEL_EXCHANGE = 11006;
      protocols.PUSH_FUNNEL_STEP_1 = 1;
      protocols.PUSH_FUNNEL_STEP_2 = 2;
      protocols.PUSH_FUNNEL_STEP_3 = 3;
      protocols.PUSH_FUNNEL_STEP_4 = 4;
      protocols.PUSH_FUNNEL_STEP_5 = 5;
      protocols.PUSH_FUNNEL_STEP_6 = 6;
      protocols.PUSH_FUNNEL_STEP_7 = 7;
      protocols.MDM_PUSH = 8e3;
      protocols.SUB_PUSH_MESSAGE = 102;
      protocols.SUB_PUSH_BUGLE = 104;
      protocols.SUN_PUSH_REGISTER_RET = 1001;
      protocols.SUN_PUSH_ACTION = 1002;
      protocols.SUB_PUSH_MAIL = 1003;
      protocols.SUB_PUSH_TASK = 1004;
      protocols.SUB_USER_REGISTER = 1;
      protocols.SUB_USER_LOCATION = 3;
      protocols.SUN_USER_ACTION = 2001;
      protocols.SUN_USER_ACTION_COUNT = 2002;
      class CMD_USER_REGISTER {
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendNumber(this.right, CppType.UINT32);
          builder.appendClass(this.base);
          builder.appendString(this.ext, 1024);
          return builder.getBuffer();
        }
        byteLength() {
          return 1052;
        }
      }
      protocols.CMD_USER_REGISTER = CMD_USER_REGISTER;
      class CMD_PUSH_MESSAGE {
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.message = utils_1.utils.gbk_2_utf8(parser.nextString(2048));
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_PUSH_MESSAGE = CMD_PUSH_MESSAGE;
      class CMD_PUSH_TASK {
        constructor() {
          this.taskid = 0;
          this.gameid = 0;
          this.type = 0;
          this.location = 0;
          this.authmask = 0;
          this.modulemask1 = 0;
          this.modulemask2 = 0;
          this.paymask = 0;
          this.param1 = 0;
          this.param2 = 0;
          this.message = "";
        }
        fromBuffer(arrayBuffer) {
          var parser = new ab_parser(new DataView(arrayBuffer));
          this.taskid = parser.nextNumber(CppType.INT32);
          this.gameid = parser.nextNumber(CppType.INT32);
          this.type = parser.nextNumber(CppType.INT32);
          this.location = parser.nextNumber(CppType.INT32);
          this.authmask = parser.nextNumber(CppType.UINT32);
          this.modulemask1 = parser.nextNumber(CppType.UINT32);
          this.modulemask2 = parser.nextNumber(CppType.UINT32);
          this.paymask = parser.nextNumber(CppType.UINT32);
          this.param1 = parser.nextNumber(CppType.UINT32);
          this.param2 = parser.nextNumber(CppType.UINT32);
          this.message = parser.nextString(1024);
          return this.byteLength();
        }
        toBuffer() {
          return null;
        }
        byteLength() {
          return 0;
        }
      }
      protocols.CMD_PUSH_TASK = CMD_PUSH_TASK;
      class CMD_USER_LOCATION {
        constructor() {
          this.userid = 0;
          this.gameid = 0;
          this.roomid = 0;
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.userid, CppType.UINT32);
          builder.appendNumber(this.gameid, CppType.UINT32);
          builder.appendNumber(this.roomid, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 12;
        }
      }
      protocols.CMD_USER_LOCATION = CMD_USER_LOCATION;
      class CMD_USER_ACTION {
        constructor() {
          this.action = 0;
          this.userid = 0;
          this.gameid = 0;
          this.roomid = 0;
          this.gold = 0;
          this.bank = 0;
          this.ingot = 0;
          this.paycount = 0;
          this.redpacket = 0;
          this.experience = 0;
          this.right = 0;
          this.auth_mask = 0;
          this.module_mask = 0;
          this.payment_mask = 0;
          this.base = new CMD_BASE_INFO();
          this.module2_mask = 0;
          this.master_right = 0;
          this.iparam1 = 0;
          this.iparam2 = 0;
          this.prop = 0;
          this.prop_status = 0;
          this.reserve = "";
        }
        fromBuffer(arrayBuffer) {
          return this.byteLength();
        }
        toBuffer() {
          var builder = new ab_builder(this.byteLength());
          builder.appendNumber(this.action, CppType.INT32);
          builder.appendNumber(this.userid, CppType.INT32);
          builder.appendNumber(this.gameid, CppType.INT32);
          builder.appendNumber(this.roomid, CppType.INT32);
          builder.append64Number(this.gold);
          builder.append64Number(this.bank);
          builder.appendNumber(this.ingot, CppType.UINT32);
          builder.appendNumber(this.paycount, CppType.UINT32);
          builder.appendNumber(this.redpacket, CppType.UINT32);
          builder.appendNumber(this.experience, CppType.UINT32);
          builder.appendNumber(this.right, CppType.UINT32);
          builder.appendNumber(this.auth_mask, CppType.UINT32);
          builder.appendNumber(this.module_mask, CppType.UINT32);
          builder.appendNumber(this.payment_mask, CppType.UINT32);
          builder.appendClass(this.base);
          builder.appendNumber(this.module2_mask, CppType.UINT32);
          builder.appendNumber(this.master_right, CppType.UINT32);
          builder.appendNumber(this.iparam1, CppType.INT32);
          builder.appendNumber(this.iparam2, CppType.INT32);
          builder.appendNumber(this.prop, CppType.UINT32);
          builder.appendNumber(this.prop_status, CppType.UINT32);
          builder.appendString(this.reserve, 24);
          builder.appendNumber(0, CppType.UINT32);
          return builder.getBuffer();
        }
        byteLength() {
          return 136;
        }
      }
      protocols.CMD_USER_ACTION = CMD_USER_ACTION;
    })(protocols = exports.protocols || (exports.protocols = {}));
    cc._RF.pop();
  }, {
    "../common/utils": "utils",
    "./global_define": "global_define"
  } ],
  push_controller: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "75936NoDxdPdaF8WLnKmTQv", "push_controller");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.push_controller = void 0;
    const global_data_1 = require("../global_data");
    const protocols_1 = require("../protocols");
    const utils_1 = require("../../common/utils");
    const websocket_1 = require("../../common/websocket");
    const global_define_1 = require("../global_define");
    const room_controller_1 = require("./room_controller");
    var push_controller;
    (function(push_controller) {
      push_controller.m_bool_running = false;
      push_controller.m_bool_ready = false;
      push_controller.m_the_game_socket = null;
      function start_server() {
        init();
        console.log("[PUSH] \u63a8\u9001\u670d\u52a1\u5f00\u59cb\u8fde\u63a5");
        push_controller.m_the_game_socket.connect(global_data_1.global_data.server_protocol, global_data_1.global_data.push_server, global_data_1.global_data.push_port);
      }
      push_controller.start_server = start_server;
      function stop_server(clear) {
        close_socket();
      }
      push_controller.stop_server = stop_server;
      function init() {
        close_socket();
        push_controller.m_the_game_socket = new websocket_1.websocket();
        push_controller.m_the_game_socket.onSocketOpen = () => {
          on_socket_connect(0);
        };
        push_controller.m_the_game_socket.onSocketMessage = (mainCmdID, subCmdID, data) => {
          on_socket_receive(mainCmdID, subCmdID, data);
        };
        push_controller.m_the_game_socket.onSocketClose = event => {
          on_socket_close();
        };
        push_controller.m_the_game_socket.onSocketError = event => {
          on_socket_error(event);
        };
        push_controller.m_bool_running = false;
        push_controller.m_bool_ready = false;
      }
      push_controller.init = init;
      function close_socket() {
        if (push_controller.m_the_game_socket) {
          push_controller.m_the_game_socket.onSocketOpen = () => {};
          push_controller.m_the_game_socket.onSocketMessage = () => {};
          push_controller.m_the_game_socket.onSocketClose = () => {};
          push_controller.m_the_game_socket.onSocketError = () => {};
          push_controller.m_the_game_socket.close();
          push_controller.m_the_game_socket = null;
        }
      }
      push_controller.close_socket = close_socket;
      function on_socket_connect(int_code) {
        console.log("[PUSH] \u63a8\u9001\u670d\u52a1\u5df2\u8fde\u63a5\uff1a%d", int_code);
        if (0 == int_code) {
          push_controller.m_bool_running = true;
          let the_data = new protocols_1.protocols.CMD_USER_REGISTER();
          the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
          the_data.right = global_data_1.global_data.get_the_user_data()._int_user_right;
          the_data.base = new protocols_1.protocols.CMD_BASE_INFO();
          the_data.base.int_client_type = 2;
          the_data.base.int_channel_id = global_data_1.global_data.channel_id;
          the_data.base.int_kind_id = global_data_1.global_data.kind_id;
          the_data.base.int_version = global_data_1.global_data.version;
          the_data.base.int_area_id = global_data_1.global_data.area_id;
          push_controller.m_the_game_socket.sendData(protocols_1.protocols.MDM_PUSH, protocols_1.protocols.SUB_USER_REGISTER, the_data.toBuffer());
          console.log("[PUSH] \u63a8\u9001\u63d0\u4ea4\u6ce8\u518c...");
        }
      }
      push_controller.on_socket_connect = on_socket_connect;
      function on_socket_close() {
        console.log("[PUSH] \u63a8\u9001\u670d\u52a1\u5173\u95ed");
      }
      push_controller.on_socket_close = on_socket_close;
      function on_socket_error(event) {
        console.log("[PUSH] \u63a8\u9001\u670d\u52a1\u9519\u8bef", event);
        start_server();
      }
      push_controller.on_socket_error = on_socket_error;
      function on_socket_receive(int_main_id, int_sub_id, ptr_data) {
        if (int_main_id == protocols_1.protocols.MDM_PUSH) {
          console.log("[PUSH] <= ", int_main_id, int_sub_id);
          if (int_sub_id == protocols_1.protocols.SUB_PUSH_MESSAGE) on_socket_push_message(int_main_id, int_sub_id, ptr_data); else if (int_sub_id == protocols_1.protocols.SUB_PUSH_BUGLE) on_socket_push_bugle(int_main_id, int_sub_id, ptr_data); else if (int_sub_id == protocols_1.protocols.SUN_PUSH_ACTION) ; else if (int_sub_id == protocols_1.protocols.SUN_PUSH_REGISTER_RET) {
            console.log("[PUSH] \u63a8\u9001\u63d0\u4ea4\u6ce8\u518c\u6210\u529f");
            push_controller.m_bool_ready = true;
          } else int_sub_id == protocols_1.protocols.SUB_PUSH_MAIL || int_sub_id == protocols_1.protocols.SUB_PUSH_TASK && on_socket_push_task(int_main_id, int_sub_id, ptr_data);
        }
      }
      push_controller.on_socket_receive = on_socket_receive;
      function on_socket_push_message(mainid, subid, ptr_data) {
        if (!global_data_1.global_data.have_module_push()) return;
        let ptr_message = new protocols_1.protocols.CMD_PUSH_MESSAGE();
        ptr_message.fromBuffer(ptr_data);
        utils_1.utils.send("PushMessage", ptr_message.message);
      }
      function on_socket_push_bugle(mainid, subid, ptr_data) {
        if (!global_data_1.global_data.have_module_push()) return;
        let ptr_message = new protocols_1.protocols.CMD_PUSH_MESSAGE();
        ptr_message.fromBuffer(ptr_data);
        let json = utils_1.utils.from_json(ptr_message.message);
        json && utils_1.utils.send("PushBugle", decodeURIComponent(json.msg));
      }
      function on_socket_push_task(mainid, subid, ptr_data) {
        if (!global_data_1.global_data.have_module_push()) return;
        let task = new protocols_1.protocols.CMD_PUSH_TASK();
        task.fromBuffer(ptr_data);
        if (task.authmask > 0 && (global_data_1.global_data._uint_auth_mask & task.authmask) != task.authmask) return;
        if (task.modulemask1 > 0 && (global_data_1.global_data._uint_module_mask & task.modulemask1) != task.modulemask1) return;
        if (task.paymask > 0 && (global_data_1.global_data._uint_payment_mask & task.paymask) != task.paymask) return;
        if (0 != task.gameid && 100 != task.gameid && !global_data_1.global_data.get_game_data(task.gameid)) return;
        if (0 == task.location && global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_ROOM) return;
        if (0 != task.location) {
          if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) return;
          if (room_controller_1.room_controller.get_room_data() && room_controller_1.room_controller.get_room_data()._int_game_id != task.location) return;
        }
        utils_1.utils.send("PushTask", task);
      }
      function send_location() {
        if (!push_controller.m_the_game_socket) return;
        let the_data = new protocols_1.protocols.CMD_USER_LOCATION();
        the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
        the_data.gameid = global_data_1.global_data.current_room_data ? global_data_1.global_data.current_room_data._int_game_id : 0;
        the_data.roomid = global_data_1.global_data.current_room_data ? global_data_1.global_data.current_room_data._int_room_id : 0;
        push_controller.m_the_game_socket.sendData(protocols_1.protocols.MDM_PUSH, protocols_1.protocols.SUB_USER_LOCATION, the_data.toBuffer());
        console.log("[PUSH] Location => ", the_data);
      }
      push_controller.send_location = send_location;
      function send_action(action, gameid, roomid, iparam1, iparam2) {
        if (!push_controller.m_the_game_socket) return;
        let the_data = new protocols_1.protocols.CMD_USER_ACTION();
        the_data.action = action;
        the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
        the_data.gameid = gameid;
        the_data.roomid = roomid;
        the_data.gold = global_data_1.global_data.get_the_user_data()._long_gold;
        the_data.bank = global_data_1.global_data.get_the_user_data()._long_bank_gold;
        the_data.ingot = global_data_1.global_data.get_the_user_data()._long_ingot;
        the_data.paycount = global_data_1.global_data.get_the_user_data()._int_pay_count;
        the_data.redpacket = global_data_1.global_data.get_the_user_data()._int_red_packet;
        the_data.experience = global_data_1.global_data.get_the_user_data()._int_experience;
        the_data.right = global_data_1.global_data.get_the_user_data()._int_user_right;
        the_data.master_right = global_data_1.global_data.get_the_user_data()._int_master_right;
        the_data.auth_mask = global_data_1.global_data._uint_auth_mask;
        the_data.module_mask = global_data_1.global_data._uint_module_mask;
        the_data.module2_mask = 0;
        the_data.payment_mask = global_data_1.global_data._uint_payment_mask;
        the_data.base = new protocols_1.protocols.CMD_BASE_INFO();
        the_data.base.int_client_type = 2;
        the_data.base.int_channel_id = global_data_1.global_data.channel_id;
        the_data.base.int_kind_id = global_data_1.global_data.kind_id;
        the_data.base.int_version = global_data_1.global_data.version;
        the_data.base.int_area_id = global_data_1.global_data.area_id;
        the_data.iparam1 = iparam1;
        the_data.iparam2 = iparam2;
        for (let prop of global_data_1.global_data.vector_prop_data) 0 != prop._int_mask && 0 != global_data_1.global_data.get_prop_count_by_id(prop._int_id) && (the_data.prop = the_data.prop | prop._int_mask);
        for (let status of global_data_1.global_data.vector_status_data) 0 != status._int_mask && 0 != global_data_1.global_data.get_status_time_by_id(status._int_id) && (the_data.prop_status = the_data.prop_status | status._int_mask);
        push_controller.m_the_game_socket.sendData(protocols_1.protocols.MDM_PUSH, protocols_1.protocols.SUN_USER_ACTION, the_data.toBuffer());
        console.log("[PUSH] Action => ", the_data);
      }
      push_controller.send_action = send_action;
    })(push_controller = exports.push_controller || (exports.push_controller = {}));
    window && (window.push_controller = push_controller);
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../common/websocket": "websocket",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../protocols": "protocols",
    "./room_controller": "room_controller"
  } ],
  "qqmap-wx-jssdk": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c346bD5KTxFc6LR/fUvQjhH", "qqmap-wx-jssdk");
    "use strict";
    var ERROR_CONF = {
      KEY_ERR: 311,
      KEY_ERR_MSG: "key\u683c\u5f0f\u9519\u8bef",
      PARAM_ERR: 310,
      PARAM_ERR_MSG: "\u8bf7\u6c42\u53c2\u6570\u4fe1\u606f\u6709\u8bef",
      SYSTEM_ERR: 600,
      SYSTEM_ERR_MSG: "\u7cfb\u7edf\u9519\u8bef",
      WX_ERR_CODE: 1e3,
      WX_OK_CODE: 200
    };
    var BASE_URL = "https://apis.map.qq.com/ws/";
    var URL_SEARCH = BASE_URL + "place/v1/search";
    var URL_SUGGESTION = BASE_URL + "place/v1/suggestion";
    var URL_GET_GEOCODER = BASE_URL + "geocoder/v1/";
    var URL_CITY_LIST = BASE_URL + "district/v1/list";
    var URL_AREA_LIST = BASE_URL + "district/v1/getchildren";
    var URL_DISTANCE = BASE_URL + "distance/v1/";
    var URL_DIRECTION = BASE_URL + "direction/v1/";
    var MODE = {
      driving: "driving",
      transit: "transit"
    };
    var EARTH_RADIUS = 6378136.49;
    var Utils = {
      safeAdd: function safeAdd(x, y) {
        var lsw = (65535 & x) + (65535 & y);
        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return msw << 16 | 65535 & lsw;
      },
      bitRotateLeft: function bitRotateLeft(num, cnt) {
        return num << cnt | num >>> 32 - cnt;
      },
      md5cmn: function md5cmn(q, a, b, x, s, t) {
        return this.safeAdd(this.bitRotateLeft(this.safeAdd(this.safeAdd(a, q), this.safeAdd(x, t)), s), b);
      },
      md5ff: function md5ff(a, b, c, d, x, s, t) {
        return this.md5cmn(b & c | ~b & d, a, b, x, s, t);
      },
      md5gg: function md5gg(a, b, c, d, x, s, t) {
        return this.md5cmn(b & d | c & ~d, a, b, x, s, t);
      },
      md5hh: function md5hh(a, b, c, d, x, s, t) {
        return this.md5cmn(b ^ c ^ d, a, b, x, s, t);
      },
      md5ii: function md5ii(a, b, c, d, x, s, t) {
        return this.md5cmn(c ^ (b | ~d), a, b, x, s, t);
      },
      binlMD5: function binlMD5(x, len) {
        x[len >> 5] |= 128 << len % 32;
        x[14 + (len + 64 >>> 9 << 4)] = len;
        var i;
        var olda;
        var oldb;
        var oldc;
        var oldd;
        var a = 1732584193;
        var b = -271733879;
        var c = -1732584194;
        var d = 271733878;
        for (i = 0; i < x.length; i += 16) {
          olda = a;
          oldb = b;
          oldc = c;
          oldd = d;
          a = this.md5ff(a, b, c, d, x[i], 7, -680876936);
          d = this.md5ff(d, a, b, c, x[i + 1], 12, -389564586);
          c = this.md5ff(c, d, a, b, x[i + 2], 17, 606105819);
          b = this.md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
          a = this.md5ff(a, b, c, d, x[i + 4], 7, -176418897);
          d = this.md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
          c = this.md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
          b = this.md5ff(b, c, d, a, x[i + 7], 22, -45705983);
          a = this.md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
          d = this.md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
          c = this.md5ff(c, d, a, b, x[i + 10], 17, -42063);
          b = this.md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
          a = this.md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
          d = this.md5ff(d, a, b, c, x[i + 13], 12, -40341101);
          c = this.md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
          b = this.md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
          a = this.md5gg(a, b, c, d, x[i + 1], 5, -165796510);
          d = this.md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
          c = this.md5gg(c, d, a, b, x[i + 11], 14, 643717713);
          b = this.md5gg(b, c, d, a, x[i], 20, -373897302);
          a = this.md5gg(a, b, c, d, x[i + 5], 5, -701558691);
          d = this.md5gg(d, a, b, c, x[i + 10], 9, 38016083);
          c = this.md5gg(c, d, a, b, x[i + 15], 14, -660478335);
          b = this.md5gg(b, c, d, a, x[i + 4], 20, -405537848);
          a = this.md5gg(a, b, c, d, x[i + 9], 5, 568446438);
          d = this.md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
          c = this.md5gg(c, d, a, b, x[i + 3], 14, -187363961);
          b = this.md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
          a = this.md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
          d = this.md5gg(d, a, b, c, x[i + 2], 9, -51403784);
          c = this.md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
          b = this.md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
          a = this.md5hh(a, b, c, d, x[i + 5], 4, -378558);
          d = this.md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
          c = this.md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
          b = this.md5hh(b, c, d, a, x[i + 14], 23, -35309556);
          a = this.md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
          d = this.md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
          c = this.md5hh(c, d, a, b, x[i + 7], 16, -155497632);
          b = this.md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
          a = this.md5hh(a, b, c, d, x[i + 13], 4, 681279174);
          d = this.md5hh(d, a, b, c, x[i], 11, -358537222);
          c = this.md5hh(c, d, a, b, x[i + 3], 16, -722521979);
          b = this.md5hh(b, c, d, a, x[i + 6], 23, 76029189);
          a = this.md5hh(a, b, c, d, x[i + 9], 4, -640364487);
          d = this.md5hh(d, a, b, c, x[i + 12], 11, -421815835);
          c = this.md5hh(c, d, a, b, x[i + 15], 16, 530742520);
          b = this.md5hh(b, c, d, a, x[i + 2], 23, -995338651);
          a = this.md5ii(a, b, c, d, x[i], 6, -198630844);
          d = this.md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
          c = this.md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
          b = this.md5ii(b, c, d, a, x[i + 5], 21, -57434055);
          a = this.md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
          d = this.md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
          c = this.md5ii(c, d, a, b, x[i + 10], 15, -1051523);
          b = this.md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
          a = this.md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
          d = this.md5ii(d, a, b, c, x[i + 15], 10, -30611744);
          c = this.md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
          b = this.md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
          a = this.md5ii(a, b, c, d, x[i + 4], 6, -145523070);
          d = this.md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
          c = this.md5ii(c, d, a, b, x[i + 2], 15, 718787259);
          b = this.md5ii(b, c, d, a, x[i + 9], 21, -343485551);
          a = this.safeAdd(a, olda);
          b = this.safeAdd(b, oldb);
          c = this.safeAdd(c, oldc);
          d = this.safeAdd(d, oldd);
        }
        return [ a, b, c, d ];
      },
      binl2rstr: function binl2rstr(input) {
        var i;
        var output = "";
        var length32 = 32 * input.length;
        for (i = 0; i < length32; i += 8) output += String.fromCharCode(input[i >> 5] >>> i % 32 & 255);
        return output;
      },
      rstr2binl: function rstr2binl(input) {
        var i;
        var output = [];
        output[(input.length >> 2) - 1] = void 0;
        for (i = 0; i < output.length; i += 1) output[i] = 0;
        var length8 = 8 * input.length;
        for (i = 0; i < length8; i += 8) output[i >> 5] |= (255 & input.charCodeAt(i / 8)) << i % 32;
        return output;
      },
      rstrMD5: function rstrMD5(s) {
        return this.binl2rstr(this.binlMD5(this.rstr2binl(s), 8 * s.length));
      },
      rstrHMACMD5: function rstrHMACMD5(key, data) {
        var i;
        var bkey = this.rstr2binl(key);
        var ipad = [];
        var opad = [];
        var hash;
        ipad[15] = opad[15] = void 0;
        bkey.length > 16 && (bkey = this.binlMD5(bkey, 8 * key.length));
        for (i = 0; i < 16; i += 1) {
          ipad[i] = 909522486 ^ bkey[i];
          opad[i] = 1549556828 ^ bkey[i];
        }
        hash = this.binlMD5(ipad.concat(this.rstr2binl(data)), 512 + 8 * data.length);
        return this.binl2rstr(this.binlMD5(opad.concat(hash), 640));
      },
      rstr2hex: function rstr2hex(input) {
        var hexTab = "0123456789abcdef";
        var output = "";
        var x;
        var i;
        for (i = 0; i < input.length; i += 1) {
          x = input.charCodeAt(i);
          output += hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(15 & x);
        }
        return output;
      },
      str2rstrUTF8: function str2rstrUTF8(input) {
        return unescape(encodeURIComponent(input));
      },
      rawMD5: function rawMD5(s) {
        return this.rstrMD5(this.str2rstrUTF8(s));
      },
      hexMD5: function hexMD5(s) {
        return this.rstr2hex(this.rawMD5(s));
      },
      rawHMACMD5: function rawHMACMD5(k, d) {
        return this.rstrHMACMD5(this.str2rstrUTF8(k), str2rstrUTF8(d));
      },
      hexHMACMD5: function hexHMACMD5(k, d) {
        return this.rstr2hex(this.rawHMACMD5(k, d));
      },
      md5: function md5(string, key, raw) {
        if (!key) {
          if (!raw) return this.hexMD5(string);
          return this.rawMD5(string);
        }
        if (!raw) return this.hexHMACMD5(key, string);
        return this.rawHMACMD5(key, string);
      },
      getSig: function getSig(requestParam, sk, feature, mode) {
        var sig = null;
        var requestArr = [];
        Object.keys(requestParam).sort().forEach(function(key) {
          requestArr.push(key + "=" + requestParam[key]);
        });
        "search" == feature && (sig = "/ws/place/v1/search?" + requestArr.join("&") + sk);
        "suggest" == feature && (sig = "/ws/place/v1/suggestion?" + requestArr.join("&") + sk);
        "reverseGeocoder" == feature && (sig = "/ws/geocoder/v1/?" + requestArr.join("&") + sk);
        "geocoder" == feature && (sig = "/ws/geocoder/v1/?" + requestArr.join("&") + sk);
        "getCityList" == feature && (sig = "/ws/district/v1/list?" + requestArr.join("&") + sk);
        "getDistrictByCityId" == feature && (sig = "/ws/district/v1/getchildren?" + requestArr.join("&") + sk);
        "calculateDistance" == feature && (sig = "/ws/distance/v1/?" + requestArr.join("&") + sk);
        "direction" == feature && (sig = "/ws/direction/v1/" + mode + "?" + requestArr.join("&") + sk);
        sig = this.md5(sig);
        return sig;
      },
      location2query: function location2query(data) {
        if ("string" == typeof data) return data;
        var query = "";
        for (var i = 0; i < data.length; i++) {
          var d = data[i];
          !query || (query += ";");
          d.location && (query = query + d.location.lat + "," + d.location.lng);
          d.latitude && d.longitude && (query = query + d.latitude + "," + d.longitude);
        }
        return query;
      },
      rad: function rad(d) {
        return d * Math.PI / 180;
      },
      getEndLocation: function getEndLocation(location) {
        var to = location.split(";");
        var endLocation = [];
        for (var i = 0; i < to.length; i++) endLocation.push({
          lat: parseFloat(to[i].split(",")[0]),
          lng: parseFloat(to[i].split(",")[1])
        });
        return endLocation;
      },
      getDistance: function getDistance(latFrom, lngFrom, latTo, lngTo) {
        var radLatFrom = this.rad(latFrom);
        var radLatTo = this.rad(latTo);
        var a = radLatFrom - radLatTo;
        var b = this.rad(lngFrom) - this.rad(lngTo);
        var distance = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLatFrom) * Math.cos(radLatTo) * Math.pow(Math.sin(b / 2), 2)));
        distance *= EARTH_RADIUS;
        distance = Math.round(1e4 * distance) / 1e4;
        return parseFloat(distance.toFixed(0));
      },
      getWXLocation: function getWXLocation(success, fail, complete) {
        wx.getLocation({
          type: "gcj02",
          success: success,
          fail: fail,
          complete: complete
        });
      },
      getLocationParam: function getLocationParam(location) {
        if ("string" == typeof location) {
          var locationArr = location.split(",");
          location = 2 === locationArr.length ? {
            latitude: location.split(",")[0],
            longitude: location.split(",")[1]
          } : {};
        }
        return location;
      },
      polyfillParam: function polyfillParam(param) {
        param.success = param.success || function() {};
        param.fail = param.fail || function() {};
        param.complete = param.complete || function() {};
      },
      checkParamKeyEmpty: function checkParamKeyEmpty(param, key) {
        if (!param[key]) {
          var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + key + "\u53c2\u6570\u683c\u5f0f\u6709\u8bef");
          param.fail(errconf);
          param.complete(errconf);
          return true;
        }
        return false;
      },
      checkKeyword: function checkKeyword(param) {
        return !this.checkParamKeyEmpty(param, "keyword");
      },
      checkLocation: function checkLocation(param) {
        var location = this.getLocationParam(param.location);
        if (!location || !location.latitude || !location.longitude) {
          var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + " location\u53c2\u6570\u683c\u5f0f\u6709\u8bef");
          param.fail(errconf);
          param.complete(errconf);
          return false;
        }
        return true;
      },
      buildErrorConfig: function buildErrorConfig(errCode, errMsg) {
        return {
          status: errCode,
          message: errMsg
        };
      },
      handleData: function handleData(param, data, feature) {
        if ("search" == feature) {
          var searchResult = data.data;
          var searchSimplify = [];
          for (var i = 0; i < searchResult.length; i++) searchSimplify.push({
            id: searchResult[i].id || null,
            title: searchResult[i].title || null,
            latitude: searchResult[i].location && searchResult[i].location.lat || null,
            longitude: searchResult[i].location && searchResult[i].location.lng || null,
            address: searchResult[i].address || null,
            category: searchResult[i].category || null,
            tel: searchResult[i].tel || null,
            adcode: searchResult[i].ad_info && searchResult[i].ad_info.adcode || null,
            city: searchResult[i].ad_info && searchResult[i].ad_info.city || null,
            district: searchResult[i].ad_info && searchResult[i].ad_info.district || null,
            province: searchResult[i].ad_info && searchResult[i].ad_info.province || null
          });
          param.success(data, {
            searchResult: searchResult,
            searchSimplify: searchSimplify
          });
        } else if ("suggest" == feature) {
          var suggestResult = data.data;
          var suggestSimplify = [];
          for (var i = 0; i < suggestResult.length; i++) suggestSimplify.push({
            adcode: suggestResult[i].adcode || null,
            address: suggestResult[i].address || null,
            category: suggestResult[i].category || null,
            city: suggestResult[i].city || null,
            district: suggestResult[i].district || null,
            id: suggestResult[i].id || null,
            latitude: suggestResult[i].location && suggestResult[i].location.lat || null,
            longitude: suggestResult[i].location && suggestResult[i].location.lng || null,
            province: suggestResult[i].province || null,
            title: suggestResult[i].title || null,
            type: suggestResult[i].type || null
          });
          param.success(data, {
            suggestResult: suggestResult,
            suggestSimplify: suggestSimplify
          });
        } else if ("reverseGeocoder" == feature) {
          var reverseGeocoderResult = data.result;
          var reverseGeocoderSimplify = {
            address: reverseGeocoderResult.address || null,
            latitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lat || null,
            longitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lng || null,
            adcode: reverseGeocoderResult.ad_info && reverseGeocoderResult.ad_info.adcode || null,
            city: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.city || null,
            district: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.district || null,
            nation: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.nation || null,
            province: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.province || null,
            street: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street || null,
            street_number: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street_number || null,
            recommend: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.recommend || null,
            rough: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.rough || null
          };
          if (reverseGeocoderResult.pois) {
            var pois = reverseGeocoderResult.pois;
            var poisSimplify = [];
            for (var i = 0; i < pois.length; i++) poisSimplify.push({
              id: pois[i].id || null,
              title: pois[i].title || null,
              latitude: pois[i].location && pois[i].location.lat || null,
              longitude: pois[i].location && pois[i].location.lng || null,
              address: pois[i].address || null,
              category: pois[i].category || null,
              adcode: pois[i].ad_info && pois[i].ad_info.adcode || null,
              city: pois[i].ad_info && pois[i].ad_info.city || null,
              district: pois[i].ad_info && pois[i].ad_info.district || null,
              province: pois[i].ad_info && pois[i].ad_info.province || null
            });
            param.success(data, {
              reverseGeocoderResult: reverseGeocoderResult,
              reverseGeocoderSimplify: reverseGeocoderSimplify,
              pois: pois,
              poisSimplify: poisSimplify
            });
          } else param.success(data, {
            reverseGeocoderResult: reverseGeocoderResult,
            reverseGeocoderSimplify: reverseGeocoderSimplify
          });
        } else if ("geocoder" == feature) {
          var geocoderResult = data.result;
          var geocoderSimplify = {
            title: geocoderResult.title || null,
            latitude: geocoderResult.location && geocoderResult.location.lat || null,
            longitude: geocoderResult.location && geocoderResult.location.lng || null,
            adcode: geocoderResult.ad_info && geocoderResult.ad_info.adcode || null,
            province: geocoderResult.address_components && geocoderResult.address_components.province || null,
            city: geocoderResult.address_components && geocoderResult.address_components.city || null,
            district: geocoderResult.address_components && geocoderResult.address_components.district || null,
            street: geocoderResult.address_components && geocoderResult.address_components.street || null,
            street_number: geocoderResult.address_components && geocoderResult.address_components.street_number || null,
            level: geocoderResult.level || null
          };
          param.success(data, {
            geocoderResult: geocoderResult,
            geocoderSimplify: geocoderSimplify
          });
        } else if ("getCityList" == feature) {
          var provinceResult = data.result[0];
          var cityResult = data.result[1];
          var districtResult = data.result[2];
          param.success(data, {
            provinceResult: provinceResult,
            cityResult: cityResult,
            districtResult: districtResult
          });
        } else if ("getDistrictByCityId" == feature) {
          var districtByCity = data.result[0];
          param.success(data, districtByCity);
        } else if ("calculateDistance" == feature) {
          var calculateDistanceResult = data.result.elements;
          var distance = [];
          for (var i = 0; i < calculateDistanceResult.length; i++) distance.push(calculateDistanceResult[i].distance);
          param.success(data, {
            calculateDistanceResult: calculateDistanceResult,
            distance: distance
          });
        } else if ("direction" == feature) {
          var direction = data.result.routes;
          param.success(data, direction);
        } else param.success(data);
      },
      buildWxRequestConfig: function buildWxRequestConfig(param, options, feature) {
        var that = this;
        options.header = {
          "content-type": "application/json"
        };
        options.method = "GET";
        options.success = function(res) {
          var data = res.data;
          0 === data.status ? that.handleData(param, data, feature) : param.fail(data);
        };
        options.fail = function(res) {
          res.statusCode = ERROR_CONF.WX_ERR_CODE;
          param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
        };
        options.complete = function(res) {
          var statusCode = +res.statusCode;
          switch (statusCode) {
           case ERROR_CONF.WX_ERR_CODE:
            param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
            break;

           case ERROR_CONF.WX_OK_CODE:
            var data = res.data;
            0 === data.status ? param.complete(data) : param.complete(that.buildErrorConfig(data.status, data.message));
            break;

           default:
            param.complete(that.buildErrorConfig(ERROR_CONF.SYSTEM_ERR, ERROR_CONF.SYSTEM_ERR_MSG));
          }
        };
        return options;
      },
      locationProcess: function locationProcess(param, locationsuccess, locationfail, locationcomplete) {
        var that = this;
        locationfail = locationfail || function(res) {
          res.statusCode = ERROR_CONF.WX_ERR_CODE;
          param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
        };
        locationcomplete = locationcomplete || function(res) {
          res.statusCode == ERROR_CONF.WX_ERR_CODE && param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
        };
        if (param.location) {
          if (that.checkLocation(param)) {
            var location = Utils.getLocationParam(param.location);
            locationsuccess(location);
          }
        } else that.getWXLocation(locationsuccess, locationfail, locationcomplete);
      }
    };
    var QQMapWX = function() {
      function QQMapWX(options) {
        if (!options.key) throw Error("key\u503c\u4e0d\u80fd\u4e3a\u7a7a");
        this.key = options.key;
      }
      var _proto = QQMapWX.prototype;
      _proto.search = function search(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (!Utils.checkKeyword(options)) return;
        var requestParam = {
          keyword: options.keyword,
          orderby: options.orderby || "_distance",
          page_size: options.page_size || 10,
          page_index: options.page_index || 1,
          output: "json",
          key: that.key
        };
        options.address_format && (requestParam.address_format = options.address_format);
        options.filter && (requestParam.filter = options.filter);
        var distance = options.distance || "1000";
        var auto_extend = options.auto_extend || 1;
        var region = null;
        var rectangle = null;
        options.region && (region = options.region);
        options.rectangle && (rectangle = options.rectangle);
        var locationsuccess = function locationsuccess(result) {
          if (region && !rectangle) {
            requestParam.boundary = "region(" + region + "," + auto_extend + "," + result.latitude + "," + result.longitude + ")";
            options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "search"));
          } else if (rectangle && !region) {
            requestParam.boundary = "rectangle(" + rectangle + ")";
            options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "search"));
          } else {
            requestParam.boundary = "nearby(" + result.latitude + "," + result.longitude + "," + distance + "," + auto_extend + ")";
            options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "search"));
          }
          wx.request(Utils.buildWxRequestConfig(options, {
            url: URL_SEARCH,
            data: requestParam
          }, "search"));
        };
        Utils.locationProcess(options, locationsuccess);
      };
      _proto.getSuggestion = function getSuggestion(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (!Utils.checkKeyword(options)) return;
        var requestParam = {
          keyword: options.keyword,
          region: options.region || "\u5168\u56fd",
          region_fix: options.region_fix || 0,
          policy: options.policy || 0,
          page_size: options.page_size || 10,
          page_index: options.page_index || 1,
          get_subpois: options.get_subpois || 0,
          output: "json",
          key: that.key
        };
        options.address_format && (requestParam.address_format = options.address_format);
        options.filter && (requestParam.filter = options.filter);
        if (options.location) {
          var locationsuccess = function locationsuccess(result) {
            requestParam.location = result.latitude + "," + result.longitude;
            options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "suggest"));
            wx.request(Utils.buildWxRequestConfig(options, {
              url: URL_SUGGESTION,
              data: requestParam
            }, "suggest"));
          };
          Utils.locationProcess(options, locationsuccess);
        } else {
          options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "suggest"));
          wx.request(Utils.buildWxRequestConfig(options, {
            url: URL_SUGGESTION,
            data: requestParam
          }, "suggest"));
        }
      };
      _proto.reverseGeocoder = function reverseGeocoder(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        var requestParam = {
          coord_type: options.coord_type || 5,
          get_poi: options.get_poi || 0,
          output: "json",
          key: that.key
        };
        options.poi_options && (requestParam.poi_options = options.poi_options);
        var locationsuccess = function locationsuccess(result) {
          requestParam.location = result.latitude + "," + result.longitude;
          options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "reverseGeocoder"));
          wx.request(Utils.buildWxRequestConfig(options, {
            url: URL_GET_GEOCODER,
            data: requestParam
          }, "reverseGeocoder"));
        };
        Utils.locationProcess(options, locationsuccess);
      };
      _proto.geocoder = function geocoder(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (Utils.checkParamKeyEmpty(options, "address")) return;
        var requestParam = {
          address: options.address,
          output: "json",
          key: that.key
        };
        options.region && (requestParam.region = options.region);
        options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "geocoder"));
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_GET_GEOCODER,
          data: requestParam
        }, "geocoder"));
      };
      _proto.getCityList = function getCityList(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        var requestParam = {
          output: "json",
          key: that.key
        };
        options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "getCityList"));
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_CITY_LIST,
          data: requestParam
        }, "getCityList"));
      };
      _proto.getDistrictByCityId = function getDistrictByCityId(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (Utils.checkParamKeyEmpty(options, "id")) return;
        var requestParam = {
          id: options.id || "",
          output: "json",
          key: that.key
        };
        options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "getDistrictByCityId"));
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_AREA_LIST,
          data: requestParam
        }, "getDistrictByCityId"));
      };
      _proto.calculateDistance = function calculateDistance(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (Utils.checkParamKeyEmpty(options, "to")) return;
        var requestParam = {
          mode: options.mode || "walking",
          to: Utils.location2query(options.to),
          output: "json",
          key: that.key
        };
        options.from && (options.location = options.from);
        if ("straight" == requestParam.mode) {
          var locationsuccess = function locationsuccess(result) {
            var locationTo = Utils.getEndLocation(requestParam.to);
            var data = {
              message: "query ok",
              result: {
                elements: []
              },
              status: 0
            };
            for (var i = 0; i < locationTo.length; i++) data.result.elements.push({
              distance: Utils.getDistance(result.latitude, result.longitude, locationTo[i].lat, locationTo[i].lng),
              duration: 0,
              from: {
                lat: result.latitude,
                lng: result.longitude
              },
              to: {
                lat: locationTo[i].lat,
                lng: locationTo[i].lng
              }
            });
            var calculateResult = data.result.elements;
            var distanceResult = [];
            for (var i = 0; i < calculateResult.length; i++) distanceResult.push(calculateResult[i].distance);
            return options.success(data, {
              calculateResult: calculateResult,
              distanceResult: distanceResult
            });
          };
          Utils.locationProcess(options, locationsuccess);
        } else {
          var locationsuccess = function locationsuccess(result) {
            requestParam.from = result.latitude + "," + result.longitude;
            options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "calculateDistance"));
            wx.request(Utils.buildWxRequestConfig(options, {
              url: URL_DISTANCE,
              data: requestParam
            }, "calculateDistance"));
          };
          Utils.locationProcess(options, locationsuccess);
        }
      };
      _proto.direction = function direction(options) {
        var that = this;
        options = options || {};
        Utils.polyfillParam(options);
        if (Utils.checkParamKeyEmpty(options, "to")) return;
        var requestParam = {
          output: "json",
          key: that.key
        };
        "string" == typeof options.to ? requestParam.to = options.to : requestParam.to = options.to.latitude + "," + options.to.longitude;
        var SET_URL_DIRECTION = null;
        options.mode = options.mode || MODE.driving;
        SET_URL_DIRECTION = URL_DIRECTION + options.mode;
        options.from && (options.location = options.from);
        if (options.mode == MODE.driving) {
          options.from_poi && (requestParam.from_poi = options.from_poi);
          options.heading && (requestParam.heading = options.heading);
          options.speed && (requestParam.speed = options.speed);
          options.accuracy && (requestParam.accuracy = options.accuracy);
          options.road_type && (requestParam.road_type = options.road_type);
          options.to_poi && (requestParam.to_poi = options.to_poi);
          options.from_track && (requestParam.from_track = options.from_track);
          options.waypoints && (requestParam.waypoints = options.waypoints);
          options.policy && (requestParam.policy = options.policy);
          options.plate_number && (requestParam.plate_number = options.plate_number);
        }
        if (options.mode == MODE.transit) {
          options.departure_time && (requestParam.departure_time = options.departure_time);
          options.policy && (requestParam.policy = options.policy);
        }
        var locationsuccess = function locationsuccess(result) {
          requestParam.from = result.latitude + "," + result.longitude;
          options.sig && (requestParam.sig = Utils.getSig(requestParam, options.sig, "direction", options.mode));
          wx.request(Utils.buildWxRequestConfig(options, {
            url: SET_URL_DIRECTION,
            data: requestParam
          }, "direction"));
        };
        Utils.locationProcess(options, locationsuccess);
      };
      return QQMapWX;
    }();
    module.exports = QQMapWX;
    cc._RF.pop();
  }, {} ],
  room_controller: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "911d67zsmJMbaO2AVHEn2mI", "room_controller");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.room_controller = void 0;
    const game_controller_1 = require("./game_controller");
    const protocols_1 = require("../protocols");
    const global_data_1 = require("../global_data");
    const global_define_1 = require("../global_define");
    const websocket_1 = require("../../common/websocket");
    const utils_1 = require("../../common/utils");
    const push_controller_1 = require("./push_controller");
    var room_controller;
    (function(room_controller) {
      var _the_game_socket = null;
      var _int_user_id = 0;
      var _map_user_data = null;
      var _list_frame_message = null;
      var _int_pause_message = 0;
      var _the_room_data = null;
      var _the_game_data = null;
      var _str_code = null;
      var _socket_error_msg = null;
      room_controller._last_room_id = 0;
      room_controller._last_game_id = 0;
      function init() {
        _the_game_socket = null;
        _int_user_id = 0;
        _map_user_data = new Array();
        _list_frame_message = new Array();
        _int_pause_message = 0;
        _the_room_data = null;
        _the_game_data = null;
        _str_code = null;
        _socket_error_msg = null;
        init_socket();
      }
      room_controller.init = init;
      function cleanup() {
        close_socket();
      }
      room_controller.cleanup = cleanup;
      function log(...x) {
        false;
      }
      function init_socket() {
        null != _the_game_socket && (_the_game_socket = null);
        if (null == _the_game_socket) {
          _the_game_socket = new websocket_1.websocket();
          _the_game_socket.onSocketOpen = () => {
            onRoomSocketOpen();
          };
          _the_game_socket.onSocketMessage = (mainCmdID, subCmdID, data) => {
            onRoomSocketMessage(mainCmdID, subCmdID, data);
          };
          _the_game_socket.onSocketError = event => {
            onRoomSocketError(event);
          };
          _the_game_socket.onSocketClose = event => {
            onRoomSocketClose();
          };
        }
      }
      room_controller.init_socket = init_socket;
      function close_socket() {
        if (null != _the_game_socket) {
          _the_game_socket.onSocketOpen = () => {};
          _the_game_socket.onSocketMessage = () => {};
          _the_game_socket.onSocketError = () => {};
          _the_game_socket.onSocketClose = () => {};
          _the_game_socket.close();
          _the_game_socket = null;
        }
      }
      room_controller.close_socket = close_socket;
      function init_game_room(room_data, game_data, code) {
        _the_room_data = room_data;
        _the_game_data = game_data || null;
        _str_code = code || null;
        _int_pause_message = 0;
        if (false == global_data_1.global_data.connected) {
          handleRoomClose({
            reason: 1005,
            type: "hint",
            msg: "\u670d\u52a1\u5668\u8fde\u63a5\u5931\u8d25\uff0c\u8bf7\u67e5\u770b\u5f53\u524d\u7f51\u7edc\u72b6\u6001\uff01",
            legal: true
          });
          return false;
        }
        if ("" == room_data._str_address) {
          log("\u5fae\u4fe1\u6e38\u620f\u623f\u95f4\u5730\u5740\u4e3a\u7a7a\uff0c\u9700\u914d\u7f6egamelist.json/room/wxaddress");
          handleRoomClose({
            reason: 1006,
            type: "hint",
            msg: "\u914d\u7f6e\u6587\u4ef6\u635f\u574f\uff0c\u8bf7\u4fee\u590d\u5ba2\u6237\u7aef\u5e76\u91cd\u65b0\u767b\u5f55\u3002",
            legal: true
          });
          return false;
        }
        let protocol = global_data_1.global_data.server_protocol;
        let address = room_data._str_address;
        let port = room_data._int_port;
        global_data_1.global_data.game_server && (address = global_data_1.global_data.game_server);
        _the_game_socket.connect(protocol, address, port);
        utils_1.utils.show_loading("\u6b63\u5728\u8fdb\u5165\u6e38\u620f");
        utils_1.utils.send("EnterGameTimer", 10);
        return true;
      }
      room_controller.init_game_room = init_game_room;
      function get_room_data() {
        return _the_room_data;
      }
      room_controller.get_room_data = get_room_data;
      function re_init_game_room() {}
      room_controller.re_init_game_room = re_init_game_room;
      function close_room(legal = false, lobbyhint) {
        let msg = lobbyhint || null;
        handleRoomClose({
          reason: 1007,
          type: "lobbyhint",
          msg: msg,
          legal: legal
        });
      }
      room_controller.close_room = close_room;
      function cancel_enter_game_room() {
        log("cancel_enter_game_room");
      }
      room_controller.cancel_enter_game_room = cancel_enter_game_room;
      function onRoomSocketClose() {
        log("onRoomSocketClose");
        handleRoomClose({
          reason: 1008,
          type: "msgbox",
          msg: _socket_error_msg,
          legal: false
        });
        send_data_to_client(protocols_1.protocols.IPC_MAIN_CONCTROL, protocols_1.protocols.IPC_SUB_CLOSE_FRAME, null);
      }
      room_controller.onRoomSocketClose = onRoomSocketClose;
      function handleRoomClose(error) {
        utils_1.utils.send("BackToLobby", error);
      }
      function onRoomSocketError(event) {
        console.log("onRoomSocketError", event);
        _socket_error_msg = "\u670d\u52a1\u5668\u8fde\u63a5\u5931\u8d25...";
      }
      room_controller.onRoomSocketError = onRoomSocketError;
      function onRoomSocketOpen() {
        log("onRoomSocketOpen");
        let the_data = new protocols_1.protocols.CMD_GAME_LOGON();
        the_data.userid = global_data_1.global_data.get_the_user_data()._int_user_id;
        the_data.paseword = global_data_1.global_data.get_the_user_data()._str_password_md5;
        the_data.session = global_data_1.global_data.get_the_user_data()._str_session;
        the_data.code = _str_code ? Number(_str_code) : 0;
        the_data.gameversion = 999;
        the_data.base = new protocols_1.protocols.CMD_BASE_INFO();
        the_data.base.int_client_type = 2;
        the_data.base.int_area_id = global_data_1.global_data.area_id;
        the_data.base.int_channel_id = global_data_1.global_data.get_lobby_base_info2().channel;
        the_data.base.int_kind_id = global_data_1.global_data.kind_id;
        the_data.base.int_version = global_data_1.global_data.version;
        let ab = the_data.toBuffer();
        send_data_to_server(protocols_1.protocols.MDM_GAME_LOGON, protocols_1.protocols.SUB_GAME_LOGON3, ab);
      }
      room_controller.onRoomSocketOpen = onRoomSocketOpen;
      function send_data_to_server(mainCmdID, subCmdID, arrayBuffer) {
        if (_the_game_socket) {
          _the_game_socket.sendData(mainCmdID, subCmdID, arrayBuffer);
          return true;
        }
        return false;
      }
      room_controller.send_data_to_server = send_data_to_server;
      function pause_message() {
        _int_pause_message++;
        return _int_pause_message;
      }
      room_controller.pause_message = pause_message;
      function restore_message() {
        _int_pause_message--;
        _int_pause_message < 0 && (_int_pause_message = 0);
        return _int_pause_message;
      }
      room_controller.restore_message = restore_message;
      function onRoomSocketMessage(mainCmdID, subCmdID, data) {
        let bool_ret = true;
        mainCmdID == protocols_1.protocols.MDM_GAME_LOGON ? bool_ret = on_socket_main_logon(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_USER ? bool_ret = on_socket_main_user(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_CONFIG ? bool_ret = on_socket_main_info(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_TABLE ? bool_ret = on_socket_main_status(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_SYSTEM ? bool_ret = on_socket_main_system(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_GAME ? bool_ret == on_socket_main_game_frame(mainCmdID, subCmdID, data) : mainCmdID == protocols_1.protocols.MDM_FRAME && (bool_ret = on_socket_main_game_frame(mainCmdID, subCmdID, data));
        return true;
      }
      room_controller.onRoomSocketMessage = onRoomSocketMessage;
      function on_socket_main_logon(mainCmdID, subCmdID, data) {
        if (subCmdID == protocols_1.protocols.SUB_GAME_LOGON_SUCCESS) {
          let l_success = new protocols_1.protocols.CMD_GAME_LOGON_SUCCESS();
          l_success.fromBuffer(data);
          _int_user_id = l_success.userid;
          return true;
        }
        if (subCmdID == protocols_1.protocols.SUB_GAME_LOGON_ERROR) {
          let l_err = new protocols_1.protocols.CMD_GAME_LOGON_ERROR();
          l_err.fromBuffer(data);
          if (global_data_1.global_data.get_curr_scene() != global_define_1.CONST.SCENE_GAME) if (l_err.flag <= 100) {
            handleRoomClose({
              reason: 1009,
              type: "lobbyhint",
              msg: l_err.error,
              legal: true
            });
            console.log("SUB_GAME_LOGON_ERROR", l_err.error);
          } else {
            let n = l_err.flag;
            let int_game_id = Math.floor(n / 1e3);
            let int_room_id = n % 1e3 - 100;
            let rooms = global_data_1.global_data._vector_room_data.filter(v => v._int_game_id == int_game_id && v._int_room_id == int_room_id);
            if (rooms.length > 0) {
              let target_room_data = null;
              if (1 == rooms.length) target_room_data = rooms[0]; else {
                let r = utils_1.utils.random_int(0, rooms.length - 1);
                r < rooms.length && (target_room_data = rooms[r]);
              }
              utils_1.utils.send("BackToLobby", {
                reason: 1001,
                type: "reenter",
                msg: null,
                room: target_room_data,
                legal: true
              });
            } else handleRoomClose({
              reason: 1010,
              type: "hint",
              msg: "\u60a8\u7684\u5e10\u53f7\u6b63\u5728\u5176\u4ed6\u6e38\u620f\u4e2d\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5...",
              legal: false
            });
          } else handleRoomClose({
            reason: 1011,
            type: "msgbox",
            msg: null,
            legal: false
          });
        } else if (subCmdID == protocols_1.protocols.SUB_GAME_LOGON_FINISH) {
          let ptr_self_user_data = select_user_data(_int_user_id);
          null == ptr_self_user_data;
          ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE ? start_game_client() : sit_down();
        }
        return true;
      }
      room_controller.on_socket_main_logon = on_socket_main_logon;
      function on_socket_main_user(mainCmdID, subCmdID, data) {
        let l_ret_bool = false;
        l_ret_bool = subCmdID == protocols_1.protocols.SUB_USER_COME ? on_socket_sub_user_come(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_STATUS ? on_socket_sub_status(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_SCORE ? on_socket_sub_score(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_SITFAILED ? on_socket_sub_sit_failed(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_PROP ? on_socket_sub_prop(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_MEMBER ? on_socket_sub_member(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_CHAT ? on_socket_sub_chat(mainCmdID, subCmdID, data) : subCmdID == protocols_1.protocols.SUB_USER_REDPACKET_INFO ? on_socket_sub_redpacket_info(mainCmdID, subCmdID, data) : subCmdID != protocols_1.protocols.SUB_USER_REDPACK || on_socket_sub_redpacket_receive(mainCmdID, subCmdID, data);
        return true;
      }
      room_controller.on_socket_main_user = on_socket_main_user;
      function on_socket_main_info(mainCmdID, subCmdID, data) {
        if (subCmdID == protocols_1.protocols.SUB_CONFIG_INFO) {
          let ptr_server_info = new protocols_1.protocols.CMD_CONFIG_INFO();
          ptr_server_info.fromBuffer(data);
        }
        return true;
      }
      room_controller.on_socket_main_info = on_socket_main_info;
      function on_socket_main_status(mainCmdID, subCmdID, data) {
        if (subCmdID == protocols_1.protocols.SUB_TABLE_STATUS) {
          let ptr_table_status = new protocols_1.protocols.CMD_TABLE_STATUS();
          ptr_table_status.fromBuffer(data);
          let ptr_self_user_data = select_user_data(_int_user_id);
          if (null == ptr_self_user_data) return true;
          ptr_self_user_data.wTableID == ptr_table_status.tableid && (ptr_table_status.start ? send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_GAME_START, null) : send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_GAME_FINISH, null));
        }
        return true;
      }
      room_controller.on_socket_main_status = on_socket_main_status;
      function on_socket_main_system(mainCmdID, subCmdID, data) {
        if (subCmdID == protocols_1.protocols.SUB_SYSTEM_MESSAGE) {
          let ptr_message = new protocols_1.protocols.CMD_SYSTEM_MESSAGE();
          ptr_message.fromBuffer(data);
          ptr_message.type & global_define_1.CONST.KIND_MESSAGE_CLOSE ? send_data_to_client(protocols_1.protocols.IPC_MAIN_CONCTROL, protocols_1.protocols.IPC_SUB_CLOSE_FRAME, ptr_message) : send_data_to_client(protocols_1.protocols.IPC_MAIN_CONCTROL, protocols_1.protocols.IPC_SUB_NOTICT_FRAME, ptr_message);
          return true;
        }
        return true;
      }
      room_controller.on_socket_main_system = on_socket_main_system;
      function on_socket_main_game_frame(mainCmdID, subCmdID, data) {
        let the_data = new protocols_1.protocols.IPC_SocketPackage();
        the_data.wMainCmdID = mainCmdID;
        the_data.wSubCmdID = subCmdID;
        the_data.cbBuffer = data;
        send_data_to_client(protocols_1.protocols.IPC_MAIN_SOCKET, protocols_1.protocols.IPC_SUB_SOCKET_RECV, the_data);
        return true;
      }
      room_controller.on_socket_main_game_frame = on_socket_main_game_frame;
      function on_socket_sub_user_come(mainCmdID, subCmdID, data) {
        let ptr_user_info_head = new protocols_1.protocols.tagUserInfoHead();
        ptr_user_info_head.fromBuffer(data);
        let ptr_user_data = new protocols_1.protocols.tagUserData();
        ptr_user_data.dwUserID = ptr_user_info_head.dwUserID;
        ptr_user_data.wTableID = ptr_user_info_head.wTableID;
        ptr_user_data.wChairID = ptr_user_info_head.wChairID;
        ptr_user_data.cbUserStatus = 15 & ptr_user_info_head.cbUserStatus;
        ptr_user_data.dwUserRight = ptr_user_info_head.dwUserRight;
        ptr_user_data.dwMasterRight = ptr_user_info_head.dwMasterRight;
        ptr_user_data.wFaceID = ptr_user_info_head.wFaceID;
        ptr_user_data.cbGender = ptr_user_info_head.cbGender;
        ptr_user_data.cbMember = ptr_user_info_head.cbMember;
        ptr_user_data.dwGroupID = ptr_user_info_head.dwGroupID;
        ptr_user_data.lScore = ptr_user_info_head.UserScoreInfo.lScore;
        ptr_user_data.lGold = ptr_user_info_head.UserScoreInfo.lGold;
        ptr_user_data.lWinCount = ptr_user_info_head.UserScoreInfo.lWinCount;
        ptr_user_data.lLostCount = ptr_user_info_head.UserScoreInfo.lLostCount;
        ptr_user_data.lDrawCount = ptr_user_info_head.UserScoreInfo.lDrawCount;
        ptr_user_data.lFleeCount = ptr_user_info_head.UserScoreInfo.lFleeCount;
        ptr_user_data.lExperience = ptr_user_info_head.UserScoreInfo.lExperience;
        ptr_user_data.lCharm = ptr_user_info_head.UserScoreInfo.nCharm;
        ptr_user_data.lPraise = ptr_user_info_head.UserScoreInfo.nPraise;
        ptr_user_data.szName = utils_1.utils.gbk_2_utf8(ptr_user_info_head.szname);
        insert_user_data(ptr_user_data);
        let ptr_self_user_data = select_user_data(_int_user_id);
        null == ptr_self_user_data;
        ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE && ptr_self_user_data.dwUserID != ptr_user_data.dwUserID && ptr_self_user_data.wTableID == ptr_user_data.wTableID && send_table_user_to_client(ptr_user_data);
        return true;
      }
      room_controller.on_socket_sub_user_come = on_socket_sub_user_come;
      function on_socket_sub_status(mainCmdID, subCmdID, data) {
        let ptr_user_status = new protocols_1.protocols.CMD_USER_STATUS();
        ptr_user_status.fromBuffer(data);
        let ptr_user_data = select_user_data(ptr_user_status.userid);
        let ptr_self_user_data = select_user_data(_int_user_id);
        if (null == ptr_user_data || null == ptr_self_user_data) return true;
        let int_new_table_id = ptr_user_status.tableid;
        let int_new_chair_id = ptr_user_status.chairid;
        let int_new_status = ptr_user_status.status;
        let int_old_table_id = ptr_user_data.wTableID;
        let int_old_chair_id = ptr_user_data.wChairID;
        let int_old_status = ptr_user_data.cbUserStatus;
        if (int_new_table_id != global_define_1.CONST.INVALID_TABLE && (int_new_table_id != int_old_table_id || int_new_chair_id != int_old_chair_id) && ptr_user_data.dwUserID == _int_user_id) {
          log("clear _list_frame_message");
          _list_frame_message = new Array();
        }
        if (int_new_status == global_define_1.CONST.US_NULL) {
          if (ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE && ptr_self_user_data.wTableID == int_old_table_id) {
            let the_data = new protocols_1.protocols.IPC_UserStatus();
            the_data.dwUserID = ptr_user_data.dwUserID;
            the_data.wNetDelay = ptr_user_data.wNetDelay;
            the_data.cbUserStatus = ptr_user_data.cbUserStatus;
            send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_USER_STATUS, the_data);
          }
          delete_user_data(ptr_user_data.dwUserID);
          return true;
        }
        ptr_user_data.wTableID = int_new_table_id;
        ptr_user_data.wChairID = int_new_chair_id;
        ptr_user_data.cbUserStatus = int_new_status;
        ptr_user_data.wNetDelay = ptr_user_status.delay;
        int_new_table_id == global_define_1.CONST.INVALID_TABLE || int_new_table_id == int_old_table_id && int_new_chair_id == int_old_chair_id || ptr_user_data.dwUserID != _int_user_id && ptr_self_user_data.wTableID == int_new_table_id && send_table_user_to_client(ptr_user_data);
        let bool_notify_game = false;
        ptr_user_data.dwUserID == _int_user_id ? bool_notify_game = true : ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE && ptr_self_user_data.wTableID == int_new_table_id ? bool_notify_game = true : ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE && ptr_self_user_data.wTableID == int_old_table_id && (bool_notify_game = true);
        if (true == bool_notify_game) {
          let the_data = new protocols_1.protocols.IPC_UserStatus();
          the_data.dwUserID = ptr_user_data.dwUserID;
          the_data.wNetDelay = ptr_user_data.wNetDelay;
          the_data.cbUserStatus = ptr_user_data.cbUserStatus;
          send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_USER_STATUS, the_data);
        }
        ptr_user_data.dwUserID == _int_user_id && (int_new_table_id == global_define_1.CONST.INVALID_TABLE || int_new_table_id == int_old_table_id && int_new_chair_id == int_old_chair_id || start_game_client());
        return true;
      }
      room_controller.on_socket_sub_status = on_socket_sub_status;
      function on_socket_sub_score(mainCmdID, subCmdID, data) {
        let ptr_user_score = new protocols_1.protocols.CMD_USER_SCORE();
        ptr_user_score.fromBuffer(data);
        let ptr_user_data = select_user_data(ptr_user_score.userid);
        if (null == ptr_user_data) return true;
        ptr_user_data.lGold = ptr_user_score.data.lGold;
        ptr_user_data.lScore = ptr_user_score.data.lScore;
        ptr_user_data.lWinCount = ptr_user_score.data.lWinCount;
        ptr_user_data.lLostCount = ptr_user_score.data.lLostCount;
        ptr_user_data.lDrawCount = ptr_user_score.data.lDrawCount;
        ptr_user_data.lFleeCount = ptr_user_score.data.lFleeCount;
        ptr_user_data.lExperience = ptr_user_score.data.lExperience;
        ptr_user_data.lPraise = ptr_user_score.data.nPraise;
        ptr_user_data.lCharm = ptr_user_score.data.nCharm;
        if (ptr_user_score.userid == global_data_1.global_data.get_the_user_data()._int_user_id) {
          let bool_update = false;
          global_data_1.global_data.get_the_user_data()._int_praise = ptr_user_score.data.nPraise;
          global_data_1.global_data.get_the_user_data()._long_charm = ptr_user_score.data.nCharm;
          global_data_1.global_data.get_the_user_data()._long_gold != ptr_user_score.data.lGold && (_the_room_data._int_room_mode & global_define_1.CONST.ROOM_MODE_REDPACKET ? global_data_1.global_data.get_the_user_data()._int_golden_beans = ptr_user_score.data.lGold : global_data_1.global_data.get_the_user_data()._long_gold = ptr_user_score.data.lGold);
          global_data_1.global_data.update_user_data();
        }
        let ptr_self_user_data = select_user_data(_int_user_id);
        if (null == ptr_self_user_data) return true;
        ptr_self_user_data.wTableID != global_define_1.CONST.INVALID_TABLE && ptr_self_user_data.wTableID == ptr_user_data.wTableID && send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_USER_SCORE, ptr_user_score);
        return true;
      }
      room_controller.on_socket_sub_score = on_socket_sub_score;
      function on_socket_sub_prop(mainCmdID, subCmdID, data) {
        var parser = new protocols_1.protocols.ab_parser(new DataView(data));
        let the_value = parser.nextString(2018);
        the_value = utils_1.utils.gbk_2_utf8(the_value);
        the_value.length > 2 && "}" != the_value[the_value.length - 1] && (the_value += "}");
        let json_data = utils_1.utils.from_json(the_value);
        let int_user_id = json_data.userid;
        if (int_user_id != _int_user_id) return;
        global_data_1.global_data.set_prop_count_by_id(0, 0);
        json_data.prop && json_data.prop.forEach(element => {
          global_data_1.global_data.set_prop_count_by_id(element.id, element.cnt);
        });
        global_data_1.global_data.update_user_data();
        return true;
      }
      room_controller.on_socket_sub_prop = on_socket_sub_prop;
      function on_socket_sub_member(mainCmdID, subCmdID, data) {
        return true;
      }
      room_controller.on_socket_sub_member = on_socket_sub_member;
      function on_socket_sub_sit_failed(mainCmdID, subCmdID, data) {
        let sit_fail = new protocols_1.protocols.CMD_USER_SIT_FAIL();
        sit_fail.fromBuffer(data);
        handleRoomClose({
          reason: 1013,
          type: "hint",
          msg: sit_fail.error,
          legal: true
        });
        return true;
      }
      room_controller.on_socket_sub_sit_failed = on_socket_sub_sit_failed;
      function on_socket_sub_chat(mainCmdID, subCmdID, data) {
        return true;
      }
      room_controller.on_socket_sub_chat = on_socket_sub_chat;
      function on_socket_sub_redpacket_info(mainCmdID, subCmdID, data) {
        let ptr_user_redpacket = new protocols_1.protocols.CMD_REDPACKET_INFO();
        ptr_user_redpacket.fromBuffer(data);
        let l_time = new Date();
        ptr_user_redpacket.sendtime = l_time.getTime();
        send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_REDPACKET_INFO, ptr_user_redpacket);
        return true;
      }
      room_controller.on_socket_sub_redpacket_info = on_socket_sub_redpacket_info;
      function on_socket_sub_redpacket_receive(mainCmdID, subCmdID, data) {
        let ptr_user_redpacket = new protocols_1.protocols.CMD_FRAME_REDPACK();
        ptr_user_redpacket.fromBuffer(data);
        global_data_1.global_data.get_the_user_data()._int_red_packet += ptr_user_redpacket.redpack;
        utils_1.utils.send("RedpacketMoneyUpdate", ptr_user_redpacket.redpack);
        return true;
      }
      room_controller.on_socket_sub_redpacket_receive = on_socket_sub_redpacket_receive;
      function select_user_data(int_user_id) {
        let ptr_user_data = null;
        _map_user_data.forEach(element => {
          if (element.dwUserID == int_user_id) {
            ptr_user_data = element;
            return element;
          }
        });
        return ptr_user_data;
      }
      room_controller.select_user_data = select_user_data;
      function insert_user_data(ptr_user_data) {
        if (null == ptr_user_data) return;
        _map_user_data.forEach(function(value, index) {
          value.dwUserID == ptr_user_data.dwUserID && _map_user_data.splice(index, 1);
        });
        _map_user_data.push(ptr_user_data);
      }
      room_controller.insert_user_data = insert_user_data;
      function delete_user_data(int_user_id) {
        let l_index = -1;
        _map_user_data.forEach((element, index) => {
          if (element.dwUserID == int_user_id) {
            l_index = index;
            return;
          }
        });
        if (-1 != l_index) {
          let element = _map_user_data.splice(l_index, 1);
        }
      }
      room_controller.delete_user_data = delete_user_data;
      function send_table_user_to_client(ptr_user_data) {
        send_data_to_client(protocols_1.protocols.IPC_MAIN_USER, protocols_1.protocols.IPC_SUB_USER_COME, ptr_user_data);
      }
      room_controller.send_table_user_to_client = send_table_user_to_client;
      function stand_up(bool_force) {
        return send_data_to_server(protocols_1.protocols.MDM_USER, bool_force ? protocols_1.protocols.SUB_USER_LEFT : protocols_1.protocols.SUB_USER_STANDUP, null);
      }
      room_controller.stand_up = stand_up;
      function sit_down(table_id = global_define_1.CONST.INVALID_TABLE, chair_id = global_define_1.CONST.INVALID_CHAIR) {
        let ptr_self_user_data = select_user_data(_int_user_id);
        if (null == ptr_self_user_data) return false;
        _map_user_data = new Array();
        insert_user_data(ptr_self_user_data);
        if (table_id != global_define_1.CONST.INVALID_TABLE && chair_id != global_define_1.CONST.INVALID_CHAIR) {
          let the_data = new protocols_1.protocols.CMD_USER_SIT();
          the_data.tableid = table_id;
          the_data.chairid = chair_id;
          the_data.delay = 0;
          the_data.len = 0;
          let ab = the_data.toBuffer();
          send_data_to_server(protocols_1.protocols.MDM_USER, protocols_1.protocols.SUB_USER_SITTO, ab);
        } else {
          let the_data = new protocols_1.protocols.CMD_USER_SIT();
          the_data.tableid = ptr_self_user_data.wTableID;
          the_data.chairid = global_define_1.CONST.INVALID_CHAIR;
          the_data.delay = 0;
          the_data.len = 0;
          let ab = the_data.toBuffer();
          send_data_to_server(protocols_1.protocols.MDM_USER, protocols_1.protocols.SUB_USER_SIT, ab);
        }
        return true;
      }
      room_controller.sit_down = sit_down;
      function start_game_client() {
        game_controller_1.game_controller.init();
        let l_game_scene = global_data_1.global_data.get_game_scene_by_id(_the_room_data._int_game_id);
        if (null == l_game_scene) {
          utils_1.utils.send("BackToLobby", {
            reason: 1002,
            type: "hint",
            msg: "\u52a0\u8f7d\u6e38\u620f\u5931\u8d25",
            legal: true
          });
          return;
        }
        let last_game_location = `${Math.floor(_the_room_data._int_game_id)}${Math.floor(_the_room_data._int_room_id)}`;
        utils_1.utils.setLocalStorage("last_game_location", last_game_location);
        global_data_1.global_data.last_room_data = _the_room_data;
        let percent = 0;
        cc.director.preloadScene(l_game_scene["loadscene"], (completeCount, totalCount, item) => {
          if (totalCount > 1) {
            let new_percent = Math.floor(completeCount / totalCount * 100);
            new_percent > percent && (percent = new_percent);
            utils_1.utils.show_loading_text(`\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90... (${percent}%)`);
          } else utils_1.utils.show_loading_text("\u6b63\u5728\u52a0\u8f7d\u8d44\u6e90...");
        }, error => {
          if (error) {
            utils_1.utils.send("BackToLobby", {
              reason: 1003,
              type: "hint",
              msg: "\u52a0\u8f7d\u6e38\u620f\u5931\u8d25",
              legal: true
            });
            return;
          }
          if (cc.director.getScene().name == l_game_scene["loadscene"]) {
            push_controller_1.push_controller.send_location();
            push_controller_1.push_controller.send_action(protocols_1.protocols.PUSH_ACTION_CHANGE_TABLE, _the_room_data._int_game_id, _the_room_data._int_room_id, room_controller._last_game_id, room_controller._last_room_id);
          } else {
            push_controller_1.push_controller.send_location();
            push_controller_1.push_controller.send_action(protocols_1.protocols.PUSH_ACTION_ENTER_ROOM, _the_room_data._int_game_id, _the_room_data._int_room_id, 0, 0);
          }
          room_controller._last_room_id = _the_room_data._int_room_id;
          room_controller._last_game_id = _the_room_data._int_game_id;
          cc.director.loadScene(l_game_scene["loadscene"], () => {
            on_frame_start();
            utils_1.utils.send("EnterGameTimer", -1);
          });
        });
        return true;
      }
      room_controller.start_game_client = start_game_client;
      function on_frame_start() {
        _int_pause_message = 0;
        send_game_info_to_client();
        send_table_users_to_client();
        send_data_to_client(protocols_1.protocols.IPC_MAIN_CONCTROL, protocols_1.protocols.IPC_SUB_START_FINISH, null);
      }
      room_controller.on_frame_start = on_frame_start;
      function send_game_info_to_client() {
        let ptr_self_user_data = select_user_data(_int_user_id);
        if (null == ptr_self_user_data) return;
        let the_server_info = new protocols_1.protocols.IPC_GF_ServerInfo();
        the_server_info.dwUserID = _int_user_id;
        the_server_info.wTableID = ptr_self_user_data.wTableID;
        the_server_info.wChairID = ptr_self_user_data.wChairID;
        the_server_info.wKindID = _the_room_data._int_game_id;
        the_server_info.wGameGenre = _the_room_data._int_game_genre;
        the_server_info.wChairCount = _the_room_data._int_chair_count;
        the_server_info.wServerID = _the_room_data._int_room_id;
        send_data_to_client(protocols_1.protocols.IPC_MAIN_CONFIG, protocols_1.protocols.IPC_SUB_SERVER_INFO, the_server_info);
      }
      room_controller.send_game_info_to_client = send_game_info_to_client;
      function send_table_users_to_client() {
        let ptr_self_user_data = select_user_data(_int_user_id);
        if (null == ptr_self_user_data) return true;
        send_table_user_to_client(ptr_self_user_data);
        _map_user_data.forEach(element => {
          element.dwUserID != _int_user_id && element.wTableID == ptr_self_user_data.wTableID && element.cbCameraStatus != global_define_1.CONST.US_LOOKON && send_table_user_to_client(element);
        });
        _map_user_data.forEach(element => {
          element.dwUserID != _int_user_id && element.wTableID == ptr_self_user_data.wTableID && element.cbCameraStatus == global_define_1.CONST.US_LOOKON && send_table_user_to_client(element);
        });
      }
      room_controller.send_table_users_to_client = send_table_users_to_client;
      function send_data_to_client(int_main_id, int_sub_id, data) {
        let message = new protocols_1.protocols.struct_frame_message();
        message.int_main_id = int_main_id;
        message.int_sub_id = int_sub_id;
        message.ptr_data = data;
        _list_frame_message.push(message);
      }
      room_controller.send_data_to_client = send_data_to_client;
      function update(dt) {
        if (_int_pause_message > 0) return;
        if (_list_frame_message.length > 0) {
          let message = _list_frame_message[0];
          let consumed = game_controller_1.game_controller.on_channel_message(message.int_main_id, message.int_sub_id, message.ptr_data);
          consumed && _list_frame_message.splice(0, 1);
        }
      }
      room_controller.update = update;
    })(room_controller = exports.room_controller || (exports.room_controller = {}));
    cc._RF.pop();
  }, {
    "../../common/utils": "utils",
    "../../common/websocket": "websocket",
    "../global_data": "global_data",
    "../global_define": "global_define",
    "../protocols": "protocols",
    "./game_controller": "game_controller",
    "./push_controller": "push_controller"
  } ],
  "sbcs-codec": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1d4f9fiB65BsYYxRokYIjEe", "sbcs-codec");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports._sbcs = void 0;
    const util_1 = require("../util/util");
    class SBCSCodec {
      constructor(codecOptions, iconv) {
        this.encoder = SBCSEncoder;
        this.decoder = SBCSDecoder;
        if (!codecOptions) throw new Error("SBCS codec is called without the data.");
        if (!codecOptions.chars || 128 !== codecOptions.chars.length && 256 !== codecOptions.chars.length) throw new Error("Encoding '" + codecOptions.type + "' has incorrect 'chars' (must be of len 128 or 256)");
        if (128 === codecOptions.chars.length) {
          let asciiString = "";
          for (let i = 0; i < 128; i++) asciiString += String.fromCharCode(i);
          codecOptions.chars = asciiString + codecOptions.chars;
        }
        this.decodeBuf = new ArrayBuffer(codecOptions.chars);
        let encodeBuf = new ArrayBuffer(65536);
        let encodeBufView = new Uint8Array(encodeBuf);
        for (let i = 0; i < 65536; i++) encodeBufView[i] = iconv.defaultCharSingleByte.charCodeAt(0);
        for (let i = 0; i < codecOptions.chars.length; i++) encodeBufView[codecOptions.chars.charCodeAt(i)] = i;
        this.encodeBuf = encodeBuf;
      }
    }
    class SBCSEncoder {
      constructor(options, codec) {
        this.encodeBuf = codec.encodeBuf;
        this.encodeBufView = new Uint8Array(this.encodeBuf);
      }
      write(str) {
        let buf = new ArrayBuffer(str.length);
        let bufView = new Uint8Array(buf);
        for (let i = 0; i < str.length; i++) bufView[i] = this.encodeBufView[str.charCodeAt(i)];
        return buf;
      }
      end() {}
    }
    class SBCSDecoder {
      constructor(options, codec) {
        this.decodeBuf = codec.decodeBuf;
        this.decodeBufView = new Uint8Array(this.decodeBuf);
      }
      write(buf) {
        let bufView = new Uint8Array(buf);
        let decodeBuf = this.decodeBuf;
        let decodeBufView = new Uint8Array(decodeBuf);
        let newBuf = new ArrayBuffer(2 * buf.byteLength);
        let newBufView = new Uint8Array(newBuf);
        let idx1 = 0, idx2 = 0;
        for (let i = 0; i < buf.byteLength; i++) {
          idx1 = 2 * bufView[i];
          idx2 = 2 * i;
          newBufView[idx2] = decodeBufView[idx1];
          newBuf[idx2 + 1] = decodeBufView[idx1 + 1];
        }
        return util_1.bufToStr(newBuf);
      }
      end() {}
    }
    exports._sbcs = SBCSCodec;
    cc._RF.pop();
  }, {
    "../util/util": "util"
  } ],
  "sbcs-data-generated": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "28388mSE3xCtLkMPuo4CX/5", "sbcs-data-generated");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports._exports = void 0;
    exports._exports = {
      437: "cp437",
      737: "cp737",
      775: "cp775",
      850: "cp850",
      852: "cp852",
      855: "cp855",
      856: "cp856",
      857: "cp857",
      858: "cp858",
      860: "cp860",
      861: "cp861",
      862: "cp862",
      863: "cp863",
      864: "cp864",
      865: "cp865",
      866: "cp866",
      869: "cp869",
      874: "windows874",
      922: "cp922",
      1046: "cp1046",
      1124: "cp1124",
      1125: "cp1125",
      1129: "cp1129",
      1133: "cp1133",
      1161: "cp1161",
      1162: "cp1162",
      1163: "cp1163",
      1250: "windows1250",
      1251: "windows1251",
      1252: "windows1252",
      1253: "windows1253",
      1254: "windows1254",
      1255: "windows1255",
      1256: "windows1256",
      1257: "windows1257",
      1258: "windows1258",
      28591: "iso88591",
      28592: "iso88592",
      28593: "iso88593",
      28594: "iso88594",
      28595: "iso88595",
      28596: "iso88596",
      28597: "iso88597",
      28598: "iso88598",
      28599: "iso88599",
      28600: "iso885910",
      28601: "iso885911",
      28603: "iso885913",
      28604: "iso885914",
      28605: "iso885915",
      28606: "iso885916",
      windows874: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\ufffd\ufffd\ufffd\u2026\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\xa0\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\ufffd\ufffd\ufffd\ufffd\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\u0e5a\u0e5b\ufffd\ufffd\ufffd\ufffd"
      },
      win874: "windows874",
      cp874: "windows874",
      windows1250: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\ufffd\u201e\u2026\u2020\u2021\ufffd\u2030\u0160\u2039\u015a\u0164\u017d\u0179\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\u0161\u203a\u015b\u0165\u017e\u017a\xa0\u02c7\u02d8\u0141\xa4\u0104\xa6\xa7\xa8\xa9\u015e\xab\xac\xad\xae\u017b\xb0\xb1\u02db\u0142\xb4\xb5\xb6\xb7\xb8\u0105\u015f\xbb\u013d\u02dd\u013e\u017c\u0154\xc1\xc2\u0102\xc4\u0139\u0106\xc7\u010c\xc9\u0118\xcb\u011a\xcd\xce\u010e\u0110\u0143\u0147\xd3\xd4\u0150\xd6\xd7\u0158\u016e\xda\u0170\xdc\xdd\u0162\xdf\u0155\xe1\xe2\u0103\xe4\u013a\u0107\xe7\u010d\xe9\u0119\xeb\u011b\xed\xee\u010f\u0111\u0144\u0148\xf3\xf4\u0151\xf6\xf7\u0159\u016f\xfa\u0171\xfc\xfd\u0163\u02d9"
      },
      win1250: "windows1250",
      cp1250: "windows1250",
      windows1251: {
        type: "_sbcs",
        chars: "\u0402\u0403\u201a\u0453\u201e\u2026\u2020\u2021\u20ac\u2030\u0409\u2039\u040a\u040c\u040b\u040f\u0452\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\u0459\u203a\u045a\u045c\u045b\u045f\xa0\u040e\u045e\u0408\xa4\u0490\xa6\xa7\u0401\xa9\u0404\xab\xac\xad\xae\u0407\xb0\xb1\u0406\u0456\u0491\xb5\xb6\xb7\u0451\u2116\u0454\xbb\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f"
      },
      win1251: "windows1251",
      cp1251: "windows1251",
      windows1252: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\ufffd\u017d\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\ufffd\u017e\u0178\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
      },
      win1252: "windows1252",
      cp1252: "windows1252",
      windows1253: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\u0192\u201e\u2026\u2020\u2021\ufffd\u2030\ufffd\u2039\ufffd\ufffd\ufffd\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\ufffd\u203a\ufffd\ufffd\ufffd\ufffd\xa0\u0385\u0386\xa3\xa4\xa5\xa6\xa7\xa8\xa9\ufffd\xab\xac\xad\xae\u2015\xb0\xb1\xb2\xb3\u0384\xb5\xb6\xb7\u0388\u0389\u038a\xbb\u038c\xbd\u038e\u038f\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\ufffd\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\u03aa\u03ab\u03ac\u03ad\u03ae\u03af\u03b0\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c2\u03c3\u03c4\u03c5\u03c6\u03c7\u03c8\u03c9\u03ca\u03cb\u03cc\u03cd\u03ce\ufffd"
      },
      win1253: "windows1253",
      cp1253: "windows1253",
      windows1254: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\ufffd\ufffd\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\ufffd\ufffd\u0178\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u011e\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\u0130\u015e\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\u011f\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\u0131\u015f\xff"
      },
      win1254: "windows1254",
      cp1254: "windows1254",
      windows1255: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\ufffd\u2039\ufffd\ufffd\ufffd\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\ufffd\u203a\ufffd\ufffd\ufffd\ufffd\xa0\xa1\xa2\xa3\u20aa\xa5\xa6\xa7\xa8\xa9\xd7\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xf7\xbb\xbc\xbd\xbe\xbf\u05b0\u05b1\u05b2\u05b3\u05b4\u05b5\u05b6\u05b7\u05b8\u05b9\u05ba\u05bb\u05bc\u05bd\u05be\u05bf\u05c0\u05c1\u05c2\u05c3\u05f0\u05f1\u05f2\u05f3\u05f4\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05da\u05db\u05dc\u05dd\u05de\u05df\u05e0\u05e1\u05e2\u05e3\u05e4\u05e5\u05e6\u05e7\u05e8\u05e9\u05ea\ufffd\ufffd\u200e\u200f\ufffd"
      },
      win1255: "windows1255",
      cp1255: "windows1255",
      windows1256: {
        type: "_sbcs",
        chars: "\u20ac\u067e\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06af\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u06a9\u2122\u0691\u203a\u0153\u200c\u200d\u06ba\xa0\u060c\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\u06be\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\u061b\xbb\xbc\xbd\xbe\u061f\u06c1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062a\u062b\u062c\u062d\u062e\u062f\u0630\u0631\u0632\u0633\u0634\u0635\u0636\xd7\u0637\u0638\u0639\u063a\u0640\u0641\u0642\u0643\xe0\u0644\xe2\u0645\u0646\u0647\u0648\xe7\xe8\xe9\xea\xeb\u0649\u064a\xee\xef\u064b\u064c\u064d\u064e\xf4\u064f\u0650\xf7\u0651\xf9\u0652\xfb\xfc\u200e\u200f\u06d2"
      },
      win1256: "windows1256",
      cp1256: "windows1256",
      windows1257: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\ufffd\u201e\u2026\u2020\u2021\ufffd\u2030\ufffd\u2039\ufffd\xa8\u02c7\xb8\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\ufffd\u203a\ufffd\xaf\u02db\ufffd\xa0\ufffd\xa2\xa3\xa4\ufffd\xa6\xa7\xd8\xa9\u0156\xab\xac\xad\xae\xc6\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xf8\xb9\u0157\xbb\xbc\xbd\xbe\xe6\u0104\u012e\u0100\u0106\xc4\xc5\u0118\u0112\u010c\xc9\u0179\u0116\u0122\u0136\u012a\u013b\u0160\u0143\u0145\xd3\u014c\xd5\xd6\xd7\u0172\u0141\u015a\u016a\xdc\u017b\u017d\xdf\u0105\u012f\u0101\u0107\xe4\xe5\u0119\u0113\u010d\xe9\u017a\u0117\u0123\u0137\u012b\u013c\u0161\u0144\u0146\xf3\u014d\xf5\xf6\xf7\u0173\u0142\u015b\u016b\xfc\u017c\u017e\u02d9"
      },
      win1257: "windows1257",
      cp1257: "windows1257",
      windows1258: {
        type: "_sbcs",
        chars: "\u20ac\ufffd\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\ufffd\u2039\u0152\ufffd\ufffd\ufffd\ufffd\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\ufffd\u203a\u0153\ufffd\ufffd\u0178\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\u0102\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\u0300\xcd\xce\xcf\u0110\xd1\u0309\xd3\xd4\u01a0\xd6\xd7\xd8\xd9\xda\xdb\xdc\u01af\u0303\xdf\xe0\xe1\xe2\u0103\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\u0301\xed\xee\xef\u0111\xf1\u0323\xf3\xf4\u01a1\xf6\xf7\xf8\xf9\xfa\xfb\xfc\u01b0\u20ab\xff"
      },
      win1258: "windows1258",
      cp1258: "windows1258",
      iso88591: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
      },
      cp28591: "iso88591",
      iso88592: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0104\u02d8\u0141\xa4\u013d\u015a\xa7\xa8\u0160\u015e\u0164\u0179\xad\u017d\u017b\xb0\u0105\u02db\u0142\xb4\u013e\u015b\u02c7\xb8\u0161\u015f\u0165\u017a\u02dd\u017e\u017c\u0154\xc1\xc2\u0102\xc4\u0139\u0106\xc7\u010c\xc9\u0118\xcb\u011a\xcd\xce\u010e\u0110\u0143\u0147\xd3\xd4\u0150\xd6\xd7\u0158\u016e\xda\u0170\xdc\xdd\u0162\xdf\u0155\xe1\xe2\u0103\xe4\u013a\u0107\xe7\u010d\xe9\u0119\xeb\u011b\xed\xee\u010f\u0111\u0144\u0148\xf3\xf4\u0151\xf6\xf7\u0159\u016f\xfa\u0171\xfc\xfd\u0163\u02d9"
      },
      cp28592: "iso88592",
      iso88593: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0126\u02d8\xa3\xa4\ufffd\u0124\xa7\xa8\u0130\u015e\u011e\u0134\xad\ufffd\u017b\xb0\u0127\xb2\xb3\xb4\xb5\u0125\xb7\xb8\u0131\u015f\u011f\u0135\xbd\ufffd\u017c\xc0\xc1\xc2\ufffd\xc4\u010a\u0108\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\ufffd\xd1\xd2\xd3\xd4\u0120\xd6\xd7\u011c\xd9\xda\xdb\xdc\u016c\u015c\xdf\xe0\xe1\xe2\ufffd\xe4\u010b\u0109\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\ufffd\xf1\xf2\xf3\xf4\u0121\xf6\xf7\u011d\xf9\xfa\xfb\xfc\u016d\u015d\u02d9"
      },
      cp28593: "iso88593",
      iso88594: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0104\u0138\u0156\xa4\u0128\u013b\xa7\xa8\u0160\u0112\u0122\u0166\xad\u017d\xaf\xb0\u0105\u02db\u0157\xb4\u0129\u013c\u02c7\xb8\u0161\u0113\u0123\u0167\u014a\u017e\u014b\u0100\xc1\xc2\xc3\xc4\xc5\xc6\u012e\u010c\xc9\u0118\xcb\u0116\xcd\xce\u012a\u0110\u0145\u014c\u0136\xd4\xd5\xd6\xd7\xd8\u0172\xda\xdb\xdc\u0168\u016a\xdf\u0101\xe1\xe2\xe3\xe4\xe5\xe6\u012f\u010d\xe9\u0119\xeb\u0117\xed\xee\u012b\u0111\u0146\u014d\u0137\xf4\xf5\xf6\xf7\xf8\u0173\xfa\xfb\xfc\u0169\u016b\u02d9"
      },
      cp28594: "iso88594",
      iso88595: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040a\u040b\u040c\xad\u040e\u040f\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045a\u045b\u045c\xa7\u045e\u045f"
      },
      cp28595: "iso88595",
      iso88596: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\ufffd\ufffd\ufffd\xa4\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u060c\xad\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u061b\ufffd\ufffd\ufffd\u061f\ufffd\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062a\u062b\u062c\u062d\u062e\u062f\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063a\ufffd\ufffd\ufffd\ufffd\ufffd\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064a\u064b\u064c\u064d\u064e\u064f\u0650\u0651\u0652\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd"
      },
      cp28596: "iso88596",
      iso88597: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u2018\u2019\xa3\u20ac\u20af\xa6\xa7\xa8\xa9\u037a\xab\xac\xad\ufffd\u2015\xb0\xb1\xb2\xb3\u0384\u0385\u0386\xb7\u0388\u0389\u038a\xbb\u038c\xbd\u038e\u038f\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\ufffd\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\u03aa\u03ab\u03ac\u03ad\u03ae\u03af\u03b0\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c2\u03c3\u03c4\u03c5\u03c6\u03c7\u03c8\u03c9\u03ca\u03cb\u03cc\u03cd\u03ce\ufffd"
      },
      cp28597: "iso88597",
      iso88598: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\ufffd\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xd7\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xf7\xbb\xbc\xbd\xbe\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u2017\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05da\u05db\u05dc\u05dd\u05de\u05df\u05e0\u05e1\u05e2\u05e3\u05e4\u05e5\u05e6\u05e7\u05e8\u05e9\u05ea\ufffd\ufffd\u200e\u200f\ufffd"
      },
      cp28598: "iso88598",
      iso88599: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u011e\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\u0130\u015e\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\u011f\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\u0131\u015f\xff"
      },
      cp28599: "iso88599",
      iso885910: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0104\u0112\u0122\u012a\u0128\u0136\xa7\u013b\u0110\u0160\u0166\u017d\xad\u016a\u014a\xb0\u0105\u0113\u0123\u012b\u0129\u0137\xb7\u013c\u0111\u0161\u0167\u017e\u2015\u016b\u014b\u0100\xc1\xc2\xc3\xc4\xc5\xc6\u012e\u010c\xc9\u0118\xcb\u0116\xcd\xce\xcf\xd0\u0145\u014c\xd3\xd4\xd5\xd6\u0168\xd8\u0172\xda\xdb\xdc\xdd\xde\xdf\u0101\xe1\xe2\xe3\xe4\xe5\xe6\u012f\u010d\xe9\u0119\xeb\u0117\xed\xee\xef\xf0\u0146\u014d\xf3\xf4\xf5\xf6\u0169\xf8\u0173\xfa\xfb\xfc\xfd\xfe\u0138"
      },
      cp28600: "iso885910",
      iso885911: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\ufffd\ufffd\ufffd\ufffd\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\u0e5a\u0e5b\ufffd\ufffd\ufffd\ufffd"
      },
      cp28601: "iso885911",
      iso885913: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u201d\xa2\xa3\xa4\u201e\xa6\xa7\xd8\xa9\u0156\xab\xac\xad\xae\xc6\xb0\xb1\xb2\xb3\u201c\xb5\xb6\xb7\xf8\xb9\u0157\xbb\xbc\xbd\xbe\xe6\u0104\u012e\u0100\u0106\xc4\xc5\u0118\u0112\u010c\xc9\u0179\u0116\u0122\u0136\u012a\u013b\u0160\u0143\u0145\xd3\u014c\xd5\xd6\xd7\u0172\u0141\u015a\u016a\xdc\u017b\u017d\xdf\u0105\u012f\u0101\u0107\xe4\xe5\u0119\u0113\u010d\xe9\u017a\u0117\u0123\u0137\u012b\u013c\u0161\u0144\u0146\xf3\u014d\xf5\xf6\xf7\u0173\u0142\u015b\u016b\xfc\u017c\u017e\u2019"
      },
      cp28603: "iso885913",
      iso885914: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u1e02\u1e03\xa3\u010a\u010b\u1e0a\xa7\u1e80\xa9\u1e82\u1e0b\u1ef2\xad\xae\u0178\u1e1e\u1e1f\u0120\u0121\u1e40\u1e41\xb6\u1e56\u1e81\u1e57\u1e83\u1e60\u1ef3\u1e84\u1e85\u1e61\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u0174\xd1\xd2\xd3\xd4\xd5\xd6\u1e6a\xd8\xd9\xda\xdb\xdc\xdd\u0176\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\u0175\xf1\xf2\xf3\xf4\xf5\xf6\u1e6b\xf8\xf9\xfa\xfb\xfc\xfd\u0177\xff"
      },
      cp28604: "iso885914",
      iso885915: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\u20ac\xa5\u0160\xa7\u0161\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\u017d\xb5\xb6\xb7\u017e\xb9\xba\xbb\u0152\u0153\u0178\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
      },
      cp28605: "iso885915",
      iso885916: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0104\u0105\u0141\u20ac\u201e\u0160\xa7\u0161\xa9\u0218\xab\u0179\xad\u017a\u017b\xb0\xb1\u010c\u0142\u017d\u201d\xb6\xb7\u017e\u010d\u0219\xbb\u0152\u0153\u0178\u017c\xc0\xc1\xc2\u0102\xc4\u0106\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u0110\u0143\xd2\xd3\xd4\u0150\xd6\u015a\u0170\xd9\xda\xdb\xdc\u0118\u021a\xdf\xe0\xe1\xe2\u0103\xe4\u0107\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\u0111\u0144\xf2\xf3\xf4\u0151\xf6\u015b\u0171\xf9\xfa\xfb\xfc\u0119\u021b\xff"
      },
      cp28606: "iso885916",
      cp437: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\u2310\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm437: "cp437",
      csibm437: "cp437",
      cp737: {
        type: "_sbcs",
        chars: "\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c3\u03c2\u03c4\u03c5\u03c6\u03c7\u03c8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03c9\u03ac\u03ad\u03ae\u03ca\u03af\u03cc\u03cd\u03cb\u03ce\u0386\u0388\u0389\u038a\u038c\u038e\u038f\xb1\u2265\u2264\u03aa\u03ab\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm737: "cp737",
      csibm737: "cp737",
      cp775: {
        type: "_sbcs",
        chars: "\u0106\xfc\xe9\u0101\xe4\u0123\xe5\u0107\u0142\u0113\u0156\u0157\u012b\u0179\xc4\xc5\xc9\xe6\xc6\u014d\xf6\u0122\xa2\u015a\u015b\xd6\xdc\xf8\xa3\xd8\xd7\xa4\u0100\u012a\xf3\u017b\u017c\u017a\u201d\xa6\xa9\xae\xac\xbd\xbc\u0141\xab\xbb\u2591\u2592\u2593\u2502\u2524\u0104\u010c\u0118\u0116\u2563\u2551\u2557\u255d\u012e\u0160\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u0172\u016a\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u017d\u0105\u010d\u0119\u0117\u012f\u0161\u0173\u016b\u017e\u2518\u250c\u2588\u2584\u258c\u2590\u2580\xd3\xdf\u014c\u0143\xf5\xd5\xb5\u0144\u0136\u0137\u013b\u013c\u0146\u0112\u0145\u2019\xad\xb1\u201c\xbe\xb6\xa7\xf7\u201e\xb0\u2219\xb7\xb9\xb3\xb2\u25a0\xa0"
      },
      ibm775: "cp775",
      csibm775: "cp775",
      cp850: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xf8\xa3\xd8\xd7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\xae\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\xc1\xc2\xc0\xa9\u2563\u2551\u2557\u255d\xa2\xa5\u2510\u2514\u2534\u252c\u251c\u2500\u253c\xe3\xc3\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\xf0\xd0\xca\xcb\xc8\u0131\xcd\xce\xcf\u2518\u250c\u2588\u2584\xa6\xcc\u2580\xd3\xdf\xd4\xd2\xf5\xd5\xb5\xfe\xde\xda\xdb\xd9\xfd\xdd\xaf\xb4\xad\xb1\u2017\xbe\xb6\xa7\xf7\xb8\xb0\xa8\xb7\xb9\xb3\xb2\u25a0\xa0"
      },
      ibm850: "cp850",
      csibm850: "cp850",
      cp852: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\u016f\u0107\xe7\u0142\xeb\u0150\u0151\xee\u0179\xc4\u0106\xc9\u0139\u013a\xf4\xf6\u013d\u013e\u015a\u015b\xd6\xdc\u0164\u0165\u0141\xd7\u010d\xe1\xed\xf3\xfa\u0104\u0105\u017d\u017e\u0118\u0119\xac\u017a\u010c\u015f\xab\xbb\u2591\u2592\u2593\u2502\u2524\xc1\xc2\u011a\u015e\u2563\u2551\u2557\u255d\u017b\u017c\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u0102\u0103\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\u0111\u0110\u010e\xcb\u010f\u0147\xcd\xce\u011b\u2518\u250c\u2588\u2584\u0162\u016e\u2580\xd3\xdf\xd4\u0143\u0144\u0148\u0160\u0161\u0154\xda\u0155\u0170\xfd\xdd\u0163\xb4\xad\u02dd\u02db\u02c7\u02d8\xa7\xf7\xb8\xb0\xa8\u02d9\u0171\u0158\u0159\u25a0\xa0"
      },
      ibm852: "cp852",
      csibm852: "cp852",
      cp855: {
        type: "_sbcs",
        chars: "\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045a\u040a\u045b\u040b\u045c\u040c\u045e\u040e\u045f\u040f\u044e\u042e\u044a\u042a\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\xab\xbb\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255d\u0439\u0419\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u043a\u041a\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\u043b\u041b\u043c\u041c\u043d\u041d\u043e\u041e\u043f\u2518\u250c\u2588\u2584\u041f\u044f\u2580\u042f\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044c\u042c\u2116\xad\u044b\u042b\u0437\u0417\u0448\u0428\u044d\u042d\u0449\u0429\u0447\u0427\xa7\u25a0\xa0"
      },
      ibm855: "cp855",
      csibm855: "cp855",
      cp856: {
        type: "_sbcs",
        chars: "\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05da\u05db\u05dc\u05dd\u05de\u05df\u05e0\u05e1\u05e2\u05e3\u05e4\u05e5\u05e6\u05e7\u05e8\u05e9\u05ea\ufffd\xa3\ufffd\xd7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\xae\xac\xbd\xbc\ufffd\xab\xbb\u2591\u2592\u2593\u2502\u2524\ufffd\ufffd\ufffd\xa9\u2563\u2551\u2557\u255d\xa2\xa5\u2510\u2514\u2534\u252c\u251c\u2500\u253c\ufffd\ufffd\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u2518\u250c\u2588\u2584\xa6\ufffd\u2580\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\xb5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\xaf\xb4\xad\xb1\u2017\xbe\xb6\xa7\xf7\xb8\xb0\xa8\xb7\xb9\xb3\xb2\u25a0\xa0"
      },
      ibm856: "cp856",
      csibm856: "cp856",
      cp857: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\u0131\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\u0130\xd6\xdc\xf8\xa3\xd8\u015e\u015f\xe1\xed\xf3\xfa\xf1\xd1\u011e\u011f\xbf\xae\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\xc1\xc2\xc0\xa9\u2563\u2551\u2557\u255d\xa2\xa5\u2510\u2514\u2534\u252c\u251c\u2500\u253c\xe3\xc3\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\xba\xaa\xca\xcb\xc8\ufffd\xcd\xce\xcf\u2518\u250c\u2588\u2584\xa6\xcc\u2580\xd3\xdf\xd4\xd2\xf5\xd5\xb5\ufffd\xd7\xda\xdb\xd9\xec\xff\xaf\xb4\xad\xb1\ufffd\xbe\xb6\xa7\xf7\xb8\xb0\xa8\xb7\xb9\xb3\xb2\u25a0\xa0"
      },
      ibm857: "cp857",
      csibm857: "cp857",
      cp858: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xf8\xa3\xd8\xd7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\xae\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\xc1\xc2\xc0\xa9\u2563\u2551\u2557\u255d\xa2\xa5\u2510\u2514\u2534\u252c\u251c\u2500\u253c\xe3\xc3\u255a\u2554\u2569\u2566\u2560\u2550\u256c\xa4\xf0\xd0\xca\xcb\xc8\u20ac\xcd\xce\xcf\u2518\u250c\u2588\u2584\xa6\xcc\u2580\xd3\xdf\xd4\xd2\xf5\xd5\xb5\xfe\xde\xda\xdb\xd9\xfd\xdd\xaf\xb4\xad\xb1\u2017\xbe\xb6\xa7\xf7\xb8\xb0\xa8\xb7\xb9\xb3\xb2\u25a0\xa0"
      },
      ibm858: "cp858",
      csibm858: "cp858",
      cp860: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe3\xe0\xc1\xe7\xea\xca\xe8\xcd\xd4\xec\xc3\xc2\xc9\xc0\xc8\xf4\xf5\xf2\xda\xf9\xcc\xd5\xdc\xa2\xa3\xd9\u20a7\xd3\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\xd2\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm860: "cp860",
      csibm860: "cp860",
      cp861: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xd0\xf0\xde\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xfe\xfb\xdd\xfd\xd6\xdc\xf8\xa3\xd8\u20a7\u0192\xe1\xed\xf3\xfa\xc1\xcd\xd3\xda\xbf\u2310\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm861: "cp861",
      csibm861: "cp861",
      cp862: {
        type: "_sbcs",
        chars: "\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05da\u05db\u05dc\u05dd\u05de\u05df\u05e0\u05e1\u05e2\u05e3\u05e4\u05e5\u05e6\u05e7\u05e8\u05e9\u05ea\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\u2310\xac\xbd\xbc\xa1\xab\xbb\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm862: "cp862",
      csibm862: "cp862",
      cp863: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xc2\xe0\xb6\xe7\xea\xeb\xe8\xef\xee\u2017\xc0\xa7\xc9\xc8\xca\xf4\xcb\xcf\xfb\xf9\xa4\xd4\xdc\xa2\xa3\xd9\xdb\u0192\xa6\xb4\xf3\xfa\xa8\xb8\xb3\xaf\xce\u2310\xac\xbd\xbc\xbe\xab\xbb\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm863: "cp863",
      csibm863: "cp863",
      cp864: {
        type: "_sbcs",
        chars: "\0\x01\x02\x03\x04\x05\x06\x07\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#$\u066a&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\xb0\xb7\u2219\u221a\u2592\u2500\u2502\u253c\u2524\u252c\u251c\u2534\u2510\u250c\u2514\u2518\u03b2\u221e\u03c6\xb1\xbd\xbc\u2248\xab\xbb\ufef7\ufef8\ufffd\ufffd\ufefb\ufefc\ufffd\xa0\xad\ufe82\xa3\xa4\ufe84\ufffd\ufffd\ufe8e\ufe8f\ufe95\ufe99\u060c\ufe9d\ufea1\ufea5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\ufed1\u061b\ufeb1\ufeb5\ufeb9\u061f\xa2\ufe80\ufe81\ufe83\ufe85\ufeca\ufe8b\ufe8d\ufe91\ufe93\ufe97\ufe9b\ufe9f\ufea3\ufea7\ufea9\ufeab\ufead\ufeaf\ufeb3\ufeb7\ufebb\ufebf\ufec1\ufec5\ufecb\ufecf\xa6\xac\xf7\xd7\ufec9\u0640\ufed3\ufed7\ufedb\ufedf\ufee3\ufee7\ufeeb\ufeed\ufeef\ufef3\ufebd\ufecc\ufece\ufecd\ufee1\ufe7d\u0651\ufee5\ufee9\ufeec\ufef0\ufef2\ufed0\ufed5\ufef5\ufef6\ufedd\ufed9\ufef1\u25a0\ufffd"
      },
      ibm864: "cp864",
      csibm864: "cp864",
      cp865: {
        type: "_sbcs",
        chars: "\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xf8\xa3\xd8\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa\xba\xbf\u2310\xac\xbd\xbc\xa1\xab\xa4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u2321\xf7\u2248\xb0\u2219\xb7\u221a\u207f\xb2\u25a0\xa0"
      },
      ibm865: "cp865",
      csibm865: "cp865",
      cp866: {
        type: "_sbcs",
        chars: "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u0401\u0451\u0404\u0454\u0407\u0457\u040e\u045e\xb0\u2219\xb7\u221a\u2116\xa4\u25a0\xa0"
      },
      ibm866: "cp866",
      csibm866: "cp866",
      cp869: {
        type: "_sbcs",
        chars: "\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0386\ufffd\xb7\xac\xa6\u2018\u2019\u0388\u2015\u0389\u038a\u03aa\u038c\ufffd\ufffd\u038e\u03ab\xa9\u038f\xb2\xb3\u03ac\xa3\u03ad\u03ae\u03af\u03ca\u0390\u03cc\u03cd\u0391\u0392\u0393\u0394\u0395\u0396\u0397\xbd\u0398\u0399\xab\xbb\u2591\u2592\u2593\u2502\u2524\u039a\u039b\u039c\u039d\u2563\u2551\u2557\u255d\u039e\u039f\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u03a0\u03a1\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\u03b1\u03b2\u03b3\u2518\u250c\u2588\u2584\u03b4\u03b5\u2580\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c3\u03c2\u03c4\u0384\xad\xb1\u03c5\u03c6\u03c7\xa7\u03c8\u0385\xb0\xa8\u03c9\u03cb\u03b0\u03ce\u25a0\xa0"
      },
      ibm869: "cp869",
      csibm869: "cp869",
      cp922: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\u203e\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u0160\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\u017d\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\u0161\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\u017e\xff"
      },
      ibm922: "cp922",
      csibm922: "cp922",
      cp1046: {
        type: "_sbcs",
        chars: "\ufe88\xd7\xf7\uf8f6\uf8f5\uf8f4\uf8f7\ufe71\x88\u25a0\u2502\u2500\u2510\u250c\u2514\u2518\ufe79\ufe7b\ufe7d\ufe7f\ufe77\ufe8a\ufef0\ufef3\ufef2\ufece\ufecf\ufed0\ufef6\ufef8\ufefa\ufefc\xa0\uf8fa\uf8f9\uf8f8\xa4\uf8fb\ufe8b\ufe91\ufe97\ufe9b\ufe9f\ufea3\u060c\xad\ufea7\ufeb3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\ufeb7\u061b\ufebb\ufebf\ufeca\u061f\ufecb\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062a\u062b\u062c\u062d\u062e\u062f\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\ufec7\u0639\u063a\ufecc\ufe82\ufe84\ufe8e\ufed3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064a\u064b\u064c\u064d\u064e\u064f\u0650\u0651\u0652\ufed7\ufedb\ufedf\uf8fc\ufef5\ufef7\ufef9\ufefb\ufee3\ufee7\ufeec\ufee9\ufffd"
      },
      ibm1046: "cp1046",
      csibm1046: "cp1046",
      cp1124: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040a\u040b\u040c\xad\u040e\u040f\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045a\u045b\u045c\xa7\u045e\u045f"
      },
      ibm1124: "cp1124",
      csibm1124: "cp1124",
      cp1125: {
        type: "_sbcs",
        chars: "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\xb7\u221a\u2116\xa4\u25a0\xa0"
      },
      ibm1125: "cp1125",
      csibm1125: "cp1125",
      cp1129: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\u0153\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\u0178\xb5\xb6\xb7\u0152\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\u0102\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\u0300\xcd\xce\xcf\u0110\xd1\u0309\xd3\xd4\u01a0\xd6\xd7\xd8\xd9\xda\xdb\xdc\u01af\u0303\xdf\xe0\xe1\xe2\u0103\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\u0301\xed\xee\xef\u0111\xf1\u0323\xf3\xf4\u01a1\xf6\xf7\xf8\xf9\xfa\xfb\xfc\u01b0\u20ab\xff"
      },
      ibm1129: "cp1129",
      csibm1129: "cp1129",
      cp1133: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0e81\u0e82\u0e84\u0e87\u0e88\u0eaa\u0e8a\u0e8d\u0e94\u0e95\u0e96\u0e97\u0e99\u0e9a\u0e9b\u0e9c\u0e9d\u0e9e\u0e9f\u0ea1\u0ea2\u0ea3\u0ea5\u0ea7\u0eab\u0ead\u0eae\ufffd\ufffd\ufffd\u0eaf\u0eb0\u0eb2\u0eb3\u0eb4\u0eb5\u0eb6\u0eb7\u0eb8\u0eb9\u0ebc\u0eb1\u0ebb\u0ebd\ufffd\ufffd\ufffd\u0ec0\u0ec1\u0ec2\u0ec3\u0ec4\u0ec8\u0ec9\u0eca\u0ecb\u0ecc\u0ecd\u0ec6\ufffd\u0edc\u0edd\u20ad\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0ed0\u0ed1\u0ed2\u0ed3\u0ed4\u0ed5\u0ed6\u0ed7\u0ed8\u0ed9\ufffd\ufffd\xa2\xac\xa6\ufffd"
      },
      ibm1133: "cp1133",
      csibm1133: "cp1133",
      cp1161: {
        type: "_sbcs",
        chars: "\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0e48\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\u0e49\u0e4a\u0e4b\u20ac\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\u0e5a\u0e5b\xa2\xac\xa6\xa0"
      },
      ibm1161: "cp1161",
      csibm1161: "cp1161",
      cp1162: {
        type: "_sbcs",
        chars: "\u20ac\x81\x82\x83\x84\u2026\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\u2018\u2019\u201c\u201d\u2022\u2013\u2014\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\ufffd\ufffd\ufffd\ufffd\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\u0e5a\u0e5b\ufffd\ufffd\ufffd\ufffd"
      },
      ibm1162: "cp1162",
      csibm1162: "cp1162",
      cp1163: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\u20ac\xa5\xa6\xa7\u0153\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\u0178\xb5\xb6\xb7\u0152\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\u0102\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\u0300\xcd\xce\xcf\u0110\xd1\u0309\xd3\xd4\u01a0\xd6\xd7\xd8\xd9\xda\xdb\xdc\u01af\u0303\xdf\xe0\xe1\xe2\u0103\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\u0301\xed\xee\xef\u0111\xf1\u0323\xf3\xf4\u01a1\xf6\xf7\xf8\xf9\xfa\xfb\xfc\u01b0\u20ab\xff"
      },
      ibm1163: "cp1163",
      csibm1163: "cp1163",
      maccroatian: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017d\xd8\u221e\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220f\u0161\u222b\xaa\xba\u2126\u017e\xf8\xbf\xa1\xac\u221a\u0192\u2248\u0106\xab\u010c\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\ufffd\xa9\u2044\xa4\u2039\u203a\xc6\xbb\u2013\xb7\u201a\u201e\u2030\xc2\u0107\xc1\u010d\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u03c0\xcb\u02da\xb8\xca\xe6\u02c7"
      },
      maccyrillic: {
        type: "_sbcs",
        chars: "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u2020\xb0\xa2\xa3\xa7\u2022\xb6\u0406\xae\xa9\u2122\u0402\u0452\u2260\u0403\u0453\u221e\xb1\u2264\u2265\u0456\xb5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040a\u045a\u0458\u0405\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\u040b\u045b\u040c\u045c\u0455\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u201e\u040e\u045e\u040f\u045f\u2116\u0401\u0451\u044f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\xa4"
      },
      macgreek: {
        type: "_sbcs",
        chars: "\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\xad\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039b\u039e\u03a0\xdf\xae\xa9\u03a3\u03aa\xa7\u2260\xb0\u0387\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039a\u039c\u03a6\u03ab\u03a8\u03a9\u03ac\u039d\xac\u039f\u03a1\u2248\u03a4\xab\xbb\u2026\xa0\u03a5\u03a7\u0386\u0388\u0153\u2013\u2015\u201c\u201d\u2018\u2019\xf7\u0389\u038a\u038c\u038e\u03ad\u03ae\u03af\u03cc\u038f\u03cd\u03b1\u03b2\u03c8\u03b4\u03b5\u03c6\u03b3\u03b7\u03b9\u03be\u03ba\u03bb\u03bc\u03bd\u03bf\u03c0\u03ce\u03c1\u03c3\u03c4\u03b8\u03c9\u03c2\u03c7\u03c5\u03b6\u03ca\u03cb\u0390\u03b0\ufffd"
      },
      maciceland: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u2126\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\xa4\xd0\xf0\xde\xfe\xfd\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\ufffd\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
      },
      macroman: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u2126\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\xa4\u2039\u203a\ufb01\ufb02\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\ufffd\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
      },
      macromania: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u015e\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u2126\u0103\u015f\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\xa4\u2039\u203a\u0162\u0163\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\ufffd\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
      },
      macthai: {
        type: "_sbcs",
        chars: "\xab\xbb\u2026\uf88c\uf88f\uf892\uf895\uf898\uf88b\uf88e\uf891\uf894\uf897\u201c\u201d\uf899\ufffd\u2022\uf884\uf889\uf885\uf886\uf887\uf888\uf88a\uf88d\uf890\uf893\uf896\u2018\u2019\ufffd\xa0\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\ufeff\u200b\u2013\u2014\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u2122\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\xae\xa9\ufffd\ufffd\ufffd\ufffd"
      },
      macturkish: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u2126\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u011e\u011f\u0130\u0131\u015e\u015f\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\ufffd\xd2\xda\xdb\xd9\ufffd\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
      },
      macukraine: {
        type: "_sbcs",
        chars: "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u2020\xb0\u0490\xa3\xa7\u2022\xb6\u0406\xae\xa9\u2122\u0402\u0452\u2260\u0403\u0453\u221e\xb1\u2264\u2265\u0456\xb5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040a\u045a\u0458\u0405\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\u040b\u045b\u040c\u045c\u0455\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u201e\u040e\u045e\u040f\u045f\u2116\u0401\u0451\u044f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\xa4"
      },
      koi8r: {
        type: "_sbcs",
        chars: "\u2500\u2502\u250c\u2510\u2514\u2518\u251c\u2524\u252c\u2534\u253c\u2580\u2584\u2588\u258c\u2590\u2591\u2592\u2593\u2320\u25a0\u2219\u221a\u2248\u2264\u2265\xa0\u2321\xb0\xb2\xb7\xf7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255a\u255b\u255c\u255d\u255e\u255f\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256a\u256b\u256c\xa9\u044e\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u044f\u0440\u0441\u0442\u0443\u0436\u0432\u044c\u044b\u0437\u0448\u044d\u0449\u0447\u044a\u042e\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u042f\u0420\u0421\u0422\u0423\u0416\u0412\u042c\u042b\u0417\u0428\u042d\u0429\u0427\u042a"
      },
      koi8u: {
        type: "_sbcs",
        chars: "\u2500\u2502\u250c\u2510\u2514\u2518\u251c\u2524\u252c\u2534\u253c\u2580\u2584\u2588\u258c\u2590\u2591\u2592\u2593\u2320\u25a0\u2219\u221a\u2248\u2264\u2265\xa0\u2321\xb0\xb2\xb7\xf7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255a\u255b\u0491\u255d\u255e\u255f\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256a\u0490\u256c\xa9\u044e\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u044f\u0440\u0441\u0442\u0443\u0436\u0432\u044c\u044b\u0437\u0448\u044d\u0449\u0447\u044a\u042e\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u042f\u0420\u0421\u0422\u0423\u0416\u0412\u042c\u042b\u0417\u0428\u042d\u0429\u0427\u042a"
      },
      koi8ru: {
        type: "_sbcs",
        chars: "\u2500\u2502\u250c\u2510\u2514\u2518\u251c\u2524\u252c\u2534\u253c\u2580\u2584\u2588\u258c\u2590\u2591\u2592\u2593\u2320\u25a0\u2219\u221a\u2248\u2264\u2265\xa0\u2321\xb0\xb2\xb7\xf7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255a\u255b\u0491\u045e\u255e\u255f\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256a\u0490\u040e\xa9\u044e\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u044f\u0440\u0441\u0442\u0443\u0436\u0432\u044c\u044b\u0437\u0448\u044d\u0449\u0447\u044a\u042e\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u042f\u0420\u0421\u0422\u0423\u0416\u0412\u042c\u042b\u0417\u0428\u042d\u0429\u0427\u042a"
      },
      koi8t: {
        type: "_sbcs",
        chars: "\u049b\u0493\u201a\u0492\u201e\u2026\u2020\u2021\ufffd\u2030\u04b3\u2039\u04b2\u04b7\u04b6\ufffd\u049a\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\ufffd\u203a\ufffd\ufffd\ufffd\ufffd\ufffd\u04ef\u04ee\u0451\xa4\u04e3\xa6\xa7\ufffd\ufffd\ufffd\xab\xac\xad\xae\ufffd\xb0\xb1\xb2\u0401\ufffd\u04e2\xb6\xb7\ufffd\u2116\ufffd\xbb\ufffd\ufffd\ufffd\xa9\u044e\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u044f\u0440\u0441\u0442\u0443\u0436\u0432\u044c\u044b\u0437\u0448\u044d\u0449\u0447\u044a\u042e\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u042f\u0420\u0421\u0422\u0423\u0416\u0412\u042c\u042b\u0417\u0428\u042d\u0429\u0427\u042a"
      },
      armscii8: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\ufffd\u0587\u0589)(\xbb\xab\u2014.\u055d,-\u058a\u2026\u055c\u055b\u055e\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053a\u056a\u053b\u056b\u053c\u056c\u053d\u056d\u053e\u056e\u053f\u056f\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054a\u057a\u054b\u057b\u054c\u057c\u054d\u057d\u054e\u057e\u054f\u057f\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055a\ufffd"
      },
      rk1048: {
        type: "_sbcs",
        chars: "\u0402\u0403\u201a\u0453\u201e\u2026\u2020\u2021\u20ac\u2030\u0409\u2039\u040a\u049a\u04ba\u040f\u0452\u2018\u2019\u201c\u201d\u2022\u2013\u2014\ufffd\u2122\u0459\u203a\u045a\u049b\u04bb\u045f\xa0\u04b0\u04b1\u04d8\xa4\u04e8\xa6\xa7\u0401\xa9\u0492\xab\xac\xad\xae\u04ae\xb0\xb1\u0406\u0456\u04e9\xb5\xb6\xb7\u0451\u2116\u0493\xbb\u04d9\u04a2\u04a3\u04af\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f"
      },
      tcvn: {
        type: "_sbcs",
        chars: "\0\xda\u1ee4\x03\u1eea\u1eec\u1eee\x07\b\t\n\v\f\r\x0e\x0f\x10\u1ee8\u1ef0\u1ef2\u1ef6\u1ef8\xdd\u1ef4\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\xc0\u1ea2\xc3\xc1\u1ea0\u1eb6\u1eac\xc8\u1eba\u1ebc\xc9\u1eb8\u1ec6\xcc\u1ec8\u0128\xcd\u1eca\xd2\u1ece\xd5\xd3\u1ecc\u1ed8\u1edc\u1ede\u1ee0\u1eda\u1ee2\xd9\u1ee6\u0168\xa0\u0102\xc2\xca\xd4\u01a0\u01af\u0110\u0103\xe2\xea\xf4\u01a1\u01b0\u0111\u1eb0\u0300\u0309\u0303\u0301\u0323\xe0\u1ea3\xe3\xe1\u1ea1\u1eb2\u1eb1\u1eb3\u1eb5\u1eaf\u1eb4\u1eae\u1ea6\u1ea8\u1eaa\u1ea4\u1ec0\u1eb7\u1ea7\u1ea9\u1eab\u1ea5\u1ead\xe8\u1ec2\u1ebb\u1ebd\xe9\u1eb9\u1ec1\u1ec3\u1ec5\u1ebf\u1ec7\xec\u1ec9\u1ec4\u1ebe\u1ed2\u0129\xed\u1ecb\xf2\u1ed4\u1ecf\xf5\xf3\u1ecd\u1ed3\u1ed5\u1ed7\u1ed1\u1ed9\u1edd\u1edf\u1ee1\u1edb\u1ee3\xf9\u1ed6\u1ee7\u0169\xfa\u1ee5\u1eeb\u1eed\u1eef\u1ee9\u1ef1\u1ef3\u1ef7\u1ef9\xfd\u1ef5\u1ed0"
      },
      georgianacademy: {
        type: "_sbcs",
        chars: "\x80\x81\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\x8d\x8e\x8f\x90\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\x9d\x9e\u0178\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\u10d0\u10d1\u10d2\u10d3\u10d4\u10d5\u10d6\u10d7\u10d8\u10d9\u10da\u10db\u10dc\u10dd\u10de\u10df\u10e0\u10e1\u10e2\u10e3\u10e4\u10e5\u10e6\u10e7\u10e8\u10e9\u10ea\u10eb\u10ec\u10ed\u10ee\u10ef\u10f0\u10f1\u10f2\u10f3\u10f4\u10f5\u10f6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
      },
      georgianps: {
        type: "_sbcs",
        chars: "\x80\x81\u201a\u0192\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\x8d\x8e\x8f\x90\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\x9d\x9e\u0178\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\u10d0\u10d1\u10d2\u10d3\u10d4\u10d5\u10d6\u10f1\u10d7\u10d8\u10d9\u10da\u10db\u10dc\u10f2\u10dd\u10de\u10df\u10e0\u10e1\u10e2\u10f3\u10e3\u10e4\u10e5\u10e6\u10e7\u10e8\u10e9\u10ea\u10eb\u10ec\u10ed\u10ee\u10f4\u10ef\u10f0\u10f5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
      },
      pt154: {
        type: "_sbcs",
        chars: "\u0496\u0492\u04ee\u0493\u201e\u2026\u04b6\u04ae\u04b2\u04af\u04a0\u04e2\u04a2\u049a\u04ba\u04b8\u0497\u2018\u2019\u201c\u201d\u2022\u2013\u2014\u04b3\u04b7\u04a1\u04e3\u04a3\u049b\u04bb\u04b9\xa0\u040e\u045e\u0408\u04e8\u0498\u04b0\xa7\u0401\xa9\u04d8\xab\xac\u04ef\xae\u049c\xb0\u04b1\u0406\u0456\u0499\u04e9\xb6\xb7\u0451\u2116\u04d9\xbb\u0458\u04aa\u04ab\u049d\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f"
      },
      viscii: {
        type: "_sbcs",
        chars: "\0\x01\u1eb2\x03\x04\u1eb4\u1eaa\x07\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\u1ef6\x15\x16\x17\x18\u1ef8\x1a\x1b\x1c\x1d\u1ef4\x1f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\u1ea0\u1eae\u1eb0\u1eb6\u1ea4\u1ea6\u1ea8\u1eac\u1ebc\u1eb8\u1ebe\u1ec0\u1ec2\u1ec4\u1ec6\u1ed0\u1ed2\u1ed4\u1ed6\u1ed8\u1ee2\u1eda\u1edc\u1ede\u1eca\u1ece\u1ecc\u1ec8\u1ee6\u0168\u1ee4\u1ef2\xd5\u1eaf\u1eb1\u1eb7\u1ea5\u1ea7\u1ea9\u1ead\u1ebd\u1eb9\u1ebf\u1ec1\u1ec3\u1ec5\u1ec7\u1ed1\u1ed3\u1ed5\u1ed7\u1ee0\u01a0\u1ed9\u1edd\u1edf\u1ecb\u1ef0\u1ee8\u1eea\u1eec\u01a1\u1edb\u01af\xc0\xc1\xc2\xc3\u1ea2\u0102\u1eb3\u1eb5\xc8\xc9\xca\u1eba\xcc\xcd\u0128\u1ef3\u0110\u1ee9\xd2\xd3\xd4\u1ea1\u1ef7\u1eeb\u1eed\xd9\xda\u1ef9\u1ef5\xdd\u1ee1\u01b0\xe0\xe1\xe2\xe3\u1ea3\u0103\u1eef\u1eab\xe8\xe9\xea\u1ebb\xec\xed\u0129\u1ec9\u0111\u1ef1\xf2\xf3\xf4\xf5\u1ecf\u1ecd\u1ee5\xf9\xfa\u0169\u1ee7\xfd\u1ee3\u1eee"
      },
      iso646cn: {
        type: "_sbcs",
        chars: "\0\x01\x02\x03\x04\x05\x06\x07\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#\xa5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203e\x7f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd"
      },
      iso646jp: {
        type: "_sbcs",
        chars: "\0\x01\x02\x03\x04\x05\x06\x07\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\xa5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203e\x7f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd"
      },
      hproman8: {
        type: "_sbcs",
        chars: "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xc0\xc2\xc8\xca\xcb\xce\xcf\xb4\u02cb\u02c6\xa8\u02dc\xd9\xdb\u20a4\xaf\xdd\xfd\xb0\xc7\xe7\xd1\xf1\xa1\xbf\xa4\xa3\xa5\xa7\u0192\xa2\xe2\xea\xf4\xfb\xe1\xe9\xf3\xfa\xe0\xe8\xf2\xf9\xe4\xeb\xf6\xfc\xc5\xee\xd8\xc6\xe5\xed\xf8\xe6\xc4\xec\xd6\xdc\xc9\xef\xdf\xd4\xc1\xc3\xe3\xd0\xf0\xcd\xcc\xd3\xd2\xd5\xf5\u0160\u0161\xda\u0178\xff\xde\xfe\xb7\xb5\xb6\xbe\u2014\xbc\xbd\xaa\xba\xab\u25a0\xbb\xb1\ufffd"
      },
      macintosh: {
        type: "_sbcs",
        chars: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u2126\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\xa4\u2039\u203a\ufb01\ufb02\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\ufffd\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
      },
      ascii: {
        type: "_sbcs",
        chars: "\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd"
      },
      tis620: {
        type: "_sbcs",
        chars: "\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e31\u0e32\u0e33\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\ufffd\ufffd\ufffd\ufffd\u0e3f\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e46\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0e4f\u0e50\u0e51\u0e52\u0e53\u0e54\u0e55\u0e56\u0e57\u0e58\u0e59\u0e5a\u0e5b\ufffd\ufffd\ufffd\ufffd"
      }
    };
    cc._RF.pop();
  }, {} ],
  "sbcs-data": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8da50+Q80ZG56exKqX7Qn36", "sbcs-data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.sbcsData = void 0;
    exports.sbcsData = {
      10029: "maccenteuro",
      maccenteuro: {
        type: "_sbcs",
        chars: "\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010c\xe4\u010d\u0106\u0107\xe9\u0179\u017a\u010e\xed\u010f\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011a\u011b\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012e\u012f\u012a\u2264\u2265\u012b\u0136\u2202\u2211\u0142\u013b\u013c\u013d\u013e\u0139\u013a\u0145\u0146\u0143\xac\u221a\u0144\u0147\u2206\xab\xbb\u2026\xa0\u0148\u0150\xd5\u0151\u014c\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\u014d\u0154\u0155\u0158\u2039\u203a\u0159\u0156\u0157\u0160\u201a\u201e\u0161\u015a\u015b\xc1\u0164\u0165\xcd\u017d\u017e\u016a\xd3\xd4\u016b\u016e\xda\u016f\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017b\u0141\u017c\u0122\u02c7"
      },
      808: "cp808",
      ibm808: "cp808",
      cp808: {
        type: "_sbcs",
        chars: "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255d\u255c\u255b\u2510\u2514\u2534\u252c\u251c\u2500\u253c\u255e\u255f\u255a\u2554\u2569\u2566\u2560\u2550\u256c\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256b\u256a\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u0401\u0451\u0404\u0454\u0407\u0457\u040e\u045e\xb0\u2219\xb7\u221a\u2116\u20ac\u25a0\xa0"
      },
      ascii8bit: "ascii",
      usascii: "ascii",
      ansix34: "ascii",
      ansix341968: "ascii",
      ansix341986: "ascii",
      csascii: "ascii",
      cp367: "ascii",
      ibm367: "ascii",
      isoir6: "ascii",
      iso646us: "ascii",
      iso646irv: "ascii",
      us: "ascii",
      latin1: "iso88591",
      latin2: "iso88592",
      latin3: "iso88593",
      latin4: "iso88594",
      latin5: "iso88599",
      latin6: "iso885910",
      latin7: "iso885913",
      latin8: "iso885914",
      latin9: "iso885915",
      latin10: "iso885916",
      csisolatin1: "iso88591",
      csisolatin2: "iso88592",
      csisolatin3: "iso88593",
      csisolatin4: "iso88594",
      csisolatincyrillic: "iso88595",
      csisolatinarabic: "iso88596",
      csisolatingreek: "iso88597",
      csisolatinhebrew: "iso88598",
      csisolatin5: "iso88599",
      csisolatin6: "iso885910",
      l1: "iso88591",
      l2: "iso88592",
      l3: "iso88593",
      l4: "iso88594",
      l5: "iso88599",
      l6: "iso885910",
      l7: "iso885913",
      l8: "iso885914",
      l9: "iso885915",
      l10: "iso885916",
      isoir14: "iso646jp",
      isoir57: "iso646cn",
      isoir100: "iso88591",
      isoir101: "iso88592",
      isoir109: "iso88593",
      isoir110: "iso88594",
      isoir144: "iso88595",
      isoir127: "iso88596",
      isoir126: "iso88597",
      isoir138: "iso88598",
      isoir148: "iso88599",
      isoir157: "iso885910",
      isoir166: "tis620",
      isoir179: "iso885913",
      isoir199: "iso885914",
      isoir203: "iso885915",
      isoir226: "iso885916",
      cp819: "iso88591",
      ibm819: "iso88591",
      cyrillic: "iso88595",
      arabic: "iso88596",
      arabic8: "iso88596",
      ecma114: "iso88596",
      asmo708: "iso88596",
      greek: "iso88597",
      greek8: "iso88597",
      ecma118: "iso88597",
      elot928: "iso88597",
      hebrew: "iso88598",
      hebrew8: "iso88598",
      turkish: "iso88599",
      turkish8: "iso88599",
      thai: "iso885911",
      thai8: "iso885911",
      celtic: "iso885914",
      celtic8: "iso885914",
      isoceltic: "iso885914",
      tis6200: "tis620",
      tis62025291: "tis620",
      tis62025330: "tis620",
      1e4: "macroman",
      10006: "macgreek",
      10007: "maccyrillic",
      10079: "maciceland",
      10081: "macturkish",
      cspc8codepage437: "cp437",
      cspc775baltic: "cp775",
      cspc850multilingual: "cp850",
      cspcp852: "cp852",
      cspc862latinhebrew: "cp862",
      cpgr: "cp869",
      msee: "cp1250",
      mscyrl: "cp1251",
      msansi: "cp1252",
      msgreek: "cp1253",
      msturk: "cp1254",
      mshebr: "cp1255",
      msarab: "cp1256",
      winbaltrim: "cp1257",
      cp20866: "koi8r",
      20866: "koi8r",
      ibm878: "koi8r",
      cskoi8r: "koi8r",
      cp21866: "koi8u",
      21866: "koi8u",
      ibm1168: "koi8u",
      strk10482002: "rk1048",
      tcvn5712: "tcvn",
      tcvn57121: "tcvn",
      gb198880: "iso646cn",
      cn: "iso646cn",
      csiso14jisc6220ro: "iso646jp",
      jisc62201969ro: "iso646jp",
      jp: "iso646jp",
      cshproman8: "hproman8",
      r8: "hproman8",
      roman8: "hproman8",
      xroman8: "hproman8",
      ibm1051: "hproman8",
      mac: "macintosh",
      csmacintosh: "macintosh"
    };
    cc._RF.pop();
  }, {} ],
  shiftjis: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f3bfb93LzBAx7PMWfKB4WCp", "shiftjis");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.shiftjis = void 0;
    exports.shiftjis = [ [ "0", "\0", 128 ], [ "a1", "\uff61", 62 ], [ "8140", "\u3000\u3001\u3002\uff0c\uff0e\u30fb\uff1a\uff1b\uff1f\uff01\u309b\u309c\xb4\uff40\xa8\uff3e\uffe3\uff3f\u30fd\u30fe\u309d\u309e\u3003\u4edd\u3005\u3006\u3007\u30fc\u2015\u2010\uff0f\uff3c\uff5e\u2225\uff5c\u2026\u2025\u2018\u2019\u201c\u201d\uff08\uff09\u3014\u3015\uff3b\uff3d\uff5b\uff5d\u3008", 9, "\uff0b\uff0d\xb1\xd7" ], [ "8180", "\xf7\uff1d\u2260\uff1c\uff1e\u2266\u2267\u221e\u2234\u2642\u2640\xb0\u2032\u2033\u2103\uffe5\uff04\uffe0\uffe1\uff05\uff03\uff06\uff0a\uff20\xa7\u2606\u2605\u25cb\u25cf\u25ce\u25c7\u25c6\u25a1\u25a0\u25b3\u25b2\u25bd\u25bc\u203b\u3012\u2192\u2190\u2191\u2193\u3013" ], [ "81b8", "\u2208\u220b\u2286\u2287\u2282\u2283\u222a\u2229" ], [ "81c8", "\u2227\u2228\uffe2\u21d2\u21d4\u2200\u2203" ], [ "81da", "\u2220\u22a5\u2312\u2202\u2207\u2261\u2252\u226a\u226b\u221a\u223d\u221d\u2235\u222b\u222c" ], [ "81f0", "\u212b\u2030\u266f\u266d\u266a\u2020\u2021\xb6" ], [ "81fc", "\u25ef" ], [ "824f", "\uff10", 9 ], [ "8260", "\uff21", 25 ], [ "8281", "\uff41", 25 ], [ "829f", "\u3041", 82 ], [ "8340", "\u30a1", 62 ], [ "8380", "\u30e0", 22 ], [ "839f", "\u0391", 16, "\u03a3", 6 ], [ "83bf", "\u03b1", 16, "\u03c3", 6 ], [ "8440", "\u0410", 5, "\u0401\u0416", 25 ], [ "8470", "\u0430", 5, "\u0451\u0436", 7 ], [ "8480", "\u043e", 17 ], [ "849f", "\u2500\u2502\u250c\u2510\u2518\u2514\u251c\u252c\u2524\u2534\u253c\u2501\u2503\u250f\u2513\u251b\u2517\u2523\u2533\u252b\u253b\u254b\u2520\u252f\u2528\u2537\u253f\u251d\u2530\u2525\u2538\u2542" ], [ "8740", "\u2460", 19, "\u2160", 9 ], [ "875f", "\u3349\u3314\u3322\u334d\u3318\u3327\u3303\u3336\u3351\u3357\u330d\u3326\u3323\u332b\u334a\u333b\u339c\u339d\u339e\u338e\u338f\u33c4\u33a1" ], [ "877e", "\u337b" ], [ "8780", "\u301d\u301f\u2116\u33cd\u2121\u32a4", 4, "\u3231\u3232\u3239\u337e\u337d\u337c\u2252\u2261\u222b\u222e\u2211\u221a\u22a5\u2220\u221f\u22bf\u2235\u2229\u222a" ], [ "889f", "\u4e9c\u5516\u5a03\u963f\u54c0\u611b\u6328\u59f6\u9022\u8475\u831c\u7a50\u60aa\u63e1\u6e25\u65ed\u8466\u82a6\u9bf5\u6893\u5727\u65a1\u6271\u5b9b\u59d0\u867b\u98f4\u7d62\u7dbe\u9b8e\u6216\u7c9f\u88b7\u5b89\u5eb5\u6309\u6697\u6848\u95c7\u978d\u674f\u4ee5\u4f0a\u4f4d\u4f9d\u5049\u56f2\u5937\u59d4\u5a01\u5c09\u60df\u610f\u6170\u6613\u6905\u70ba\u754f\u7570\u79fb\u7dad\u7def\u80c3\u840e\u8863\u8b02\u9055\u907a\u533b\u4e95\u4ea5\u57df\u80b2\u90c1\u78ef\u4e00\u58f1\u6ea2\u9038\u7a32\u8328\u828b\u9c2f\u5141\u5370\u54bd\u54e1\u56e0\u59fb\u5f15\u98f2\u6deb\u80e4\u852d" ], [ "8940", "\u9662\u9670\u96a0\u97fb\u540b\u53f3\u5b87\u70cf\u7fbd\u8fc2\u96e8\u536f\u9d5c\u7aba\u4e11\u7893\u81fc\u6e26\u5618\u5504\u6b1d\u851a\u9c3b\u59e5\u53a9\u6d66\u74dc\u958f\u5642\u4e91\u904b\u96f2\u834f\u990c\u53e1\u55b6\u5b30\u5f71\u6620\u66f3\u6804\u6c38\u6cf3\u6d29\u745b\u76c8\u7a4e\u9834\u82f1\u885b\u8a60\u92ed\u6db2\u75ab\u76ca\u99c5\u60a6\u8b01\u8d8a\u95b2\u698e\u53ad\u5186" ], [ "8980", "\u5712\u5830\u5944\u5bb4\u5ef6\u6028\u63a9\u63f4\u6cbf\u6f14\u708e\u7114\u7159\u71d5\u733f\u7e01\u8276\u82d1\u8597\u9060\u925b\u9d1b\u5869\u65bc\u6c5a\u7525\u51f9\u592e\u5965\u5f80\u5fdc\u62bc\u65fa\u6a2a\u6b27\u6bb4\u738b\u7fc1\u8956\u9d2c\u9d0e\u9ec4\u5ca1\u6c96\u837b\u5104\u5c4b\u61b6\u81c6\u6876\u7261\u4e59\u4ffa\u5378\u6069\u6e29\u7a4f\u97f3\u4e0b\u5316\u4eee\u4f55\u4f3d\u4fa1\u4f73\u52a0\u53ef\u5609\u590f\u5ac1\u5bb6\u5be1\u79d1\u6687\u679c\u67b6\u6b4c\u6cb3\u706b\u73c2\u798d\u79be\u7a3c\u7b87\u82b1\u82db\u8304\u8377\u83ef\u83d3\u8766\u8ab2\u5629\u8ca8\u8fe6\u904e\u971e\u868a\u4fc4\u5ce8\u6211\u7259\u753b\u81e5\u82bd\u86fe\u8cc0\u96c5\u9913\u99d5\u4ecb\u4f1a\u89e3\u56de\u584a\u58ca\u5efb\u5feb\u602a\u6094\u6062\u61d0\u6212\u62d0\u6539" ], [ "8a40", "\u9b41\u6666\u68b0\u6d77\u7070\u754c\u7686\u7d75\u82a5\u87f9\u958b\u968e\u8c9d\u51f1\u52be\u5916\u54b3\u5bb3\u5d16\u6168\u6982\u6daf\u788d\u84cb\u8857\u8a72\u93a7\u9ab8\u6d6c\u99a8\u86d9\u57a3\u67ff\u86ce\u920e\u5283\u5687\u5404\u5ed3\u62e1\u64b9\u683c\u6838\u6bbb\u7372\u78ba\u7a6b\u899a\u89d2\u8d6b\u8f03\u90ed\u95a3\u9694\u9769\u5b66\u5cb3\u697d\u984d\u984e\u639b\u7b20\u6a2b" ], [ "8a80", "\u6a7f\u68b6\u9c0d\u6f5f\u5272\u559d\u6070\u62ec\u6d3b\u6e07\u6ed1\u845b\u8910\u8f44\u4e14\u9c39\u53f6\u691b\u6a3a\u9784\u682a\u515c\u7ac3\u84b2\u91dc\u938c\u565b\u9d28\u6822\u8305\u8431\u7ca5\u5208\u82c5\u74e6\u4e7e\u4f83\u51a0\u5bd2\u520a\u52d8\u52e7\u5dfb\u559a\u582a\u59e6\u5b8c\u5b98\u5bdb\u5e72\u5e79\u60a3\u611f\u6163\u61be\u63db\u6562\u67d1\u6853\u68fa\u6b3e\u6b53\u6c57\u6f22\u6f97\u6f45\u74b0\u7518\u76e3\u770b\u7aff\u7ba1\u7c21\u7de9\u7f36\u7ff0\u809d\u8266\u839e\u89b3\u8acc\u8cab\u9084\u9451\u9593\u9591\u95a2\u9665\u97d3\u9928\u8218\u4e38\u542b\u5cb8\u5dcc\u73a9\u764c\u773c\u5ca9\u7feb\u8d0b\u96c1\u9811\u9854\u9858\u4f01\u4f0e\u5371\u559c\u5668\u57fa\u5947\u5b09\u5bc4\u5c90\u5e0c\u5e7e\u5fcc\u63ee\u673a\u65d7\u65e2\u671f\u68cb\u68c4" ], [ "8b40", "\u6a5f\u5e30\u6bc5\u6c17\u6c7d\u757f\u7948\u5b63\u7a00\u7d00\u5fbd\u898f\u8a18\u8cb4\u8d77\u8ecc\u8f1d\u98e2\u9a0e\u9b3c\u4e80\u507d\u5100\u5993\u5b9c\u622f\u6280\u64ec\u6b3a\u72a0\u7591\u7947\u7fa9\u87fb\u8abc\u8b70\u63ac\u83ca\u97a0\u5409\u5403\u55ab\u6854\u6a58\u8a70\u7827\u6775\u9ecd\u5374\u5ba2\u811a\u8650\u9006\u4e18\u4e45\u4ec7\u4f11\u53ca\u5438\u5bae\u5f13\u6025\u6551" ], [ "8b80", "\u673d\u6c42\u6c72\u6ce3\u7078\u7403\u7a76\u7aae\u7b08\u7d1a\u7cfe\u7d66\u65e7\u725b\u53bb\u5c45\u5de8\u62d2\u62e0\u6319\u6e20\u865a\u8a31\u8ddd\u92f8\u6f01\u79a6\u9b5a\u4ea8\u4eab\u4eac\u4f9b\u4fa0\u50d1\u5147\u7af6\u5171\u51f6\u5354\u5321\u537f\u53eb\u55ac\u5883\u5ce1\u5f37\u5f4a\u602f\u6050\u606d\u631f\u6559\u6a4b\u6cc1\u72c2\u72ed\u77ef\u80f8\u8105\u8208\u854e\u90f7\u93e1\u97ff\u9957\u9a5a\u4ef0\u51dd\u5c2d\u6681\u696d\u5c40\u66f2\u6975\u7389\u6850\u7c81\u50c5\u52e4\u5747\u5dfe\u9326\u65a4\u6b23\u6b3d\u7434\u7981\u79bd\u7b4b\u7dca\u82b9\u83cc\u887f\u895f\u8b39\u8fd1\u91d1\u541f\u9280\u4e5d\u5036\u53e5\u533a\u72d7\u7396\u77e9\u82e6\u8eaf\u99c6\u99c8\u99d2\u5177\u611a\u865e\u55b0\u7a7a\u5076\u5bd3\u9047\u9685\u4e32\u6adb\u91e7\u5c51\u5c48" ], [ "8c40", "\u6398\u7a9f\u6c93\u9774\u8f61\u7aaa\u718a\u9688\u7c82\u6817\u7e70\u6851\u936c\u52f2\u541b\u85ab\u8a13\u7fa4\u8ecd\u90e1\u5366\u8888\u7941\u4fc2\u50be\u5211\u5144\u5553\u572d\u73ea\u578b\u5951\u5f62\u5f84\u6075\u6176\u6167\u61a9\u63b2\u643a\u656c\u666f\u6842\u6e13\u7566\u7a3d\u7cfb\u7d4c\u7d99\u7e4b\u7f6b\u830e\u834a\u86cd\u8a08\u8a63\u8b66\u8efd\u981a\u9d8f\u82b8\u8fce\u9be8" ], [ "8c80", "\u5287\u621f\u6483\u6fc0\u9699\u6841\u5091\u6b20\u6c7a\u6f54\u7a74\u7d50\u8840\u8a23\u6708\u4ef6\u5039\u5026\u5065\u517c\u5238\u5263\u55a7\u570f\u5805\u5acc\u5efa\u61b2\u61f8\u62f3\u6372\u691c\u6a29\u727d\u72ac\u732e\u7814\u786f\u7d79\u770c\u80a9\u898b\u8b19\u8ce2\u8ed2\u9063\u9375\u967a\u9855\u9a13\u9e78\u5143\u539f\u53b3\u5e7b\u5f26\u6e1b\u6e90\u7384\u73fe\u7d43\u8237\u8a00\u8afa\u9650\u4e4e\u500b\u53e4\u547c\u56fa\u59d1\u5b64\u5df1\u5eab\u5f27\u6238\u6545\u67af\u6e56\u72d0\u7cca\u88b4\u80a1\u80e1\u83f0\u864e\u8a87\u8de8\u9237\u96c7\u9867\u9f13\u4e94\u4e92\u4f0d\u5348\u5449\u543e\u5a2f\u5f8c\u5fa1\u609f\u68a7\u6a8e\u745a\u7881\u8a9e\u8aa4\u8b77\u9190\u4e5e\u9bc9\u4ea4\u4f7c\u4faf\u5019\u5016\u5149\u516c\u529f\u52b9\u52fe\u539a\u53e3\u5411" ], [ "8d40", "\u540e\u5589\u5751\u57a2\u597d\u5b54\u5b5d\u5b8f\u5de5\u5de7\u5df7\u5e78\u5e83\u5e9a\u5eb7\u5f18\u6052\u614c\u6297\u62d8\u63a7\u653b\u6602\u6643\u66f4\u676d\u6821\u6897\u69cb\u6c5f\u6d2a\u6d69\u6e2f\u6e9d\u7532\u7687\u786c\u7a3f\u7ce0\u7d05\u7d18\u7d5e\u7db1\u8015\u8003\u80af\u80b1\u8154\u818f\u822a\u8352\u884c\u8861\u8b1b\u8ca2\u8cfc\u90ca\u9175\u9271\u783f\u92fc\u95a4\u964d" ], [ "8d80", "\u9805\u9999\u9ad8\u9d3b\u525b\u52ab\u53f7\u5408\u58d5\u62f7\u6fe0\u8c6a\u8f5f\u9eb9\u514b\u523b\u544a\u56fd\u7a40\u9177\u9d60\u9ed2\u7344\u6f09\u8170\u7511\u5ffd\u60da\u9aa8\u72db\u8fbc\u6b64\u9803\u4eca\u56f0\u5764\u58be\u5a5a\u6068\u61c7\u660f\u6606\u6839\u68b1\u6df7\u75d5\u7d3a\u826e\u9b42\u4e9b\u4f50\u53c9\u5506\u5d6f\u5de6\u5dee\u67fb\u6c99\u7473\u7802\u8a50\u9396\u88df\u5750\u5ea7\u632b\u50b5\u50ac\u518d\u6700\u54c9\u585e\u59bb\u5bb0\u5f69\u624d\u63a1\u683d\u6b73\u6e08\u707d\u91c7\u7280\u7815\u7826\u796d\u658e\u7d30\u83dc\u88c1\u8f09\u969b\u5264\u5728\u6750\u7f6a\u8ca1\u51b4\u5742\u962a\u583a\u698a\u80b4\u54b2\u5d0e\u57fc\u7895\u9dfa\u4f5c\u524a\u548b\u643e\u6628\u6714\u67f5\u7a84\u7b56\u7d22\u932f\u685c\u9bad\u7b39\u5319\u518a\u5237" ], [ "8e40", "\u5bdf\u62f6\u64ae\u64e6\u672d\u6bba\u85a9\u96d1\u7690\u9bd6\u634c\u9306\u9bab\u76bf\u6652\u4e09\u5098\u53c2\u5c71\u60e8\u6492\u6563\u685f\u71e6\u73ca\u7523\u7b97\u7e82\u8695\u8b83\u8cdb\u9178\u9910\u65ac\u66ab\u6b8b\u4ed5\u4ed4\u4f3a\u4f7f\u523a\u53f8\u53f2\u55e3\u56db\u58eb\u59cb\u59c9\u59ff\u5b50\u5c4d\u5e02\u5e2b\u5fd7\u601d\u6307\u652f\u5b5c\u65af\u65bd\u65e8\u679d\u6b62" ], [ "8e80", "\u6b7b\u6c0f\u7345\u7949\u79c1\u7cf8\u7d19\u7d2b\u80a2\u8102\u81f3\u8996\u8a5e\u8a69\u8a66\u8a8c\u8aee\u8cc7\u8cdc\u96cc\u98fc\u6b6f\u4e8b\u4f3c\u4f8d\u5150\u5b57\u5bfa\u6148\u6301\u6642\u6b21\u6ecb\u6cbb\u723e\u74bd\u75d4\u78c1\u793a\u800c\u8033\u81ea\u8494\u8f9e\u6c50\u9e7f\u5f0f\u8b58\u9d2b\u7afa\u8ef8\u5b8d\u96eb\u4e03\u53f1\u57f7\u5931\u5ac9\u5ba4\u6089\u6e7f\u6f06\u75be\u8cea\u5b9f\u8500\u7be0\u5072\u67f4\u829d\u5c61\u854a\u7e1e\u820e\u5199\u5c04\u6368\u8d66\u659c\u716e\u793e\u7d17\u8005\u8b1d\u8eca\u906e\u86c7\u90aa\u501f\u52fa\u5c3a\u6753\u707c\u7235\u914c\u91c8\u932b\u82e5\u5bc2\u5f31\u60f9\u4e3b\u53d6\u5b88\u624b\u6731\u6b8a\u72e9\u73e0\u7a2e\u816b\u8da3\u9152\u9996\u5112\u53d7\u546a\u5bff\u6388\u6a39\u7dac\u9700\u56da\u53ce\u5468" ], [ "8f40", "\u5b97\u5c31\u5dde\u4fee\u6101\u62fe\u6d32\u79c0\u79cb\u7d42\u7e4d\u7fd2\u81ed\u821f\u8490\u8846\u8972\u8b90\u8e74\u8f2f\u9031\u914b\u916c\u96c6\u919c\u4ec0\u4f4f\u5145\u5341\u5f93\u620e\u67d4\u6c41\u6e0b\u7363\u7e26\u91cd\u9283\u53d4\u5919\u5bbf\u6dd1\u795d\u7e2e\u7c9b\u587e\u719f\u51fa\u8853\u8ff0\u4fca\u5cfb\u6625\u77ac\u7ae3\u821c\u99ff\u51c6\u5faa\u65ec\u696f\u6b89\u6df3" ], [ "8f80", "\u6e96\u6f64\u76fe\u7d14\u5de1\u9075\u9187\u9806\u51e6\u521d\u6240\u6691\u66d9\u6e1a\u5eb6\u7dd2\u7f72\u66f8\u85af\u85f7\u8af8\u52a9\u53d9\u5973\u5e8f\u5f90\u6055\u92e4\u9664\u50b7\u511f\u52dd\u5320\u5347\u53ec\u54e8\u5546\u5531\u5617\u5968\u59be\u5a3c\u5bb5\u5c06\u5c0f\u5c11\u5c1a\u5e84\u5e8a\u5ee0\u5f70\u627f\u6284\u62db\u638c\u6377\u6607\u660c\u662d\u6676\u677e\u68a2\u6a1f\u6a35\u6cbc\u6d88\u6e09\u6e58\u713c\u7126\u7167\u75c7\u7701\u785d\u7901\u7965\u79f0\u7ae0\u7b11\u7ca7\u7d39\u8096\u83d6\u848b\u8549\u885d\u88f3\u8a1f\u8a3c\u8a54\u8a73\u8c61\u8cde\u91a4\u9266\u937e\u9418\u969c\u9798\u4e0a\u4e08\u4e1e\u4e57\u5197\u5270\u57ce\u5834\u58cc\u5b22\u5e38\u60c5\u64fe\u6761\u6756\u6d44\u72b6\u7573\u7a63\u84b8\u8b72\u91b8\u9320\u5631\u57f4\u98fe" ], [ "9040", "\u62ed\u690d\u6b96\u71ed\u7e54\u8077\u8272\u89e6\u98df\u8755\u8fb1\u5c3b\u4f38\u4fe1\u4fb5\u5507\u5a20\u5bdd\u5be9\u5fc3\u614e\u632f\u65b0\u664b\u68ee\u699b\u6d78\u6df1\u7533\u75b9\u771f\u795e\u79e6\u7d33\u81e3\u82af\u85aa\u89aa\u8a3a\u8eab\u8f9b\u9032\u91dd\u9707\u4eba\u4ec1\u5203\u5875\u58ec\u5c0b\u751a\u5c3d\u814e\u8a0a\u8fc5\u9663\u976d\u7b25\u8acf\u9808\u9162\u56f3\u53a8" ], [ "9080", "\u9017\u5439\u5782\u5e25\u63a8\u6c34\u708a\u7761\u7c8b\u7fe0\u8870\u9042\u9154\u9310\u9318\u968f\u745e\u9ac4\u5d07\u5d69\u6570\u67a2\u8da8\u96db\u636e\u6749\u6919\u83c5\u9817\u96c0\u88fe\u6f84\u647a\u5bf8\u4e16\u702c\u755d\u662f\u51c4\u5236\u52e2\u59d3\u5f81\u6027\u6210\u653f\u6574\u661f\u6674\u68f2\u6816\u6b63\u6e05\u7272\u751f\u76db\u7cbe\u8056\u58f0\u88fd\u897f\u8aa0\u8a93\u8acb\u901d\u9192\u9752\u9759\u6589\u7a0e\u8106\u96bb\u5e2d\u60dc\u621a\u65a5\u6614\u6790\u77f3\u7a4d\u7c4d\u7e3e\u810a\u8cac\u8d64\u8de1\u8e5f\u78a9\u5207\u62d9\u63a5\u6442\u6298\u8a2d\u7a83\u7bc0\u8aac\u96ea\u7d76\u820c\u8749\u4ed9\u5148\u5343\u5360\u5ba3\u5c02\u5c16\u5ddd\u6226\u6247\u64b0\u6813\u6834\u6cc9\u6d45\u6d17\u67d3\u6f5c\u714e\u717d\u65cb\u7a7f\u7bad\u7dda" ], [ "9140", "\u7e4a\u7fa8\u817a\u821b\u8239\u85a6\u8a6e\u8cce\u8df5\u9078\u9077\u92ad\u9291\u9583\u9bae\u524d\u5584\u6f38\u7136\u5168\u7985\u7e55\u81b3\u7cce\u564c\u5851\u5ca8\u63aa\u66fe\u66fd\u695a\u72d9\u758f\u758e\u790e\u7956\u79df\u7c97\u7d20\u7d44\u8607\u8a34\u963b\u9061\u9f20\u50e7\u5275\u53cc\u53e2\u5009\u55aa\u58ee\u594f\u723d\u5b8b\u5c64\u531d\u60e3\u60f3\u635c\u6383\u633f\u63bb" ], [ "9180", "\u64cd\u65e9\u66f9\u5de3\u69cd\u69fd\u6f15\u71e5\u4e89\u75e9\u76f8\u7a93\u7cdf\u7dcf\u7d9c\u8061\u8349\u8358\u846c\u84bc\u85fb\u88c5\u8d70\u9001\u906d\u9397\u971c\u9a12\u50cf\u5897\u618e\u81d3\u8535\u8d08\u9020\u4fc3\u5074\u5247\u5373\u606f\u6349\u675f\u6e2c\u8db3\u901f\u4fd7\u5c5e\u8cca\u65cf\u7d9a\u5352\u8896\u5176\u63c3\u5b58\u5b6b\u5c0a\u640d\u6751\u905c\u4ed6\u591a\u592a\u6c70\u8a51\u553e\u5815\u59a5\u60f0\u6253\u67c1\u8235\u6955\u9640\u99c4\u9a28\u4f53\u5806\u5bfe\u8010\u5cb1\u5e2f\u5f85\u6020\u614b\u6234\u66ff\u6cf0\u6ede\u80ce\u817f\u82d4\u888b\u8cb8\u9000\u902e\u968a\u9edb\u9bdb\u4ee3\u53f0\u5927\u7b2c\u918d\u984c\u9df9\u6edd\u7027\u5353\u5544\u5b85\u6258\u629e\u62d3\u6ca2\u6fef\u7422\u8a17\u9438\u6fc1\u8afe\u8338\u51e7\u86f8\u53ea" ], [ "9240", "\u53e9\u4f46\u9054\u8fb0\u596a\u8131\u5dfd\u7aea\u8fbf\u68da\u8c37\u72f8\u9c48\u6a3d\u8ab0\u4e39\u5358\u5606\u5766\u62c5\u63a2\u65e6\u6b4e\u6de1\u6e5b\u70ad\u77ed\u7aef\u7baa\u7dbb\u803d\u80c6\u86cb\u8a95\u935b\u56e3\u58c7\u5f3e\u65ad\u6696\u6a80\u6bb5\u7537\u8ac7\u5024\u77e5\u5730\u5f1b\u6065\u667a\u6c60\u75f4\u7a1a\u7f6e\u81f4\u8718\u9045\u99b3\u7bc9\u755c\u7af9\u7b51\u84c4" ], [ "9280", "\u9010\u79e9\u7a92\u8336\u5ae1\u7740\u4e2d\u4ef2\u5b99\u5fe0\u62bd\u663c\u67f1\u6ce8\u866b\u8877\u8a3b\u914e\u92f3\u99d0\u6a17\u7026\u732a\u82e7\u8457\u8caf\u4e01\u5146\u51cb\u558b\u5bf5\u5e16\u5e33\u5e81\u5f14\u5f35\u5f6b\u5fb4\u61f2\u6311\u66a2\u671d\u6f6e\u7252\u753a\u773a\u8074\u8139\u8178\u8776\u8abf\u8adc\u8d85\u8df3\u929a\u9577\u9802\u9ce5\u52c5\u6357\u76f4\u6715\u6c88\u73cd\u8cc3\u93ae\u9673\u6d25\u589c\u690e\u69cc\u8ffd\u939a\u75db\u901a\u585a\u6802\u63b4\u69fb\u4f43\u6f2c\u67d8\u8fbb\u8526\u7db4\u9354\u693f\u6f70\u576a\u58f7\u5b2c\u7d2c\u722a\u540a\u91e3\u9db4\u4ead\u4f4e\u505c\u5075\u5243\u8c9e\u5448\u5824\u5b9a\u5e1d\u5e95\u5ead\u5ef7\u5f1f\u608c\u62b5\u633a\u63d0\u68af\u6c40\u7887\u798e\u7a0b\u7de0\u8247\u8a02\u8ae6\u8e44\u9013" ], [ "9340", "\u90b8\u912d\u91d8\u9f0e\u6ce5\u6458\u64e2\u6575\u6ef4\u7684\u7b1b\u9069\u93d1\u6eba\u54f2\u5fb9\u64a4\u8f4d\u8fed\u9244\u5178\u586b\u5929\u5c55\u5e97\u6dfb\u7e8f\u751c\u8cbc\u8ee2\u985b\u70b9\u4f1d\u6bbf\u6fb1\u7530\u96fb\u514e\u5410\u5835\u5857\u59ac\u5c60\u5f92\u6597\u675c\u6e21\u767b\u83df\u8ced\u9014\u90fd\u934d\u7825\u783a\u52aa\u5ea6\u571f\u5974\u6012\u5012\u515a\u51ac" ], [ "9380", "\u51cd\u5200\u5510\u5854\u5858\u5957\u5b95\u5cf6\u5d8b\u60bc\u6295\u642d\u6771\u6843\u68bc\u68df\u76d7\u6dd8\u6e6f\u6d9b\u706f\u71c8\u5f53\u75d8\u7977\u7b49\u7b54\u7b52\u7cd6\u7d71\u5230\u8463\u8569\u85e4\u8a0e\u8b04\u8c46\u8e0f\u9003\u900f\u9419\u9676\u982d\u9a30\u95d8\u50cd\u52d5\u540c\u5802\u5c0e\u61a7\u649e\u6d1e\u77b3\u7ae5\u80f4\u8404\u9053\u9285\u5ce0\u9d07\u533f\u5f97\u5fb3\u6d9c\u7279\u7763\u79bf\u7be4\u6bd2\u72ec\u8aad\u6803\u6a61\u51f8\u7a81\u6934\u5c4a\u9cf6\u82eb\u5bc5\u9149\u701e\u5678\u5c6f\u60c7\u6566\u6c8c\u8c5a\u9041\u9813\u5451\u66c7\u920d\u5948\u90a3\u5185\u4e4d\u51ea\u8599\u8b0e\u7058\u637a\u934b\u6962\u99b4\u7e04\u7577\u5357\u6960\u8edf\u96e3\u6c5d\u4e8c\u5c3c\u5f10\u8fe9\u5302\u8cd1\u8089\u8679\u5eff\u65e5\u4e73\u5165" ], [ "9440", "\u5982\u5c3f\u97ee\u4efb\u598a\u5fcd\u8a8d\u6fe1\u79b0\u7962\u5be7\u8471\u732b\u71b1\u5e74\u5ff5\u637b\u649a\u71c3\u7c98\u4e43\u5efc\u4e4b\u57dc\u56a2\u60a9\u6fc3\u7d0d\u80fd\u8133\u81bf\u8fb2\u8997\u86a4\u5df4\u628a\u64ad\u8987\u6777\u6ce2\u6d3e\u7436\u7834\u5a46\u7f75\u82ad\u99ac\u4ff3\u5ec3\u62dd\u6392\u6557\u676f\u76c3\u724c\u80cc\u80ba\u8f29\u914d\u500d\u57f9\u5a92\u6885" ], [ "9480", "\u6973\u7164\u72fd\u8cb7\u58f2\u8ce0\u966a\u9019\u877f\u79e4\u77e7\u8429\u4f2f\u5265\u535a\u62cd\u67cf\u6cca\u767d\u7b94\u7c95\u8236\u8584\u8feb\u66dd\u6f20\u7206\u7e1b\u83ab\u99c1\u9ea6\u51fd\u7bb1\u7872\u7bb8\u8087\u7b48\u6ae8\u5e61\u808c\u7551\u7560\u516b\u9262\u6e8c\u767a\u9197\u9aea\u4f10\u7f70\u629c\u7b4f\u95a5\u9ce9\u567a\u5859\u86e4\u96bc\u4f34\u5224\u534a\u53cd\u53db\u5e06\u642c\u6591\u677f\u6c3e\u6c4e\u7248\u72af\u73ed\u7554\u7e41\u822c\u85e9\u8ca9\u7bc4\u91c6\u7169\u9812\u98ef\u633d\u6669\u756a\u76e4\u78d0\u8543\u86ee\u532a\u5351\u5426\u5983\u5e87\u5f7c\u60b2\u6249\u6279\u62ab\u6590\u6bd4\u6ccc\u75b2\u76ae\u7891\u79d8\u7dcb\u7f77\u80a5\u88ab\u8ab9\u8cbb\u907f\u975e\u98db\u6a0b\u7c38\u5099\u5c3e\u5fae\u6787\u6bd8\u7435\u7709\u7f8e" ], [ "9540", "\u9f3b\u67ca\u7a17\u5339\u758b\u9aed\u5f66\u819d\u83f1\u8098\u5f3c\u5fc5\u7562\u7b46\u903c\u6867\u59eb\u5a9b\u7d10\u767e\u8b2c\u4ff5\u5f6a\u6a19\u6c37\u6f02\u74e2\u7968\u8868\u8a55\u8c79\u5edf\u63cf\u75c5\u79d2\u82d7\u9328\u92f2\u849c\u86ed\u9c2d\u54c1\u5f6c\u658c\u6d5c\u7015\u8ca7\u8cd3\u983b\u654f\u74f6\u4e0d\u4ed8\u57e0\u592b\u5a66\u5bcc\u51a8\u5e03\u5e9c\u6016\u6276\u6577" ], [ "9580", "\u65a7\u666e\u6d6e\u7236\u7b26\u8150\u819a\u8299\u8b5c\u8ca0\u8ce6\u8d74\u961c\u9644\u4fae\u64ab\u6b66\u821e\u8461\u856a\u90e8\u5c01\u6953\u98a8\u847a\u8557\u4f0f\u526f\u5fa9\u5e45\u670d\u798f\u8179\u8907\u8986\u6df5\u5f17\u6255\u6cb8\u4ecf\u7269\u9b92\u5206\u543b\u5674\u58b3\u61a4\u626e\u711a\u596e\u7c89\u7cde\u7d1b\u96f0\u6587\u805e\u4e19\u4f75\u5175\u5840\u5e63\u5e73\u5f0a\u67c4\u4e26\u853d\u9589\u965b\u7c73\u9801\u50fb\u58c1\u7656\u78a7\u5225\u77a5\u8511\u7b86\u504f\u5909\u7247\u7bc7\u7de8\u8fba\u8fd4\u904d\u4fbf\u52c9\u5a29\u5f01\u97ad\u4fdd\u8217\u92ea\u5703\u6355\u6b69\u752b\u88dc\u8f14\u7a42\u52df\u5893\u6155\u620a\u66ae\u6bcd\u7c3f\u83e9\u5023\u4ff8\u5305\u5446\u5831\u5949\u5b9d\u5cf0\u5cef\u5d29\u5e96\u62b1\u6367\u653e\u65b9\u670b" ], [ "9640", "\u6cd5\u6ce1\u70f9\u7832\u7e2b\u80de\u82b3\u840c\u84ec\u8702\u8912\u8a2a\u8c4a\u90a6\u92d2\u98fd\u9cf3\u9d6c\u4e4f\u4ea1\u508d\u5256\u574a\u59a8\u5e3d\u5fd8\u5fd9\u623f\u66b4\u671b\u67d0\u68d2\u5192\u7d21\u80aa\u81a8\u8b00\u8c8c\u8cbf\u927e\u9632\u5420\u982c\u5317\u50d5\u535c\u58a8\u64b2\u6734\u7267\u7766\u7a46\u91e6\u52c3\u6ca1\u6b86\u5800\u5e4c\u5954\u672c\u7ffb\u51e1\u76c6" ], [ "9680", "\u6469\u78e8\u9b54\u9ebb\u57cb\u59b9\u6627\u679a\u6bce\u54e9\u69d9\u5e55\u819c\u6795\u9baa\u67fe\u9c52\u685d\u4ea6\u4fe3\u53c8\u62b9\u672b\u6cab\u8fc4\u4fad\u7e6d\u9ebf\u4e07\u6162\u6e80\u6f2b\u8513\u5473\u672a\u9b45\u5df3\u7b95\u5cac\u5bc6\u871c\u6e4a\u84d1\u7a14\u8108\u5999\u7c8d\u6c11\u7720\u52d9\u5922\u7121\u725f\u77db\u9727\u9d61\u690b\u5a7f\u5a18\u51a5\u540d\u547d\u660e\u76df\u8ff7\u9298\u9cf4\u59ea\u725d\u6ec5\u514d\u68c9\u7dbf\u7dec\u9762\u9eba\u6478\u6a21\u8302\u5984\u5b5f\u6bdb\u731b\u76f2\u7db2\u8017\u8499\u5132\u6728\u9ed9\u76ee\u6762\u52ff\u9905\u5c24\u623b\u7c7e\u8cb0\u554f\u60b6\u7d0b\u9580\u5301\u4e5f\u51b6\u591c\u723a\u8036\u91ce\u5f25\u77e2\u5384\u5f79\u7d04\u85ac\u8a33\u8e8d\u9756\u67f3\u85ae\u9453\u6109\u6108\u6cb9\u7652" ], [ "9740", "\u8aed\u8f38\u552f\u4f51\u512a\u52c7\u53cb\u5ba5\u5e7d\u60a0\u6182\u63d6\u6709\u67da\u6e67\u6d8c\u7336\u7337\u7531\u7950\u88d5\u8a98\u904a\u9091\u90f5\u96c4\u878d\u5915\u4e88\u4f59\u4e0e\u8a89\u8f3f\u9810\u50ad\u5e7c\u5996\u5bb9\u5eb8\u63da\u63fa\u64c1\u66dc\u694a\u69d8\u6d0b\u6eb6\u7194\u7528\u7aaf\u7f8a\u8000\u8449\u84c9\u8981\u8b21\u8e0a\u9065\u967d\u990a\u617e\u6291\u6b32" ], [ "9780", "\u6c83\u6d74\u7fcc\u7ffc\u6dc0\u7f85\u87ba\u88f8\u6765\u83b1\u983c\u96f7\u6d1b\u7d61\u843d\u916a\u4e71\u5375\u5d50\u6b04\u6feb\u85cd\u862d\u89a7\u5229\u540f\u5c65\u674e\u68a8\u7406\u7483\u75e2\u88cf\u88e1\u91cc\u96e2\u9678\u5f8b\u7387\u7acb\u844e\u63a0\u7565\u5289\u6d41\u6e9c\u7409\u7559\u786b\u7c92\u9686\u7adc\u9f8d\u4fb6\u616e\u65c5\u865c\u4e86\u4eae\u50da\u4e21\u51cc\u5bee\u6599\u6881\u6dbc\u731f\u7642\u77ad\u7a1c\u7ce7\u826f\u8ad2\u907c\u91cf\u9675\u9818\u529b\u7dd1\u502b\u5398\u6797\u6dcb\u71d0\u7433\u81e8\u8f2a\u96a3\u9c57\u9e9f\u7460\u5841\u6d99\u7d2f\u985e\u4ee4\u4f36\u4f8b\u51b7\u52b1\u5dba\u601c\u73b2\u793c\u82d3\u9234\u96b7\u96f6\u970a\u9e97\u9f62\u66a6\u6b74\u5217\u52a3\u70c8\u88c2\u5ec9\u604b\u6190\u6f23\u7149\u7c3e\u7df4\u806f" ], [ "9840", "\u84ee\u9023\u932c\u5442\u9b6f\u6ad3\u7089\u8cc2\u8def\u9732\u52b4\u5a41\u5eca\u5f04\u6717\u697c\u6994\u6d6a\u6f0f\u7262\u72fc\u7bed\u8001\u807e\u874b\u90ce\u516d\u9e93\u7984\u808b\u9332\u8ad6\u502d\u548c\u8a71\u6b6a\u8cc4\u8107\u60d1\u67a0\u9df2\u4e99\u4e98\u9c10\u8a6b\u85c1\u8568\u6900\u6e7e\u7897\u8155" ], [ "989f", "\u5f0c\u4e10\u4e15\u4e2a\u4e31\u4e36\u4e3c\u4e3f\u4e42\u4e56\u4e58\u4e82\u4e85\u8c6b\u4e8a\u8212\u5f0d\u4e8e\u4e9e\u4e9f\u4ea0\u4ea2\u4eb0\u4eb3\u4eb6\u4ece\u4ecd\u4ec4\u4ec6\u4ec2\u4ed7\u4ede\u4eed\u4edf\u4ef7\u4f09\u4f5a\u4f30\u4f5b\u4f5d\u4f57\u4f47\u4f76\u4f88\u4f8f\u4f98\u4f7b\u4f69\u4f70\u4f91\u4f6f\u4f86\u4f96\u5118\u4fd4\u4fdf\u4fce\u4fd8\u4fdb\u4fd1\u4fda\u4fd0\u4fe4\u4fe5\u501a\u5028\u5014\u502a\u5025\u5005\u4f1c\u4ff6\u5021\u5029\u502c\u4ffe\u4fef\u5011\u5006\u5043\u5047\u6703\u5055\u5050\u5048\u505a\u5056\u506c\u5078\u5080\u509a\u5085\u50b4\u50b2" ], [ "9940", "\u50c9\u50ca\u50b3\u50c2\u50d6\u50de\u50e5\u50ed\u50e3\u50ee\u50f9\u50f5\u5109\u5101\u5102\u5116\u5115\u5114\u511a\u5121\u513a\u5137\u513c\u513b\u513f\u5140\u5152\u514c\u5154\u5162\u7af8\u5169\u516a\u516e\u5180\u5182\u56d8\u518c\u5189\u518f\u5191\u5193\u5195\u5196\u51a4\u51a6\u51a2\u51a9\u51aa\u51ab\u51b3\u51b1\u51b2\u51b0\u51b5\u51bd\u51c5\u51c9\u51db\u51e0\u8655\u51e9\u51ed" ], [ "9980", "\u51f0\u51f5\u51fe\u5204\u520b\u5214\u520e\u5227\u522a\u522e\u5233\u5239\u524f\u5244\u524b\u524c\u525e\u5254\u526a\u5274\u5269\u5273\u527f\u527d\u528d\u5294\u5292\u5271\u5288\u5291\u8fa8\u8fa7\u52ac\u52ad\u52bc\u52b5\u52c1\u52cd\u52d7\u52de\u52e3\u52e6\u98ed\u52e0\u52f3\u52f5\u52f8\u52f9\u5306\u5308\u7538\u530d\u5310\u530f\u5315\u531a\u5323\u532f\u5331\u5333\u5338\u5340\u5346\u5345\u4e17\u5349\u534d\u51d6\u535e\u5369\u536e\u5918\u537b\u5377\u5382\u5396\u53a0\u53a6\u53a5\u53ae\u53b0\u53b6\u53c3\u7c12\u96d9\u53df\u66fc\u71ee\u53ee\u53e8\u53ed\u53fa\u5401\u543d\u5440\u542c\u542d\u543c\u542e\u5436\u5429\u541d\u544e\u548f\u5475\u548e\u545f\u5471\u5477\u5470\u5492\u547b\u5480\u5476\u5484\u5490\u5486\u54c7\u54a2\u54b8\u54a5\u54ac\u54c4\u54c8\u54a8" ], [ "9a40", "\u54ab\u54c2\u54a4\u54be\u54bc\u54d8\u54e5\u54e6\u550f\u5514\u54fd\u54ee\u54ed\u54fa\u54e2\u5539\u5540\u5563\u554c\u552e\u555c\u5545\u5556\u5557\u5538\u5533\u555d\u5599\u5580\u54af\u558a\u559f\u557b\u557e\u5598\u559e\u55ae\u557c\u5583\u55a9\u5587\u55a8\u55da\u55c5\u55df\u55c4\u55dc\u55e4\u55d4\u5614\u55f7\u5616\u55fe\u55fd\u561b\u55f9\u564e\u5650\u71df\u5634\u5636\u5632\u5638" ], [ "9a80", "\u566b\u5664\u562f\u566c\u566a\u5686\u5680\u568a\u56a0\u5694\u568f\u56a5\u56ae\u56b6\u56b4\u56c2\u56bc\u56c1\u56c3\u56c0\u56c8\u56ce\u56d1\u56d3\u56d7\u56ee\u56f9\u5700\u56ff\u5704\u5709\u5708\u570b\u570d\u5713\u5718\u5716\u55c7\u571c\u5726\u5737\u5738\u574e\u573b\u5740\u574f\u5769\u57c0\u5788\u5761\u577f\u5789\u5793\u57a0\u57b3\u57a4\u57aa\u57b0\u57c3\u57c6\u57d4\u57d2\u57d3\u580a\u57d6\u57e3\u580b\u5819\u581d\u5872\u5821\u5862\u584b\u5870\u6bc0\u5852\u583d\u5879\u5885\u58b9\u589f\u58ab\u58ba\u58de\u58bb\u58b8\u58ae\u58c5\u58d3\u58d1\u58d7\u58d9\u58d8\u58e5\u58dc\u58e4\u58df\u58ef\u58fa\u58f9\u58fb\u58fc\u58fd\u5902\u590a\u5910\u591b\u68a6\u5925\u592c\u592d\u5932\u5938\u593e\u7ad2\u5955\u5950\u594e\u595a\u5958\u5962\u5960\u5967\u596c\u5969" ], [ "9b40", "\u5978\u5981\u599d\u4f5e\u4fab\u59a3\u59b2\u59c6\u59e8\u59dc\u598d\u59d9\u59da\u5a25\u5a1f\u5a11\u5a1c\u5a09\u5a1a\u5a40\u5a6c\u5a49\u5a35\u5a36\u5a62\u5a6a\u5a9a\u5abc\u5abe\u5acb\u5ac2\u5abd\u5ae3\u5ad7\u5ae6\u5ae9\u5ad6\u5afa\u5afb\u5b0c\u5b0b\u5b16\u5b32\u5ad0\u5b2a\u5b36\u5b3e\u5b43\u5b45\u5b40\u5b51\u5b55\u5b5a\u5b5b\u5b65\u5b69\u5b70\u5b73\u5b75\u5b78\u6588\u5b7a\u5b80" ], [ "9b80", "\u5b83\u5ba6\u5bb8\u5bc3\u5bc7\u5bc9\u5bd4\u5bd0\u5be4\u5be6\u5be2\u5bde\u5be5\u5beb\u5bf0\u5bf6\u5bf3\u5c05\u5c07\u5c08\u5c0d\u5c13\u5c20\u5c22\u5c28\u5c38\u5c39\u5c41\u5c46\u5c4e\u5c53\u5c50\u5c4f\u5b71\u5c6c\u5c6e\u4e62\u5c76\u5c79\u5c8c\u5c91\u5c94\u599b\u5cab\u5cbb\u5cb6\u5cbc\u5cb7\u5cc5\u5cbe\u5cc7\u5cd9\u5ce9\u5cfd\u5cfa\u5ced\u5d8c\u5cea\u5d0b\u5d15\u5d17\u5d5c\u5d1f\u5d1b\u5d11\u5d14\u5d22\u5d1a\u5d19\u5d18\u5d4c\u5d52\u5d4e\u5d4b\u5d6c\u5d73\u5d76\u5d87\u5d84\u5d82\u5da2\u5d9d\u5dac\u5dae\u5dbd\u5d90\u5db7\u5dbc\u5dc9\u5dcd\u5dd3\u5dd2\u5dd6\u5ddb\u5deb\u5df2\u5df5\u5e0b\u5e1a\u5e19\u5e11\u5e1b\u5e36\u5e37\u5e44\u5e43\u5e40\u5e4e\u5e57\u5e54\u5e5f\u5e62\u5e64\u5e47\u5e75\u5e76\u5e7a\u9ebc\u5e7f\u5ea0\u5ec1\u5ec2\u5ec8\u5ed0\u5ecf" ], [ "9c40", "\u5ed6\u5ee3\u5edd\u5eda\u5edb\u5ee2\u5ee1\u5ee8\u5ee9\u5eec\u5ef1\u5ef3\u5ef0\u5ef4\u5ef8\u5efe\u5f03\u5f09\u5f5d\u5f5c\u5f0b\u5f11\u5f16\u5f29\u5f2d\u5f38\u5f41\u5f48\u5f4c\u5f4e\u5f2f\u5f51\u5f56\u5f57\u5f59\u5f61\u5f6d\u5f73\u5f77\u5f83\u5f82\u5f7f\u5f8a\u5f88\u5f91\u5f87\u5f9e\u5f99\u5f98\u5fa0\u5fa8\u5fad\u5fbc\u5fd6\u5ffb\u5fe4\u5ff8\u5ff1\u5fdd\u60b3\u5fff\u6021\u6060" ], [ "9c80", "\u6019\u6010\u6029\u600e\u6031\u601b\u6015\u602b\u6026\u600f\u603a\u605a\u6041\u606a\u6077\u605f\u604a\u6046\u604d\u6063\u6043\u6064\u6042\u606c\u606b\u6059\u6081\u608d\u60e7\u6083\u609a\u6084\u609b\u6096\u6097\u6092\u60a7\u608b\u60e1\u60b8\u60e0\u60d3\u60b4\u5ff0\u60bd\u60c6\u60b5\u60d8\u614d\u6115\u6106\u60f6\u60f7\u6100\u60f4\u60fa\u6103\u6121\u60fb\u60f1\u610d\u610e\u6147\u613e\u6128\u6127\u614a\u613f\u613c\u612c\u6134\u613d\u6142\u6144\u6173\u6177\u6158\u6159\u615a\u616b\u6174\u616f\u6165\u6171\u615f\u615d\u6153\u6175\u6199\u6196\u6187\u61ac\u6194\u619a\u618a\u6191\u61ab\u61ae\u61cc\u61ca\u61c9\u61f7\u61c8\u61c3\u61c6\u61ba\u61cb\u7f79\u61cd\u61e6\u61e3\u61f6\u61fa\u61f4\u61ff\u61fd\u61fc\u61fe\u6200\u6208\u6209\u620d\u620c\u6214\u621b" ], [ "9d40", "\u621e\u6221\u622a\u622e\u6230\u6232\u6233\u6241\u624e\u625e\u6263\u625b\u6260\u6268\u627c\u6282\u6289\u627e\u6292\u6293\u6296\u62d4\u6283\u6294\u62d7\u62d1\u62bb\u62cf\u62ff\u62c6\u64d4\u62c8\u62dc\u62cc\u62ca\u62c2\u62c7\u629b\u62c9\u630c\u62ee\u62f1\u6327\u6302\u6308\u62ef\u62f5\u6350\u633e\u634d\u641c\u634f\u6396\u638e\u6380\u63ab\u6376\u63a3\u638f\u6389\u639f\u63b5\u636b" ], [ "9d80", "\u6369\u63be\u63e9\u63c0\u63c6\u63e3\u63c9\u63d2\u63f6\u63c4\u6416\u6434\u6406\u6413\u6426\u6436\u651d\u6417\u6428\u640f\u6467\u646f\u6476\u644e\u652a\u6495\u6493\u64a5\u64a9\u6488\u64bc\u64da\u64d2\u64c5\u64c7\u64bb\u64d8\u64c2\u64f1\u64e7\u8209\u64e0\u64e1\u62ac\u64e3\u64ef\u652c\u64f6\u64f4\u64f2\u64fa\u6500\u64fd\u6518\u651c\u6505\u6524\u6523\u652b\u6534\u6535\u6537\u6536\u6538\u754b\u6548\u6556\u6555\u654d\u6558\u655e\u655d\u6572\u6578\u6582\u6583\u8b8a\u659b\u659f\u65ab\u65b7\u65c3\u65c6\u65c1\u65c4\u65cc\u65d2\u65db\u65d9\u65e0\u65e1\u65f1\u6772\u660a\u6603\u65fb\u6773\u6635\u6636\u6634\u661c\u664f\u6644\u6649\u6641\u665e\u665d\u6664\u6667\u6668\u665f\u6662\u6670\u6683\u6688\u668e\u6689\u6684\u6698\u669d\u66c1\u66b9\u66c9\u66be\u66bc" ], [ "9e40", "\u66c4\u66b8\u66d6\u66da\u66e0\u663f\u66e6\u66e9\u66f0\u66f5\u66f7\u670f\u6716\u671e\u6726\u6727\u9738\u672e\u673f\u6736\u6741\u6738\u6737\u6746\u675e\u6760\u6759\u6763\u6764\u6789\u6770\u67a9\u677c\u676a\u678c\u678b\u67a6\u67a1\u6785\u67b7\u67ef\u67b4\u67ec\u67b3\u67e9\u67b8\u67e4\u67de\u67dd\u67e2\u67ee\u67b9\u67ce\u67c6\u67e7\u6a9c\u681e\u6846\u6829\u6840\u684d\u6832\u684e" ], [ "9e80", "\u68b3\u682b\u6859\u6863\u6877\u687f\u689f\u688f\u68ad\u6894\u689d\u689b\u6883\u6aae\u68b9\u6874\u68b5\u68a0\u68ba\u690f\u688d\u687e\u6901\u68ca\u6908\u68d8\u6922\u6926\u68e1\u690c\u68cd\u68d4\u68e7\u68d5\u6936\u6912\u6904\u68d7\u68e3\u6925\u68f9\u68e0\u68ef\u6928\u692a\u691a\u6923\u6921\u68c6\u6979\u6977\u695c\u6978\u696b\u6954\u697e\u696e\u6939\u6974\u693d\u6959\u6930\u6961\u695e\u695d\u6981\u696a\u69b2\u69ae\u69d0\u69bf\u69c1\u69d3\u69be\u69ce\u5be8\u69ca\u69dd\u69bb\u69c3\u69a7\u6a2e\u6991\u69a0\u699c\u6995\u69b4\u69de\u69e8\u6a02\u6a1b\u69ff\u6b0a\u69f9\u69f2\u69e7\u6a05\u69b1\u6a1e\u69ed\u6a14\u69eb\u6a0a\u6a12\u6ac1\u6a23\u6a13\u6a44\u6a0c\u6a72\u6a36\u6a78\u6a47\u6a62\u6a59\u6a66\u6a48\u6a38\u6a22\u6a90\u6a8d\u6aa0\u6a84\u6aa2\u6aa3" ], [ "9f40", "\u6a97\u8617\u6abb\u6ac3\u6ac2\u6ab8\u6ab3\u6aac\u6ade\u6ad1\u6adf\u6aaa\u6ada\u6aea\u6afb\u6b05\u8616\u6afa\u6b12\u6b16\u9b31\u6b1f\u6b38\u6b37\u76dc\u6b39\u98ee\u6b47\u6b43\u6b49\u6b50\u6b59\u6b54\u6b5b\u6b5f\u6b61\u6b78\u6b79\u6b7f\u6b80\u6b84\u6b83\u6b8d\u6b98\u6b95\u6b9e\u6ba4\u6baa\u6bab\u6baf\u6bb2\u6bb1\u6bb3\u6bb7\u6bbc\u6bc6\u6bcb\u6bd3\u6bdf\u6bec\u6beb\u6bf3\u6bef" ], [ "9f80", "\u9ebe\u6c08\u6c13\u6c14\u6c1b\u6c24\u6c23\u6c5e\u6c55\u6c62\u6c6a\u6c82\u6c8d\u6c9a\u6c81\u6c9b\u6c7e\u6c68\u6c73\u6c92\u6c90\u6cc4\u6cf1\u6cd3\u6cbd\u6cd7\u6cc5\u6cdd\u6cae\u6cb1\u6cbe\u6cba\u6cdb\u6cef\u6cd9\u6cea\u6d1f\u884d\u6d36\u6d2b\u6d3d\u6d38\u6d19\u6d35\u6d33\u6d12\u6d0c\u6d63\u6d93\u6d64\u6d5a\u6d79\u6d59\u6d8e\u6d95\u6fe4\u6d85\u6df9\u6e15\u6e0a\u6db5\u6dc7\u6de6\u6db8\u6dc6\u6dec\u6dde\u6dcc\u6de8\u6dd2\u6dc5\u6dfa\u6dd9\u6de4\u6dd5\u6dea\u6dee\u6e2d\u6e6e\u6e2e\u6e19\u6e72\u6e5f\u6e3e\u6e23\u6e6b\u6e2b\u6e76\u6e4d\u6e1f\u6e43\u6e3a\u6e4e\u6e24\u6eff\u6e1d\u6e38\u6e82\u6eaa\u6e98\u6ec9\u6eb7\u6ed3\u6ebd\u6eaf\u6ec4\u6eb2\u6ed4\u6ed5\u6e8f\u6ea5\u6ec2\u6e9f\u6f41\u6f11\u704c\u6eec\u6ef8\u6efe\u6f3f\u6ef2\u6f31\u6eef\u6f32\u6ecc" ], [ "e040", "\u6f3e\u6f13\u6ef7\u6f86\u6f7a\u6f78\u6f81\u6f80\u6f6f\u6f5b\u6ff3\u6f6d\u6f82\u6f7c\u6f58\u6f8e\u6f91\u6fc2\u6f66\u6fb3\u6fa3\u6fa1\u6fa4\u6fb9\u6fc6\u6faa\u6fdf\u6fd5\u6fec\u6fd4\u6fd8\u6ff1\u6fee\u6fdb\u7009\u700b\u6ffa\u7011\u7001\u700f\u6ffe\u701b\u701a\u6f74\u701d\u7018\u701f\u7030\u703e\u7032\u7051\u7063\u7099\u7092\u70af\u70f1\u70ac\u70b8\u70b3\u70ae\u70df\u70cb\u70dd" ], [ "e080", "\u70d9\u7109\u70fd\u711c\u7119\u7165\u7155\u7188\u7166\u7162\u714c\u7156\u716c\u718f\u71fb\u7184\u7195\u71a8\u71ac\u71d7\u71b9\u71be\u71d2\u71c9\u71d4\u71ce\u71e0\u71ec\u71e7\u71f5\u71fc\u71f9\u71ff\u720d\u7210\u721b\u7228\u722d\u722c\u7230\u7232\u723b\u723c\u723f\u7240\u7246\u724b\u7258\u7274\u727e\u7282\u7281\u7287\u7292\u7296\u72a2\u72a7\u72b9\u72b2\u72c3\u72c6\u72c4\u72ce\u72d2\u72e2\u72e0\u72e1\u72f9\u72f7\u500f\u7317\u730a\u731c\u7316\u731d\u7334\u732f\u7329\u7325\u733e\u734e\u734f\u9ed8\u7357\u736a\u7368\u7370\u7378\u7375\u737b\u737a\u73c8\u73b3\u73ce\u73bb\u73c0\u73e5\u73ee\u73de\u74a2\u7405\u746f\u7425\u73f8\u7432\u743a\u7455\u743f\u745f\u7459\u7441\u745c\u7469\u7470\u7463\u746a\u7476\u747e\u748b\u749e\u74a7\u74ca\u74cf\u74d4\u73f1" ], [ "e140", "\u74e0\u74e3\u74e7\u74e9\u74ee\u74f2\u74f0\u74f1\u74f8\u74f7\u7504\u7503\u7505\u750c\u750e\u750d\u7515\u7513\u751e\u7526\u752c\u753c\u7544\u754d\u754a\u7549\u755b\u7546\u755a\u7569\u7564\u7567\u756b\u756d\u7578\u7576\u7586\u7587\u7574\u758a\u7589\u7582\u7594\u759a\u759d\u75a5\u75a3\u75c2\u75b3\u75c3\u75b5\u75bd\u75b8\u75bc\u75b1\u75cd\u75ca\u75d2\u75d9\u75e3\u75de\u75fe\u75ff" ], [ "e180", "\u75fc\u7601\u75f0\u75fa\u75f2\u75f3\u760b\u760d\u7609\u761f\u7627\u7620\u7621\u7622\u7624\u7634\u7630\u763b\u7647\u7648\u7646\u765c\u7658\u7661\u7662\u7668\u7669\u766a\u7667\u766c\u7670\u7672\u7676\u7678\u767c\u7680\u7683\u7688\u768b\u768e\u7696\u7693\u7699\u769a\u76b0\u76b4\u76b8\u76b9\u76ba\u76c2\u76cd\u76d6\u76d2\u76de\u76e1\u76e5\u76e7\u76ea\u862f\u76fb\u7708\u7707\u7704\u7729\u7724\u771e\u7725\u7726\u771b\u7737\u7738\u7747\u775a\u7768\u776b\u775b\u7765\u777f\u777e\u7779\u778e\u778b\u7791\u77a0\u779e\u77b0\u77b6\u77b9\u77bf\u77bc\u77bd\u77bb\u77c7\u77cd\u77d7\u77da\u77dc\u77e3\u77ee\u77fc\u780c\u7812\u7926\u7820\u792a\u7845\u788e\u7874\u7886\u787c\u789a\u788c\u78a3\u78b5\u78aa\u78af\u78d1\u78c6\u78cb\u78d4\u78be\u78bc\u78c5\u78ca\u78ec" ], [ "e240", "\u78e7\u78da\u78fd\u78f4\u7907\u7912\u7911\u7919\u792c\u792b\u7940\u7960\u7957\u795f\u795a\u7955\u7953\u797a\u797f\u798a\u799d\u79a7\u9f4b\u79aa\u79ae\u79b3\u79b9\u79ba\u79c9\u79d5\u79e7\u79ec\u79e1\u79e3\u7a08\u7a0d\u7a18\u7a19\u7a20\u7a1f\u7980\u7a31\u7a3b\u7a3e\u7a37\u7a43\u7a57\u7a49\u7a61\u7a62\u7a69\u9f9d\u7a70\u7a79\u7a7d\u7a88\u7a97\u7a95\u7a98\u7a96\u7aa9\u7ac8\u7ab0" ], [ "e280", "\u7ab6\u7ac5\u7ac4\u7abf\u9083\u7ac7\u7aca\u7acd\u7acf\u7ad5\u7ad3\u7ad9\u7ada\u7add\u7ae1\u7ae2\u7ae6\u7aed\u7af0\u7b02\u7b0f\u7b0a\u7b06\u7b33\u7b18\u7b19\u7b1e\u7b35\u7b28\u7b36\u7b50\u7b7a\u7b04\u7b4d\u7b0b\u7b4c\u7b45\u7b75\u7b65\u7b74\u7b67\u7b70\u7b71\u7b6c\u7b6e\u7b9d\u7b98\u7b9f\u7b8d\u7b9c\u7b9a\u7b8b\u7b92\u7b8f\u7b5d\u7b99\u7bcb\u7bc1\u7bcc\u7bcf\u7bb4\u7bc6\u7bdd\u7be9\u7c11\u7c14\u7be6\u7be5\u7c60\u7c00\u7c07\u7c13\u7bf3\u7bf7\u7c17\u7c0d\u7bf6\u7c23\u7c27\u7c2a\u7c1f\u7c37\u7c2b\u7c3d\u7c4c\u7c43\u7c54\u7c4f\u7c40\u7c50\u7c58\u7c5f\u7c64\u7c56\u7c65\u7c6c\u7c75\u7c83\u7c90\u7ca4\u7cad\u7ca2\u7cab\u7ca1\u7ca8\u7cb3\u7cb2\u7cb1\u7cae\u7cb9\u7cbd\u7cc0\u7cc5\u7cc2\u7cd8\u7cd2\u7cdc\u7ce2\u9b3b\u7cef\u7cf2\u7cf4\u7cf6\u7cfa\u7d06" ], [ "e340", "\u7d02\u7d1c\u7d15\u7d0a\u7d45\u7d4b\u7d2e\u7d32\u7d3f\u7d35\u7d46\u7d73\u7d56\u7d4e\u7d72\u7d68\u7d6e\u7d4f\u7d63\u7d93\u7d89\u7d5b\u7d8f\u7d7d\u7d9b\u7dba\u7dae\u7da3\u7db5\u7dc7\u7dbd\u7dab\u7e3d\u7da2\u7daf\u7ddc\u7db8\u7d9f\u7db0\u7dd8\u7ddd\u7de4\u7dde\u7dfb\u7df2\u7de1\u7e05\u7e0a\u7e23\u7e21\u7e12\u7e31\u7e1f\u7e09\u7e0b\u7e22\u7e46\u7e66\u7e3b\u7e35\u7e39\u7e43\u7e37" ], [ "e380", "\u7e32\u7e3a\u7e67\u7e5d\u7e56\u7e5e\u7e59\u7e5a\u7e79\u7e6a\u7e69\u7e7c\u7e7b\u7e83\u7dd5\u7e7d\u8fae\u7e7f\u7e88\u7e89\u7e8c\u7e92\u7e90\u7e93\u7e94\u7e96\u7e8e\u7e9b\u7e9c\u7f38\u7f3a\u7f45\u7f4c\u7f4d\u7f4e\u7f50\u7f51\u7f55\u7f54\u7f58\u7f5f\u7f60\u7f68\u7f69\u7f67\u7f78\u7f82\u7f86\u7f83\u7f88\u7f87\u7f8c\u7f94\u7f9e\u7f9d\u7f9a\u7fa3\u7faf\u7fb2\u7fb9\u7fae\u7fb6\u7fb8\u8b71\u7fc5\u7fc6\u7fca\u7fd5\u7fd4\u7fe1\u7fe6\u7fe9\u7ff3\u7ff9\u98dc\u8006\u8004\u800b\u8012\u8018\u8019\u801c\u8021\u8028\u803f\u803b\u804a\u8046\u8052\u8058\u805a\u805f\u8062\u8068\u8073\u8072\u8070\u8076\u8079\u807d\u807f\u8084\u8086\u8085\u809b\u8093\u809a\u80ad\u5190\u80ac\u80db\u80e5\u80d9\u80dd\u80c4\u80da\u80d6\u8109\u80ef\u80f1\u811b\u8129\u8123\u812f\u814b" ], [ "e440", "\u968b\u8146\u813e\u8153\u8151\u80fc\u8171\u816e\u8165\u8166\u8174\u8183\u8188\u818a\u8180\u8182\u81a0\u8195\u81a4\u81a3\u815f\u8193\u81a9\u81b0\u81b5\u81be\u81b8\u81bd\u81c0\u81c2\u81ba\u81c9\u81cd\u81d1\u81d9\u81d8\u81c8\u81da\u81df\u81e0\u81e7\u81fa\u81fb\u81fe\u8201\u8202\u8205\u8207\u820a\u820d\u8210\u8216\u8229\u822b\u8238\u8233\u8240\u8259\u8258\u825d\u825a\u825f\u8264" ], [ "e480", "\u8262\u8268\u826a\u826b\u822e\u8271\u8277\u8278\u827e\u828d\u8292\u82ab\u829f\u82bb\u82ac\u82e1\u82e3\u82df\u82d2\u82f4\u82f3\u82fa\u8393\u8303\u82fb\u82f9\u82de\u8306\u82dc\u8309\u82d9\u8335\u8334\u8316\u8332\u8331\u8340\u8339\u8350\u8345\u832f\u832b\u8317\u8318\u8385\u839a\u83aa\u839f\u83a2\u8396\u8323\u838e\u8387\u838a\u837c\u83b5\u8373\u8375\u83a0\u8389\u83a8\u83f4\u8413\u83eb\u83ce\u83fd\u8403\u83d8\u840b\u83c1\u83f7\u8407\u83e0\u83f2\u840d\u8422\u8420\u83bd\u8438\u8506\u83fb\u846d\u842a\u843c\u855a\u8484\u8477\u846b\u84ad\u846e\u8482\u8469\u8446\u842c\u846f\u8479\u8435\u84ca\u8462\u84b9\u84bf\u849f\u84d9\u84cd\u84bb\u84da\u84d0\u84c1\u84c6\u84d6\u84a1\u8521\u84ff\u84f4\u8517\u8518\u852c\u851f\u8515\u8514\u84fc\u8540\u8563\u8558\u8548" ], [ "e540", "\u8541\u8602\u854b\u8555\u8580\u85a4\u8588\u8591\u858a\u85a8\u856d\u8594\u859b\u85ea\u8587\u859c\u8577\u857e\u8590\u85c9\u85ba\u85cf\u85b9\u85d0\u85d5\u85dd\u85e5\u85dc\u85f9\u860a\u8613\u860b\u85fe\u85fa\u8606\u8622\u861a\u8630\u863f\u864d\u4e55\u8654\u865f\u8667\u8671\u8693\u86a3\u86a9\u86aa\u868b\u868c\u86b6\u86af\u86c4\u86c6\u86b0\u86c9\u8823\u86ab\u86d4\u86de\u86e9\u86ec" ], [ "e580", "\u86df\u86db\u86ef\u8712\u8706\u8708\u8700\u8703\u86fb\u8711\u8709\u870d\u86f9\u870a\u8734\u873f\u8737\u873b\u8725\u8729\u871a\u8760\u875f\u8778\u874c\u874e\u8774\u8757\u8768\u876e\u8759\u8753\u8763\u876a\u8805\u87a2\u879f\u8782\u87af\u87cb\u87bd\u87c0\u87d0\u96d6\u87ab\u87c4\u87b3\u87c7\u87c6\u87bb\u87ef\u87f2\u87e0\u880f\u880d\u87fe\u87f6\u87f7\u880e\u87d2\u8811\u8816\u8815\u8822\u8821\u8831\u8836\u8839\u8827\u883b\u8844\u8842\u8852\u8859\u885e\u8862\u886b\u8881\u887e\u889e\u8875\u887d\u88b5\u8872\u8882\u8897\u8892\u88ae\u8899\u88a2\u888d\u88a4\u88b0\u88bf\u88b1\u88c3\u88c4\u88d4\u88d8\u88d9\u88dd\u88f9\u8902\u88fc\u88f4\u88e8\u88f2\u8904\u890c\u890a\u8913\u8943\u891e\u8925\u892a\u892b\u8941\u8944\u893b\u8936\u8938\u894c\u891d\u8960\u895e" ], [ "e640", "\u8966\u8964\u896d\u896a\u896f\u8974\u8977\u897e\u8983\u8988\u898a\u8993\u8998\u89a1\u89a9\u89a6\u89ac\u89af\u89b2\u89ba\u89bd\u89bf\u89c0\u89da\u89dc\u89dd\u89e7\u89f4\u89f8\u8a03\u8a16\u8a10\u8a0c\u8a1b\u8a1d\u8a25\u8a36\u8a41\u8a5b\u8a52\u8a46\u8a48\u8a7c\u8a6d\u8a6c\u8a62\u8a85\u8a82\u8a84\u8aa8\u8aa1\u8a91\u8aa5\u8aa6\u8a9a\u8aa3\u8ac4\u8acd\u8ac2\u8ada\u8aeb\u8af3\u8ae7" ], [ "e680", "\u8ae4\u8af1\u8b14\u8ae0\u8ae2\u8af7\u8ade\u8adb\u8b0c\u8b07\u8b1a\u8ae1\u8b16\u8b10\u8b17\u8b20\u8b33\u97ab\u8b26\u8b2b\u8b3e\u8b28\u8b41\u8b4c\u8b4f\u8b4e\u8b49\u8b56\u8b5b\u8b5a\u8b6b\u8b5f\u8b6c\u8b6f\u8b74\u8b7d\u8b80\u8b8c\u8b8e\u8b92\u8b93\u8b96\u8b99\u8b9a\u8c3a\u8c41\u8c3f\u8c48\u8c4c\u8c4e\u8c50\u8c55\u8c62\u8c6c\u8c78\u8c7a\u8c82\u8c89\u8c85\u8c8a\u8c8d\u8c8e\u8c94\u8c7c\u8c98\u621d\u8cad\u8caa\u8cbd\u8cb2\u8cb3\u8cae\u8cb6\u8cc8\u8cc1\u8ce4\u8ce3\u8cda\u8cfd\u8cfa\u8cfb\u8d04\u8d05\u8d0a\u8d07\u8d0f\u8d0d\u8d10\u9f4e\u8d13\u8ccd\u8d14\u8d16\u8d67\u8d6d\u8d71\u8d73\u8d81\u8d99\u8dc2\u8dbe\u8dba\u8dcf\u8dda\u8dd6\u8dcc\u8ddb\u8dcb\u8dea\u8deb\u8ddf\u8de3\u8dfc\u8e08\u8e09\u8dff\u8e1d\u8e1e\u8e10\u8e1f\u8e42\u8e35\u8e30\u8e34\u8e4a" ], [ "e740", "\u8e47\u8e49\u8e4c\u8e50\u8e48\u8e59\u8e64\u8e60\u8e2a\u8e63\u8e55\u8e76\u8e72\u8e7c\u8e81\u8e87\u8e85\u8e84\u8e8b\u8e8a\u8e93\u8e91\u8e94\u8e99\u8eaa\u8ea1\u8eac\u8eb0\u8ec6\u8eb1\u8ebe\u8ec5\u8ec8\u8ecb\u8edb\u8ee3\u8efc\u8efb\u8eeb\u8efe\u8f0a\u8f05\u8f15\u8f12\u8f19\u8f13\u8f1c\u8f1f\u8f1b\u8f0c\u8f26\u8f33\u8f3b\u8f39\u8f45\u8f42\u8f3e\u8f4c\u8f49\u8f46\u8f4e\u8f57\u8f5c" ], [ "e780", "\u8f62\u8f63\u8f64\u8f9c\u8f9f\u8fa3\u8fad\u8faf\u8fb7\u8fda\u8fe5\u8fe2\u8fea\u8fef\u9087\u8ff4\u9005\u8ff9\u8ffa\u9011\u9015\u9021\u900d\u901e\u9016\u900b\u9027\u9036\u9035\u9039\u8ff8\u904f\u9050\u9051\u9052\u900e\u9049\u903e\u9056\u9058\u905e\u9068\u906f\u9076\u96a8\u9072\u9082\u907d\u9081\u9080\u908a\u9089\u908f\u90a8\u90af\u90b1\u90b5\u90e2\u90e4\u6248\u90db\u9102\u9112\u9119\u9132\u9130\u914a\u9156\u9158\u9163\u9165\u9169\u9173\u9172\u918b\u9189\u9182\u91a2\u91ab\u91af\u91aa\u91b5\u91b4\u91ba\u91c0\u91c1\u91c9\u91cb\u91d0\u91d6\u91df\u91e1\u91db\u91fc\u91f5\u91f6\u921e\u91ff\u9214\u922c\u9215\u9211\u925e\u9257\u9245\u9249\u9264\u9248\u9295\u923f\u924b\u9250\u929c\u9296\u9293\u929b\u925a\u92cf\u92b9\u92b7\u92e9\u930f\u92fa\u9344\u932e" ], [ "e840", "\u9319\u9322\u931a\u9323\u933a\u9335\u933b\u935c\u9360\u937c\u936e\u9356\u93b0\u93ac\u93ad\u9394\u93b9\u93d6\u93d7\u93e8\u93e5\u93d8\u93c3\u93dd\u93d0\u93c8\u93e4\u941a\u9414\u9413\u9403\u9407\u9410\u9436\u942b\u9435\u9421\u943a\u9441\u9452\u9444\u945b\u9460\u9462\u945e\u946a\u9229\u9470\u9475\u9477\u947d\u945a\u947c\u947e\u9481\u947f\u9582\u9587\u958a\u9594\u9596\u9598\u9599" ], [ "e880", "\u95a0\u95a8\u95a7\u95ad\u95bc\u95bb\u95b9\u95be\u95ca\u6ff6\u95c3\u95cd\u95cc\u95d5\u95d4\u95d6\u95dc\u95e1\u95e5\u95e2\u9621\u9628\u962e\u962f\u9642\u964c\u964f\u964b\u9677\u965c\u965e\u965d\u965f\u9666\u9672\u966c\u968d\u9698\u9695\u9697\u96aa\u96a7\u96b1\u96b2\u96b0\u96b4\u96b6\u96b8\u96b9\u96ce\u96cb\u96c9\u96cd\u894d\u96dc\u970d\u96d5\u96f9\u9704\u9706\u9708\u9713\u970e\u9711\u970f\u9716\u9719\u9724\u972a\u9730\u9739\u973d\u973e\u9744\u9746\u9748\u9742\u9749\u975c\u9760\u9764\u9766\u9768\u52d2\u976b\u9771\u9779\u9785\u977c\u9781\u977a\u9786\u978b\u978f\u9790\u979c\u97a8\u97a6\u97a3\u97b3\u97b4\u97c3\u97c6\u97c8\u97cb\u97dc\u97ed\u9f4f\u97f2\u7adf\u97f6\u97f5\u980f\u980c\u9838\u9824\u9821\u9837\u983d\u9846\u984f\u984b\u986b\u986f\u9870" ], [ "e940", "\u9871\u9874\u9873\u98aa\u98af\u98b1\u98b6\u98c4\u98c3\u98c6\u98e9\u98eb\u9903\u9909\u9912\u9914\u9918\u9921\u991d\u991e\u9924\u9920\u992c\u992e\u993d\u993e\u9942\u9949\u9945\u9950\u994b\u9951\u9952\u994c\u9955\u9997\u9998\u99a5\u99ad\u99ae\u99bc\u99df\u99db\u99dd\u99d8\u99d1\u99ed\u99ee\u99f1\u99f2\u99fb\u99f8\u9a01\u9a0f\u9a05\u99e2\u9a19\u9a2b\u9a37\u9a45\u9a42\u9a40\u9a43" ], [ "e980", "\u9a3e\u9a55\u9a4d\u9a5b\u9a57\u9a5f\u9a62\u9a65\u9a64\u9a69\u9a6b\u9a6a\u9aad\u9ab0\u9abc\u9ac0\u9acf\u9ad1\u9ad3\u9ad4\u9ade\u9adf\u9ae2\u9ae3\u9ae6\u9aef\u9aeb\u9aee\u9af4\u9af1\u9af7\u9afb\u9b06\u9b18\u9b1a\u9b1f\u9b22\u9b23\u9b25\u9b27\u9b28\u9b29\u9b2a\u9b2e\u9b2f\u9b32\u9b44\u9b43\u9b4f\u9b4d\u9b4e\u9b51\u9b58\u9b74\u9b93\u9b83\u9b91\u9b96\u9b97\u9b9f\u9ba0\u9ba8\u9bb4\u9bc0\u9bca\u9bb9\u9bc6\u9bcf\u9bd1\u9bd2\u9be3\u9be2\u9be4\u9bd4\u9be1\u9c3a\u9bf2\u9bf1\u9bf0\u9c15\u9c14\u9c09\u9c13\u9c0c\u9c06\u9c08\u9c12\u9c0a\u9c04\u9c2e\u9c1b\u9c25\u9c24\u9c21\u9c30\u9c47\u9c32\u9c46\u9c3e\u9c5a\u9c60\u9c67\u9c76\u9c78\u9ce7\u9cec\u9cf0\u9d09\u9d08\u9ceb\u9d03\u9d06\u9d2a\u9d26\u9daf\u9d23\u9d1f\u9d44\u9d15\u9d12\u9d41\u9d3f\u9d3e\u9d46\u9d48" ], [ "ea40", "\u9d5d\u9d5e\u9d64\u9d51\u9d50\u9d59\u9d72\u9d89\u9d87\u9dab\u9d6f\u9d7a\u9d9a\u9da4\u9da9\u9db2\u9dc4\u9dc1\u9dbb\u9db8\u9dba\u9dc6\u9dcf\u9dc2\u9dd9\u9dd3\u9df8\u9de6\u9ded\u9def\u9dfd\u9e1a\u9e1b\u9e1e\u9e75\u9e79\u9e7d\u9e81\u9e88\u9e8b\u9e8c\u9e92\u9e95\u9e91\u9e9d\u9ea5\u9ea9\u9eb8\u9eaa\u9ead\u9761\u9ecc\u9ece\u9ecf\u9ed0\u9ed4\u9edc\u9ede\u9edd\u9ee0\u9ee5\u9ee8\u9eef" ], [ "ea80", "\u9ef4\u9ef6\u9ef7\u9ef9\u9efb\u9efc\u9efd\u9f07\u9f08\u76b7\u9f15\u9f21\u9f2c\u9f3e\u9f4a\u9f52\u9f54\u9f63\u9f5f\u9f60\u9f61\u9f66\u9f67\u9f6c\u9f6a\u9f77\u9f72\u9f76\u9f95\u9f9c\u9fa0\u582f\u69c7\u9059\u7464\u51dc\u7199" ], [ "ed40", "\u7e8a\u891c\u9348\u9288\u84dc\u4fc9\u70bb\u6631\u68c8\u92f9\u66fb\u5f45\u4e28\u4ee1\u4efc\u4f00\u4f03\u4f39\u4f56\u4f92\u4f8a\u4f9a\u4f94\u4fcd\u5040\u5022\u4fff\u501e\u5046\u5070\u5042\u5094\u50f4\u50d8\u514a\u5164\u519d\u51be\u51ec\u5215\u529c\u52a6\u52c0\u52db\u5300\u5307\u5324\u5372\u5393\u53b2\u53dd\ufa0e\u549c\u548a\u54a9\u54ff\u5586\u5759\u5765\u57ac\u57c8\u57c7\ufa0f" ], [ "ed80", "\ufa10\u589e\u58b2\u590b\u5953\u595b\u595d\u5963\u59a4\u59ba\u5b56\u5bc0\u752f\u5bd8\u5bec\u5c1e\u5ca6\u5cba\u5cf5\u5d27\u5d53\ufa11\u5d42\u5d6d\u5db8\u5db9\u5dd0\u5f21\u5f34\u5f67\u5fb7\u5fde\u605d\u6085\u608a\u60de\u60d5\u6120\u60f2\u6111\u6137\u6130\u6198\u6213\u62a6\u63f5\u6460\u649d\u64ce\u654e\u6600\u6615\u663b\u6609\u662e\u661e\u6624\u6665\u6657\u6659\ufa12\u6673\u6699\u66a0\u66b2\u66bf\u66fa\u670e\uf929\u6766\u67bb\u6852\u67c0\u6801\u6844\u68cf\ufa13\u6968\ufa14\u6998\u69e2\u6a30\u6a6b\u6a46\u6a73\u6a7e\u6ae2\u6ae4\u6bd6\u6c3f\u6c5c\u6c86\u6c6f\u6cda\u6d04\u6d87\u6d6f\u6d96\u6dac\u6dcf\u6df8\u6df2\u6dfc\u6e39\u6e5c\u6e27\u6e3c\u6ebf\u6f88\u6fb5\u6ff5\u7005\u7007\u7028\u7085\u70ab\u710f\u7104\u715c\u7146\u7147\ufa15\u71c1\u71fe\u72b1" ], [ "ee40", "\u72be\u7324\ufa16\u7377\u73bd\u73c9\u73d6\u73e3\u73d2\u7407\u73f5\u7426\u742a\u7429\u742e\u7462\u7489\u749f\u7501\u756f\u7682\u769c\u769e\u769b\u76a6\ufa17\u7746\u52af\u7821\u784e\u7864\u787a\u7930\ufa18\ufa19\ufa1a\u7994\ufa1b\u799b\u7ad1\u7ae7\ufa1c\u7aeb\u7b9e\ufa1d\u7d48\u7d5c\u7db7\u7da0\u7dd6\u7e52\u7f47\u7fa1\ufa1e\u8301\u8362\u837f\u83c7\u83f6\u8448\u84b4\u8553\u8559" ], [ "ee80", "\u856b\ufa1f\u85b0\ufa20\ufa21\u8807\u88f5\u8a12\u8a37\u8a79\u8aa7\u8abe\u8adf\ufa22\u8af6\u8b53\u8b7f\u8cf0\u8cf4\u8d12\u8d76\ufa23\u8ecf\ufa24\ufa25\u9067\u90de\ufa26\u9115\u9127\u91da\u91d7\u91de\u91ed\u91ee\u91e4\u91e5\u9206\u9210\u920a\u923a\u9240\u923c\u924e\u9259\u9251\u9239\u9267\u92a7\u9277\u9278\u92e7\u92d7\u92d9\u92d0\ufa27\u92d5\u92e0\u92d3\u9325\u9321\u92fb\ufa28\u931e\u92ff\u931d\u9302\u9370\u9357\u93a4\u93c6\u93de\u93f8\u9431\u9445\u9448\u9592\uf9dc\ufa29\u969d\u96af\u9733\u973b\u9743\u974d\u974f\u9751\u9755\u9857\u9865\ufa2a\ufa2b\u9927\ufa2c\u999e\u9a4e\u9ad9\u9adc\u9b75\u9b72\u9b8f\u9bb1\u9bbb\u9c00\u9d70\u9d6b\ufa2d\u9e19\u9ed1" ], [ "eeef", "\u2170", 9, "\uffe2\uffe4\uff07\uff02" ], [ "f040", "\ue000", 62 ], [ "f080", "\ue03f", 124 ], [ "f140", "\ue0bc", 62 ], [ "f180", "\ue0fb", 124 ], [ "f240", "\ue178", 62 ], [ "f280", "\ue1b7", 124 ], [ "f340", "\ue234", 62 ], [ "f380", "\ue273", 124 ], [ "f440", "\ue2f0", 62 ], [ "f480", "\ue32f", 124 ], [ "f540", "\ue3ac", 62 ], [ "f580", "\ue3eb", 124 ], [ "f640", "\ue468", 62 ], [ "f680", "\ue4a7", 124 ], [ "f740", "\ue524", 62 ], [ "f780", "\ue563", 124 ], [ "f840", "\ue5e0", 62 ], [ "f880", "\ue61f", 124 ], [ "f940", "\ue69c" ], [ "fa40", "\u2170", 9, "\u2160", 9, "\uffe2\uffe4\uff07\uff02\u3231\u2116\u2121\u2235\u7e8a\u891c\u9348\u9288\u84dc\u4fc9\u70bb\u6631\u68c8\u92f9\u66fb\u5f45\u4e28\u4ee1\u4efc\u4f00\u4f03\u4f39\u4f56\u4f92\u4f8a\u4f9a\u4f94\u4fcd\u5040\u5022\u4fff\u501e\u5046\u5070\u5042\u5094\u50f4\u50d8\u514a" ], [ "fa80", "\u5164\u519d\u51be\u51ec\u5215\u529c\u52a6\u52c0\u52db\u5300\u5307\u5324\u5372\u5393\u53b2\u53dd\ufa0e\u549c\u548a\u54a9\u54ff\u5586\u5759\u5765\u57ac\u57c8\u57c7\ufa0f\ufa10\u589e\u58b2\u590b\u5953\u595b\u595d\u5963\u59a4\u59ba\u5b56\u5bc0\u752f\u5bd8\u5bec\u5c1e\u5ca6\u5cba\u5cf5\u5d27\u5d53\ufa11\u5d42\u5d6d\u5db8\u5db9\u5dd0\u5f21\u5f34\u5f67\u5fb7\u5fde\u605d\u6085\u608a\u60de\u60d5\u6120\u60f2\u6111\u6137\u6130\u6198\u6213\u62a6\u63f5\u6460\u649d\u64ce\u654e\u6600\u6615\u663b\u6609\u662e\u661e\u6624\u6665\u6657\u6659\ufa12\u6673\u6699\u66a0\u66b2\u66bf\u66fa\u670e\uf929\u6766\u67bb\u6852\u67c0\u6801\u6844\u68cf\ufa13\u6968\ufa14\u6998\u69e2\u6a30\u6a6b\u6a46\u6a73\u6a7e\u6ae2\u6ae4\u6bd6\u6c3f\u6c5c\u6c86\u6c6f\u6cda\u6d04\u6d87\u6d6f" ], [ "fb40", "\u6d96\u6dac\u6dcf\u6df8\u6df2\u6dfc\u6e39\u6e5c\u6e27\u6e3c\u6ebf\u6f88\u6fb5\u6ff5\u7005\u7007\u7028\u7085\u70ab\u710f\u7104\u715c\u7146\u7147\ufa15\u71c1\u71fe\u72b1\u72be\u7324\ufa16\u7377\u73bd\u73c9\u73d6\u73e3\u73d2\u7407\u73f5\u7426\u742a\u7429\u742e\u7462\u7489\u749f\u7501\u756f\u7682\u769c\u769e\u769b\u76a6\ufa17\u7746\u52af\u7821\u784e\u7864\u787a\u7930\ufa18\ufa19" ], [ "fb80", "\ufa1a\u7994\ufa1b\u799b\u7ad1\u7ae7\ufa1c\u7aeb\u7b9e\ufa1d\u7d48\u7d5c\u7db7\u7da0\u7dd6\u7e52\u7f47\u7fa1\ufa1e\u8301\u8362\u837f\u83c7\u83f6\u8448\u84b4\u8553\u8559\u856b\ufa1f\u85b0\ufa20\ufa21\u8807\u88f5\u8a12\u8a37\u8a79\u8aa7\u8abe\u8adf\ufa22\u8af6\u8b53\u8b7f\u8cf0\u8cf4\u8d12\u8d76\ufa23\u8ecf\ufa24\ufa25\u9067\u90de\ufa26\u9115\u9127\u91da\u91d7\u91de\u91ed\u91ee\u91e4\u91e5\u9206\u9210\u920a\u923a\u9240\u923c\u924e\u9259\u9251\u9239\u9267\u92a7\u9277\u9278\u92e7\u92d7\u92d9\u92d0\ufa27\u92d5\u92e0\u92d3\u9325\u9321\u92fb\ufa28\u931e\u92ff\u931d\u9302\u9370\u9357\u93a4\u93c6\u93de\u93f8\u9431\u9445\u9448\u9592\uf9dc\ufa29\u969d\u96af\u9733\u973b\u9743\u974d\u974f\u9751\u9755\u9857\u9865\ufa2a\ufa2b\u9927\ufa2c\u999e\u9a4e\u9ad9" ], [ "fc40", "\u9adc\u9b75\u9b72\u9b8f\u9bb1\u9bbb\u9c00\u9d70\u9d6b\ufa2d\u9e19\u9ed1" ] ];
    cc._RF.pop();
  }, {} ],
  sound_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4c2fdnTmSZOV6gyVeqTrAr7", "sound_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.sound_manager = void 0;
    const utils_1 = require("../common/utils");
    var sound_manager;
    (function(sound_manager) {
      sound_manager.sound_enabled = true;
      sound_manager.music_enabled = true;
      function enable_sound(enable) {
        sound_manager.sound_enabled = enable;
        utils_1.utils.setLocalStorage("Sound", enable ? "on" : "off");
      }
      sound_manager.enable_sound = enable_sound;
      function enable_music(enable) {
        let old = sound_manager.music_enabled;
        sound_manager.music_enabled = enable;
        false == old && true == sound_manager.music_enabled ? utils_1.utils.send("MusicEnabled") : true == old && false == sound_manager.music_enabled && stop_music();
        utils_1.utils.setLocalStorage("Music", enable ? "on" : "off");
      }
      sound_manager.enable_music = enable_music;
      function play_sound(path, loop, callback) {
        "resources/" == path.substring(0, 10) && (path = path.substring(10, path.length));
        let l_path = ".mp3" == path.substring(path.length - 4, path.length) ? path.substring(0, path.length - 4) : path;
        cc.resources.load(l_path, cc.AudioClip, function(err, clip) {
          if (err) {
            console.log(err);
            return;
          }
          if (!sound_manager.sound_enabled) return;
          let id = cc.audioEngine.playEffect(clip, loop);
          callback && callback(id);
        });
      }
      sound_manager.play_sound = play_sound;
      function play_music(path, loop, callback) {
        "resources/" == path.substring(0, 10) && (path = path.substring(10, path.length));
        let l_path = ".mp3" == path.substring(path.length - 4, path.length) ? path.substring(0, path.length - 4) : path;
        utils_1.utils.is_baidu() && ("Game/124/sound/back" != l_path && "Game/114/sound/back" != l_path || (l_path = "Game/142/sound/back"));
        cc.resources.load(l_path, cc.AudioClip, function(err, clip) {
          if (err) {
            console.log(err);
            return;
          }
          if (!sound_manager.music_enabled) return;
          let id = cc.audioEngine.playMusic(clip, loop);
          callback && callback(id);
        });
      }
      sound_manager.play_music = play_music;
      function stop_sound(id) {
        cc.audioEngine.stopEffect(id);
      }
      sound_manager.stop_sound = stop_sound;
      function stop_all_audio() {
        cc.audioEngine.stopAll();
      }
      sound_manager.stop_all_audio = stop_all_audio;
      function stop_music() {
        cc.audioEngine.stopMusic();
      }
      sound_manager.stop_music = stop_music;
      function play_click() {
        play_sound("Sound/click.mp3", false);
      }
      sound_manager.play_click = play_click;
    })(sound_manager = exports.sound_manager || (exports.sound_manager = {}));
    cc._RF.pop();
  }, {
    "../common/utils": "utils"
  } ],
  state: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "20e96ykJRtE2avdOX4AE8tl", "state");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.base_state = void 0;
    class base_state {
      constructor(type, parentFSM) {
        this.parentFSM = null;
        this.parentFSM = parentFSM;
        parentFSM.onEnter(type, this.canEnter);
        parentFSM.onExit(type, this.canExit);
      }
      onEnter(from, event) {}
      onExit(to, event) {}
      canEnter(from, event) {
        return true;
      }
      canExit(to) {
        return true;
      }
    }
    exports.base_state = base_state;
    cc._RF.pop();
  }, {} ],
  table_3d_layout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2ba91+bLi1JQLKl6rgMcB4N", "table_3d_layout");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Layout3DResources = void 0;
    const game_tools_1 = require("./game_tools");
    const cards_3d_config_1 = require("./cards_3d_config");
    const cards_3d_layout_1 = require("./cards_3d_layout");
    const {ccclass: ccclass, property: property} = cc._decorator;
    let Layout3DResources = (() => {
      class Layout3DResources extends cc.Component {
        static GetSpriteFrame(name) {
          -1 != name.lastIndexOf(".png") && (name = name.replace(".png", ""));
          if (null == this.spriteFrameMap[name]) {
            console.warn("SpriteFrame missing", name);
            return null;
          }
          return this.spriteFrameMap[name];
        }
        static GetFont(name) {
          if (null == this.fontMap[name]) {
            console.warn("Font missing", name);
            return null;
          }
          return this.fontMap[name];
        }
        static GetJson(name) {
          if (null == this.jsonMap[name]) {
            console.warn("JSON missing", name);
            return null;
          }
          return this.jsonMap[name];
        }
      }
      Layout3DResources.spriteFrameMap = null;
      Layout3DResources.fontMap = null;
      Layout3DResources.jsonMap = null;
      return Layout3DResources;
    })();
    exports.Layout3DResources = Layout3DResources;
    let table_3d_layout = (() => {
      var table_3d_layout_1;
      let table_3d_layout = table_3d_layout_1 = class table_3d_layout extends cc.Component {
        constructor() {
          super(...arguments);
          this.animationPrefab = null;
          this.animationDianPaoHuPrefab = null;
          this.Layout3DGameId = 150;
          this.Layout3DUserCount = 4;
          this.Layout3DMaxHandcardCount = 14;
          this._view_size = null;
          this._view = null;
          this._bg = null;
          this._table = null;
          this._left_table_bg = null;
          this._right_table_bg = null;
          this._left_table_bg_plus = null;
          this._right_table_bg_plus = null;
          this._visible_bg = null;
          this._clock = null;
          this._clock_bg_top = null;
          this._timeup_function = null;
          this._load_finish_function = null;
          this.resourceTotalCount = 0;
          this.resourceLoadedCount = 0;
          this.loadFinish = false;
        }
        onLoad() {
          table_3d_layout_1._inst = this;
          this._view_size = null;
          this._view = null;
          this._bg = null;
          this._table = null;
          this._left_table_bg = null;
          this._right_table_bg = null;
          this._clock = null;
          this.initTable();
        }
        onDestroy() {
          Layout3DResources.spriteFrameMap = {};
          Layout3DResources.fontMap = {};
          Layout3DResources.jsonMap = {};
          this.unschedule(this.scheduleTimer);
        }
        static get() {
          if (!this || !this._inst || !this._inst.loadFinish) {
            console.error("table_3d_layout.get() return null");
            return null;
          }
          return this._inst;
        }
        start() {}
        update() {
          if (!this.loadFinish && 0 != this.resourceTotalCount && this.resourceTotalCount == this.resourceLoadedCount) {
            this.loadFinish = true;
            this.init();
            null != this._load_finish_function && this._load_finish_function();
          }
        }
        initTable() {
          let view_size = game_tools_1.default.getLayoutViewSize();
          this._left_table_bg = this.node.getChildByName("Table").getChildByName("table1");
          let t_mid = this.node.getChildByName("Table").getChildByName("table2");
          this._right_table_bg = this.node.getChildByName("Table").getChildByName("table3");
          let middle_width = view_size.width - this._left_table_bg.getContentSize().width - this._right_table_bg.getContentSize().width;
          middle_width < 640 && (middle_width = 640);
          t_mid.width = middle_width;
          this._visible_bg = this.node.getChildByName("VisibleTable");
          this._visible_bg.width = middle_width + 904;
          this.node.getChildByName("Mask").active = view_size.over2;
        }
        init() {
          let view_root = this.node;
          let view_size = game_tools_1.default.getLayoutViewSize();
          this._view_size = view_size;
          this._view = game_tools_1.default.newImg({
            name: "_view"
          });
          view_root.addChild(this._view);
          this._table = game_tools_1.default.newImg({
            name: "_table"
          });
          this._view.addChild(this._table);
          this._clock = game_tools_1.default.newImg({
            path: "table-clock-clock_bg",
            name: "_clock"
          });
          this._clock.setPosition(cc.v2(0, 60));
          this._view.addChild(this._clock);
          this._clock_zi = [];
          for (let index in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) if (null == this._clock_zi[index]) {
            this._clock_zi[index] = game_tools_1.default.newImg({
              name: "_clock_zi" + index
            });
            this._clock_zi[index].name = cards_3d_config_1.UserIndex[index];
            this._clock.addChild(this._clock_zi[index]);
          }
          this._clock_di = [];
          for (let index in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) if (null == this._clock_di[index]) {
            this._clock_di[index] = game_tools_1.default.newImg({
              name: "_clock_di" + index
            });
            this._clock_di[index].name = cards_3d_config_1.UserIndex[index];
            this._clock.addChild(this._clock_di[index]);
          }
          this._clock_light = [];
          for (let index in game_tools_1.default.enumValues(cards_3d_config_1.UserIndex)) if (null == this._clock_light[index]) {
            this._clock_light[index] = game_tools_1.default.newImg({
              name: "_clock_light" + index
            });
            this._clock_light[index].name = cards_3d_config_1.UserIndex[index];
            this._clock.addChild(this._clock_light[index]);
          }
          this._clock_bg_top = game_tools_1.default.newImg({
            path: "table-clock-clock_bg_top",
            name: "_clock_bg_top"
          });
          this._clock_bg_top.setPosition(cc.v2(0, 0));
          this._clock.addChild(this._clock_bg_top);
          this.setSelfDirection(cards_3d_config_1.TableFeng.none);
          this._clock_label = game_tools_1.default.newLabelBM({
            path: "num_jsq",
            str: ""
          });
          this._clock_label.setScale(.9);
          this._clock_label.setPosition(cc.v2(0, 1));
          this._clock_label.active = true;
          this._clock.addChild(this._clock_label);
          this._clock.active = false;
          this.cards_3d_layout = new cc.Node("cards_3d_layout").addComponent(cards_3d_layout_1.default);
          let v = game_tools_1.default.getLayoutViewSize();
          this.cards_3d_layout.node.width = v.width;
          this.cards_3d_layout.node.height = v.height;
          this.cards_3d_layout.node.setPosition(cc.v2(-v.width / 2, -v.height / 2));
          this._view.addChild(this.cards_3d_layout.node);
          this.cards_3d_layout.init(this);
        }
        showDirectionClock(bool_show) {
          this._clock.active = bool_show;
        }
        setSelfDirection(e_feng) {
          this.loadDirection(e_feng, 11, 4, this._clock_zi[cards_3d_config_1.UserIndex.down], this._clock_di[cards_3d_config_1.UserIndex.down], this._clock_light[cards_3d_config_1.UserIndex.down]);
          this.loadDirection(e_feng, 21, 1, this._clock_zi[cards_3d_config_1.UserIndex.right], this._clock_di[cards_3d_config_1.UserIndex.right], this._clock_light[cards_3d_config_1.UserIndex.right]);
          this.loadDirection(e_feng, 31, 3, this._clock_zi[cards_3d_config_1.UserIndex.up], this._clock_di[cards_3d_config_1.UserIndex.up], this._clock_light[cards_3d_config_1.UserIndex.up]);
          this.loadDirection(e_feng, 41, 2, this._clock_zi[cards_3d_config_1.UserIndex.left], this._clock_di[cards_3d_config_1.UserIndex.left], this._clock_light[cards_3d_config_1.UserIndex.left]);
        }
        lightDirection(e_index) {
          if (cc.isValid(this._clock_di[e_index])) {
            this._clock_di[e_index].active = true;
            this._clock_di[e_index].stopAllActions();
            this._clock_di[e_index].runAction(cc.sequence(cc.fadeIn(1), cc.fadeOut(1)).repeatForever());
          }
        }
        turnOffAll() {
          this._clock_di.forEach(di => {
            di.stopAllActions();
            di.opacity = 0;
          });
        }
        lightLightDirection(e_index) {
          if (this._clock_light[e_index]) {
            this._clock_light[e_index].active = true;
            this._clock_light[e_index].opacity = 255;
          }
        }
        turnOffAllLight() {
          this._clock_light.forEach(light => {
            light.active = false;
            light.opacity = 0;
          });
        }
        showTime(bool_show) {
          this._clock_label.active = bool_show;
        }
        setTime(int_num, bool_auto_count_down) {
          int_num > 99 && (int_num = 99);
          int_num < 0 && (int_num = 0);
          this._clock_label.getComponent(cc.Label).string = int_num < 10 ? "0" + int_num : int_num;
          if (bool_auto_count_down && true == bool_auto_count_down) {
            this._time = int_num;
            this.unschedule(this.scheduleTimer);
            this.schedule(this.scheduleTimer, .1);
          }
        }
        setTimeUpFunc(cb_function) {
          cb_function && (this._timeup_function = cb_function);
        }
        static setLoadFinishFunc(cb_function) {
          cb_function && (table_3d_layout_1._inst._load_finish_function = cb_function);
        }
        scheduleTimer() {
          this._time = this._time - .1;
          if (this._time < -.1) {
            this.setTime(0);
            this.unschedule(this.scheduleTimer);
            this._timeup_function && this._timeup_function();
          } else if (this._time < 0) this.setTime(0); else {
            let num = Math.floor(this._time);
            this.setTime(num + 1);
          }
        }
        loadDirection(e_feng, num, light_num, zi, di, light) {
          if (e_feng != cards_3d_config_1.TableFeng.none) {
            zi.getComponent(cc.Sprite).enabled = true;
            zi.getComponent(cc.Sprite).spriteFrame = Layout3DResources.GetSpriteFrame("table-clock-" + e_feng + "-clock_" + e_feng + "_" + num);
          } else zi.getComponent(cc.Sprite).enabled = false;
          di.getComponent(cc.Sprite).spriteFrame = Layout3DResources.GetSpriteFrame("table-clock-" + e_feng + "-clock_" + e_feng + "_" + (num + 1));
          di.opacity = 0;
          light.getComponent(cc.Sprite).spriteFrame = Layout3DResources.GetSpriteFrame("table-light-clock_guang" + light_num);
          light.opacity = 0;
          light.setPosition(cc.v2(0, -9));
        }
        loadResources(userCount, handCount) {
          this.loadFinish = false;
          this.resourceTotalCount = 0;
          this.resourceLoadedCount = 0;
          Layout3DResources.spriteFrameMap = {};
          Layout3DResources.fontMap = {};
          Layout3DResources.jsonMap = {};
          this.Layout3DUserCount = userCount;
          this.Layout3DMaxHandcardCount = handCount;
          this.loadConfigJson();
          this.loadAtlasAsync("/Layout3D/atlas/backs");
          this.loadAtlasAsync("/Layout3D/atlas/cards");
          this.loadAtlasAsync("/Layout3D/atlas/corners");
          this.loadAtlasAsync("/Layout3D/atlas/table");
          this.loadAtlasAsync("/Layout3D/atlas/table_other");
          this.loadFontAsync("/Layout3D/fnt/num_jsq");
          this.loadJsonDirAsync("/Layout3D/layout_" + this.Layout3DUserCount + "_" + this.Layout3DMaxHandcardCount);
        }
        loadConfigJson() {
          let resourcePath = "Game/" + this.Layout3DGameId + "/layout_3d_config";
          this.resourceTotalCount += 1;
          let that = this;
          cc.resources.load(resourcePath, cc.JsonAsset, (error, jsonAsset) => {
            if (error) {
              console.error(error);
              return;
            }
            cards_3d_config_1.LayoutConfig.log_enable = jsonAsset.json.log_enable.value;
            cards_3d_config_1.LayoutConfig.print_enable = jsonAsset.json.print_enable.value;
            cards_3d_config_1.LayoutConfig.show_card_value_on_dark_gang = jsonAsset.json.show_card_value_on_dark_gang.value;
            cards_3d_config_1.LayoutConfig.show_heap_arrow = jsonAsset.json.show_heap_arrow.value;
            cards_3d_config_1.LayoutConfig.tile_hua_card = jsonAsset.json.tile_hua_card.value;
            cards_3d_config_1.LayoutConfig.play_insert_card = jsonAsset.json.play_insert_card.value;
            cards_3d_config_1.LayoutConfig.custom_self_handcard_scale = jsonAsset.json.custom_self_handcard_scale.value;
            cards_3d_config_1.LayoutConfig.show_self_dark_gang_card_value = jsonAsset.json.show_self_dark_gang_card_value.value;
            cards_3d_config_1.LayoutConfig.auto_hide_handle_select = jsonAsset.json.auto_hide_handle_select.value;
            that.resourceLoadedCount += 1;
          });
        }
        loadAtlasAsync(resourcePath) {
          this.resourceTotalCount += 1;
          let that = this;
          cc.resources.load(resourcePath, cc.SpriteAtlas, (error, atlas) => {
            if (error) {
              console.error(error);
              return;
            }
            let sps = atlas.getSpriteFrames();
            sps.forEach(sp => {
              game_tools_1.default.log("SpriteFrame loaded:", sp.name);
              Layout3DResources.spriteFrameMap[sp.name] = sp;
            });
            that.resourceLoadedCount += 1;
          });
        }
        loadFontAsync(resourcePath) {
          this.resourceTotalCount += 1;
          let that = this;
          cc.resources.load(resourcePath, cc.BitmapFont, (error, font) => {
            if (error) {
              console.error(error);
              return;
            }
            game_tools_1.default.log("Font loaded:", font.name);
            Layout3DResources.fontMap[font.name] = font;
            that.resourceLoadedCount += 1;
          });
        }
        loadJsonDirAsync(resourcePath) {
          this.resourceTotalCount += 1;
          let that = this;
          cc.resources.loadDir(resourcePath, cc.JsonAsset, (error, jsons) => {
            if (error) {
              console.error(error);
              return;
            }
            jsons.forEach(json => {
              game_tools_1.default.log("Json loaded:", json.name);
              Layout3DResources.jsonMap[json.name] = json;
            });
            that.resourceLoadedCount += 1;
          });
        }
      };
      table_3d_layout._inst = null;
      __decorate([ property(cc.Prefab) ], table_3d_layout.prototype, "animationPrefab", void 0);
      __decorate([ property(cc.Prefab) ], table_3d_layout.prototype, "animationDianPaoHuPrefab", void 0);
      __decorate([ property ], table_3d_layout.prototype, "Layout3DGameId", void 0);
      __decorate([ property ], table_3d_layout.prototype, "Layout3DUserCount", void 0);
      __decorate([ property ], table_3d_layout.prototype, "Layout3DMaxHandcardCount", void 0);
      table_3d_layout = table_3d_layout_1 = __decorate([ ccclass ], table_3d_layout);
      return table_3d_layout;
    })();
    exports.default = table_3d_layout;
    cc._RF.pop();
  }, {
    "./cards_3d_config": "cards_3d_config",
    "./cards_3d_layout": "cards_3d_layout",
    "./game_tools": "game_tools"
  } ],
  task: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2e6ea/xh85POZefaTRBxS7s", "task");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parallel_task = exports.strict_task = exports.task = exports.task_base = void 0;
    class task_base {
      constructor(id) {
        this.id = "";
        this.sub_task_queue = [];
        this.fn = null;
        this.success = null;
        this.fail = null;
        this.complete = null;
        this.loop_id = null;
        this.lock = false;
        this.finished = false;
        this.use_log = false;
        this.id = id;
      }
      do(fn) {
        this.fn = fn;
        return this;
      }
      on(callbacks) {
        if (callbacks) {
          this.success = callbacks.success;
          this.fail = callbacks.fail;
          this.complete = callbacks.complete;
        }
      }
      run() {
        let that = this;
        this.log(`${this.id} start`);
        this.loop_id = setInterval(function() {
          that.update();
        }, 1);
        this.update();
      }
      clear() {
        this.lock = false;
        this.finished = true;
        this.loop_id && clearInterval(this.loop_id);
      }
      add_sub_task(t) {
        this.sub_task_queue.push(t);
        t.on({
          success: () => {},
          fail: () => {},
          complete: () => {
            this.lock = false;
          }
        });
      }
      update() {
        if (!this.lock) if (this.sub_task_queue.length > 0) {
          let sub_task = this.sub_task_queue.shift();
          this.lock = true;
          sub_task.run();
        } else if (null != this.fn) {
          this.lock = true;
          this.fn(() => {
            if (!this.finished) {
              this.clear();
              this.log(`${this.id} success`);
              this.success && this.success();
              this.complete && this.complete();
            }
          }, () => {
            if (!this.finished) {
              this.clear();
              this.log(`${this.id} fail`);
              this.fail && this.fail();
              this.complete && this.complete();
            }
          });
        } else if (!this.finished) {
          this.clear();
          this.log(`${this.id} success`);
          this.success && this.success();
          this.complete && this.complete();
        }
      }
      log(...args) {
        this.use_log && console.log.call(this, args);
      }
    }
    exports.task_base = task_base;
    class task extends task_base {}
    exports.task = task;
    class strict_task extends task_base {
      add_sub_task(t) {
        this.sub_task_queue.push(t);
        t.on({
          success: () => {
            this.lock = false;
          },
          fail: () => {
            if (!this.finished) {
              this.clear();
              this.fail && this.fail("sub task fail: " + t.id + ", strict_task is stopped.");
              this.complete && this.complete();
            }
          },
          complete: () => {}
        });
      }
    }
    exports.strict_task = strict_task;
    class parallel_task extends task_base {
      constructor() {
        super(...arguments);
        this.sub_task_pool = new Set();
      }
      add_sub_task(t) {
        this.sub_task_pool.add(t);
        t.on({
          success: () => {
            this.sub_task_pool.delete(t);
            if (0 == this.sub_task_pool.size) {
              this.success && this.success();
              this.complete && this.complete();
            }
          },
          fail: () => {
            console.log("SUB_FAIL ", t.id, this);
            this.fail && this.fail();
            this.complete && this.complete();
          },
          complete: () => {}
        });
      }
      run() {
        if (0 == this.sub_task_pool.size) {
          this.success && this.success();
          this.complete && this.complete();
        } else this.sub_task_pool.forEach(x => {
          if (x.fn) x.fn(() => {
            x.success && x.success();
            x.complete && x.complete();
          }, () => {
            x.fail && x.fail();
            x.complete && x.complete();
          }); else {
            x.success && x.success();
            x.complete && x.complete();
          }
        });
      }
    }
    exports.parallel_task = parallel_task;
    cc._RF.pop();
  }, {} ],
  tutorial: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3d3d29xT4hJ0aXpK2SiGbyr", "tutorial");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.tutorial = void 0;
    const TutorialMask_1 = require("../../Component/LobbyYiFu/TutorialMask");
    const YiFuGameData_1 = require("../../Game/150/YiFuGameData");
    const utils_1 = require("../common/utils");
    const sound_manager_1 = require("./sound_manager");
    var tutorial;
    (function(tutorial) {
      let TutorialID;
      (function(TutorialID) {
        TutorialID[TutorialID["Lobby_1_1"] = 1] = "Lobby_1_1";
        TutorialID[TutorialID["Lobby_1_2"] = 2] = "Lobby_1_2";
        TutorialID[TutorialID["Lobby_1_3"] = 3] = "Lobby_1_3";
        TutorialID[TutorialID["Lobby_2_1"] = 4] = "Lobby_2_1";
        TutorialID[TutorialID["Lobby_3_1"] = 5] = "Lobby_3_1";
        TutorialID[TutorialID["Lobby_3_2"] = 6] = "Lobby_3_2";
        TutorialID[TutorialID["Lobby_3_3"] = 7] = "Lobby_3_3";
        TutorialID[TutorialID["Lobby_4_1"] = 8] = "Lobby_4_1";
        TutorialID[TutorialID["Lobby_4_2"] = 9] = "Lobby_4_2";
        TutorialID[TutorialID["Lobby_4_3"] = 10] = "Lobby_4_3";
        TutorialID[TutorialID["Lobby_4_4"] = 11] = "Lobby_4_4";
        TutorialID[TutorialID["Lobby_4_5"] = 12] = "Lobby_4_5";
        TutorialID[TutorialID["Game_1_1"] = 13] = "Game_1_1";
        TutorialID[TutorialID["Game_1_2"] = 14] = "Game_1_2";
        TutorialID[TutorialID["Game_1_4"] = 15] = "Game_1_4";
        TutorialID[TutorialID["Game_1_5"] = 16] = "Game_1_5";
        TutorialID[TutorialID["Game_1_6"] = 17] = "Game_1_6";
        TutorialID[TutorialID["Game_1_7"] = 18] = "Game_1_7";
        TutorialID[TutorialID["Game_1_8"] = 19] = "Game_1_8";
        TutorialID[TutorialID["Game_2_0"] = 20] = "Game_2_0";
        TutorialID[TutorialID["Game_2_1"] = 21] = "Game_2_1";
        TutorialID[TutorialID["Game_2_2"] = 22] = "Game_2_2";
        TutorialID[TutorialID["Game_2_3"] = 23] = "Game_2_3";
        TutorialID[TutorialID["Game_3_0"] = 24] = "Game_3_0";
        TutorialID[TutorialID["Game_3_1"] = 25] = "Game_3_1";
        TutorialID[TutorialID["Game_3_2"] = 26] = "Game_3_2";
        TutorialID[TutorialID["Game_3_3"] = 27] = "Game_3_3";
        TutorialID[TutorialID["Game_3_4"] = 28] = "Game_3_4";
      })(TutorialID = tutorial.TutorialID || (tutorial.TutorialID = {}));
      class tutorial_node_data {
        constructor() {
          this.id = -1;
          this.target = null;
          this.mask_offset = null;
          this.mask_size = null;
          this.mask_button = false;
          this.bgbutton = false;
          this.mask_teach = false;
          this.mask_teach_offset = null;
          this.mask_jump = false;
          this.mask_jump_offset = null;
          this.delay_time = 0;
          this.show_hand = true;
          this.text = "";
          this.text_offset = null;
          this.ok_offset = null;
          this.next_id = -1;
          this.mask = 0;
        }
      }
      tutorial.tutorial_node_data = tutorial_node_data;
      tutorial.enabled = true;
      tutorial.map = null;
      tutorial.soundMap = null;
      tutorial.soundId = null;
      tutorial.prefab = null;
      tutorial.inst = null;
      var delay_id = -1;
      function set_tutorial_node_target(id, target) {
        init_map();
        tutorial.map && tutorial.map.has(id) && (tutorial.map.get(id).target = target);
      }
      tutorial.set_tutorial_node_target = set_tutorial_node_target;
      function show_tutorial(id, delay = 0, root = null) {
        if (!tutorial.enabled) return;
        if (!cc.isValid(tutorial.prefab)) return;
        if (!tutorial.map.has(id)) return;
        if (tutorial.map.get(id).target && !tutorial.map.get(id).target.active) return;
        if (id >= tutorial.TutorialID.Game_1_1 && id <= tutorial.TutorialID.Game_3_4 && (YiFuGameData_1.get_share_game_data().checkGameTutorialFinished() || !YiFuGameData_1.get_share_game_data().IsOwner)) return;
        if (id >= tutorial.TutorialID.Lobby_1_1 && id <= tutorial.TutorialID.Lobby_4_5) {
          console.log("tutorial scene name : ", cc.director.getScene().name);
          if ("lobbyYiFu" != cc.director.getScene().name) return;
        }
        cc.isValid(root) || (root = cc.Canvas.instance.node);
        let data = tutorial.map.get(id);
        let mask = 0;
        try {
          mask = Number(utils_1.utils.getLocalStorage("TutorialMask") || "0");
        } catch (e) {
          return;
        }
        if (mask & data.mask) return;
        -1 != delay_id && clearTimeout(delay_id);
        delay_id = setTimeout(() => {
          if (tutorial.enabled) {
            _show_tutorial(id, root);
            utils_1.utils.setLocalStorage("TutorialMask", String(mask | data.mask));
          }
        }, 1e3 * delay);
      }
      tutorial.show_tutorial = show_tutorial;
      function check_visiable(value) {
        let temp_node = value;
        for (let i = 0; i < 10; i++) {
          if (!temp_node.parent || "Canvas" == temp_node.parent.name) return value.active;
          console.log("temp_node.parent name : ", temp_node.parent.name);
          console.log("temp_node.parent active : ", temp_node.parent.active);
          if (!temp_node.parent.active) return temp_node.parent.active;
          temp_node = temp_node.parent;
        }
        return false;
      }
      function _show_tutorial(id, root = null) {
        cc.isValid(tutorial.inst) || (tutorial.inst = utils_1.utils.add_instance_to_root(tutorial.prefab, root, TutorialMask_1.default));
        playTutorialSound(id);
        let data = tutorial.map.get(id);
        tutorial.inst.data = data;
        tutorial.inst.node.setParent(root);
        tutorial.inst.node.setPosition(cc.v2(0, 0));
        tutorial.inst.node.active = true;
        let target_pos = cc.v2(0, 0);
        if (null != data.target) {
          target_pos = utils_1.utils.convert_position(data.target, tutorial.inst.mask);
          tutorial.inst.mask.setPosition(target_pos.add(data.mask_offset));
          tutorial.inst.mask.width = data.mask_size.x;
          tutorial.inst.mask.height = data.mask_size.y;
          if (data.mask_button) {
            tutorial.inst.maskButton.node.active = true;
            tutorial.inst.maskButton.node.setPosition(target_pos.add(data.mask_offset));
            tutorial.inst.maskButton.node.width = data.mask_size.x;
            tutorial.inst.maskButton.node.height = data.mask_size.y;
          } else tutorial.inst.maskButton.node.active = false;
          if (data.show_hand) {
            tutorial.inst.handNode.active = true;
            tutorial.inst.handNode.setPosition(target_pos.add(data.mask_offset).add(cc.v2(.5 * data.mask_size.x, .5 * -data.mask_size.y)).add(cc.v2(0, -40)));
            tutorial.inst.clickTip.active = false;
          } else {
            tutorial.inst.handNode.active = false;
            tutorial.inst.clickTip.active = true;
          }
        } else {
          tutorial.inst.mask.width = 0;
          tutorial.inst.mask.height = 0;
          tutorial.inst.maskButton.node.active = false;
          tutorial.inst.handNode.active = false;
        }
        if (data.mask_jump) {
          tutorial.inst.jumpButton.node.active = true;
          tutorial.inst.jumpButton.node.setPosition(target_pos.add(data.mask_jump_offset));
        } else tutorial.inst.jumpButton.node.active = false;
        if (data.mask_teach) {
          tutorial.inst.teachButton.node.active = true;
          tutorial.inst.teachButton.node.setPosition(target_pos.add(data.mask_teach_offset));
        } else tutorial.inst.teachButton.node.active = false;
        tutorial.inst.bgButton.node.active = data.bgbutton;
        if (data.text) {
          tutorial.inst.textNode.active = true;
          tutorial.inst.textNode.setPosition(target_pos.add(data.text_offset));
          tutorial.inst.text.string = data.text;
        } else tutorial.inst.textNode.active = false;
        tutorial.inst.okButton.node.active = false;
      }
      function close_tutorial() {
        null != tutorial.soundId && sound_manager_1.sound_manager.stop_sound(tutorial.soundId);
        if (!cc.isValid(tutorial.inst)) return;
        tutorial.inst.node.active && tutorial.inst.close(false);
        if (-1 != delay_id) {
          clearTimeout(delay_id);
          delay_id = -1;
        }
      }
      tutorial.close_tutorial = close_tutorial;
      function playTutorialSound(sound_id) {
        tutorial.soundMap && tutorial.soundMap.has(sound_id) && sound_manager_1.sound_manager.play_sound(tutorial.soundMap.get(sound_id), false, id => {
          tutorial.soundId = id;
        });
      }
      tutorial.playTutorialSound = playTutorialSound;
      function initSound() {
        tutorial.soundMap = new Map();
        let file_path = "Sound/TutorialSound/";
        tutorial.soundMap.set(TutorialID.Lobby_1_1, file_path + "1");
        tutorial.soundMap.set(TutorialID.Lobby_1_2, file_path + "2");
        tutorial.soundMap.set(TutorialID.Lobby_1_3, file_path + "3");
        tutorial.soundMap.set(TutorialID.Lobby_2_1, file_path + "4");
        tutorial.soundMap.set(TutorialID.Lobby_3_1, file_path + "5");
        tutorial.soundMap.set(TutorialID.Lobby_3_2, file_path + "6");
        tutorial.soundMap.set(TutorialID.Lobby_3_3, file_path + "7");
        tutorial.soundMap.set(TutorialID.Lobby_4_1, file_path + "20");
        tutorial.soundMap.set(TutorialID.Lobby_4_2, file_path + "21");
        tutorial.soundMap.set(TutorialID.Lobby_4_3, file_path + "20");
        tutorial.soundMap.set(TutorialID.Lobby_4_4, file_path + "23");
        tutorial.soundMap.set(TutorialID.Game_1_1, file_path + "8");
        tutorial.soundMap.set(TutorialID.Game_1_2, file_path + "9");
        tutorial.soundMap.set(TutorialID.Game_1_4, file_path + "11");
        tutorial.soundMap.set(TutorialID.Game_1_5, file_path + "12");
        tutorial.soundMap.set(TutorialID.Game_1_6, file_path + "13");
        tutorial.soundMap.set(TutorialID.Game_1_7, file_path + "14");
        tutorial.soundMap.set(TutorialID.Game_2_1, file_path + "17");
        tutorial.soundMap.set(TutorialID.Game_2_2, file_path + "15");
        tutorial.soundMap.set(TutorialID.Game_2_3, file_path + "16");
        tutorial.soundMap.set(TutorialID.Game_3_2, file_path + "18");
        tutorial.soundMap.set(TutorialID.Game_3_4, file_path + "19");
      }
      tutorial.initSound = initSound;
      function init_map() {
        if (!tutorial.map) {
          tutorial.map = new Map();
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_1_1;
            data.mask_offset = cc.v2(0, 0);
            data.mask_size = cc.v2(0, 0);
            data.mask_button = false;
            data.bgbutton = true;
            data.delay_time = 0;
            data.mask_teach = false;
            data.show_hand = false;
            data.mask_jump = false;
            data.text = "\u4f60\u597d\uff0c\u6b22\u8fce\u6765\u5230\u300a\u8001\u5bb6\u6e38\u9ebb\u5c06\u300b\uff0c\u8fd9\u662f\u4e00\u6b3e\u80fd<color=#FF2B18>\u81ea\u5df1\u51b3\u5b9a</c>\u80e1\u724c\u89c4\u5219\u7684\u5168\u65b0\u9ebb\u5c06\u54e6~";
            data.text_offset = cc.v2(-300, -180);
            data.next_id = TutorialID.Lobby_1_2;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_1_2;
            data.mask_offset = cc.v2(0, 0);
            data.mask_size = cc.v2(0, 0);
            data.mask_button = false;
            data.show_hand = false;
            data.bgbutton = true;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0e\u597d\u53cb\u4e00\u8d77\uff0c\u8fb9\u5f00<color=#FF2B18>\u8bed\u97f3</c>\u8fb9\u73a9\u8001\u5bb6<color=#FF2B18>\u672c\u5730</c>\u7684\u9ebb\u5c06\u89c4\u5219\u3002";
            data.text_offset = cc.v2(-300, -180);
            data.next_id = TutorialID.Lobby_1_3;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_1_3;
            data.mask_offset = cc.v2(0, 2.5);
            data.mask_size = cc.v2(236, 249);
            data.mask_button = false;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u90a3\u4e48\uff0c\u5c31\u8ba9\u6211\u4eec\u5148<color=#FF2B18>\u521b\u5efa</c>\u4e00\u4e2a\u4e13\u5c5e\u7684\u9ebb\u5c06\u73a9\u6cd5\u5427~";
            data.text_offset = cc.v2(-500, -60);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_2_1;
            data.mask_offset = cc.v2(-66, .5);
            data.mask_size = cc.v2(984, 66);
            data.mask_button = false;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u9996\u5148\uff0c\u8981\u5728\u672c\u9875\u9762<color=#FF2B18>\u4ece\u4e0a\u5f80\u4e0b</c>\u9009\u62e9\u9700\u8981\u7528\u5230\u7684\u73a9\u6cd5\u3002";
            data.text_offset = cc.v2(-450, -350);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_3_1;
            data.mask_offset = cc.v2(-.5, 2.5);
            data.mask_size = cc.v2(384, 447);
            data.mask_button = false;
            data.show_hand = false;
            data.bgbutton = true;
            data.delay_time = .5;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u771f\u68d2\uff01\u4f60\u5df2\u7ecf\u5b8c\u6210\u6700\u590d\u6742\u7684\u8bbe\u7f6e\u5566\uff0c\u5de6\u8fb9\u680f\u53ef\u4ee5<color=#FF2B18>\u9884\u89c8</c>\u521a\u624d\u9009\u4e2d\u7684\u73a9\u6cd5\u54e6~";
            data.text_offset = cc.v2(550, -100);
            data.next_id = TutorialID.Lobby_3_3;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_3_3;
            data.mask_offset = cc.v2(-34, -80);
            data.mask_size = cc.v2(544, 316);
            data.mask_button = false;
            data.show_hand = false;
            data.bgbutton = true;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u8fd9\u91cc\u53ef\u4ee5\u7ed9\u4f60\u7684\u73a9\u6cd5\u8bbe\u7f6e<color=#FF2B18>\u5730\u533a</c>\u3002\u8fd8\u53ef\u4ee5\u6dfb\u52a0<color=#FF2B18>\u4ecb\u7ecd</c>\u8bf4\u660e\u54e6~";
            data.text_offset = cc.v2(-600, -200);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_4_1;
            data.mask_offset = cc.v2(1, 2);
            data.mask_size = cc.v2(236, 388);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u4e4b\u524d\u521b\u5efa\u7684\u73a9\u6cd5\u663e\u793a\u5728\u8fd9\u91cc\u54e6\uff0c<color=#FF2B18>\u70b9\u51fb</c>\u5c31\u80fd\u76f4\u63a5\u8fdb\u5165\u5566~";
            data.text_offset = cc.v2(-500, -150);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_4_2;
            data.mask_offset = cc.v2(1, 2);
            data.mask_size = cc.v2(236, 388);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "<color=#FF2B18>\u957f\u6309</c>\u73a9\u6cd5\u8fd8\u53ef\u4ee5\u8fdb\u884c\u201c\u7f16\u8f91\u201d\u548c\u201c\u5220\u9664\u201d\uff0c\u8d76\u7d27\u8bd5\u8bd5\u5427~";
            data.text_offset = cc.v2(-380, -150);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_4_3;
            data.mask_offset = cc.v2(1, 2);
            data.mask_size = cc.v2(236, 388);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u4e4b\u524d\u521b\u5efa\u7684\u73a9\u6cd5\u663e\u793a\u5728\u8fd9\u91cc\u54e6\uff0c<color=#FF2B18>\u70b9\u51fb</c>\u5c31\u80fd\u76f4\u63a5\u8fdb\u5165\u5566~";
            data.text_offset = cc.v2(-500, -150);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_4_4;
            data.mask_offset = cc.v2(-1, 1.5);
            data.mask_size = cc.v2(236, 249);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u4e4b\u524d\u521b\u5efa\u7684\u73a9\u6cd5\u663e\u793a\u5728\u8fd9\u91cc\u54e6~";
            data.text_offset = cc.v2(-500, -100);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Lobby_4_5;
            data.mask_offset = cc.v2(-1, 1.5);
            data.mask_size = cc.v2(235, 132);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.delay_time = 0;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u8bb0\u5f97\u6dfb\u52a0\u5230\u201c\u6211\u7684\u5c0f\u7a0b\u5e8f\u201d\u6216\u8005\u201c\u6211\u7684\u684c\u9762\u201d\u5466\uff0c\u4e0b\u6b21\u8ddf\u597d\u53cb\u7ea6\u9ebb\u5c06\u5c31\u4e0d\u4f1a\u8ff7\u8def\u4e86~";
            data.text_offset = cc.v2(-500, -100);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_1;
            data.mask_offset = cc.v2(0, 2.5);
            data.mask_size = cc.v2(204, 74);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "\u5e72\u7684\u6f02\u4eae\uff0c\u73a9\u6cd5\u521b\u5efa\u6210\u529f\uff01\u8d76\u7d27\u7ea6\u4e0a\u597d\u53cb\u4e00\u8d77\u6109\u5feb\u7684\u6253\u9ebb\u5c06\u5427~";
            data.text_offset = cc.v2(-250, 200);
            data.mask_jump_offset = cc.v2(-440, 50);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_2;
            data.mask_offset = cc.v2(299.5, -132.5);
            data.mask_size = cc.v2(165, 61);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = true;
            data.mask_jump = true;
            data.text = "\u7b49\u4e00\u4e0b\u7b49\u4e00\u4e0b\uff01\u5728\u558a\u597d\u53cb\u524d\uff0c\u4e0d\u5982\u8ba9\u6211\u4eec\u5feb\u901f<color=#FF2B18>\u6a21\u62df</c>\u4e00\u4e0b\u6e38\u620f\u573a\u666f~";
            data.text_offset = cc.v2(-100, 0);
            data.mask_jump_offset = cc.v2(-290, -150);
            data.mask_teach_offset = cc.v2(300, -135);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_4;
            data.mask_offset = cc.v2(.5, 2.5);
            data.mask_size = cc.v2(204, 76);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u5c0f\u4f19\u4f34\u4eec\u5df2\u7ecf\u5750\u9f50\u5566\uff0c\u8bbe\u597d\u5c40\u6570\u5f00\u59cb<color=#FF2B18>\u53d1\u724c</c>\u5427~";
            data.text_offset = cc.v2(-400, -50);
            data.mask_jump_offset = cc.v2(-590, -200);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_5;
            data.mask_offset = cc.v2(-14, 29);
            data.mask_size = cc.v2(570, 72);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u9996\u5148\uff0c\u8981\u70b9\u51fb\u73a9\u5bb6\u5934\u50cf\u9009\u62e9\u672c\u5c40<color=#FF2B18>\u5e84\u5bb6</c>\uff1b\u4e5f\u53ef\u4ee5\u70b9\u8fd9\u91cc\uff0c<color=#FF2B18>\u968f\u673a</c>\u4e00\u540d\u597d\u53cb\u505a\u5e84\u5bb6\u54e6~";
            data.text_offset = cc.v2(-350, 250);
            data.mask_jump_offset = cc.v2(-540, 100);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_6;
            data.mask_offset = cc.v2(-91, -1.5);
            data.mask_size = cc.v2(138, 140);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u8865\u82b1\u4e0e\u5403\u78b0\u6760\u63d0\u9192\u8fd8\u662f\u81ea\u52a8\u7684\u5466~";
            data.text_offset = cc.v2(-600, -50);
            data.mask_jump_offset = cc.v2(-790, -200);
            data.next_id = null;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_7;
            data.mask_offset = cc.v2(0, 0);
            data.mask_size = cc.v2(100, 100);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u54ce\u5440\u724c\u6253\u5b8c\u4e86...\u90a3\u5c31\u53d1\u8d77<color=#FF2B18>\u6d17\u724c</c>\u5f00\u59cb\u4e0b\u4e00\u5c40\u5427~";
            data.text_offset = cc.v2(400, -150);
            data.mask_jump_offset = cc.v2(210, -300);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_1_8;
            data.mask_offset = cc.v2(.5, 1.2);
            data.mask_size = cc.v2(152, 57);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = null;
            data.text_offset = cc.v2(-300, -150);
            data.mask_jump_offset = cc.v2(-490, -300);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_2_0;
            data.mask_offset = cc.v2(.5, 2.5);
            data.mask_size = cc.v2(204, 76);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "";
            data.text_offset = cc.v2(-400, -50);
            data.mask_jump_offset = cc.v2(-590, -200);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_2_1;
            data.mask_offset = cc.v2(.5, .5);
            data.mask_size = cc.v2(105, 105);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u6bcf\u8f6e\u53d1\u724c\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u786e\u8ba4\u4e00\u4e0b\u672c\u8f6e\u5e84\u5bb6\u54e6~";
            data.text_offset = cc.v2(-300, -100);
            data.mask_jump_offset = cc.v2(-490, -250);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_2_2;
            data.mask_offset = cc.v2(0, 2.5);
            data.mask_size = cc.v2(164, 63);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u7cdf\u7cd5\uff0c\u88ab\u522b\u4eba\u80e1\u724c\u4e86...\u6309\u597d\u53cb\u7ea6\u5b9a\u7684\u7b97\u5206\u89c4\u5219<color=#FF2B18>\u5212\u5206</c>\u7ed9\u4ed6\u5427~";
            data.text_offset = cc.v2(450, -100);
            data.mask_jump_offset = cc.v2(260, -250);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_2_3;
            data.mask_offset = cc.v2(-.5, 2.5);
            data.mask_size = cc.v2(165, 63);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u5212\u5206\u540e\u8bb0\u5f97\u70b9\u51fb\u5f00\u59cb<color=#FF2B18>\u4e0b\u4e00\u5c40</c>\u54e6~\u8d8a\u6765\u8d8a\u719f\u7ec3\u4e86\u5462~";
            data.text_offset = cc.v2(-450, -100);
            data.mask_jump_offset = cc.v2(-660, -250);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_3_0;
            data.mask_offset = cc.v2(.5, 2.5);
            data.mask_size = cc.v2(204, 76);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = "";
            data.text_offset = cc.v2(-400, -50);
            data.mask_jump_offset = cc.v2(-590, -200);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_3_1;
            data.mask_offset = cc.v2(.5, .5);
            data.mask_size = cc.v2(105, 105);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = false;
            data.text = null;
            data.text_offset = cc.v2(-300, -100);
            data.mask_jump_offset = cc.v2(-490, -250);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_3_2;
            data.mask_offset = cc.v2(0, 0);
            data.mask_size = cc.v2(80, 78);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u6e38\u620f\u4e2d\u8981\u81ea\u5df1\u51b3\u5b9a\u80e1\u724c\u65f6\u673a~\u5c31\u662f\u73b0\u5728\uff01<color=#FF2B18>\u80e1\u724c</c>\u8bd5\u8bd5\u5427~";
            data.text_offset = cc.v2(-350, 150);
            data.mask_jump_offset = cc.v2(-540, 0);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_3_4;
            data.mask_offset = cc.v2(0, 0);
            data.mask_size = cc.v2(0, 0);
            data.mask_button = false;
            data.show_hand = false;
            data.bgbutton = true;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = "\u592a\u68d2\u5566\uff0c\u606d\u559c\u4f60\u5b8c\u6210\u8bd5\u70bc\uff01";
            data.text_offset = cc.v2(-300, -150);
            data.mask_jump_offset = cc.v2(-490, -300);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
          {
            let data = new tutorial_node_data();
            data.id = TutorialID.Game_3_3;
            data.mask_offset = cc.v2(-1, 6);
            data.mask_size = cc.v2(118, 120);
            data.mask_button = false;
            data.show_hand = true;
            data.bgbutton = false;
            data.mask_teach = false;
            data.mask_jump = true;
            data.text = null;
            data.text_offset = cc.v2(-300, -150);
            data.mask_jump_offset = cc.v2(-490, -300);
            data.next_id = -1;
            data.mask = 1 << data.id;
            tutorial.map.set(data.id, data);
          }
        }
      }
      tutorial.init_map = init_map;
      function init(_prefab) {
        console.log("tutorial init");
        tutorial.prefab = _prefab;
        initSound();
        init_map();
      }
      tutorial.init = init;
      function setTutorialFinished() {
        let first = utils_1.utils.getLocalStorage("MarkUserFirstEnter") || "0";
        if ("0" == first) {
          let mask = 0;
          for (let i = tutorial.TutorialID.Lobby_1_1; i < tutorial.TutorialID.Game_3_4; i++) mask |= 1 << i;
          utils_1.utils.setLocalStorage("TutorialMask", String(mask));
          utils_1.utils.setLocalStorage("MarkUserFirstEnter", "1");
          utils_1.utils.setLocalStorage("CheckGameTutorialFinished", "1");
        }
      }
      tutorial.setTutorialFinished = setTutorialFinished;
    })(tutorial = exports.tutorial || (exports.tutorial = {}));
    window && (window.tutorial = tutorial);
    cc._RF.pop();
  }, {
    "../../Component/LobbyYiFu/TutorialMask": "TutorialMask",
    "../../Game/150/YiFuGameData": "YiFuGameData",
    "../common/utils": "utils",
    "./sound_manager": "sound_manager"
  } ],
  typestate: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "041132QFXpI9phq+WTZjF0e", "typestate");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TypeState = exports.typestate = void 0;
    var typestate;
    (function(typestate) {
      class Transitions {
        constructor(fsm) {
          this.fsm = fsm;
        }
        to(...states) {
          this.toStates = states;
          this.fsm.addTransitions(this);
        }
        toAny(states) {
          var toStates = [];
          for (var s in states) states.hasOwnProperty(s) && toStates.push(states[s]);
          this.toStates = toStates;
          this.fsm.addTransitions(this);
        }
      }
      typestate.Transitions = Transitions;
      class TransitionFunction {
        constructor(fsm, from, to) {
          this.fsm = fsm;
          this.from = from;
          this.to = to;
        }
      }
      typestate.TransitionFunction = TransitionFunction;
      class FiniteStateMachine {
        constructor(startState, allowImplicitSelfTransition = false) {
          this._transitionFunctions = [];
          this._onCallbacks = {};
          this._exitCallbacks = {};
          this._enterCallbacks = {};
          this._invalidTransitionCallback = null;
          this.currentState = startState;
          this._startState = startState;
          this._allowImplicitSelfTransition = allowImplicitSelfTransition;
        }
        addTransitions(fcn) {
          fcn.fromStates.forEach(from => {
            fcn.toStates.forEach(to => {
              this._canGo(from, to) || this._transitionFunctions.push(new TransitionFunction(this, from, to));
            });
          });
        }
        on(state, callback) {
          var key = state.toString();
          this._onCallbacks[key] || (this._onCallbacks[key] = []);
          this._onCallbacks[key].push(callback);
          return this;
        }
        onEnter(state, callback) {
          var key = state.toString();
          this._enterCallbacks[key] || (this._enterCallbacks[key] = []);
          this._enterCallbacks[key].push(callback);
          return this;
        }
        onExit(state, callback) {
          var key = state.toString();
          this._exitCallbacks[key] || (this._exitCallbacks[key] = []);
          this._exitCallbacks[key].push(callback);
          return this;
        }
        onInvalidTransition(callback) {
          this._invalidTransitionCallback || (this._invalidTransitionCallback = callback);
          return this;
        }
        from(...states) {
          var _transition = new Transitions(this);
          _transition.fromStates = states;
          return _transition;
        }
        fromAny(states) {
          var fromStates = [];
          for (var s in states) states.hasOwnProperty(s) && fromStates.push(states[s]);
          var _transition = new Transitions(this);
          _transition.fromStates = fromStates;
          return _transition;
        }
        _validTransition(from, to) {
          return this._transitionFunctions.some(tf => tf.from === from && tf.to === to);
        }
        _canGo(fromState, toState) {
          return this._allowImplicitSelfTransition && fromState === toState || this._validTransition(fromState, toState);
        }
        canGo(state) {
          return this._canGo(this.currentState, state);
        }
        go(state, event) {
          if (this.canGo(state)) this._transitionTo(state, event); else if (!this._invalidTransitionCallback || !this._invalidTransitionCallback(this.currentState, state)) throw new Error("Error no transition function exists from state " + this.currentState.toString() + " to " + state.toString());
        }
        onTransition(from, to, event) {}
        reset(options) {
          options = Object.assign(Object.assign({}, typestate.DefaultResetOptions), options || {});
          this.currentState = this._startState;
          options.runCallbacks && this._onCallbacks[this.currentState.toString()].forEach(fcn => {
            fcn.call(this, null, null);
          });
        }
        is(state) {
          return this.currentState === state;
        }
        _transitionTo(state, event) {
          this._exitCallbacks[this.currentState.toString()] || (this._exitCallbacks[this.currentState.toString()] = []);
          this._enterCallbacks[state.toString()] || (this._enterCallbacks[state.toString()] = []);
          this._onCallbacks[state.toString()] || (this._onCallbacks[state.toString()] = []);
          var canExit = true;
          for (var exitCallback of this._exitCallbacks[this.currentState.toString()]) {
            let returnValue = exitCallback.call(this, state);
            void 0 === returnValue && (returnValue = true);
            void 0 === returnValue && (returnValue = true);
            canExit = canExit && returnValue;
          }
          var canEnter = true;
          for (var enterCallback of this._enterCallbacks[state.toString()]) {
            let returnValue = enterCallback.call(this, this.currentState, event);
            void 0 === returnValue && (returnValue = true);
            void 0 === returnValue && (returnValue = true);
            canEnter = canEnter && returnValue;
          }
          if (canExit && canEnter) {
            var old = this.currentState;
            this.currentState = state;
            this._onCallbacks[this.currentState.toString()].forEach(fcn => {
              fcn.call(this, old, event);
            });
            this.onTransition(old, state, event);
          }
        }
      }
      typestate.FiniteStateMachine = FiniteStateMachine;
      typestate.DefaultResetOptions = {
        runCallbacks: false
      };
    })(typestate = exports.typestate || (exports.typestate = {}));
    exports.TypeState = typestate;
    cc._RF.pop();
  }, {} ],
  use_reversed_rotateBy: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e8389dkBf9BWIOHD+34SyOf", "use_reversed_rotateBy");
    "use strict";
    cc.RotateBy._reverse = true;
    cc._RF.pop();
  }, {} ],
  "use_v2.0.x_cc.Toggle_event": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0f5af8Gi85F6qbrBhYQwhDp", "use_v2.0.x_cc.Toggle_event");
    "use strict";
    cc.Toggle && (cc.Toggle._triggerEventInScript_check = true);
    cc._RF.pop();
  }, {} ],
  "use_v2.1-2.2.1_cc.Toggle_event": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "88186cfmn1NkLwU778pv7ua", "use_v2.1-2.2.1_cc.Toggle_event");
    "use strict";
    cc.Toggle && (cc.Toggle._triggerEventInScript_isChecked = true);
    cc._RF.pop();
  }, {} ],
  "use_v2.1.x_cc.Action": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5cc981HrDRBw4KsnOivtpaH", "use_v2.1.x_cc.Action");
    "use strict";
    cc.macro.ROTATE_ACTION_CCW = true;
    cc._RF.pop();
  }, {} ],
  utf16: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7b911+hOMZG9awTInkFGV6i", "utf16");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utf16 = exports.utf16be = void 0;
    const util_1 = require("../util/util");
    class Utf16BECodec {
      constructor() {
        this.encoder = Utf16BEEncoder;
        this.decoder = Utf16BEDecoder;
        this.bomAware = true;
      }
    }
    class Utf16BEEncoder {
      constructor() {}
      write(str) {
        let buf = util_1.strToBuf(str);
        let bufView = new Uint8Array(buf);
        for (let i = 0; i < buf.byteLength; i += 2) {
          let tmp = bufView[i];
          bufView[i] = bufView[i + 1];
          bufView[i + 1] = tmp;
        }
        return buf;
      }
      end() {}
    }
    class Utf16BEDecoder {
      constructor() {
        this.overflowByte = -1;
      }
      write(buf) {
        let bufView = new Uint8Array(buf);
        if (0 == buf.byteLength) return "";
        let buf2 = new ArrayBuffer(buf.byteLength + 1), buf2View = new Uint8Array(buf2), i = 0, j = 0;
        if (-1 !== this.overflowByte) {
          buf2View[0] = bufView[0];
          buf2View[1] = this.overflowByte;
          i = 1;
          j = 2;
        }
        for (;i < buf.byteLength - 1; i += 2, j += 2) {
          buf2View[j] = bufView[i + 1];
          buf2View[j + 1] = bufView[i];
        }
        this.overflowByte = i == buf.byteLength - 1 ? bufView[buf.byteLength - 1] : -1;
        return util_1.bufToStr(buf2.slice(0, j));
      }
      end() {}
    }
    class Utf16Codec {
      constructor(codecOptions, iconv) {
        this.encoder = Utf16Encoder;
        this.decoder = Utf16Decoder;
        this.iconv = iconv;
      }
    }
    class Utf16Encoder {
      constructor(options, codec) {
        options = options || {};
        void 0 === options.addBOM && (options.addBOM = true);
        this.encoder = codec.iconv.getEncoder("utf-16le", options);
      }
      write(str) {
        return this.encoder.write(str);
      }
      end() {
        return this.encoder.end();
      }
    }
    class Utf16Decoder {
      constructor(options, codec) {
        this.initialBytesLen = 0;
        this.decoder = null;
        this.initialBytes = [];
        this.initialBytesLen = 0;
        this.options = options || {};
        this.iconv = codec.iconv;
      }
      write(buf) {
        if (!this.decoder) {
          this.initialBytes.push(buf);
          this.initialBytesLen += buf.byteLength;
          if (this.initialBytesLen < 16) return "";
          buf = util_1.concatBuf(this.initialBytes);
          let encoding = util_1.detectEncoding(buf, this.options.defaultEncoding);
          this.decoder = this.iconv.getDecoder(encoding, this.options);
          this.initialBytes.length = this.initialBytesLen = 0;
        }
        return this.decoder.write(buf);
      }
      end() {
        if (!this.decoder) {
          let buf = util_1.concatBuf(this.initialBytes), encoding = util_1.detectEncoding(buf, this.options.defaultEncoding);
          this.decoder = this.iconv.getDecoder(encoding, this.options);
          let res = this.decoder.write(buf), trail = this.decoder.end();
          return trail ? res + trail : res;
        }
        return this.decoder.end();
      }
    }
    exports.utf16be = Utf16BECodec;
    exports.utf16 = Utf16Codec;
    cc._RF.pop();
  }, {
    "../util/util": "util"
  } ],
  utf7: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4e4b5g/PcJOzLr+NtTeXbav", "utf7");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utf7imap = exports.unicode11utf7 = exports.utf7 = void 0;
    const util_1 = require("../util/util");
    let nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
    class Utf7Codec {
      constructor(codecOptions, iconv) {
        this.encoder = Utf7Encoder;
        this.decoder = Utf7Decoder;
        this.bomAware = true;
        this.iconv = iconv;
      }
    }
    class Utf7Encoder {
      constructor(options, codec) {
        this.iconv = codec.iconv;
      }
      write(str) {
        return util_1.strToBuf(str.replace(nonDirectChars, function(chunk) {
          return "+" + ("+" === chunk ? "" : this.iconv.encode(chunk, "utf16-be").toString("base64").replace(/=+$/, "")) + "-";
        }.bind(this)));
      }
      end() {}
    }
    let base64Regex = /[A-Za-z0-9\/+]/;
    let base64Chars = [];
    for (let i = 0; i < 256; i++) base64Chars[i] = base64Regex.test(String.fromCharCode(i));
    let plusChar = "+".charCodeAt(0), minusChar = "-".charCodeAt(0), andChar = "&".charCodeAt(0);
    class Utf7Decoder {
      constructor(options, codec) {
        this.iconv = codec.iconv;
        this.inBase64 = false;
        this.base64Accum = "";
      }
      write(buf) {
        let res = "", lastI = 0, inBase64 = this.inBase64, bufView = new Uint8Array(buf), base64Accum = this.base64Accum;
        for (let i = 0; i < buf.byteLength; i++) if (inBase64) {
          if (!base64Chars[bufView[i]]) {
            if (i == lastI && bufView[i] == minusChar) res += "+"; else {
              let b64str = base64Accum + buf.slice(lastI, i).toString();
              res += this.iconv.decode(util_1.strToBuf(b64str, "base64"), "utf16-be");
            }
            bufView[i] != minusChar && i--;
            lastI = i + 1;
            inBase64 = false;
            base64Accum = "";
          }
        } else if (bufView[i] == plusChar) {
          res += this.iconv.decode(buf.slice(lastI, i), "ascii");
          lastI = i + 1;
          inBase64 = true;
        }
        if (inBase64) {
          let b64str = base64Accum + buf.slice(lastI).toString();
          let canBeDecoded = b64str.length - b64str.length % 8;
          base64Accum = b64str.slice(canBeDecoded);
          b64str = b64str.slice(0, canBeDecoded);
          res += this.iconv.decode(util_1.strToBuf(b64str, "base64"), "utf16-be");
        } else res += this.iconv.decode(buf.slice(lastI), "ascii");
        this.inBase64 = inBase64;
        this.base64Accum = base64Accum;
        return res;
      }
      end() {
        let res = "";
        this.inBase64 && this.base64Accum.length > 0 && (res = this.iconv.decode(util_1.strToBuf(this.base64Accum, "base64"), "utf16-be"));
        this.inBase64 = false;
        this.base64Accum = "";
        return res;
      }
    }
    class Utf7IMAPCodec {
      constructor(codecOptions, iconv) {
        this.encoder = Utf7IMAPEncoder;
        this.decoder = Utf7IMAPDecoder;
        this.bomAware = true;
        this.iconv = iconv;
      }
    }
    class Utf7IMAPEncoder {
      constructor(options, codec) {
        this.iconv = codec.iconv;
        this.inBase64 = false;
        this.base64Accum = new ArrayBuffer(6);
        this.base64AccumV = new Uint8Array(this.base64Accum);
        this.base64AccumIdx = 0;
      }
      write(str) {
        let inBase64 = this.inBase64, base64Accum = this.base64Accum, base64AccumV = this.base64AccumV, base64AccumIdx = this.base64AccumIdx, buf = new ArrayBuffer(5 * str.length + 10), bufIdx = 0, bufView = new Uint8Array(buf);
        for (let i = 0; i < str.length; i++) {
          let uChar = str.charCodeAt(i);
          if (32 <= uChar && uChar <= 126) {
            if (inBase64) {
              if (base64AccumIdx > 0) {
                bufIdx += util_1.writeBuf(buf, util_1.bufToStr(base64Accum.slice(0, base64AccumIdx), "base64").replace(/\//g, ",").replace(/=+$/, ""), bufIdx);
                base64AccumIdx = 0;
              }
              bufView[bufIdx++] = minusChar;
              inBase64 = false;
            }
            if (!inBase64) {
              bufView[bufIdx++] = uChar;
              uChar === andChar && (bufView[bufIdx++] = minusChar);
            }
          } else {
            if (!inBase64) {
              bufView[bufIdx++] = andChar;
              inBase64 = true;
            }
            if (inBase64) {
              base64Accum[base64AccumIdx++] = uChar >> 8;
              base64Accum[base64AccumIdx++] = 255 & uChar;
              if (base64AccumIdx == base64Accum.byteLength) {
                bufIdx += util_1.writeBuf(buf, util_1.bufToStr(base64Accum, "base64").replace(/\//g, ","), bufIdx);
                base64AccumIdx = 0;
              }
            }
          }
        }
        this.inBase64 = inBase64;
        this.base64AccumIdx = base64AccumIdx;
        return buf.slice(0, bufIdx);
      }
      end() {
        let buf = new ArrayBuffer(10), bufIdx = 0;
        let bufView = new Uint8Array(buf);
        if (this.inBase64) {
          if (this.base64AccumIdx > 0) {
            bufIdx += util_1.writeBuf(buf, util_1.bufToStr(this.base64Accum.slice(0, this.base64AccumIdx), "base64").replace(/\//g, ",").replace(/=+$/, ""), bufIdx);
            this.base64AccumIdx = 0;
          }
          bufView[bufIdx++] = minusChar;
          this.inBase64 = false;
        }
        return buf.slice(0, bufIdx);
      }
    }
    let base64IMAPChars = base64Chars.slice();
    base64IMAPChars[",".charCodeAt(0)] = true;
    class Utf7IMAPDecoder {
      constructor(options, codec) {
        this.iconv = codec.iconv;
        this.inBase64 = false;
        this.base64Accum = "";
      }
      write(buf) {
        let bufView = new Uint8Array(buf), res = "", lastI = 0, inBase64 = this.inBase64, base64Accum = this.base64Accum;
        for (let i = 0; i < buf.byteLength; i++) if (inBase64) {
          if (!base64IMAPChars[bufView[i]]) {
            if (i == lastI && bufView[i] == minusChar) res += "&"; else {
              let b64str = base64Accum + util_1.bufToStr(buf.slice(lastI, i)).replace(/,/g, "/");
              res += this.iconv.decode(util_1.strToBuf(b64str, "base64"), "utf16-be");
            }
            bufView[i] != minusChar && i--;
            lastI = i + 1;
            inBase64 = false;
            base64Accum = "";
          }
        } else if (bufView[i] == andChar) {
          res += this.iconv.decode(buf.slice(lastI, i), "ascii");
          lastI = i + 1;
          inBase64 = true;
        }
        if (inBase64) {
          let b64str = base64Accum + util_1.bufToStr(buf.slice(lastI)).replace(/,/g, "/");
          let canBeDecoded = b64str.length - b64str.length % 8;
          base64Accum = b64str.slice(canBeDecoded);
          b64str = b64str.slice(0, canBeDecoded);
          res += this.iconv.decode(util_1.strToBuf(b64str, "base64"), "utf16-be");
        } else res += this.iconv.decode(buf.slice(lastI), "ascii");
        this.inBase64 = inBase64;
        this.base64Accum = base64Accum;
        return res;
      }
      end() {
        let res = "";
        this.inBase64 && this.base64Accum.length > 0 && (res = this.iconv.decode(util_1.strToBuf(this.base64Accum, "base64"), "utf16-be"));
        this.inBase64 = false;
        this.base64Accum = "";
        return res;
      }
    }
    exports.utf7 = Utf7Codec;
    exports.unicode11utf7 = "utf7";
    exports.utf7imap = Utf7IMAPCodec;
    cc._RF.pop();
  }, {
    "../util/util": "util"
  } ],
  utils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fc8b4DRTWJAA75tm+CNGo8m", "utils");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utils = void 0;
    const events_1 = require("./events");
    const Iconv_1 = require("../thirdparty/iconv-lite-ts2/lib/Iconv");
    const global_define_1 = require("../lobby/global_define");
    const md5_1 = require("./md5");
    const global_data_1 = require("../lobby/global_data");
    const httprequest_1 = require("./httprequest");
    var utils;
    (function(utils) {
      function on(name, target, func) {
        events_1.event.register_event(name, target, func);
      }
      utils.on = on;
      function off(name, target, func = null) {
        events_1.event.unregister_event(name, target, func);
      }
      utils.off = off;
      function send(name, ...param) {
        events_1.event.trigger_event(name, param[0], param[1], param[2], param[3], param[4], param[5], param[6], param[7], param[8], param[9]);
      }
      utils.send = send;
      function md5(data) {
        return md5_1.md5(data);
      }
      utils.md5 = md5;
      function hmac(message, key) {
        const CryptoJS = window.require("src/assets/Script/Framework/thirdparty/crypto-js");
        return CryptoJS.HmacSHA256(message, key).toString();
      }
      utils.hmac = hmac;
      function int64LE_to_number(bytes) {
        let sign = bytes[7] >> 7;
        let sum = 0;
        let digits = 1;
        for (let i = 0; i < 8; i++) {
          let value = bytes[i];
          sum += (sign ? 255 ^ value : value) * digits;
          digits *= 256;
        }
        if (sum >= global_define_1.CONST.MAX_INT64) return sign ? -Infinity : Infinity;
        return sign ? -1 - sum : sum;
      }
      utils.int64LE_to_number = int64LE_to_number;
      function number_to_Int64LE(number) {
        let result = [];
        let sign = number < 0;
        sign && (number = -1 - number);
        for (let i = 0; i < 8; i++) {
          let mod = number % 256;
          number = (number - mod) / 256;
          result[i] = sign ? 255 ^ mod : mod;
        }
        return result;
      }
      utils.number_to_Int64LE = number_to_Int64LE;
      function to_json(value) {
        return value ? JSON.stringify(value) : null;
      }
      utils.to_json = to_json;
      function from_json(value) {
        if (value) try {
          return JSON.parse(value);
        } catch (e) {
          console.log(`JSON.parse exception: ${e}, ${value.length}, ${value}`);
          return null;
        }
        return null;
      }
      utils.from_json = from_json;
      function getGUID() {
        return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(c) {
          var r = 16 * Math.random() | 0, v = "x" == c ? r : 3 & r | 8;
          return v.toString(16);
        });
      }
      utils.getGUID = getGUID;
      function gbk_2_utf8(s) {
        if ("string" == typeof s) {
          let ab = new ArrayBuffer(s.length);
          let dv = new DataView(ab);
          for (let i = 0; i < s.length; ++i) dv.setUint8(i, s.charCodeAt(i));
          var out = new Iconv_1.Iconv().decode(ab, "gbk");
          return out;
        }
        return new Iconv_1.Iconv().decode(s, "gbk");
      }
      utils.gbk_2_utf8 = gbk_2_utf8;
      function utf8_2_gbk(s) {
        let temp_buff = new Iconv_1.Iconv().encode(s + "", "gbk");
        return temp_buff;
      }
      utils.utf8_2_gbk = utf8_2_gbk;
      function is_ios() {
        return cc.sys.os === cc.sys.OS_IOS;
      }
      utils.is_ios = is_ios;
      function is_window() {
        return cc.sys.os === cc.sys.OS_WINDOWS;
      }
      utils.is_window = is_window;
      function is_wechat() {
        return cc.sys.platform === cc.sys.WECHAT_GAME;
      }
      utils.is_wechat = is_wechat;
      function is_oppo() {
        return cc.sys.platform === cc.sys.OPPO_GAME;
      }
      utils.is_oppo = is_oppo;
      function is_vivo() {
        return cc.sys.platform === cc.sys.VIVO_GAME;
      }
      utils.is_vivo = is_vivo;
      function is_baidu() {
        return cc.sys.platform === cc.sys.BAIDU_GAME;
      }
      utils.is_baidu = is_baidu;
      function is_huawei() {
        return cc.sys.platform === cc.sys.HUAWEI_GAME;
      }
      utils.is_huawei = is_huawei;
      function is_qq() {
        return cc.sys.platform === cc.sys.QQ_PLAY;
      }
      utils.is_qq = is_qq;
      function is_mi() {
        return cc.sys.platform === cc.sys.XIAOMI_GAME;
      }
      utils.is_mi = is_mi;
      function string_replace_quot(str_source) {
        str_source = str_source.replace(/&quot;/g, '"');
        return str_source;
      }
      utils.string_replace_quot = string_replace_quot;
      function string_replace_any(str_source, str_key, any_value) {
        return "string" == typeof any_value ? string_replace_key(str_source, str_key, any_value) : string_replace_key_with_integer(str_source, str_key, any_value);
      }
      utils.string_replace_any = string_replace_any;
      function string_replace_key(str_source, str_key, str_value) {
        str_source = str_source.replace(new RegExp(str_key, "g"), str_value);
        return str_source;
      }
      utils.string_replace_key = string_replace_key;
      function string_replace_key_with_integer(str_source, str_key, int_value) {
        str_source = str_source.replace(new RegExp(str_key, "g"), int_value.toString());
        return str_source;
      }
      utils.string_replace_key_with_integer = string_replace_key_with_integer;
      function random_int(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
      }
      utils.random_int = random_int;
      function ab2str(buf, bit8 = false) {
        return bit8 ? String.fromCharCode.apply(null, new Uint8Array(buf)) : String.fromCharCode.apply(null, new Uint16Array(buf));
      }
      utils.ab2str = ab2str;
      function str2ab(str) {
        var buf = new ArrayBuffer(2 * str.length);
        var bufView = new Uint16Array(buf);
        var i = 0;
        for (let strLen = str.length; i < strLen; i++) bufView[i] = str.charCodeAt(i);
        return buf;
      }
      utils.str2ab = str2ab;
      function is_empty_object(e) {
        for (let t in e) return false;
        return true;
      }
      utils.is_empty_object = is_empty_object;
      function compare_version(v1s, v2s) {
        let v1 = v1s.split(".");
        let v2 = v2s.split(".");
        let len = Math.max(v1.length, v2.length);
        while (v1.length < len) v1.push("0");
        while (v2.length < len) v2.push("0");
        for (let i = 0; i < len; i++) {
          let num1 = parseInt(v1[i]);
          let num2 = parseInt(v2[i]);
          if (num1 > num2) return 1;
          if (num1 < num2) return -1;
        }
        return 0;
      }
      utils.compare_version = compare_version;
      function get_game_res_name(game_id, res_name) {
        return "Game/" + game_id + "/LobbyRes/" + res_name;
      }
      utils.get_game_res_name = get_game_res_name;
      function get_gift_texture_name(giftIndex, state, stateIndex = -1) {
        if (-1 == stateIndex) return "Gift-" + giftIndex + "-" + state;
        return "Gift-" + giftIndex + "-" + state + String(stateIndex + 1);
      }
      utils.get_gift_texture_name = get_gift_texture_name;
      function parse_game_message_data(data, gbk2utf8) {
        void 0 === gbk2utf8 && (gbk2utf8 = true);
        let game_json = "{}";
        if (null != data && data.byteLength > 2) {
          let dv = new DataView(data);
          var array = new Uint8Array(dv.buffer, 0, dv.byteLength);
          -1 != array.indexOf(0) && (array = array.subarray(0, array.indexOf(0)));
          game_json = String.fromCharCode.apply(null, array);
        }
        gbk2utf8 && (game_json = utils.gbk_2_utf8(game_json));
        let json = utils.from_json(game_json);
        return json;
      }
      utils.parse_game_message_data = parse_game_message_data;
      function parse_lua_text(luaString) {
        luaString = luaString.replace(/\r\n/g, "");
        luaString = luaString.replace(/\n/g, "");
        luaString = luaString.replace(/&quot;/g, '"');
        let ret = {};
        try {
          let statementsArray = luaString.split(";");
          statementsArray.forEach(element => {
            if ("" != element) {
              let ct = element.split("=");
              '"' == ct[1][0] && (ct[1] = ct[1].substring(1, ct[1].length - 1));
              ret[ct[0]] = ct[1];
            }
          });
        } catch (e) {}
        return ret;
      }
      utils.parse_lua_text = parse_lua_text;
      function get_last_game_location() {
        let last_game_location = getLocalStorage("last_game_location");
        last_game_location || (last_game_location = "0");
        return last_game_location;
      }
      utils.get_last_game_location = get_last_game_location;
      function format_gold_string(gold) {
        let g = "string" == typeof gold ? parseInt(gold, 10) : gold;
        if (g > 1e6) {
          let w = g / 1e4;
          return Math.floor(w) + "\u4e07";
        }
        return g.toString();
      }
      utils.format_gold_string = format_gold_string;
      function gift_id_to_resource_id(giftId) {
        if (0 == giftId) return 1011;
        if (1 == giftId) return 1012;
        if (2 == giftId) return 1013;
        if (3 == giftId) return 1014;
        if (4 == giftId) return 1015;
      }
      utils.gift_id_to_resource_id = gift_id_to_resource_id;
      function resource_id_to_gift_id(resourceId) {
        if (1011 == resourceId) return 0;
        if (1012 == resourceId) return 1;
        if (1013 == resourceId) return 2;
        if (1014 == resourceId) return 3;
        if (1015 == resourceId) return 4;
      }
      utils.resource_id_to_gift_id = resource_id_to_gift_id;
      function clamp_nickname(name, length = 5) {
        if (!name) return "";
        let size = 0;
        for (let i = 0; i < name.length; i++) {
          size += name.charCodeAt(i) > 255 ? 2 : 1;
          if (size > 2 * length) {
            if (i == name.length - 1) return name;
            return name.slice(0, i) + "\u2026";
          }
        }
        return name;
      }
      utils.clamp_nickname = clamp_nickname;
      function reward_label_text(id, cnt) {
        if (id == global_define_1.CONST.ID_PROP_GOLD) return cnt + "\u91d1\u5e01";
        if (id == global_define_1.CONST.ID_PROP_INGOT) return cnt + "\u5143\u5b9d";
        return global_data_1.global_data.get_prop_data_by_id(id)._str_name + "x" + cnt;
      }
      utils.reward_label_text = reward_label_text;
      function send_http_request_old(obj) {
        utils.show_loading("\u6b63\u5728\u9886\u53d6\u5956\u52b1...");
        let str_param = utils.md5(obj.url + "8062e5d0872bc6f6");
        let xhr = new httprequest_1.httprequest();
        xhr.onReply = response => {
          utils.hide_loading();
          let res = utils.from_json(response);
          if (res && 1 == res.Result_code) {
            utils.show_hint(res.Result_msg);
            obj.success && obj.success(res);
            obj.complete && obj.complete();
          } else {
            utils.show_hint(res.Result_msg);
            obj.fail && obj.fail(res);
            obj.complete && obj.complete();
          }
        };
        xhr.onError = res => {
          utils.hide_loading();
          utils.show_hint(res);
          obj.fail && obj.fail(res);
          obj.complete && obj.complete();
        };
        xhr.onProgress = timeLeft => {
          obj.progress && obj.progress(timeLeft);
        };
        xhr.send(obj.url, "POST", str_param);
      }
      utils.send_http_request_old = send_http_request_old;
      function send_http_request(obj) {
        void 0 === obj.method && (obj.method = "GET");
        void 0 === obj.hint && (obj.hint = true);
        let err_func = msg => {
          obj.hint && utils.show_hint(msg);
          obj.fail && obj.fail(msg);
          obj.complete && obj.complete();
        };
        if (!obj.url) {
          err_func("\u76ee\u6807\u5730\u5740\u65e0\u6548\uff01");
          return;
        }
        if (!global_data_1.global_data.connected) {
          err_func("\u8bf7\u6c42\u6570\u636e\u5931\u8d25\uff0c\u8bf7\u67e5\u770b\u5f53\u524d\u7f51\u7edc\u72b6\u6001\uff01");
          return;
        }
        let xhr = new httprequest_1.httprequest();
        xhr.onReply = response => {
          if (!response) {
            err_func("\u8bf7\u6c42\u5931\u8d25\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5(0)");
            return;
          }
          let res = utils.from_json(response);
          if (!res) {
            err_func("\u8bf7\u6c42\u5931\u8d25\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5(1)");
            return;
          }
          let code = res.rescode;
          let message = res.resmsg;
          if (1 != code) {
            err_func(message + "(" + code + ")");
            return;
          }
          obj.success && obj.success(res.resdata, res.resmsg, res);
          obj.complete && obj.complete();
        };
        xhr.onError = response => {
          err_func("\u8bf7\u6c42\u5931\u8d25\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5(2)");
        };
        xhr.onProgress = timeLeft => {
          obj.progress && obj.progress(timeLeft);
        };
        "POST" == obj.method ? xhr.send(obj.url, "POST", obj.data) : xhr.send(obj.url, "GET");
      }
      utils.send_http_request = send_http_request;
      function show_message_box(obj) {
        utils.send("ShowUI", "MessageBox", obj);
      }
      utils.show_message_box = show_message_box;
      function show_loading(text, hideBack = false, hideSprite = false) {
        utils.send("ShowUI", "LoadingScreen", {
          text: text,
          hideBack: hideBack,
          hideSprite: hideSprite
        });
      }
      utils.show_loading = show_loading;
      function show_loading_cancel(text) {
        utils.send("ShowUI", "LoadingScreenCancel", text);
      }
      utils.show_loading_cancel = show_loading_cancel;
      function show_loading_text(text) {
        utils.send("ShowUI", "LoadingScreenText", text);
      }
      utils.show_loading_text = show_loading_text;
      function hide_loading() {
        utils.send("HideUI", "LoadingScreen");
      }
      utils.hide_loading = hide_loading;
      function show_hint(text) {
        utils.send("ShowUI", "MessageHint", text);
      }
      utils.show_hint = show_hint;
      function show_get_reward(reward_list) {
        utils.send("ShowUI", "GetReward", reward_list);
      }
      utils.show_get_reward = show_get_reward;
      function load_json_res(obj) {
        cc.resources.load(obj.path, cc.JsonAsset, (error, jsonAsset) => {
          if (error) {
            obj.nocheck || console.error("load_json_res failed: ", error);
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(jsonAsset);
          obj.complete && obj.complete();
        });
      }
      utils.load_json_res = load_json_res;
      function load_atlas_res(obj) {
        cc.resources.load(obj.path, cc.SpriteAtlas, (error, atlas) => {
          if (error) {
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(atlas);
          obj.complete && obj.complete();
        });
      }
      utils.load_atlas_res = load_atlas_res;
      function load_atlas_res_dir(obj) {
        cc.resources.loadDir(obj.path, cc.SpriteAtlas, (error, atlas) => {
          if (error) {
            obj.nocheck || console.error("load_atlas_res_dir failed: " + error.message);
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(atlas, []);
          obj.complete && obj.complete();
        });
      }
      utils.load_atlas_res_dir = load_atlas_res_dir;
      function load_sprite_res(obj) {
        cc.resources.load(obj.path, cc.SpriteFrame, (error, sprite) => {
          if (error) {
            obj.nocheck || console.error("load_sprite_res failed: " + error.message);
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(sprite);
          obj.complete && obj.complete();
        });
      }
      utils.load_sprite_res = load_sprite_res;
      function load_texture_res(obj) {
        cc.resources.load(obj.path, cc.Texture2D, (error, tex) => {
          if (error) {
            obj.nocheck || console.error("load_texture_res failed: " + error.message);
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(tex);
          obj.complete && obj.complete();
        });
      }
      utils.load_texture_res = load_texture_res;
      function load_texture_res_dir(obj) {
        cc.resources.loadDir(obj.path, cc.Texture2D, (error, texs) => {
          if (error) {
            obj.nocheck || console.error("load_texture_res_dir failed: " + error.message);
            obj.fail && obj.fail({
              errMsg: error.message
            });
            obj.complete && obj.complete();
            return;
          }
          obj.success && obj.success(texs, []);
          obj.complete && obj.complete();
        });
      }
      utils.load_texture_res_dir = load_texture_res_dir;
      function load_web_spriteframe_by_id(sprite, id) {
        if (global_data_1.global_data.webSpriteFrameCache.has("Exchange_prop_" + id)) sprite.spriteFrame = global_data_1.global_data.webSpriteFrameCache.get("Exchange_prop_" + id); else {
          let imgUrl = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WXGAME_RES) + "/props/prop_" + id + ".png";
          let that = this;
          cc.assetManager.loadRemote(imgUrl, function(err, tex) {
            if (err) {
              console.error(err, tex);
              return;
            }
            let t = new cc.SpriteFrame(tex);
            global_data_1.global_data.webSpriteFrameCache.set("Exchange_prop_" + id, t);
            sprite.spriteFrame = t;
          });
        }
      }
      utils.load_web_spriteframe_by_id = load_web_spriteframe_by_id;
      function load_web_spriteframe_by_path(sprite, path) {
        if (global_data_1.global_data.webSpriteFrameCache.has(path)) sprite.spriteFrame = global_data_1.global_data.webSpriteFrameCache.get(path); else {
          let imgUrl = global_data_1.global_data.make_url(global_define_1.CONST.HTTP_WXGAME_RES) + "/" + path;
          try {
            cc.assetManager.loadRemote(imgUrl, (err, tex) => {
              if (err) return;
              let t = new cc.SpriteFrame(tex);
              global_data_1.global_data.webSpriteFrameCache.set(path, t);
              sprite.spriteFrame = t;
            });
          } catch (error) {}
        }
      }
      utils.load_web_spriteframe_by_path = load_web_spriteframe_by_path;
      function load_web_task_spriteframe(sprite, name) {
        load_web_spriteframe_by_path(sprite, "minigame/5000/" + name);
      }
      utils.load_web_task_spriteframe = load_web_task_spriteframe;
      function setLocalStorage(key, value) {
        cc.sys.localStorage.setItem(key, value);
      }
      utils.setLocalStorage = setLocalStorage;
      function getLocalStorage(key) {
        return cc.sys.localStorage.getItem(key);
      }
      utils.getLocalStorage = getLocalStorage;
      function load_simple_button(obj) {
        let sprite = new cc.Node(obj.name).addComponent(cc.Sprite);
        sprite.node.setPosition(0, 0);
        cc.resources.load(obj.sprite, cc.SpriteFrame, (err, sp) => {
          if (err) {
            cc.error(err.message || err);
            obj.complete && obj.complete(null);
            return;
          }
          sprite.spriteFrame = sp;
          sprite.type = cc.Sprite.Type.SIMPLE;
          sprite.sizeMode = cc.Sprite.SizeMode.TRIMMED;
          sprite.trim = true;
          let btn = sprite.node.addComponent(cc.Button);
          btn.transition = cc.Button.Transition.SCALE;
          btn.zoomScale = .9;
          obj.complete && obj.complete(btn);
        });
      }
      utils.load_simple_button = load_simple_button;
      function load_simple_prefab(name) {
        cc.resources.load(name, cc.Prefab, (err, prefab) => {
          add_instance_to_root(prefab, cc.Canvas.instance.node);
        });
      }
      utils.load_simple_prefab = load_simple_prefab;
      function add_instance_to_root(prefab, root, comp) {
        if (cc.isValid(prefab)) {
          var inst = cc.instantiate(prefab);
          inst.setParent(root);
          return comp ? inst.getComponent(comp) : null;
        }
        return null;
      }
      utils.add_instance_to_root = add_instance_to_root;
      function print_node(n) {
        while (n) {
          console.log(`name: ${n.name}, active: ${n.active}, pos: (${n.position.x},${n.position.y}), anchor: (${n.anchorX}, ${n.anchorY}), width: ${n.width}, height: ${n.height}, scale: ${n.scale}, z: ${n.zIndex}`);
          n = n.getParent();
        }
      }
      utils.print_node = print_node;
      function print_object(obj, name) {
        name = name ? `${name}: ` : "";
        if (null == obj) {
          console.log(`${name}null`);
          return;
        }
        console.log(`${name}${JSON.stringify(obj)}`);
      }
      utils.print_object = print_object;
      function run_action_rotate_forever(node, duration, clockwise) {
        if (cc.isValid(node)) {
          node.angle = 0;
          node.stopAllActions();
          let t = duration / 4;
          let angle = clockwise ? -90 : 90;
          node.runAction(cc.sequence(cc.rotateTo(t, angle), cc.rotateTo(t, 2 * angle), cc.rotateTo(t, 3 * angle), cc.rotateTo(t, 4 * angle)).repeatForever());
        }
      }
      utils.run_action_rotate_forever = run_action_rotate_forever;
      function bind_button_event(button, target, component, handler) {
        var clickEventHandler = new cc.Component.EventHandler();
        clickEventHandler.target = target;
        clickEventHandler.component = component;
        clickEventHandler.handler = handler;
        button.clickEvents.push(clickEventHandler);
        utils.send("BindCommonClickHandler", button);
      }
      utils.bind_button_event = bind_button_event;
      function set_button_handler(button, target, component, handler, customEventData) {
        button.clickEvents = [];
        var clickEventHandler = new cc.Component.EventHandler();
        clickEventHandler.target = target;
        clickEventHandler.component = component;
        clickEventHandler.handler = handler;
        customEventData && (clickEventHandler.customEventData = customEventData);
        button.clickEvents.push(clickEventHandler);
        utils.send("BindCommonClickHandler", button);
      }
      utils.set_button_handler = set_button_handler;
      function bind_toggle_event(toggle, target, component, handler) {
        var clickEventHandler = new cc.Component.EventHandler();
        clickEventHandler.target = target;
        clickEventHandler.component = component;
        clickEventHandler.handler = handler;
        toggle.clickEvents.push(clickEventHandler);
        utils.send("BindCommonClickHandler", toggle);
      }
      utils.bind_toggle_event = bind_toggle_event;
      function set_toggle_handler(toggle, target, component, handler, customEventData) {
        toggle.checkEvents = [];
        var clickEventHandler = new cc.Component.EventHandler();
        clickEventHandler.target = target;
        clickEventHandler.component = component;
        clickEventHandler.handler = handler;
        customEventData && (clickEventHandler.customEventData = customEventData);
        toggle.checkEvents.push(clickEventHandler);
        utils.send("BindCommonClickHandler", toggle);
      }
      utils.set_toggle_handler = set_toggle_handler;
      function bind_slider_event(slider, target, component, handler) {
        var sliderEventHandler = new cc.Component.EventHandler();
        sliderEventHandler.target = target;
        sliderEventHandler.component = component;
        sliderEventHandler.handler = handler;
        slider.slideEvents.push(sliderEventHandler);
      }
      utils.bind_slider_event = bind_slider_event;
      function set_scroll_handler(scrollview, target, component, handler, customEventData) {
        var scrollViewEventHandler = new cc.Component.EventHandler();
        scrollViewEventHandler.target = target;
        scrollViewEventHandler.component = component;
        scrollViewEventHandler.handler = handler;
        customEventData && (scrollViewEventHandler.customEventData = customEventData);
        scrollview.scrollEvents = [];
        scrollview.scrollEvents.push(scrollViewEventHandler);
      }
      utils.set_scroll_handler = set_scroll_handler;
      function dispatchEvent(node, eventName, data) {
        if (cc.isValid(node) && eventName && "" != eventName) {
          let event = new cc.Event.EventCustom(eventName, true);
          data && event.setUserData(data);
          node.dispatchEvent(event);
        }
      }
      utils.dispatchEvent = dispatchEvent;
      function req_data_md5(reqdata) {
        let str_reqdata = utils.to_json(reqdata);
        let str_trim = "";
        for (let i = 0; i < str_reqdata.length; ++i) {
          let c = str_reqdata.charAt(i);
          ("0" <= c && c <= "9" || "a" <= c && c <= "z" || "A" <= c && c <= "Z") && (str_trim += c);
        }
        str_trim = utils.md5(str_trim);
        return str_trim;
      }
      utils.req_data_md5 = req_data_md5;
      function check_local_same_day(name) {
        let str = utils.getLocalStorage(name);
        let date = new Date();
        if (str && Math.floor(Number(str) / 100) == date.getMonth() && Number(str) % 100 == date.getDate()) return true;
        return false;
      }
      utils.check_local_same_day = check_local_same_day;
      function set_local_with_now(name) {
        let date = new Date();
        utils.setLocalStorage(name, `${100 * date.getMonth() + date.getDate()}`);
      }
      utils.set_local_with_now = set_local_with_now;
      function convert_position(dest_node, curr_node) {
        let pos = dest_node.getPosition();
        let world = dest_node.parent.convertToWorldSpaceAR(pos);
        let local = curr_node.parent.convertToNodeSpaceAR(world);
        return local;
      }
      utils.convert_position = convert_position;
      function shuffleArray(arr) {
        if (1 == arr.length) return arr;
        let i = arr.length;
        while (--i > 1) {
          let j = Math.floor(Math.random() * (i + 1));
          [arr[i], arr[j]] = [ arr[j], arr[i] ];
        }
        return arr;
      }
      utils.shuffleArray = shuffleArray;
    })(utils = exports.utils || (exports.utils = {}));
    cc._RF.pop();
  }, {
    "../lobby/global_data": "global_data",
    "../lobby/global_define": "global_define",
    "../thirdparty/iconv-lite-ts2/lib/Iconv": "Iconv",
    "./events": "events",
    "./httprequest": "httprequest",
    "./md5": "md5"
  } ],
  util: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6a0c9lyQB5Oup+fDj7OmhiS", "util");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.writeBuf = exports.detectEncoding = exports.findIdx = exports.strToBuf = exports.bufToStr = exports.concatBuf = void 0;
    function concatBuf(bufs) {
      let len = 0, bufViews = [], newBuf, index = -1, newBufView;
      for (let buf of bufs) {
        len += buf.byteLength;
        bufViews.push(new Uint8Array(buf));
      }
      newBuf = new ArrayBuffer(len);
      newBufView = new Uint8Array(newBuf);
      for (let bufView of bufViews) bufView.forEach(value => newBufView[++index]);
      return newBuf;
    }
    exports.concatBuf = concatBuf;
    function bufToStr(buf, type) {
      let bufView = new Uint16Array(buf);
      let str = "";
      bufView.forEach(value => str += String.fromCharCode(value));
      return str;
    }
    exports.bufToStr = bufToStr;
    function strToBuf(str, type) {
      let newBuf = new ArrayBuffer(2 * str.length);
      let newBufView = new Uint16Array(newBuf);
      for (let i = 0, len = str.length; i < len; i++) newBufView[i] = str.charCodeAt(i);
      return newBuf;
    }
    exports.strToBuf = strToBuf;
    function findIdx(table, val) {
      if (table[0] > val) return -1;
      let l = 0, r = table.length;
      while (l < r - 1) {
        let mid = l + Math.floor((r - l + 1) / 2);
        table[mid] <= val ? l = mid : r = mid;
      }
      return l;
    }
    exports.findIdx = findIdx;
    function detectEncoding(buf, defaultEncoding) {
      var enc = defaultEncoding || "utf-16le";
      if (buf.length >= 2) if (254 == buf[0] && 255 == buf[1]) enc = "utf-16be"; else if (255 == buf[0] && 254 == buf[1]) enc = "utf-16le"; else {
        var asciiCharsLE = 0, asciiCharsBE = 0, _len = Math.min(buf.length - buf.length % 2, 64);
        for (var i = 0; i < _len; i += 2) {
          0 === buf[i] && 0 !== buf[i + 1] && asciiCharsBE++;
          0 !== buf[i] && 0 === buf[i + 1] && asciiCharsLE++;
        }
        asciiCharsBE > asciiCharsLE ? enc = "utf-16be" : asciiCharsBE < asciiCharsLE && (enc = "utf-16le");
      }
      return enc;
    }
    exports.detectEncoding = detectEncoding;
    function writeBuf(buf, content, startIndex, endInex) {
      return 0;
    }
    exports.writeBuf = writeBuf;
    cc._RF.pop();
  }, {} ],
  websocket: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c2de2nHmrlOzK401Y2+6yqZ", "websocket");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.websocket = void 0;
    class websocket {
      constructor() {
        this._theSocket = null;
        this._url = "";
        this._connected = false;
        this.check_timeout_id = null;
        this.no_heartbeat_ms = 0;
      }
      connect(protocol, addr, port) {
        this._url = protocol + "://" + addr + ":" + port;
        console.log("Connect " + this._url);
        this._theSocket = new WebSocket(this._url);
        var that = this;
        this._theSocket.onopen = function(event) {
          that._onopen(event);
        };
        this._theSocket.onmessage = function(event) {
          that._onmessage(event);
        };
        this._theSocket.onerror = function(event) {
          that._onerror(event);
        };
        this._theSocket.onclose = function(event) {
          that._onclose(event);
        };
      }
      _onopen(event) {
        this._connected = true;
        this.onSocketOpen && this.onSocketOpen();
        let that = this;
        this.check_timeout_id = setInterval(function() {
          that.no_heartbeat_ms += 100;
          if (that.no_heartbeat_ms > 1e4) {
            that.close();
            that.onSocketClose(null);
            clearInterval(that.check_timeout_id);
          }
        }, 100);
      }
      _onmessage(event) {
        let that = this;
        "string" == typeof event.data || (event.data instanceof ArrayBuffer ? that.parseMessage(event.data) : event.data instanceof Blob ? new Response(event.data).arrayBuffer().then(ab => {
          that.parseMessage.call(that, ab);
        }) : console.log("Unsupport websocket data type " + event.data));
      }
      _onerror(event) {
        this._connected = false;
        this.check_timeout_id && clearInterval(this.check_timeout_id);
        this.onSocketError && this.onSocketError(event);
      }
      _onclose(event) {
        this._connected = false;
        this.check_timeout_id && clearInterval(this.check_timeout_id);
        this.onSocketClose && this.onSocketClose(event);
      }
      parseMessage(ab) {
        var headerResult = this.parseHeader(ab);
        if (headerResult.isHeartBeat) {
          this.sendHeartBeat(ab);
          this.no_heartbeat_ms = 0;
        } else this.onSocketMessage && this.onSocketMessage(headerResult.mainCmdID, headerResult.subCmdID, headerResult.data);
      }
      sendData(mainCmdID, subCmdID, arrayBuffer) {
        var data = this.makeCommand(mainCmdID, subCmdID, arrayBuffer);
        this._theSocket.send(data.buffer);
      }
      sendHeartBeat(data) {
        this._theSocket.send(data);
      }
      close(code, reason) {
        if (this._connected) {
          this._connected = false;
          this._theSocket.close(code, reason);
        }
      }
      makeCommand(mainCmdID, subCmdID, dataArray) {
        null == dataArray && (dataArray = new ArrayBuffer(0));
        var checkSum = 0;
        var dv = new DataView(dataArray);
        for (var i = 0; i < dataArray.byteLength; ++i) checkSum += dv.getUint8(i);
        checkSum %= 256;
        var ab = new ArrayBuffer(8 + dataArray.byteLength);
        var abLength = ab.byteLength;
        var resDv = null;
        if (abLength == 8 + dataArray.byteLength) {
          resDv = new DataView(ab);
          resDv.setUint16(0, abLength, true);
          resDv.setUint8(2, checkSum);
          resDv.setUint8(3, 69);
          resDv.setUint16(4, mainCmdID, true);
          resDv.setUint16(6, subCmdID, true);
          for (var i = 0; i < dataArray.byteLength; ++i) resDv.setUint8(8 + i, dv.getUint8(i));
          return resDv;
        }
        console.error("Alloc memory for ArrayBuffer failed.");
        return null;
      }
      parseHeader(data) {
        var dv = new DataView(data);
        var dataSize = dv.getUint16(0, true);
        var checkSum = dv.getUint8(2);
        var messageVer = dv.getUint8(3);
        var mainCmdID = dv.getUint16(4, true);
        var subCmdID = dv.getUint16(6, true);
        if (0 == mainCmdID && 1 == subCmdID) return {
          isHeartBeat: true
        };
        return {
          isHeartBeat: false,
          dataSize: dataSize,
          mainCmdID: mainCmdID,
          subCmdID: subCmdID,
          data: data.slice(8)
        };
      }
    }
    exports.websocket = websocket;
    cc._RF.pop();
  }, {} ]
}, {}, [ "cards_3d_config", "cards_3d_layout", "cards_3d_logic", "game_tools", "table_3d_layout", "CCardPoint3D", "CHandCard3D", "CHandleButton", "CHandleHint3D", "CHandleSelect3D", "CHandledCards3D", "CSelfCardsController", "CSelfHandCard3D", "CTiledCard3D", "AppGlobal", "Extensions", "Interface", "AddFavoriteButton", "AddFavoritePanel", "AppGlobalLoader", "BackButton", "BeanDisplay", "BigRedPacket", "BindWechat", "ChatPlay", "ChatRecordNode", "CommonTextButton", "CompleteInfo", "ConnectError", "DailyLuckyLoterryCodeItem", "DailyLuckyLotteryCodePanel", "DailyLuckyLotteryPanel", "DailySign", "DailySignItem", "EmButton", "EmotionPlayer", "ExchangeItem", "ExchangePanel", "ExchangeQuan", "ExchangeSuccess", "GameButton", "GameButtonPage", "GameChat", "GameChatNew", "GameLayout", "GameUserInfo", "GetReward", "GetRewardItem", "GiftButton", "GiftPlay", "GoldDisplay", "InviteReward", "InviteRewardButton", "InviteRewardItem", "ItemButton", "ItemDetail", "LoadingScreen", "LobbyBottomButtonLayout", "LobbyMain", "LobbyUserHead", "LobbyUserHeadWindow", "LobbyUserInfo", "CaiShenCardEditor", "CaiShenSelectCount", "CardPoolEditor", "CreateAndEditor", "DropDown", "DropDownItem", "DropDownLocation", "HuaCardEditor", "LobbyRuleLayout", "LobbyYiFuFeedback", "LobbyYiFuMain", "LobbyYiFuMatch", "LobbyYiFuMatchFake", "LobbyYiFuMatchNotice", "LobbyYiFuRoomButton", "LobbyYiFuRuleAward", "LobbyYiFuSeven", "LobbyYiFuTip", "LobbyYiFuUserHead", "RuleEditorNew", "TouchLayer", "TutorialMask", "MailPanel", "MailRewardItem", "MailTabItem", "MessageBoxButton", "MessageBoxCommon", "MessageHint", "ModeButton", "ModeSelect", "MoneyRain", "NeedGold", "NoNetworkScreen", "NoticeButton", "NoticeDetail", "NoticeItem", "NoticePage", "NoticePanel", "PopWindow", "PrivateRoomResult", "PrivateRoomResultItem", "CreatePrivate", "EnterPrivate", "MyPrivateRoom", "PrivateDetail", "PrivatePanel", "PrivateRoomItem", "PrivateToggleItem", "ReLoginMain", "RedPackageButton", "RedPackageExchange", "RedPackageRecord", "RedPackageRecordItem", "RedPackageRules", "ReliefMessageBox", "RoomButton", "RoomLayout", "RuleButton", "RuleImage", "RuleLayout", "SafePanel", "SettingBox", "ShareButton", "ShareWindow", "ShopLayout", "ShopTabToggle", "SimpleShop", "StartMain", "TabButton", "TaskBoard", "TaskBoardButton", "TaskBoardItem", "TaskItem", "TaskItemNew", "TaskLayout", "TaskLayoutNew", "TaskTabToggle", "Test", "UserChat", "UserHead", "_RL_Left", "_RL_LeftTop", "_RL_Middle", "_TestComp", "Start", "events", "extension", "httprequest", "md5", "task", "utils", "websocket", "bind_function", "custom_lobby", "game_auxi", "game_controller", "push_controller", "room_controller", "global_data", "global_define", "lobby_framework", "lobby_types", "platform", "platform_baidu", "platform_base", "platform_huawei", "platform_mi", "platform_oppo", "platform_qq", "platform_types", "platform_wechat", "platform_window", "protocols", "sound_manager", "game_state", "init_state", "lobby_state", "logon_state", "state", "tutorial", "dbcs-codec", "dbcs-data", "index", "sbcs-codec", "sbcs-data-generated", "sbcs-data", "big5-added", "cp936", "cp949", "cp950", "eucjp", "gb18030-ranges", "gbk-added", "shiftjis", "utf16", "utf7", "Iconv", "bom-handling", "util", "jszip.min", "qqmap-wx-jssdk", "typestate", "YiFuGameChat", "YiFuCardLayer", "YiFuCombatRecordShare", "YiFuCombatRecordShareItem", "YiFuGameData", "YiFuGameDefine", "YiFuGameEnd", "YiFuGameEndHead", "YiFuGameEndScoreLable", "YiFuGameLogic", "YiFuGameMain", "YiFuGameScoreItem", "YiFuGameScoreRecord", "YiFuGameTutorial", "YiFuGiftButton", "YiFuGlobalUI", "YiFuHuCard", "YiFuHuUserResultItem", "YiFuKeyBoard", "YiFuMessageHint", "YiFuOutCard", "YiFuScoreAction", "YiFuScoreHint", "YiFuSelectBanker", "YiFuSelectGameCount", "YiFuSmallUserHead", "YiFuTouchArea", "YiFuTutorial", "YiFuUserHead", "YiFuUserHeadScoreHint", "YiFuUserInfo", "YiFuZhuaMa", "YiFuZhuamaWait", "ErRenCardLayer", "ErRenDoubleLayer", "ErRenFinishLayer", "ErRenGameData", "ErRenGameDefine", "ErRenGameMain", "ErRenGameUserInfo", "ErRenGiftButton", "ErRenGlobalUI", "ErRenHistoryRank", "ErRenHuTypeLabel", "ErRenOutCard", "ErRenRankButton", "ErRenRankItem", "ErRenRankLayer", "ErRenRankPanel", "ErRenRankUpLayer", "ErRenRealRank", "ErRenRuleLayer", "ErRenSoundManager", "ErRenTaskLayer", "ErRenTingCard", "ErRenTingLayer", "ErRenTrustLayer", "ErRenUIHelper", "ErRenUserHead", "use_reversed_rotateBy", "use_v2.0.x_cc.Toggle_event", "use_v2.1-2.2.1_cc.Toggle_event", "use_v2.1.x_cc.Action" ]);